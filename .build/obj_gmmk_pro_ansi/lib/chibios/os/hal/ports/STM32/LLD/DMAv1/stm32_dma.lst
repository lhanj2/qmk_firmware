   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"stm32_dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.dmaInit,"ax",%progbits
  18              		.align	1
  19              		.global	dmaInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	dmaInit:
  27              	.LFB290:
  28              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c"
   1:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @file    DMAv1/stm32_dma.c
  19:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA helper driver code.
  20:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @addtogroup STM32_DMA
  22:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @details DMA sharing helper driver. In the STM32 the DMA streams are a
  23:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          shared resource, this driver allows to allocate and free DMA
  24:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          streams at runtime in order to allow all the other device
  25:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          drivers to coordinate the access to the resource.
  26:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @note    The DMA ISR handlers are all declared into this module because
  27:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          sharing, the various device drivers can associate a callback to
  28:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          ISRs when allocating streams.
  29:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @{
  30:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
  31:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  32:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #include "hal.h"
  33:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  34:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /* The following macro is only defined if some driver requiring DMA services
  35:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****    has been enabled.*/
  36:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA_REQUIRED) || defined(__DOXYGEN__)
  37:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  38:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
  39:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /* Driver local definitions.                                                 */
  40:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
  41:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  42:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
  43:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Mask of the DMA1 streams in @p dma_streams_mask.
  44:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
  45:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_STREAMS_MASK     ((1U << STM32_DMA1_NUM_CHANNELS) - 1U)
  46:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  47:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
  48:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Mask of the DMA2 streams in @p dma_streams_mask.
  49:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
  50:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_STREAMS_MASK     (((1U << STM32_DMA2_NUM_CHANNELS) -     \
  51:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                                       1U) << STM32_DMA1_NUM_CHANNELS)
  52:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  53:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA_SUPPORTS_CSELR == TRUE
  54:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  55:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(DMA1_CSELR)
  56:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define __DMA1_CSELR                &DMA1_CSELR->CSELR
  57:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #else
  58:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define __DMA1_CSELR                &DMA1->CSELR
  59:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
  60:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  61:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(DMA2_CSELR)
  62:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define __DMA2_CSELR                &DMA2_CSELR->CSELR
  63:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #else
  64:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define __DMA2_CSELR                &DMA2->CSELR
  65:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
  66:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  67:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH1_VARIANT            __DMA1_CSELR
  68:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH2_VARIANT            __DMA1_CSELR
  69:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH3_VARIANT            __DMA1_CSELR
  70:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH4_VARIANT            __DMA1_CSELR
  71:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH5_VARIANT            __DMA1_CSELR
  72:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH6_VARIANT            __DMA1_CSELR
  73:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH7_VARIANT            __DMA1_CSELR
  74:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH8_VARIANT            __DMA1_CSELR
  75:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH1_VARIANT            __DMA2_CSELR
  76:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH2_VARIANT            __DMA2_CSELR
  77:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH3_VARIANT            __DMA2_CSELR
  78:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH4_VARIANT            __DMA2_CSELR
  79:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH5_VARIANT            __DMA2_CSELR
  80:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH6_VARIANT            __DMA2_CSELR
  81:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH7_VARIANT            __DMA2_CSELR
  82:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH8_VARIANT            __DMA2_CSELR
  83:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  84:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #elif STM32_DMA_SUPPORTS_DMAMUX == TRUE
  85:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  86:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMAMUX1_CHANNEL(id)         (DMAMUX1_BASE + ((id) * 4U))
  87:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
  88:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH1_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(0))
  89:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH2_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(1))
  90:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH3_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(2))
  91:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH4_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(3))
  92:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH5_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(4))
  93:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH6_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(5))
  94:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH7_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(6))
  95:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH8_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(7))
  96:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH1_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(8))
  97:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH2_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(9))
  98:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH3_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(10))
  99:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH4_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(11))
 100:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH5_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(12))
 101:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH6_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(13))
 102:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH7_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(14))
 103:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH8_VARIANT            ((DMAMUX_Channel_TypeDef *)DMAMUX1_CHANNEL(15))
 104:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 105:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #else /* !(STM32_DMA_SUPPORTS_DMAMUX == TRUE) */
 106:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 107:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH1_VARIANT            0
 108:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH2_VARIANT            0
 109:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH3_VARIANT            0
 110:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH4_VARIANT            0
 111:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH5_VARIANT            0
 112:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH6_VARIANT            0
 113:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA1_CH7_VARIANT            0
 114:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH1_VARIANT            0
 115:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH2_VARIANT            0
 116:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH3_VARIANT            0
 117:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH4_VARIANT            0
 118:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH5_VARIANT            0
 119:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH6_VARIANT            0
 120:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define DMA2_CH7_VARIANT            0
 121:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 122:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif /* !(STM32_DMA_SUPPORTS_DMAMUX == TRUE) */
 123:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 124:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*
 125:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * Default ISR collision masks.
 126:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 127:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH1_CMASK)
 128:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH1_CMASK        (1U << 0U)
 129:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 130:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 131:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH2_CMASK)
 132:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH2_CMASK        (1U << 1U)
 133:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 134:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 135:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH3_CMASK)
 136:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH3_CMASK        (1U << 2U)
 137:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 138:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 139:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH4_CMASK)
 140:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH4_CMASK        (1U << 3U)
 141:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 142:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 143:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH5_CMASK)
 144:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH5_CMASK        (1U << 4U)
 145:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 146:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 147:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH6_CMASK)
 148:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH6_CMASK        (1U << 5U)
 149:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 150:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 151:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH7_CMASK)
 152:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH7_CMASK        (1U << 6U)
 153:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 154:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 155:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA1_CH8_CMASK)
 156:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA1_CH8_CMASK        (1U << 7U)
 157:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 158:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 159:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH1_CMASK)
 160:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH1_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 0U))
 161:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 162:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 163:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH2_CMASK)
 164:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH2_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 1U))
 165:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 166:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 167:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH3_CMASK)
 168:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH3_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 2U))
 169:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 170:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 171:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH4_CMASK)
 172:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH4_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 3U))
 173:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 174:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 175:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH5_CMASK)
 176:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH5_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 4U))
 177:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 178:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 179:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH6_CMASK)
 180:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH6_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 5U))
 181:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 182:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 183:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH7_CMASK)
 184:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH7_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 6U))
 185:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 186:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 187:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if !defined(STM32_DMA2_CH8_CMASK)
 188:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #define STM32_DMA2_CH8_CMASK        (1U << (STM32_DMA1_NUM_CHANNELS + 7U))
 189:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 190:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 191:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 192:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /* Driver exported variables.                                                */
 193:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 194:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 195:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 196:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA streams descriptors.
 197:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @details This table keeps the association between an unique stream
 198:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          identifier and the involved physical registers.
 199:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @note    Don't use this array directly, use the appropriate wrapper macros
 200:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          instead: @p STM32_DMA1_STREAM1, @p STM32_DMA1_STREAM2 etc.
 201:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 202:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** const stm32_dma_stream_t _stm32_dma_streams[STM32_DMA_STREAMS] = {
 203:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 0
 204:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel1, STM32_DMA1_CH1_CMASK, DMA1_CH1_VARIANT,  0, 0, STM32_DMA1_CH1_NUMBER},
 205:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 206:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 1
 207:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel2, STM32_DMA1_CH2_CMASK, DMA1_CH2_VARIANT,  4, 1, STM32_DMA1_CH2_NUMBER},
 208:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 209:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 2
 210:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel3, STM32_DMA1_CH3_CMASK, DMA1_CH3_VARIANT,  8, 2, STM32_DMA1_CH3_NUMBER},
 211:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 212:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 3
 213:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel4, STM32_DMA1_CH4_CMASK, DMA1_CH4_VARIANT, 12, 3, STM32_DMA1_CH4_NUMBER},
 214:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 215:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 4
 216:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel5, STM32_DMA1_CH5_CMASK, DMA1_CH5_VARIANT, 16, 4, STM32_DMA1_CH5_NUMBER},
 217:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 218:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 5
 219:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel6, STM32_DMA1_CH6_CMASK, DMA1_CH6_VARIANT, 20, 5, STM32_DMA1_CH6_NUMBER},
 220:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 221:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 6
 222:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel7, STM32_DMA1_CH7_CMASK, DMA1_CH7_VARIANT, 24, 6, STM32_DMA1_CH7_NUMBER},
 223:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 224:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA1_NUM_CHANNELS > 7
 225:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA1, DMA1_Channel8, STM32_DMA1_CH8_CMASK, DMA1_CH8_VARIANT, 28, 7, STM32_DMA1_CH8_NUMBER},
 226:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 227:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 0
 228:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel1, STM32_DMA2_CH1_CMASK, DMA2_CH1_VARIANT,  0, 0 + STM32_DMA1_NUM_CHANNELS, ST
 229:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 230:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 1
 231:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel2, STM32_DMA2_CH2_CMASK, DMA2_CH2_VARIANT,  4, 1 + STM32_DMA1_NUM_CHANNELS, ST
 232:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 233:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 2
 234:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel3, STM32_DMA2_CH3_CMASK, DMA2_CH3_VARIANT,  8, 2 + STM32_DMA1_NUM_CHANNELS, ST
 235:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 236:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 3
 237:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel4, STM32_DMA2_CH4_CMASK, DMA2_CH4_VARIANT, 12, 3 + STM32_DMA1_NUM_CHANNELS, ST
 238:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 239:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 4
 240:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel5, STM32_DMA2_CH5_CMASK, DMA2_CH5_VARIANT, 16, 4 + STM32_DMA1_NUM_CHANNELS, ST
 241:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 242:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 5
 243:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel6, STM32_DMA2_CH6_CMASK, DMA2_CH6_VARIANT, 20, 5 + STM32_DMA1_NUM_CHANNELS, ST
 244:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 245:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 6
 246:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel7, STM32_DMA2_CH7_CMASK, DMA2_CH7_VARIANT, 24, 6 + STM32_DMA1_NUM_CHANNELS, ST
 247:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 248:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 7
 249:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   {DMA2, DMA2_Channel8, STM32_DMA2_CH8_CMASK, DMA2_CH8_VARIANT, 28, 7 + STM32_DMA1_NUM_CHANNELS, ST
 250:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 251:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** };
 252:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 253:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 254:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /* Driver local variables and types.                                         */
 255:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 256:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 257:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 258:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Global DMA-related data structures.
 259:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 260:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** static struct {
 261:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /**
 262:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****    * @brief   Mask of the allocated streams.
 263:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****    */
 264:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t          allocated_mask;
 265:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /**
 266:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****    * @brief   Mask of the enabled streams ISRs.
 267:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****    */
 268:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t          isr_mask;
 269:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /**
 270:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****    * @brief   DMA IRQ redirectors.
 271:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****    */
 272:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   struct {
 273:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     /**
 274:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****      * @brief   DMA callback function.
 275:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****      */
 276:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     stm32_dmaisr_t    func;
 277:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     /**
 278:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****      * @brief   DMA callback parameter.
 279:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****      */
 280:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     void              *param;
 281:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   } streams[STM32_DMA_STREAMS];
 282:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** } dma;
 283:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 284:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 285:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /* Driver local functions.                                                   */
 286:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 287:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 288:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 289:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /* Driver interrupt handlers.                                                */
 290:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 291:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 292:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH1_HANDLER) || defined(__DOXYGEN__)
 293:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 294:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 1 shared ISR.
 295:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 296:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 297:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 298:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH1_HANDLER) {
 299:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 300:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 301:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 302:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM1);
 303:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 304:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 305:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 306:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 307:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 308:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH2_HANDLER) || defined(__DOXYGEN__)
 309:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 310:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 2 shared ISR.
 311:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 312:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 313:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 314:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH2_HANDLER) {
 315:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 316:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 317:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 318:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM2);
 319:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 320:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 321:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 322:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 323:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 324:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH3_HANDLER) || defined(__DOXYGEN__)
 325:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 326:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 3 shared ISR.
 327:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 328:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 329:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 330:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH3_HANDLER) {
 331:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 332:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 333:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 334:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM3);
 335:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 336:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 337:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 338:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 339:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 340:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH4_HANDLER) || defined(__DOXYGEN__)
 341:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 342:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 4 shared ISR.
 343:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 344:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 345:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 346:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH4_HANDLER) {
 347:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 348:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 349:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 350:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM4);
 351:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 352:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 353:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 354:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 355:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 356:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH5_HANDLER) || defined(__DOXYGEN__)
 357:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 358:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 5 shared ISR.
 359:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 360:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 361:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 362:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH5_HANDLER) {
 363:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 364:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 365:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 366:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM5);
 367:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 368:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 369:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 370:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 371:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 372:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH6_HANDLER) || defined(__DOXYGEN__)
 373:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 374:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 6 shared ISR.
 375:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 376:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 377:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 378:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH6_HANDLER) {
 379:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 380:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 381:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 382:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM6);
 383:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 384:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 385:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 386:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 387:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 388:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH7_HANDLER) || defined(__DOXYGEN__)
 389:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 390:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 7 shared ISR.
 391:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 392:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 393:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 394:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH7_HANDLER) {
 395:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 396:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 397:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 398:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM7);
 399:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 400:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 401:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 402:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 403:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 404:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA1_CH8_HANDLER) || defined(__DOXYGEN__)
 405:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 406:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA1 stream 8 shared ISR.
 407:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 408:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 409:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 410:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA1_CH8_HANDLER) {
 411:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 412:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 413:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 414:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA1_STREAM8);
 415:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 416:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 417:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 418:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 419:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 420:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH1_HANDLER) || defined(__DOXYGEN__)
 421:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 422:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 1 shared ISR.
 423:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 424:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 425:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 426:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH1_HANDLER) {
 427:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 428:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 429:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 430:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM1);
 431:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 432:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 433:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 434:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 435:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 436:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH2_HANDLER) || defined(__DOXYGEN__)
 437:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 438:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 2 shared ISR.
 439:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 440:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 441:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 442:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH2_HANDLER) {
 443:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 444:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 445:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 446:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM2);
 447:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 448:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 449:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 450:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 451:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 452:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH3_HANDLER) || defined(__DOXYGEN__)
 453:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 454:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 3 shared ISR.
 455:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 456:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 457:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 458:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH3_HANDLER) {
 459:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 460:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 461:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 462:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM3);
 463:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 464:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 465:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 466:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 467:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 468:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH4_HANDLER) || defined(__DOXYGEN__)
 469:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 470:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 4 shared ISR.
 471:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 472:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 473:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 474:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH4_HANDLER) {
 475:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 476:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 477:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 478:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM4);
 479:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 480:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 481:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 482:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 483:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 484:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH5_HANDLER) || defined(__DOXYGEN__)
 485:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 486:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 5 shared ISR.
 487:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 488:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 489:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 490:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH5_HANDLER) {
 491:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 492:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 493:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 494:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM5);
 495:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 496:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 497:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 498:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 499:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 500:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH6_HANDLER) || defined(__DOXYGEN__)
 501:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 502:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 6 shared ISR.
 503:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 504:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 505:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 506:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH6_HANDLER) {
 507:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 508:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 509:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 510:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM6);
 511:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 512:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 513:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 514:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 515:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 516:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH7_HANDLER) || defined(__DOXYGEN__)
 517:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 518:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 7 shared ISR.
 519:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 520:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 521:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 522:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH7_HANDLER) {
 523:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 524:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 525:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 526:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM7);
 527:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 528:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 529:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 530:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 531:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 532:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if defined(STM32_DMA2_CH8_HANDLER) || defined(__DOXYGEN__)
 533:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 534:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   DMA2 stream 8 shared ISR.
 535:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 536:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @isr
 537:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 538:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** OSAL_IRQ_HANDLER(STM32_DMA2_CH8_HANDLER) {
 539:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 540:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_PROLOGUE();
 541:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 542:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaServeInterrupt(STM32_DMA2_STREAM8);
 543:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 544:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   OSAL_IRQ_EPILOGUE();
 545:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 546:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 547:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 548:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 549:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /* Driver exported functions.                                                */
 550:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /*===========================================================================*/
 551:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 552:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 553:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   STM32 DMA helper initialization.
 554:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 555:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @init
 556:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 557:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** void dmaInit(void) {
  29              		.loc 1 557 20 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 558:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   int i;
  33              		.loc 1 558 3 view .LVU1
 559:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 560:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.allocated_mask = 0U;
  34              		.loc 1 560 3 view .LVU2
  35              		.loc 1 560 22 is_stmt 0 view .LVU3
  36 0000 0B4A     		ldr	r2, .L4
  37 0002 0023     		movs	r3, #0
 557:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   int i;
  38              		.loc 1 557 20 view .LVU4
  39 0004 10B5     		push	{r4, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 4, -8
  42              		.cfi_offset 14, -4
 561:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.isr_mask       = 0U;
  43              		.loc 1 561 22 view .LVU5
  44 0006 C2E90033 		strd	r3, r3, [r2]
 562:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   for (i = 0; i < STM32_DMA_STREAMS; i++) {
  45              		.loc 1 562 3 is_stmt 1 view .LVU6
  46              	.LVL0:
  47              		.loc 1 562 15 view .LVU7
 563:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     _stm32_dma_streams[i].channel->CCR = STM32_DMA_CCR_RESET_VALUE;
  48              		.loc 1 563 26 is_stmt 0 view .LVU8
  49 000a 0A4C     		ldr	r4, .L4+4
  50              		.loc 1 563 40 view .LVU9
  51 000c 1946     		mov	r1, r3
  52              	.LVL1:
  53              	.L2:
  54              		.loc 1 563 5 is_stmt 1 discriminator 3 view .LVU10
  55              		.loc 1 563 26 is_stmt 0 discriminator 3 view .LVU11
  56 000e 04EB8300 		add	r0, r4, r3, lsl #2
  57 0012 4068     		ldr	r0, [r0, #4]
  58              		.loc 1 563 40 discriminator 3 view .LVU12
  59 0014 0160     		str	r1, [r0]
 564:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     dma.streams[i].func = NULL;
  60              		.loc 1 564 5 is_stmt 1 discriminator 3 view .LVU13
  61              		.loc 1 564 25 is_stmt 0 discriminator 3 view .LVU14
  62 0016 02EB4300 		add	r0, r2, r3, lsl #1
 562:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   for (i = 0; i < STM32_DMA_STREAMS; i++) {
  63              		.loc 1 562 3 discriminator 3 view .LVU15
  64 001a 0433     		adds	r3, r3, #4
  65 001c 302B     		cmp	r3, #48
  66              		.loc 1 564 25 discriminator 3 view .LVU16
  67 001e 8160     		str	r1, [r0, #8]
 562:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   for (i = 0; i < STM32_DMA_STREAMS; i++) {
  68              		.loc 1 562 38 is_stmt 1 discriminator 3 view .LVU17
 562:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   for (i = 0; i < STM32_DMA_STREAMS; i++) {
  69              		.loc 1 562 15 discriminator 3 view .LVU18
 562:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   for (i = 0; i < STM32_DMA_STREAMS; i++) {
  70              		.loc 1 562 3 is_stmt 0 discriminator 3 view .LVU19
  71 0020 F5D1     		bne	.L2
 565:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 566:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   DMA1->IFCR = 0xFFFFFFFFU;
  72              		.loc 1 566 3 is_stmt 1 view .LVU20
  73              		.loc 1 566 14 is_stmt 0 view .LVU21
  74 0022 054A     		ldr	r2, .L4+8
  75 0024 4FF0FF33 		mov	r3, #-1
  76 0028 5360     		str	r3, [r2, #4]
 567:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 0
 568:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   DMA2->IFCR = 0xFFFFFFFFU;
  77              		.loc 1 568 3 is_stmt 1 view .LVU22
  78              		.loc 1 568 14 is_stmt 0 view .LVU23
  79 002a C2F80434 		str	r3, [r2, #1028]
 569:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 570:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
  80              		.loc 1 570 1 view .LVU24
  81 002e 10BD     		pop	{r4, pc}
  82              	.L5:
  83              		.align	2
  84              	.L4:
  85 0030 00000000 		.word	.LANCHOR0
  86 0034 00000000 		.word	.LANCHOR1
  87 0038 00000240 		.word	1073872896
  88              		.cfi_endproc
  89              	.LFE290:
  91              		.section	.text.dmaStreamAllocI,"ax",%progbits
  92              		.align	1
  93              		.global	dmaStreamAllocI
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	dmaStreamAllocI:
 100              	.LVL2:
 101              	.LFB291:
 571:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 572:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 573:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Allocates a DMA stream.
 574:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @details The stream is allocated and, if required, the DMA clock enabled.
 575:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          The function also enables the IRQ vector associated to the stream
 576:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          and initializes its priority.
 577:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 578:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] id        numeric identifiers of a specific stream or:
 579:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      - @p STM32_DMA_STREAM_ID_ANY for any stream.
 580:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      - @p STM32_DMA_STREAM_ID_ANY_DMA1 for any stream
 581:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                        on DMA1.
 582:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      - @p STM32_DMA_STREAM_ID_ANY_DMA2 for any stream
 583:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                        on DMA2.
 584:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      .
 585:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] priority  IRQ priority for the DMA stream
 586:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] func      handling function pointer, can be @p NULL
 587:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] param     a parameter to be passed to the handling function
 588:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @return              Pointer to the allocated @p stm32_dma_stream_t
 589:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      structure.
 590:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @retval NULL         if a/the stream is not available.
 591:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 592:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @iclass
 593:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 594:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** const stm32_dma_stream_t *dmaStreamAllocI(uint32_t id,
 595:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                                           uint32_t priority,
 596:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                                           stm32_dmaisr_t func,
 597:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                                           void *param) {
 102              		.loc 1 597 56 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 598:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t i, startid, endid;
 106              		.loc 1 598 3 view .LVU26
 599:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 600:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   osalDbgCheckClassI();
 107              		.loc 1 600 23 view .LVU27
 601:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 602:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if (id < STM32_DMA_STREAMS) {
 108              		.loc 1 602 3 view .LVU28
 109              		.loc 1 602 6 is_stmt 0 view .LVU29
 110 0000 0B28     		cmp	r0, #11
 597:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t i, startid, endid;
 111              		.loc 1 597 56 view .LVU30
 112 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 113              		.cfi_def_cfa_offset 32
 114              		.cfi_offset 3, -32
 115              		.cfi_offset 4, -28
 116              		.cfi_offset 5, -24
 117              		.cfi_offset 6, -20
 118              		.cfi_offset 7, -16
 119              		.cfi_offset 8, -12
 120              		.cfi_offset 9, -8
 121              		.cfi_offset 14, -4
 122              		.loc 1 602 6 view .LVU31
 123 0006 42D8     		bhi	.L13
 124              	.LVL3:
 125              	.LBB56:
 126              	.LBB57:
 603:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     startid = id;
 604:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     endid   = id;
 605:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 606:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA_SUPPORTS_DMAMUX == TRUE
 607:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   else if (id == STM32_DMA_STREAM_ID_ANY) {
 608:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     startid = 0U;
 609:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     endid   = STM32_DMA_STREAMS - 1U;
 610:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 611:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   else if (id == STM32_DMA_STREAM_ID_ANY_DMA1) {
 612:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     startid = 0U;
 613:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     endid   = STM32_DMA1_NUM_CHANNELS - 1U;
 614:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 615:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 0
 616:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   else if (id == STM32_DMA_STREAM_ID_ANY_DMA2) {
 617:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     startid = STM32_DMA1_NUM_CHANNELS;
 618:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     endid   = STM32_DMA_STREAMS - 1U;
 619:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 620:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 621:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 622:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   else {
 623:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     osalDbgCheck(false);
 624:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     return NULL;
 625:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 626:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 627:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   for (i = startid; i <= endid; i++) {
 127              		.loc 1 627 21 is_stmt 1 view .LVU32
 128              	.LBB58:
 628:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     uint32_t mask = (1U << i);
 129              		.loc 1 628 5 view .LVU33
 629:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     if ((dma.allocated_mask & mask) == 0U) {
 130              		.loc 1 629 13 is_stmt 0 view .LVU34
 131 0008 224C     		ldr	r4, .L23
 628:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     uint32_t mask = (1U << i);
 132              		.loc 1 628 14 view .LVU35
 133 000a 0125     		movs	r5, #1
 134              		.loc 1 629 13 view .LVU36
 135 000c 2768     		ldr	r7, [r4]
 628:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     uint32_t mask = (1U << i);
 136              		.loc 1 628 14 view .LVU37
 137 000e 8540     		lsls	r5, r5, r0
 138              	.LVL4:
 139              		.loc 1 629 5 is_stmt 1 view .LVU38
 140              		.loc 1 629 8 is_stmt 0 view .LVU39
 141 0010 2F42     		tst	r7, r5
 142 0012 3CD1     		bne	.L13
 143              	.LBB59:
 630:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       const stm32_dma_stream_t *dmastp = STM32_DMA_STREAM(i);
 144              		.loc 1 630 7 is_stmt 1 view .LVU40
 145              		.loc 1 630 33 is_stmt 0 view .LVU41
 146 0014 204E     		ldr	r6, .L23+4
 147 0016 4FEA0019 		lsl	r9, r0, #4
 148 001a 06EB0018 		add	r8, r6, r0, lsl #4
 149              	.LVL5:
 631:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 632:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       /* Installs the DMA handler.*/
 633:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[i].func  = func;
 150              		.loc 1 633 7 is_stmt 1 view .LVU42
 151              		.loc 1 633 28 is_stmt 0 view .LVU43
 152 001e 0130     		adds	r0, r0, #1
 153              	.LVL6:
 634:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[i].param = param;
 635:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.allocated_mask  |= mask;
 154              		.loc 1 635 27 view .LVU44
 155 0020 2F43     		orrs	r7, r7, r5
 633:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[i].param = param;
 156              		.loc 1 633 28 view .LVU45
 157 0022 44F83020 		str	r2, [r4, r0, lsl #3]
 634:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[i].param = param;
 158              		.loc 1 634 7 is_stmt 1 view .LVU46
 634:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[i].param = param;
 159              		.loc 1 634 28 is_stmt 0 view .LVU47
 160 0026 04EBC000 		add	r0, r4, r0, lsl #3
 161              	.LVL7:
 162              		.loc 1 635 27 view .LVU48
 163 002a 2760     		str	r7, [r4]
 634:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[i].param = param;
 164              		.loc 1 634 28 view .LVU49
 165 002c 4360     		str	r3, [r0, #4]
 166              		.loc 1 635 7 is_stmt 1 view .LVU50
 636:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 637:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       /* Enabling DMA clocks required by the current streams set.*/
 638:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       if ((STM32_DMA1_STREAMS_MASK & mask) != 0U) {
 167              		.loc 1 638 7 view .LVU51
 168              		.loc 1 638 10 is_stmt 0 view .LVU52
 169 002e 6B06     		lsls	r3, r5, #25
 170              	.LVL8:
 171              		.loc 1 638 10 view .LVU53
 172 0030 05D0     		beq	.L8
 639:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****         rccEnableDMA1(true);
 173              		.loc 1 639 9 is_stmt 1 view .LVU54
 174 0032 1A4B     		ldr	r3, .L23+8
 175 0034 5869     		ldr	r0, [r3, #20]
 176              	.LVL9:
 177              		.loc 1 639 9 is_stmt 0 view .LVU55
 178 0036 40F00100 		orr	r0, r0, #1
 179 003a 5861     		str	r0, [r3, #20]
 180              		.loc 1 639 9 is_stmt 1 view .LVU56
 181 003c 5B69     		ldr	r3, [r3, #20]
 182              	.L8:
 183              		.loc 1 639 28 view .LVU57
 640:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       }
 641:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 0
 642:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       if ((STM32_DMA2_STREAMS_MASK & mask) != 0U) {
 184              		.loc 1 642 7 view .LVU58
 185              		.loc 1 642 10 is_stmt 0 view .LVU59
 186 003e 15F4786F 		tst	r5, #3968
 187 0042 05D0     		beq	.L9
 643:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****         rccEnableDMA2(true);
 188              		.loc 1 643 9 is_stmt 1 view .LVU60
 189 0044 154B     		ldr	r3, .L23+8
 190 0046 5869     		ldr	r0, [r3, #20]
 191 0048 40F00200 		orr	r0, r0, #2
 192 004c 5861     		str	r0, [r3, #20]
 193              		.loc 1 643 9 view .LVU61
 194 004e 5B69     		ldr	r3, [r3, #20]
 195              	.L9:
 196              		.loc 1 643 28 view .LVU62
 644:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       }
 645:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 646:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 647:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if (STM32_DMA_SUPPORTS_DMAMUX == TRUE) && defined(rccEnableDMAMUX)
 648:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       /* Enabling DMAMUX if present.*/
 649:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       if (dma.allocated_mask != 0U) {
 650:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****         rccEnableDMAMUX(true);
 651:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       }
 652:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 653:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 654:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       /* Enables the associated IRQ vector if not already enabled and if a
 655:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****          callback is defined.*/
 656:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       if (func != NULL) {
 197              		.loc 1 656 7 view .LVU63
 198              		.loc 1 656 10 is_stmt 0 view .LVU64
 199 0050 5AB1     		cbz	r2, .L10
 657:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****         if ((dma.isr_mask & dmastp->cmask) == 0U) {
 200              		.loc 1 657 9 is_stmt 1 view .LVU65
 201              		.loc 1 657 35 is_stmt 0 view .LVU66
 202 0052 06EB0900 		add	r0, r6, r9
 203              		.loc 1 657 27 view .LVU67
 204 0056 6268     		ldr	r2, [r4, #4]
 205              	.LVL10:
 206              		.loc 1 657 27 view .LVU68
 207 0058 8368     		ldr	r3, [r0, #8]
 208              		.loc 1 657 12 view .LVU69
 209 005a 1A42     		tst	r2, r3
 210 005c 02D1     		bne	.L11
 658:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****           nvicEnableVector(dmastp->vector, priority);
 211              		.loc 1 658 11 is_stmt 1 view .LVU70
 212 005e C07B     		ldrb	r0, [r0, #15]	@ zero_extendqisi2
 213 0060 FFF7FEFF 		bl	nvicEnableVector
 214              	.LVL11:
 215              	.L11:
 659:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****         }
 660:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****         dma.isr_mask |= mask;
 216              		.loc 1 660 9 view .LVU71
 217              		.loc 1 660 22 is_stmt 0 view .LVU72
 218 0064 6368     		ldr	r3, [r4, #4]
 219 0066 2B43     		orrs	r3, r3, r5
 220 0068 6360     		str	r3, [r4, #4]
 221              	.L10:
 661:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       }
 662:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 663:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       /* Putting the stream in a known state.*/
 664:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dmaStreamDisable(dmastp);
 222              		.loc 1 664 7 is_stmt 1 view .LVU73
 223 006a 06EB0901 		add	r1, r6, r9
 224 006e 56F80900 		ldr	r0, [r6, r9]
 225 0072 4B68     		ldr	r3, [r1, #4]
 226 0074 497B     		ldrb	r1, [r1, #13]	@ zero_extendqisi2
 227 0076 1A68     		ldr	r2, [r3]
 228 0078 22F00F02 		bic	r2, r2, #15
 229 007c 1A60     		str	r2, [r3]
 230              		.loc 1 664 7 view .LVU74
 231 007e 0E22     		movs	r2, #14
 232 0080 8A40     		lsls	r2, r2, r1
 233 0082 4260     		str	r2, [r0, #4]
 234              		.loc 1 664 7 view .LVU75
 235              		.loc 1 664 31 view .LVU76
 665:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dmastp->channel->CCR = STM32_DMA_CCR_RESET_VALUE;
 236              		.loc 1 665 7 view .LVU77
 237              		.loc 1 665 28 is_stmt 0 view .LVU78
 238 0084 0022     		movs	r2, #0
 239 0086 1A60     		str	r2, [r3]
 666:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 667:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       return dmastp;
 240              		.loc 1 667 7 is_stmt 1 view .LVU79
 241              	.LVL12:
 242              	.L6:
 243              		.loc 1 667 7 is_stmt 0 view .LVU80
 244              	.LBE59:
 245              	.LBE58:
 246              	.LBE57:
 247              	.LBE56:
 668:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     }
 669:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 670:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 671:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   return NULL;
 672:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 248              		.loc 1 672 1 view .LVU81
 249 0088 4046     		mov	r0, r8
 250 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 251              	.LVL13:
 252              	.L13:
 624:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 253              		.loc 1 624 12 view .LVU82
 254 008e 4FF00008 		mov	r8, #0
 255 0092 F9E7     		b	.L6
 256              	.L24:
 257              		.align	2
 258              	.L23:
 259 0094 00000000 		.word	.LANCHOR0
 260 0098 00000000 		.word	.LANCHOR1
 261 009c 00100240 		.word	1073876992
 262              		.cfi_endproc
 263              	.LFE291:
 265              		.section	.text.dmaStreamAlloc,"ax",%progbits
 266              		.align	1
 267              		.global	dmaStreamAlloc
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv4-sp-d16
 273              	dmaStreamAlloc:
 274              	.LVL14:
 275              	.LFB292:
 673:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 674:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 675:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Allocates a DMA stream.
 676:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @details The stream is allocated and, if required, the DMA clock enabled.
 677:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          The function also enables the IRQ vector associated to the stream
 678:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          and initializes its priority.
 679:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 680:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] id        numeric identifiers of a specific stream or:
 681:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      - @p STM32_DMA_STREAM_ID_ANY for any stream.
 682:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      - @p STM32_DMA_STREAM_ID_ANY_DMA1 for any stream
 683:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                        on DMA1.
 684:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      - @p STM32_DMA_STREAM_ID_ANY_DMA2 for any stream
 685:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                        on DMA2.
 686:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      .
 687:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] priority  IRQ priority for the DMA stream
 688:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] func      handling function pointer, can be @p NULL
 689:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] param     a parameter to be passed to the handling function
 690:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @return              Pointer to the allocated @p stm32_dma_stream_t
 691:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *                      structure.
 692:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @retval NULL         if a/the stream is not available.
 693:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 694:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @api
 695:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 696:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** const stm32_dma_stream_t *dmaStreamAlloc(uint32_t id,
 697:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                                          uint32_t priority,
 698:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                                          stm32_dmaisr_t func,
 699:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                                          void *param) {
 276              		.loc 1 699 55 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 700:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   const stm32_dma_stream_t *dmastp;
 280              		.loc 1 700 3 view .LVU84
 701:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 702:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   osalSysLock();
 281              		.loc 1 702 3 view .LVU85
 282              	.LBB60:
 283              	.LBI60:
 284              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 285              		.loc 2 509 20 view .LVU86
 286              	.LBE60:
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 287              		.loc 2 511 3 view .LVU87
 288              	.LBB72:
 289              	.LBB61:
 290              	.LBI61:
 291              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 292              		.loc 3 353 20 view .LVU88
 293              	.LBE61:
 294              	.LBE72:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 295              		.loc 3 355 3 view .LVU89
 296              	.LBB73:
 297              	.LBB69:
 298              	.LBB62:
 299              	.LBI62:
 300              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 301              		.loc 4 669 27 view .LVU90
 302              	.LBE62:
 303              	.LBE69:
 304              	.LBE73:
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 305              		.loc 4 677 3 view .LVU91
 306              	.LBB74:
 307              	.LBB70:
 308              	.LBB67:
 309              	.LBB63:
 310              	.LBI63:
 311              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 312              		.loc 5 491 27 view .LVU92
 313              	.LBB64:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 314              		.loc 5 493 3 view .LVU93
 315              	.LBE64:
 316              	.LBE63:
 317              	.LBE67:
 318              	.LBE70:
 319              	.LBE74:
 699:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   const stm32_dma_stream_t *dmastp;
 320              		.loc 1 699 55 is_stmt 0 view .LVU94
 321 0000 10B5     		push	{r4, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 325              	.LBB75:
 326              	.LBB71:
 327              	.LBB68:
 328              	.LBB66:
 329              	.LBB65:
 330              		.loc 5 493 3 view .LVU95
 331 0002 2024     		movs	r4, #32
 332              		.syntax unified
 333              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 334 0004 84F31188 		MSR basepri, r4
 335              	@ 0 "" 2
 336              	.LVL15:
 337              		.loc 5 493 3 view .LVU96
 338              		.thumb
 339              		.syntax unified
 340              	.LBE65:
 341              	.LBE66:
 342              	.LBE68:
 343              	.LBE71:
 344              	.LBE75:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 345              		.loc 3 356 34 is_stmt 1 view .LVU97
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 346              		.loc 3 357 20 view .LVU98
 703:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmastp = dmaStreamAllocI(id, priority, func, param);
 347              		.loc 1 703 3 view .LVU99
 348              		.loc 1 703 12 is_stmt 0 view .LVU100
 349 0008 FFF7FEFF 		bl	dmaStreamAllocI
 350              	.LVL16:
 704:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   osalSysUnlock();
 351              		.loc 1 704 3 is_stmt 1 view .LVU101
 352              	.LBB76:
 353              	.LBI76:
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 354              		.loc 2 520 20 view .LVU102
 355              	.LBE76:
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 356              		.loc 2 522 3 view .LVU103
 357              	.LBB85:
 358              	.LBB77:
 359              	.LBI77:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 360              		.loc 3 365 20 view .LVU104
 361              	.LBB78:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 362              		.loc 3 367 22 view .LVU105
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 363              		.loc 3 368 33 view .LVU106
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 364              		.loc 3 374 3 view .LVU107
 365              		.loc 3 374 3 view .LVU108
 366              		.loc 3 374 3 view .LVU109
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 367              		.loc 3 378 3 view .LVU110
 368              	.LBB79:
 369              	.LBI79:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 370              		.loc 4 693 27 view .LVU111
 371              	.LBE79:
 372              	.LBE78:
 373              	.LBE77:
 374              	.LBE85:
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 375              		.loc 4 696 3 view .LVU112
 376              	.LBB86:
 377              	.LBB84:
 378              	.LBB83:
 379              	.LBB82:
 380              	.LBB80:
 381              	.LBI80:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 382              		.loc 5 491 27 view .LVU113
 383              	.LBB81:
 384              		.loc 5 493 3 view .LVU114
 385 000c 0023     		movs	r3, #0
 386              		.syntax unified
 387              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 388 000e 83F31188 		MSR basepri, r3
 389              	@ 0 "" 2
 390              	.LVL17:
 391              		.loc 5 493 3 is_stmt 0 view .LVU115
 392              		.thumb
 393              		.syntax unified
 394              	.LBE81:
 395              	.LBE80:
 396              	.LBE82:
 397              	.LBE83:
 398              	.LBE84:
 399              	.LBE86:
 705:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 706:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   return dmastp;
 400              		.loc 1 706 3 is_stmt 1 view .LVU116
 707:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 401              		.loc 1 707 1 is_stmt 0 view .LVU117
 402 0012 10BD     		pop	{r4, pc}
 403              		.cfi_endproc
 404              	.LFE292:
 406              		.section	.text.dmaStreamFreeI,"ax",%progbits
 407              		.align	1
 408              		.global	dmaStreamFreeI
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	dmaStreamFreeI:
 415              	.LVL18:
 416              	.LFB293:
 708:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 709:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 710:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Releases a DMA stream.
 711:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @details The stream is freed and, if required, the DMA clock disabled.
 712:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          Trying to release a unallocated stream is an illegal operation
 713:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          and is trapped if assertions are enabled.
 714:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 715:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] dmastp    pointer to a stm32_dma_stream_t structure
 716:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 717:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @iclass
 718:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 719:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** void dmaStreamFreeI(const stm32_dma_stream_t *dmastp) {
 417              		.loc 1 719 55 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 720:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t selfindex = (uint32_t)dmastp->selfindex;
 421              		.loc 1 720 3 view .LVU119
 719:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t selfindex = (uint32_t)dmastp->selfindex;
 422              		.loc 1 719 55 is_stmt 0 view .LVU120
 423 0000 38B5     		push	{r3, r4, r5, lr}
 424              		.cfi_def_cfa_offset 16
 425              		.cfi_offset 3, -16
 426              		.cfi_offset 4, -12
 427              		.cfi_offset 5, -8
 428              		.cfi_offset 14, -4
 721:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 722:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   osalDbgCheck(dmastp != NULL);
 723:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 724:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /* Check if the streams is not taken.*/
 725:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   osalDbgAssert((dma.allocated_mask & (1 << selfindex)) != 0U,
 726:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                 "not allocated");
 727:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 728:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /* Marks the stream as not allocated.*/
 729:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.allocated_mask &= ~(1U << selfindex);
 429              		.loc 1 729 22 view .LVU121
 430 0002 184C     		ldr	r4, .L30
 720:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 431              		.loc 1 720 12 view .LVU122
 432 0004 857B     		ldrb	r5, [r0, #14]	@ zero_extendqisi2
 433              	.LVL19:
 722:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 434              		.loc 1 722 3 is_stmt 1 view .LVU123
 722:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 435              		.loc 1 722 3 view .LVU124
 722:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 436              		.loc 1 722 3 view .LVU125
 725:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                 "not allocated");
 437              		.loc 1 725 3 view .LVU126
 725:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                 "not allocated");
 438              		.loc 1 725 3 view .LVU127
 725:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****                 "not allocated");
 439              		.loc 1 725 3 view .LVU128
 440              		.loc 1 729 3 view .LVU129
 441              		.loc 1 729 30 is_stmt 0 view .LVU130
 442 0006 0123     		movs	r3, #1
 443 0008 03FA05F2 		lsl	r2, r3, r5
 444              		.loc 1 729 22 view .LVU131
 445 000c 2368     		ldr	r3, [r4]
 446 000e 23EA0203 		bic	r3, r3, r2
 447 0012 2360     		str	r3, [r4]
 730:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.isr_mask &= ~(1U << selfindex);
 448              		.loc 1 730 3 is_stmt 1 view .LVU132
 449              		.loc 1 730 16 is_stmt 0 view .LVU133
 450 0014 6368     		ldr	r3, [r4, #4]
 451 0016 23EA0203 		bic	r3, r3, r2
 731:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 732:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /* Disables the associated IRQ vector if it is no more in use.*/
 733:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if ((dma.isr_mask & dmastp->cmask) == 0U) {
 452              		.loc 1 733 21 view .LVU134
 453 001a 8268     		ldr	r2, [r0, #8]
 730:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.isr_mask &= ~(1U << selfindex);
 454              		.loc 1 730 16 view .LVU135
 455 001c 6360     		str	r3, [r4, #4]
 456              		.loc 1 733 3 is_stmt 1 view .LVU136
 457              		.loc 1 733 6 is_stmt 0 view .LVU137
 458 001e 1342     		tst	r3, r2
 459 0020 02D1     		bne	.L27
 734:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     nvicDisableVector(dmastp->vector);
 460              		.loc 1 734 5 is_stmt 1 view .LVU138
 461 0022 C07B     		ldrb	r0, [r0, #15]	@ zero_extendqisi2
 462              	.LVL20:
 463              		.loc 1 734 5 is_stmt 0 view .LVU139
 464 0024 FFF7FEFF 		bl	nvicDisableVector
 465              	.LVL21:
 466              	.L27:
 735:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 736:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 737:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /* Removes the DMA handler.*/
 738:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.streams[selfindex].func  = NULL;
 467              		.loc 1 738 3 is_stmt 1 view .LVU140
 468              		.loc 1 738 32 is_stmt 0 view .LVU141
 469 0028 0135     		adds	r5, r5, #1
 470              	.LVL22:
 471              		.loc 1 738 32 view .LVU142
 472 002a 0023     		movs	r3, #0
 739:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.streams[selfindex].param = NULL;
 740:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 741:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /* Shutting down clocks that are no more required, if any.*/
 742:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if ((dma.allocated_mask & STM32_DMA1_STREAMS_MASK) == 0U) {
 473              		.loc 1 742 11 view .LVU143
 474 002c 2168     		ldr	r1, [r4]
 738:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.streams[selfindex].param = NULL;
 475              		.loc 1 738 32 view .LVU144
 476 002e 44F83530 		str	r3, [r4, r5, lsl #3]
 739:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.streams[selfindex].param = NULL;
 477              		.loc 1 739 3 is_stmt 1 view .LVU145
 739:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.streams[selfindex].param = NULL;
 478              		.loc 1 739 32 is_stmt 0 view .LVU146
 479 0032 04EBC505 		add	r5, r4, r5, lsl #3
 480              	.LVL23:
 481              		.loc 1 742 6 view .LVU147
 482 0036 4A06     		lsls	r2, r1, #25
 739:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dma.streams[selfindex].param = NULL;
 483              		.loc 1 739 32 view .LVU148
 484 0038 6B60     		str	r3, [r5, #4]
 485              		.loc 1 742 3 is_stmt 1 view .LVU149
 486              		.loc 1 742 6 is_stmt 0 view .LVU150
 487 003a 08D1     		bne	.L28
 743:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     rccDisableDMA1();
 488              		.loc 1 743 5 is_stmt 1 view .LVU151
 489 003c 03F18043 		add	r3, r3, #1073741824
 490 0040 03F50433 		add	r3, r3, #135168
 491 0044 5A69     		ldr	r2, [r3, #20]
 492 0046 22F00102 		bic	r2, r2, #1
 493 004a 5A61     		str	r2, [r3, #20]
 494              		.loc 1 743 5 view .LVU152
 495 004c 5B69     		ldr	r3, [r3, #20]
 496              	.L28:
 497              		.loc 1 743 21 discriminator 1 view .LVU153
 744:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 745:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if STM32_DMA2_NUM_CHANNELS > 0
 746:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if ((dma.allocated_mask & STM32_DMA2_STREAMS_MASK) == 0U) {
 498              		.loc 1 746 3 discriminator 1 view .LVU154
 499              		.loc 1 746 6 is_stmt 0 discriminator 1 view .LVU155
 500 004e 11F4786F 		tst	r1, #3968
 501 0052 05D1     		bne	.L26
 747:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     rccDisableDMA2();
 502              		.loc 1 747 5 is_stmt 1 view .LVU156
 503 0054 044B     		ldr	r3, .L30+4
 504 0056 5A69     		ldr	r2, [r3, #20]
 505 0058 22F00202 		bic	r2, r2, #2
 506 005c 5A61     		str	r2, [r3, #20]
 507              		.loc 1 747 5 view .LVU157
 508 005e 5B69     		ldr	r3, [r3, #20]
 509              		.loc 1 747 21 view .LVU158
 510              	.L26:
 748:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 749:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 750:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 751:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #if (STM32_DMA_SUPPORTS_DMAMUX == TRUE) && defined(rccDisableDMAMUX)
 752:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   /* Shutting down DMAMUX if present.*/
 753:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if (dma.allocated_mask == 0U) {
 754:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     rccDisableDMAMUX();
 755:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 756:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 757:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 511              		.loc 1 757 1 is_stmt 0 view .LVU159
 512 0060 38BD     		pop	{r3, r4, r5, pc}
 513              	.L31:
 514 0062 00BF     		.align	2
 515              	.L30:
 516 0064 00000000 		.word	.LANCHOR0
 517 0068 00100240 		.word	1073876992
 518              		.cfi_endproc
 519              	.LFE293:
 521              		.section	.text.dmaStreamFree,"ax",%progbits
 522              		.align	1
 523              		.global	dmaStreamFree
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu fpv4-sp-d16
 529              	dmaStreamFree:
 530              	.LVL24:
 531              	.LFB294:
 758:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 759:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 760:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Releases a DMA stream.
 761:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @details The stream is freed and, if required, the DMA clock disabled.
 762:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          Trying to release a unallocated stream is an illegal operation
 763:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *          and is trapped if assertions are enabled.
 764:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 765:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] dmastp    pointer to a stm32_dma_stream_t structure
 766:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 767:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @api
 768:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 769:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** void dmaStreamFree(const stm32_dma_stream_t *dmastp) {
 532              		.loc 1 769 54 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 770:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 771:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   osalSysLock();
 536              		.loc 1 771 3 view .LVU161
 537              	.LBB87:
 538              	.LBI87:
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 539              		.loc 2 509 20 view .LVU162
 540              	.LBE87:
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 541              		.loc 2 511 3 view .LVU163
 542              	.LBB99:
 543              	.LBB88:
 544              	.LBI88:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 545              		.loc 3 353 20 view .LVU164
 546              	.LBE88:
 547              	.LBE99:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 548              		.loc 3 355 3 view .LVU165
 549              	.LBB100:
 550              	.LBB96:
 551              	.LBB89:
 552              	.LBI89:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 553              		.loc 4 669 27 view .LVU166
 554              	.LBE89:
 555              	.LBE96:
 556              	.LBE100:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 557              		.loc 4 677 3 view .LVU167
 558              	.LBB101:
 559              	.LBB97:
 560              	.LBB94:
 561              	.LBB90:
 562              	.LBI90:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 563              		.loc 5 491 27 view .LVU168
 564              	.LBB91:
 565              		.loc 5 493 3 view .LVU169
 566              	.LBE91:
 567              	.LBE90:
 568              	.LBE94:
 569              	.LBE97:
 570              	.LBE101:
 769:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 571              		.loc 1 769 54 is_stmt 0 view .LVU170
 572 0000 08B5     		push	{r3, lr}
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 3, -8
 575              		.cfi_offset 14, -4
 576              	.LBB102:
 577              	.LBB98:
 578              	.LBB95:
 579              	.LBB93:
 580              	.LBB92:
 581              		.loc 5 493 3 view .LVU171
 582 0002 2023     		movs	r3, #32
 583              		.syntax unified
 584              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 585 0004 83F31188 		MSR basepri, r3
 586              	@ 0 "" 2
 587              	.LVL25:
 588              		.loc 5 493 3 view .LVU172
 589              		.thumb
 590              		.syntax unified
 591              	.LBE92:
 592              	.LBE93:
 593              	.LBE95:
 594              	.LBE98:
 595              	.LBE102:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 596              		.loc 3 356 34 is_stmt 1 view .LVU173
 357:./lib/chibios/os/rt/include/chsys.h **** }
 597              		.loc 3 357 20 view .LVU174
 772:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   dmaStreamFreeI(dmastp);
 598              		.loc 1 772 3 view .LVU175
 599 0008 FFF7FEFF 		bl	dmaStreamFreeI
 600              	.LVL26:
 773:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   osalSysUnlock();
 601              		.loc 1 773 3 view .LVU176
 602              	.LBB103:
 603              	.LBI103:
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 604              		.loc 2 520 20 view .LVU177
 605              	.LBE103:
 606              		.loc 2 522 3 view .LVU178
 607              	.LBB112:
 608              	.LBB104:
 609              	.LBI104:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 610              		.loc 3 365 20 view .LVU179
 611              	.LBB105:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 612              		.loc 3 367 22 view .LVU180
 368:./lib/chibios/os/rt/include/chsys.h **** 
 613              		.loc 3 368 33 view .LVU181
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 614              		.loc 3 374 3 view .LVU182
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 615              		.loc 3 374 3 view .LVU183
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 616              		.loc 3 374 3 view .LVU184
 617              		.loc 3 378 3 view .LVU185
 618              	.LBB106:
 619              	.LBI106:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 620              		.loc 4 693 27 view .LVU186
 621              	.LBE106:
 622              	.LBE105:
 623              	.LBE104:
 624              	.LBE112:
 625              		.loc 4 696 3 view .LVU187
 626              	.LBB113:
 627              	.LBB111:
 628              	.LBB110:
 629              	.LBB109:
 630              	.LBB107:
 631              	.LBI107:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 632              		.loc 5 491 27 view .LVU188
 633              	.LBB108:
 634              		.loc 5 493 3 view .LVU189
 635 000c 0023     		movs	r3, #0
 636              		.syntax unified
 637              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 638 000e 83F31188 		MSR basepri, r3
 639              	@ 0 "" 2
 640              	.LVL27:
 641              		.loc 5 493 3 is_stmt 0 view .LVU190
 642              		.thumb
 643              		.syntax unified
 644              	.LBE108:
 645              	.LBE107:
 646              	.LBE109:
 647              	.LBE110:
 648              	.LBE111:
 649              	.LBE113:
 774:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 650              		.loc 1 774 1 view .LVU191
 651 0012 08BD     		pop	{r3, pc}
 652              		.cfi_endproc
 653              	.LFE294:
 655              		.section	.text.dmaServeInterrupt,"ax",%progbits
 656              		.align	1
 657              		.global	dmaServeInterrupt
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 661              		.fpu fpv4-sp-d16
 663              	dmaServeInterrupt:
 664              	.LVL28:
 665              	.LFB295:
 775:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 776:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** /**
 777:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @brief   Serves a DMA IRQ.
 778:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 779:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @param[in] dmastp    pointer to a stm32_dma_stream_t structure
 780:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  *
 781:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  * @special
 782:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****  */
 783:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** void dmaServeInterrupt(const stm32_dma_stream_t *dmastp) {
 666              		.loc 1 783 58 is_stmt 1 view -0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 784:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t flags;
 671              		.loc 1 784 3 view .LVU193
 785:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t selfindex = (uint32_t)dmastp->selfindex;
 672              		.loc 1 785 3 view .LVU194
 786:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 787:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   flags = (dmastp->dma->ISR >> dmastp->shift) & STM32_DMA_ISR_MASK;
 673              		.loc 1 787 3 view .LVU195
 783:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   uint32_t flags;
 674              		.loc 1 783 58 is_stmt 0 view .LVU196
 675 0000 10B4     		push	{r4}
 676              		.cfi_def_cfa_offset 4
 677              		.cfi_offset 4, -4
 678              		.loc 1 787 18 view .LVU197
 679 0002 0468     		ldr	r4, [r0]
 680              		.loc 1 787 38 view .LVU198
 681 0004 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 682              		.loc 1 787 23 view .LVU199
 683 0006 2168     		ldr	r1, [r4]
 788:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if (flags & dmastp->channel->CCR) {
 684              		.loc 1 788 21 view .LVU200
 685 0008 4268     		ldr	r2, [r0, #4]
 787:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if (flags & dmastp->channel->CCR) {
 686              		.loc 1 787 29 view .LVU201
 687 000a D940     		lsrs	r1, r1, r3
 688              		.loc 1 788 30 view .LVU202
 689 000c 1268     		ldr	r2, [r2]
 787:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   if (flags & dmastp->channel->CCR) {
 690              		.loc 1 787 9 view .LVU203
 691 000e 01F00E01 		and	r1, r1, #14
 692              	.LVL29:
 693              		.loc 1 788 3 is_stmt 1 view .LVU204
 694              		.loc 1 788 6 is_stmt 0 view .LVU205
 695 0012 0A42     		tst	r2, r1
 696 0014 0FD0     		beq	.L33
 785:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 697              		.loc 1 785 12 view .LVU206
 698 0016 827B     		ldrb	r2, [r0, #14]	@ zero_extendqisi2
 789:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     dmastp->dma->IFCR = flags << dmastp->shift;
 699              		.loc 1 789 5 is_stmt 1 view .LVU207
 700              		.loc 1 789 31 is_stmt 0 view .LVU208
 701 0018 01FA03F3 		lsl	r3, r1, r3
 702              		.loc 1 789 23 view .LVU209
 703 001c 6360     		str	r3, [r4, #4]
 704              	.LVL30:
 790:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     if (dma.streams[selfindex].func) {
 705              		.loc 1 790 5 is_stmt 1 view .LVU210
 706              		.loc 1 790 31 is_stmt 0 view .LVU211
 707 001e 0132     		adds	r2, r2, #1
 708 0020 064B     		ldr	r3, .L40
 709 0022 53F83240 		ldr	r4, [r3, r2, lsl #3]
 710              		.loc 1 790 8 view .LVU212
 711 0026 34B1     		cbz	r4, .L33
 791:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[selfindex].func(dma.streams[selfindex].param, flags);
 712              		.loc 1 791 7 is_stmt 1 view .LVU213
 713 0028 03EBC203 		add	r3, r3, r2, lsl #3
 714 002c 5868     		ldr	r0, [r3, #4]
 715              	.LVL31:
 716              		.loc 1 791 7 is_stmt 0 view .LVU214
 717 002e 2346     		mov	r3, r4
 792:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****     }
 793:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****   }
 794:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 718              		.loc 1 794 1 view .LVU215
 719 0030 5DF8044B 		ldr	r4, [sp], #4
 720              		.cfi_remember_state
 721              		.cfi_restore 4
 722              		.cfi_def_cfa_offset 0
 791:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c ****       dma.streams[selfindex].func(dma.streams[selfindex].param, flags);
 723              		.loc 1 791 7 view .LVU216
 724 0034 1847     		bx	r3	@ indirect register sibling call
 725              	.LVL32:
 726              	.L33:
 727              		.cfi_restore_state
 728              		.loc 1 794 1 view .LVU217
 729 0036 5DF8044B 		ldr	r4, [sp], #4
 730              		.cfi_restore 4
 731              		.cfi_def_cfa_offset 0
 732 003a 7047     		bx	lr
 733              	.L41:
 734              		.align	2
 735              	.L40:
 736 003c 00000000 		.word	.LANCHOR0
 737              		.cfi_endproc
 738              	.LFE295:
 740              		.section	.text.Vector6C,"ax",%progbits
 741              		.align	1
 742              		.global	Vector6C
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu fpv4-sp-d16
 748              	Vector6C:
 749              	.LFB278:
 298:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 750              		.loc 1 298 42 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 300:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 754              		.loc 1 300 3 view .LVU219
 300:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 755              		.loc 1 300 3 view .LVU220
 300:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 756              		.loc 1 300 3 view .LVU221
 300:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 757              		.loc 1 300 3 view .LVU222
 300:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 758              		.loc 1 300 3 view .LVU223
 300:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 759              		.loc 1 300 22 view .LVU224
 302:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 760              		.loc 1 302 3 view .LVU225
 298:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 761              		.loc 1 298 42 is_stmt 0 view .LVU226
 762 0000 08B5     		push	{r3, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 3, -8
 765              		.cfi_offset 14, -4
 302:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 766              		.loc 1 302 3 view .LVU227
 767 0002 0348     		ldr	r0, .L43
 768 0004 FFF7FEFF 		bl	dmaServeInterrupt
 769              	.LVL33:
 304:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 770              		.loc 1 304 3 is_stmt 1 view .LVU228
 304:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 771              		.loc 1 304 3 view .LVU229
 304:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 772              		.loc 1 304 3 view .LVU230
 304:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 773              		.loc 1 304 3 view .LVU231
 304:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 774              		.loc 1 304 3 view .LVU232
 305:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 775              		.loc 1 305 1 is_stmt 0 view .LVU233
 776 0008 BDE80840 		pop	{r3, lr}
 777              		.cfi_restore 14
 778              		.cfi_restore 3
 779              		.cfi_def_cfa_offset 0
 304:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 780              		.loc 1 304 3 view .LVU234
 781 000c FFF7FEBF 		b	_port_irq_epilogue
 782              	.LVL34:
 783              	.L44:
 784              		.align	2
 785              	.L43:
 786 0010 00000000 		.word	.LANCHOR1
 787              		.cfi_endproc
 788              	.LFE278:
 790              		.section	.text.Vector70,"ax",%progbits
 791              		.align	1
 792              		.global	Vector70
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 796              		.fpu fpv4-sp-d16
 798              	Vector70:
 799              	.LFB279:
 314:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 800              		.loc 1 314 42 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 316:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 804              		.loc 1 316 3 view .LVU236
 316:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 805              		.loc 1 316 3 view .LVU237
 316:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 806              		.loc 1 316 3 view .LVU238
 316:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 807              		.loc 1 316 3 view .LVU239
 316:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 808              		.loc 1 316 3 view .LVU240
 316:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 809              		.loc 1 316 22 view .LVU241
 318:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 810              		.loc 1 318 3 view .LVU242
 314:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 811              		.loc 1 314 42 is_stmt 0 view .LVU243
 812 0000 08B5     		push	{r3, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 3, -8
 815              		.cfi_offset 14, -4
 318:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 816              		.loc 1 318 3 view .LVU244
 817 0002 0348     		ldr	r0, .L46
 818 0004 FFF7FEFF 		bl	dmaServeInterrupt
 819              	.LVL35:
 320:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 820              		.loc 1 320 3 is_stmt 1 view .LVU245
 320:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 821              		.loc 1 320 3 view .LVU246
 320:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 822              		.loc 1 320 3 view .LVU247
 320:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 823              		.loc 1 320 3 view .LVU248
 320:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 824              		.loc 1 320 3 view .LVU249
 321:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 825              		.loc 1 321 1 is_stmt 0 view .LVU250
 826 0008 BDE80840 		pop	{r3, lr}
 827              		.cfi_restore 14
 828              		.cfi_restore 3
 829              		.cfi_def_cfa_offset 0
 320:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 830              		.loc 1 320 3 view .LVU251
 831 000c FFF7FEBF 		b	_port_irq_epilogue
 832              	.LVL36:
 833              	.L47:
 834              		.align	2
 835              	.L46:
 836 0010 10000000 		.word	.LANCHOR1+16
 837              		.cfi_endproc
 838              	.LFE279:
 840              		.section	.text.Vector74,"ax",%progbits
 841              		.align	1
 842              		.global	Vector74
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	Vector74:
 849              	.LFB280:
 330:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 850              		.loc 1 330 42 is_stmt 1 view -0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 332:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 854              		.loc 1 332 3 view .LVU253
 332:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 855              		.loc 1 332 3 view .LVU254
 332:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 856              		.loc 1 332 3 view .LVU255
 332:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 857              		.loc 1 332 3 view .LVU256
 332:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 858              		.loc 1 332 3 view .LVU257
 332:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 859              		.loc 1 332 22 view .LVU258
 334:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 860              		.loc 1 334 3 view .LVU259
 330:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 861              		.loc 1 330 42 is_stmt 0 view .LVU260
 862 0000 08B5     		push	{r3, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 3, -8
 865              		.cfi_offset 14, -4
 334:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 866              		.loc 1 334 3 view .LVU261
 867 0002 0348     		ldr	r0, .L49
 868 0004 FFF7FEFF 		bl	dmaServeInterrupt
 869              	.LVL37:
 336:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 870              		.loc 1 336 3 is_stmt 1 view .LVU262
 336:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 871              		.loc 1 336 3 view .LVU263
 336:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 872              		.loc 1 336 3 view .LVU264
 336:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 873              		.loc 1 336 3 view .LVU265
 336:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 874              		.loc 1 336 3 view .LVU266
 337:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 875              		.loc 1 337 1 is_stmt 0 view .LVU267
 876 0008 BDE80840 		pop	{r3, lr}
 877              		.cfi_restore 14
 878              		.cfi_restore 3
 879              		.cfi_def_cfa_offset 0
 336:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 880              		.loc 1 336 3 view .LVU268
 881 000c FFF7FEBF 		b	_port_irq_epilogue
 882              	.LVL38:
 883              	.L50:
 884              		.align	2
 885              	.L49:
 886 0010 20000000 		.word	.LANCHOR1+32
 887              		.cfi_endproc
 888              	.LFE280:
 890              		.section	.text.Vector78,"ax",%progbits
 891              		.align	1
 892              		.global	Vector78
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 896              		.fpu fpv4-sp-d16
 898              	Vector78:
 899              	.LFB281:
 346:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 900              		.loc 1 346 42 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 348:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 904              		.loc 1 348 3 view .LVU270
 348:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 905              		.loc 1 348 3 view .LVU271
 348:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 906              		.loc 1 348 3 view .LVU272
 348:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 907              		.loc 1 348 3 view .LVU273
 348:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 908              		.loc 1 348 3 view .LVU274
 348:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 909              		.loc 1 348 22 view .LVU275
 350:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 910              		.loc 1 350 3 view .LVU276
 346:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 911              		.loc 1 346 42 is_stmt 0 view .LVU277
 912 0000 08B5     		push	{r3, lr}
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 3, -8
 915              		.cfi_offset 14, -4
 350:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 916              		.loc 1 350 3 view .LVU278
 917 0002 0348     		ldr	r0, .L52
 918 0004 FFF7FEFF 		bl	dmaServeInterrupt
 919              	.LVL39:
 352:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 920              		.loc 1 352 3 is_stmt 1 view .LVU279
 352:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 921              		.loc 1 352 3 view .LVU280
 352:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 922              		.loc 1 352 3 view .LVU281
 352:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 923              		.loc 1 352 3 view .LVU282
 352:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 924              		.loc 1 352 3 view .LVU283
 353:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 925              		.loc 1 353 1 is_stmt 0 view .LVU284
 926 0008 BDE80840 		pop	{r3, lr}
 927              		.cfi_restore 14
 928              		.cfi_restore 3
 929              		.cfi_def_cfa_offset 0
 352:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 930              		.loc 1 352 3 view .LVU285
 931 000c FFF7FEBF 		b	_port_irq_epilogue
 932              	.LVL40:
 933              	.L53:
 934              		.align	2
 935              	.L52:
 936 0010 30000000 		.word	.LANCHOR1+48
 937              		.cfi_endproc
 938              	.LFE281:
 940              		.section	.text.Vector7C,"ax",%progbits
 941              		.align	1
 942              		.global	Vector7C
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu fpv4-sp-d16
 948              	Vector7C:
 949              	.LFB282:
 362:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 950              		.loc 1 362 42 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 364:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 954              		.loc 1 364 3 view .LVU287
 364:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 955              		.loc 1 364 3 view .LVU288
 364:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 956              		.loc 1 364 3 view .LVU289
 364:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 957              		.loc 1 364 3 view .LVU290
 364:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 958              		.loc 1 364 3 view .LVU291
 364:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 959              		.loc 1 364 22 view .LVU292
 366:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 960              		.loc 1 366 3 view .LVU293
 362:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 961              		.loc 1 362 42 is_stmt 0 view .LVU294
 962 0000 08B5     		push	{r3, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 3, -8
 965              		.cfi_offset 14, -4
 366:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 966              		.loc 1 366 3 view .LVU295
 967 0002 0348     		ldr	r0, .L55
 968 0004 FFF7FEFF 		bl	dmaServeInterrupt
 969              	.LVL41:
 368:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 970              		.loc 1 368 3 is_stmt 1 view .LVU296
 368:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 971              		.loc 1 368 3 view .LVU297
 368:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 972              		.loc 1 368 3 view .LVU298
 368:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 973              		.loc 1 368 3 view .LVU299
 368:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 974              		.loc 1 368 3 view .LVU300
 369:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 975              		.loc 1 369 1 is_stmt 0 view .LVU301
 976 0008 BDE80840 		pop	{r3, lr}
 977              		.cfi_restore 14
 978              		.cfi_restore 3
 979              		.cfi_def_cfa_offset 0
 368:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 980              		.loc 1 368 3 view .LVU302
 981 000c FFF7FEBF 		b	_port_irq_epilogue
 982              	.LVL42:
 983              	.L56:
 984              		.align	2
 985              	.L55:
 986 0010 40000000 		.word	.LANCHOR1+64
 987              		.cfi_endproc
 988              	.LFE282:
 990              		.section	.text.Vector80,"ax",%progbits
 991              		.align	1
 992              		.global	Vector80
 993              		.syntax unified
 994              		.thumb
 995              		.thumb_func
 996              		.fpu fpv4-sp-d16
 998              	Vector80:
 999              	.LFB283:
 378:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1000              		.loc 1 378 42 is_stmt 1 view -0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 380:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1004              		.loc 1 380 3 view .LVU304
 380:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1005              		.loc 1 380 3 view .LVU305
 380:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1006              		.loc 1 380 3 view .LVU306
 380:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1007              		.loc 1 380 3 view .LVU307
 380:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1008              		.loc 1 380 3 view .LVU308
 380:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1009              		.loc 1 380 22 view .LVU309
 382:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1010              		.loc 1 382 3 view .LVU310
 378:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1011              		.loc 1 378 42 is_stmt 0 view .LVU311
 1012 0000 08B5     		push	{r3, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 3, -8
 1015              		.cfi_offset 14, -4
 382:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1016              		.loc 1 382 3 view .LVU312
 1017 0002 0348     		ldr	r0, .L58
 1018 0004 FFF7FEFF 		bl	dmaServeInterrupt
 1019              	.LVL43:
 384:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1020              		.loc 1 384 3 is_stmt 1 view .LVU313
 384:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1021              		.loc 1 384 3 view .LVU314
 384:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1022              		.loc 1 384 3 view .LVU315
 384:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1023              		.loc 1 384 3 view .LVU316
 384:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1024              		.loc 1 384 3 view .LVU317
 385:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 1025              		.loc 1 385 1 is_stmt 0 view .LVU318
 1026 0008 BDE80840 		pop	{r3, lr}
 1027              		.cfi_restore 14
 1028              		.cfi_restore 3
 1029              		.cfi_def_cfa_offset 0
 384:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1030              		.loc 1 384 3 view .LVU319
 1031 000c FFF7FEBF 		b	_port_irq_epilogue
 1032              	.LVL44:
 1033              	.L59:
 1034              		.align	2
 1035              	.L58:
 1036 0010 50000000 		.word	.LANCHOR1+80
 1037              		.cfi_endproc
 1038              	.LFE283:
 1040              		.section	.text.Vector84,"ax",%progbits
 1041              		.align	1
 1042              		.global	Vector84
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu fpv4-sp-d16
 1048              	Vector84:
 1049              	.LFB284:
 394:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1050              		.loc 1 394 42 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 396:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1054              		.loc 1 396 3 view .LVU321
 396:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1055              		.loc 1 396 3 view .LVU322
 396:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1056              		.loc 1 396 3 view .LVU323
 396:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1057              		.loc 1 396 3 view .LVU324
 396:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1058              		.loc 1 396 3 view .LVU325
 396:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1059              		.loc 1 396 22 view .LVU326
 398:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1060              		.loc 1 398 3 view .LVU327
 394:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1061              		.loc 1 394 42 is_stmt 0 view .LVU328
 1062 0000 08B5     		push	{r3, lr}
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 3, -8
 1065              		.cfi_offset 14, -4
 398:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1066              		.loc 1 398 3 view .LVU329
 1067 0002 0348     		ldr	r0, .L61
 1068 0004 FFF7FEFF 		bl	dmaServeInterrupt
 1069              	.LVL45:
 400:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1070              		.loc 1 400 3 is_stmt 1 view .LVU330
 400:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1071              		.loc 1 400 3 view .LVU331
 400:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1072              		.loc 1 400 3 view .LVU332
 400:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1073              		.loc 1 400 3 view .LVU333
 400:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1074              		.loc 1 400 3 view .LVU334
 401:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 1075              		.loc 1 401 1 is_stmt 0 view .LVU335
 1076 0008 BDE80840 		pop	{r3, lr}
 1077              		.cfi_restore 14
 1078              		.cfi_restore 3
 1079              		.cfi_def_cfa_offset 0
 400:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1080              		.loc 1 400 3 view .LVU336
 1081 000c FFF7FEBF 		b	_port_irq_epilogue
 1082              	.LVL46:
 1083              	.L62:
 1084              		.align	2
 1085              	.L61:
 1086 0010 60000000 		.word	.LANCHOR1+96
 1087              		.cfi_endproc
 1088              	.LFE284:
 1090              		.section	.text.Vector120,"ax",%progbits
 1091              		.align	1
 1092              		.global	Vector120
 1093              		.syntax unified
 1094              		.thumb
 1095              		.thumb_func
 1096              		.fpu fpv4-sp-d16
 1098              	Vector120:
 1099              	.LFB285:
 426:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1100              		.loc 1 426 42 is_stmt 1 view -0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 428:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1104              		.loc 1 428 3 view .LVU338
 428:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1105              		.loc 1 428 3 view .LVU339
 428:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1106              		.loc 1 428 3 view .LVU340
 428:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1107              		.loc 1 428 3 view .LVU341
 428:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1108              		.loc 1 428 3 view .LVU342
 428:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1109              		.loc 1 428 22 view .LVU343
 430:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1110              		.loc 1 430 3 view .LVU344
 426:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1111              		.loc 1 426 42 is_stmt 0 view .LVU345
 1112 0000 08B5     		push	{r3, lr}
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 3, -8
 1115              		.cfi_offset 14, -4
 430:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1116              		.loc 1 430 3 view .LVU346
 1117 0002 0348     		ldr	r0, .L64
 1118 0004 FFF7FEFF 		bl	dmaServeInterrupt
 1119              	.LVL47:
 432:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1120              		.loc 1 432 3 is_stmt 1 view .LVU347
 432:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1121              		.loc 1 432 3 view .LVU348
 432:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1122              		.loc 1 432 3 view .LVU349
 432:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1123              		.loc 1 432 3 view .LVU350
 432:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1124              		.loc 1 432 3 view .LVU351
 433:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 1125              		.loc 1 433 1 is_stmt 0 view .LVU352
 1126 0008 BDE80840 		pop	{r3, lr}
 1127              		.cfi_restore 14
 1128              		.cfi_restore 3
 1129              		.cfi_def_cfa_offset 0
 432:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1130              		.loc 1 432 3 view .LVU353
 1131 000c FFF7FEBF 		b	_port_irq_epilogue
 1132              	.LVL48:
 1133              	.L65:
 1134              		.align	2
 1135              	.L64:
 1136 0010 70000000 		.word	.LANCHOR1+112
 1137              		.cfi_endproc
 1138              	.LFE285:
 1140              		.section	.text.Vector124,"ax",%progbits
 1141              		.align	1
 1142              		.global	Vector124
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1146              		.fpu fpv4-sp-d16
 1148              	Vector124:
 1149              	.LFB286:
 442:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1150              		.loc 1 442 42 is_stmt 1 view -0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 444:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1154              		.loc 1 444 3 view .LVU355
 444:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1155              		.loc 1 444 3 view .LVU356
 444:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1156              		.loc 1 444 3 view .LVU357
 444:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1157              		.loc 1 444 3 view .LVU358
 444:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1158              		.loc 1 444 3 view .LVU359
 444:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1159              		.loc 1 444 22 view .LVU360
 446:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1160              		.loc 1 446 3 view .LVU361
 442:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1161              		.loc 1 442 42 is_stmt 0 view .LVU362
 1162 0000 08B5     		push	{r3, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 3, -8
 1165              		.cfi_offset 14, -4
 446:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1166              		.loc 1 446 3 view .LVU363
 1167 0002 0348     		ldr	r0, .L67
 1168 0004 FFF7FEFF 		bl	dmaServeInterrupt
 1169              	.LVL49:
 448:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1170              		.loc 1 448 3 is_stmt 1 view .LVU364
 448:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1171              		.loc 1 448 3 view .LVU365
 448:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1172              		.loc 1 448 3 view .LVU366
 448:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1173              		.loc 1 448 3 view .LVU367
 448:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1174              		.loc 1 448 3 view .LVU368
 449:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 1175              		.loc 1 449 1 is_stmt 0 view .LVU369
 1176 0008 BDE80840 		pop	{r3, lr}
 1177              		.cfi_restore 14
 1178              		.cfi_restore 3
 1179              		.cfi_def_cfa_offset 0
 448:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1180              		.loc 1 448 3 view .LVU370
 1181 000c FFF7FEBF 		b	_port_irq_epilogue
 1182              	.LVL50:
 1183              	.L68:
 1184              		.align	2
 1185              	.L67:
 1186 0010 80000000 		.word	.LANCHOR1+128
 1187              		.cfi_endproc
 1188              	.LFE286:
 1190              		.section	.text.Vector128,"ax",%progbits
 1191              		.align	1
 1192              		.global	Vector128
 1193              		.syntax unified
 1194              		.thumb
 1195              		.thumb_func
 1196              		.fpu fpv4-sp-d16
 1198              	Vector128:
 1199              	.LFB287:
 458:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1200              		.loc 1 458 42 is_stmt 1 view -0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 0
 1203              		@ frame_needed = 0, uses_anonymous_args = 0
 460:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1204              		.loc 1 460 3 view .LVU372
 460:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1205              		.loc 1 460 3 view .LVU373
 460:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1206              		.loc 1 460 3 view .LVU374
 460:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1207              		.loc 1 460 3 view .LVU375
 460:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1208              		.loc 1 460 3 view .LVU376
 460:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1209              		.loc 1 460 22 view .LVU377
 462:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1210              		.loc 1 462 3 view .LVU378
 458:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1211              		.loc 1 458 42 is_stmt 0 view .LVU379
 1212 0000 08B5     		push	{r3, lr}
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 3, -8
 1215              		.cfi_offset 14, -4
 462:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1216              		.loc 1 462 3 view .LVU380
 1217 0002 0348     		ldr	r0, .L70
 1218 0004 FFF7FEFF 		bl	dmaServeInterrupt
 1219              	.LVL51:
 464:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1220              		.loc 1 464 3 is_stmt 1 view .LVU381
 464:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1221              		.loc 1 464 3 view .LVU382
 464:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1222              		.loc 1 464 3 view .LVU383
 464:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1223              		.loc 1 464 3 view .LVU384
 464:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1224              		.loc 1 464 3 view .LVU385
 465:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 1225              		.loc 1 465 1 is_stmt 0 view .LVU386
 1226 0008 BDE80840 		pop	{r3, lr}
 1227              		.cfi_restore 14
 1228              		.cfi_restore 3
 1229              		.cfi_def_cfa_offset 0
 464:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1230              		.loc 1 464 3 view .LVU387
 1231 000c FFF7FEBF 		b	_port_irq_epilogue
 1232              	.LVL52:
 1233              	.L71:
 1234              		.align	2
 1235              	.L70:
 1236 0010 90000000 		.word	.LANCHOR1+144
 1237              		.cfi_endproc
 1238              	.LFE287:
 1240              		.section	.text.Vector12C,"ax",%progbits
 1241              		.align	1
 1242              		.global	Vector12C
 1243              		.syntax unified
 1244              		.thumb
 1245              		.thumb_func
 1246              		.fpu fpv4-sp-d16
 1248              	Vector12C:
 1249              	.LFB288:
 474:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1250              		.loc 1 474 42 is_stmt 1 view -0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 476:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1254              		.loc 1 476 3 view .LVU389
 476:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1255              		.loc 1 476 3 view .LVU390
 476:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1256              		.loc 1 476 3 view .LVU391
 476:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1257              		.loc 1 476 3 view .LVU392
 476:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1258              		.loc 1 476 3 view .LVU393
 476:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1259              		.loc 1 476 22 view .LVU394
 478:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1260              		.loc 1 478 3 view .LVU395
 474:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1261              		.loc 1 474 42 is_stmt 0 view .LVU396
 1262 0000 08B5     		push	{r3, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 3, -8
 1265              		.cfi_offset 14, -4
 478:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1266              		.loc 1 478 3 view .LVU397
 1267 0002 0348     		ldr	r0, .L73
 1268 0004 FFF7FEFF 		bl	dmaServeInterrupt
 1269              	.LVL53:
 480:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1270              		.loc 1 480 3 is_stmt 1 view .LVU398
 480:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1271              		.loc 1 480 3 view .LVU399
 480:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1272              		.loc 1 480 3 view .LVU400
 480:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1273              		.loc 1 480 3 view .LVU401
 480:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1274              		.loc 1 480 3 view .LVU402
 481:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 1275              		.loc 1 481 1 is_stmt 0 view .LVU403
 1276 0008 BDE80840 		pop	{r3, lr}
 1277              		.cfi_restore 14
 1278              		.cfi_restore 3
 1279              		.cfi_def_cfa_offset 0
 480:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1280              		.loc 1 480 3 view .LVU404
 1281 000c FFF7FEBF 		b	_port_irq_epilogue
 1282              	.LVL54:
 1283              	.L74:
 1284              		.align	2
 1285              	.L73:
 1286 0010 A0000000 		.word	.LANCHOR1+160
 1287              		.cfi_endproc
 1288              	.LFE288:
 1290              		.section	.text.Vector130,"ax",%progbits
 1291              		.align	1
 1292              		.global	Vector130
 1293              		.syntax unified
 1294              		.thumb
 1295              		.thumb_func
 1296              		.fpu fpv4-sp-d16
 1298              	Vector130:
 1299              	.LFB289:
 490:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1300              		.loc 1 490 42 is_stmt 1 view -0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 492:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1304              		.loc 1 492 3 view .LVU406
 492:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1305              		.loc 1 492 3 view .LVU407
 492:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1306              		.loc 1 492 3 view .LVU408
 492:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1307              		.loc 1 492 3 view .LVU409
 492:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1308              		.loc 1 492 3 view .LVU410
 492:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1309              		.loc 1 492 22 view .LVU411
 494:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1310              		.loc 1 494 3 view .LVU412
 490:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1311              		.loc 1 490 42 is_stmt 0 view .LVU413
 1312 0000 08B5     		push	{r3, lr}
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 3, -8
 1315              		.cfi_offset 14, -4
 494:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** 
 1316              		.loc 1 494 3 view .LVU414
 1317 0002 0348     		ldr	r0, .L76
 1318 0004 FFF7FEFF 		bl	dmaServeInterrupt
 1319              	.LVL55:
 496:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1320              		.loc 1 496 3 is_stmt 1 view .LVU415
 496:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1321              		.loc 1 496 3 view .LVU416
 496:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1322              		.loc 1 496 3 view .LVU417
 496:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1323              		.loc 1 496 3 view .LVU418
 496:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1324              		.loc 1 496 3 view .LVU419
 497:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** #endif
 1325              		.loc 1 497 1 is_stmt 0 view .LVU420
 1326 0008 BDE80840 		pop	{r3, lr}
 1327              		.cfi_restore 14
 1328              		.cfi_restore 3
 1329              		.cfi_def_cfa_offset 0
 496:lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.c **** }
 1330              		.loc 1 496 3 view .LVU421
 1331 000c FFF7FEBF 		b	_port_irq_epilogue
 1332              	.LVL56:
 1333              	.L77:
 1334              		.align	2
 1335              	.L76:
 1336 0010 B0000000 		.word	.LANCHOR1+176
 1337              		.cfi_endproc
 1338              	.LFE289:
 1340              		.global	_stm32_dma_streams
 1341              		.section	.bss.dma,"aw",%nobits
 1342              		.align	2
 1343              		.set	.LANCHOR0,. + 0
 1346              	dma:
 1347 0000 00000000 		.space	104
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1348              		.section	.rodata._stm32_dma_streams,"a"
 1349              		.align	2
 1350              		.set	.LANCHOR1,. + 0
 1353              	_stm32_dma_streams:
 1354 0000 00000240 		.word	1073872896
 1355 0004 08000240 		.word	1073872904
 1356 0008 01000000 		.word	1
 1357 000c 00       		.byte	0
 1358 000d 00       		.byte	0
 1359 000e 00       		.byte	0
 1360 000f 0B       		.byte	11
 1361 0010 00000240 		.word	1073872896
 1362 0014 1C000240 		.word	1073872924
 1363 0018 02000000 		.word	2
 1364 001c 00       		.byte	0
 1365 001d 04       		.byte	4
 1366 001e 01       		.byte	1
 1367 001f 0C       		.byte	12
 1368 0020 00000240 		.word	1073872896
 1369 0024 30000240 		.word	1073872944
 1370 0028 04000000 		.word	4
 1371 002c 00       		.byte	0
 1372 002d 08       		.byte	8
 1373 002e 02       		.byte	2
 1374 002f 0D       		.byte	13
 1375 0030 00000240 		.word	1073872896
 1376 0034 44000240 		.word	1073872964
 1377 0038 08000000 		.word	8
 1378 003c 00       		.byte	0
 1379 003d 0C       		.byte	12
 1380 003e 03       		.byte	3
 1381 003f 0E       		.byte	14
 1382 0040 00000240 		.word	1073872896
 1383 0044 58000240 		.word	1073872984
 1384 0048 10000000 		.word	16
 1385 004c 00       		.byte	0
 1386 004d 10       		.byte	16
 1387 004e 04       		.byte	4
 1388 004f 0F       		.byte	15
 1389 0050 00000240 		.word	1073872896
 1390 0054 6C000240 		.word	1073873004
 1391 0058 20000000 		.word	32
 1392 005c 00       		.byte	0
 1393 005d 14       		.byte	20
 1394 005e 05       		.byte	5
 1395 005f 10       		.byte	16
 1396 0060 00000240 		.word	1073872896
 1397 0064 80000240 		.word	1073873024
 1398 0068 40000000 		.word	64
 1399 006c 00       		.byte	0
 1400 006d 18       		.byte	24
 1401 006e 06       		.byte	6
 1402 006f 11       		.byte	17
 1403 0070 00040240 		.word	1073873920
 1404 0074 08040240 		.word	1073873928
 1405 0078 80000000 		.word	128
 1406 007c 00       		.byte	0
 1407 007d 00       		.byte	0
 1408 007e 07       		.byte	7
 1409 007f 38       		.byte	56
 1410 0080 00040240 		.word	1073873920
 1411 0084 1C040240 		.word	1073873948
 1412 0088 00010000 		.word	256
 1413 008c 00       		.byte	0
 1414 008d 04       		.byte	4
 1415 008e 08       		.byte	8
 1416 008f 39       		.byte	57
 1417 0090 00040240 		.word	1073873920
 1418 0094 30040240 		.word	1073873968
 1419 0098 00020000 		.word	512
 1420 009c 00       		.byte	0
 1421 009d 08       		.byte	8
 1422 009e 09       		.byte	9
 1423 009f 3A       		.byte	58
 1424 00a0 00040240 		.word	1073873920
 1425 00a4 44040240 		.word	1073873988
 1426 00a8 00040000 		.word	1024
 1427 00ac 00       		.byte	0
 1428 00ad 0C       		.byte	12
 1429 00ae 0A       		.byte	10
 1430 00af 3B       		.byte	59
 1431 00b0 00040240 		.word	1073873920
 1432 00b4 58040240 		.word	1073874008
 1433 00b8 00080000 		.word	2048
 1434 00bc 00       		.byte	0
 1435 00bd 10       		.byte	16
 1436 00be 0B       		.byte	11
 1437 00bf 3C       		.byte	60
 1438              		.text
 1439              	.Letext0:
 1440              		.file 6 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 1441              		.file 7 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 1442              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1443              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 1444              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 1445              		.file 11 "./lib/chibios/os/common/ext/ST/STM32F3xx/stm32f303xc.h"
 1446              		.file 12 "./lib/chibios/os/rt/include/chsem.h"
 1447              		.file 13 "./lib/chibios/os/rt/include/chmtx.h"
 1448              		.file 14 "./lib/chibios/os/hal/ports/STM32/LLD/DMAv1/stm32_dma.h"
 1449              		.file 15 "./lib/chibios/os/hal/ports/common/ARMCMx/nvic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32_dma.c
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:18     .text.dmaInit:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:26     .text.dmaInit:0000000000000000 dmaInit
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:85     .text.dmaInit:0000000000000030 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:92     .text.dmaStreamAllocI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:99     .text.dmaStreamAllocI:0000000000000000 dmaStreamAllocI
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:259    .text.dmaStreamAllocI:0000000000000094 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:266    .text.dmaStreamAlloc:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:273    .text.dmaStreamAlloc:0000000000000000 dmaStreamAlloc
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:407    .text.dmaStreamFreeI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:414    .text.dmaStreamFreeI:0000000000000000 dmaStreamFreeI
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:516    .text.dmaStreamFreeI:0000000000000064 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:522    .text.dmaStreamFree:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:529    .text.dmaStreamFree:0000000000000000 dmaStreamFree
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:656    .text.dmaServeInterrupt:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:663    .text.dmaServeInterrupt:0000000000000000 dmaServeInterrupt
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:736    .text.dmaServeInterrupt:000000000000003c $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:741    .text.Vector6C:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:748    .text.Vector6C:0000000000000000 Vector6C
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:786    .text.Vector6C:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:791    .text.Vector70:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:798    .text.Vector70:0000000000000000 Vector70
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:836    .text.Vector70:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:841    .text.Vector74:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:848    .text.Vector74:0000000000000000 Vector74
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:886    .text.Vector74:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:891    .text.Vector78:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:898    .text.Vector78:0000000000000000 Vector78
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:936    .text.Vector78:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:941    .text.Vector7C:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:948    .text.Vector7C:0000000000000000 Vector7C
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:986    .text.Vector7C:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:991    .text.Vector80:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:998    .text.Vector80:0000000000000000 Vector80
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1036   .text.Vector80:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1041   .text.Vector84:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1048   .text.Vector84:0000000000000000 Vector84
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1086   .text.Vector84:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1091   .text.Vector120:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1098   .text.Vector120:0000000000000000 Vector120
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1136   .text.Vector120:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1141   .text.Vector124:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1148   .text.Vector124:0000000000000000 Vector124
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1186   .text.Vector124:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1191   .text.Vector128:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1198   .text.Vector128:0000000000000000 Vector128
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1236   .text.Vector128:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1241   .text.Vector12C:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1248   .text.Vector12C:0000000000000000 Vector12C
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1286   .text.Vector12C:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1291   .text.Vector130:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1298   .text.Vector130:0000000000000000 Vector130
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1336   .text.Vector130:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1353   .rodata._stm32_dma_streams:0000000000000000 _stm32_dma_streams
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1342   .bss.dma:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1346   .bss.dma:0000000000000000 dma
C:\Users\lhanj\AppData\Local\Temp\ccFwOb1V.s:1349   .rodata._stm32_dma_streams:0000000000000000 $d

UNDEFINED SYMBOLS
nvicEnableVector
nvicDisableVector
_port_irq_epilogue
