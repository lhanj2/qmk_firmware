   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"hal_usb_lld.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.usb_packet_write_from_buffer,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	usb_packet_write_from_buffer:
  26              	.LVL0:
  27              	.LFB281:
  28              		.file 1 "lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c"
   1:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*
   2:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
   4:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     you may not use this file except in compliance with the License.
   6:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     You may obtain a copy of the License at
   7:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
   8:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  10:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     See the License for the specific language governing permissions and
  14:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     limitations under the License.
  15:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** */
  16:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  17:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  18:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @file    USBv1/hal_usb_lld.c
  19:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   STM32 USB subsystem low level driver source.
  20:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
  21:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @addtogroup USB
  22:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @{
  23:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  24:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  25:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #include <string.h>
  26:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  27:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #include "hal.h"
  28:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  29:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if HAL_USE_USB || defined(__DOXYGEN__)
  30:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  31:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  32:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver local definitions.                                                 */
  33:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  34:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  35:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #define BTABLE_ADDR     0x0000
  36:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  37:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #define EPR_EP_TYPE_IS_ISO(bits) ((bits & EPR_EP_TYPE_MASK) == EPR_EP_TYPE_ISO)
  38:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  39:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  40:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver exported variables.                                                */
  41:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  42:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  43:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /** @brief USB1 driver identifier.*/
  44:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1 || defined(__DOXYGEN__)
  45:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** USBDriver USBD1;
  46:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
  47:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  48:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  49:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver local variables and types.                                         */
  50:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  51:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  52:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  53:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   EP0 state.
  54:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @note    It is an union because IN and OUT endpoints are never used at the
  55:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *          same time for EP0.
  56:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  57:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static union {
  58:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /**
  59:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    * @brief   IN EP0 state.
  60:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    */
  61:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBInEndpointState in;
  62:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /**
  63:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    * @brief   OUT EP0 state.
  64:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****    */
  65:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBOutEndpointState out;
  66:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** } ep0_state;
  67:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  68:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  69:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Buffer for the EP0 setup packets.
  70:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  71:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static uint8_t ep0setup_buffer[8];
  72:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  73:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  74:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   EP0 initialization structure.
  75:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  76:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static const USBEndpointConfig ep0config = {
  77:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USB_EP_MODE_TYPE_CTRL,
  78:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   _usb_ep0setup,
  79:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   _usb_ep0in,
  80:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   _usb_ep0out,
  81:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   0x40,
  82:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   0x40,
  83:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   &ep0_state.in,
  84:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   &ep0_state.out,
  85:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   1,
  86:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   ep0setup_buffer
  87:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** };
  88:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  89:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  90:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver local functions.                                                   */
  91:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
  92:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
  93:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
  94:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Resets the packet memory allocator.
  95:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
  96:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
  97:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
  98:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static void usb_pm_reset(USBDriver *usbp) {
  99:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 100:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* The first 64 bytes are reserved for the descriptors table. The effective
 101:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      available RAM for endpoint buffers is just 448 bytes.*/
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext = 64;
 103:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 104:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 105:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 106:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Resets the packet memory allocator.
 107:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 108:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 109:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] size      size of the packet buffer to allocate
 110:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The packet buffer address.
 111:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 112:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static uint32_t usb_pm_alloc(USBDriver *usbp, size_t size) {
 113:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t next;
 114:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   next = usbp->pmnext;
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 118:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 119:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 120:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 121:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 122:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Reads from a dedicated packet buffer.
 123:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 124:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 125:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[out] buf      buffer where to copy the packet data
 126:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The size of the receivee packet.
 127:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 128:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 129:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 130:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static size_t usb_packet_read_to_buffer(usbep_t ep, uint8_t *buf) {
 131:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t i, n;
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *udp = USB_GET_DESCRIPTOR(ep);
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 134:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 135:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t epr = STM32_USB->EPR[ep];
 136:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 137:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Double buffering is always enabled for isochronous endpoints, and
 138:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      although we overlap the two buffers for simplicity, we still need
 139:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      to read from the right counter. The DTOG_RX bit indicates the buffer
 140:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      that is currently in use by the USB peripheral, that is, the buffer
 141:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      in which the next received packet will be stored, so we need to
 142:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      read the counter of the OTHER buffer, which is where the last
 143:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      received packet was stored.*/
 144:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (EPR_EP_TYPE_IS_ISO(epr) && !(epr & EPR_DTOG_RX))
 145:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = (size_t)udp->RXCOUNT1 & RXCOUNT_COUNT_MASK;
 146:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   else
 147:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = (size_t)udp->RXCOUNT0 & RXCOUNT_COUNT_MASK;
 148:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   n = (size_t)udp->RXCOUNT0 & RXCOUNT_COUNT_MASK;
 150:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 151:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 152:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   i = n;
 153:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 154:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_FAST_COPY
 155:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i >= 16) {
 156:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w;
 157:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 158:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 0);
 159:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 0) = (uint8_t)w;
 160:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 1) = (uint8_t)(w >> 8);
 161:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 1);
 162:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 2) = (uint8_t)w;
 163:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 3) = (uint8_t)(w >> 8);
 164:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 2);
 165:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 4) = (uint8_t)w;
 166:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 5) = (uint8_t)(w >> 8);
 167:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 3);
 168:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 6) = (uint8_t)w;
 169:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 7) = (uint8_t)(w >> 8);
 170:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 4);
 171:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 8) = (uint8_t)w;
 172:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 9) = (uint8_t)(w >> 8);
 173:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 5);
 174:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 10) = (uint8_t)w;
 175:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 11) = (uint8_t)(w >> 8);
 176:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 6);
 177:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 12) = (uint8_t)w;
 178:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 13) = (uint8_t)(w >> 8);
 179:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w = *(pmap + 7);
 180:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 14) = (uint8_t)w;
 181:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(buf + 15) = (uint8_t)(w >> 8);
 182:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 183:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 16;
 184:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     buf += 16;
 185:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     pmap += 8;
 186:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 187:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_FAST_COPY */
 188:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 189:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i >= 2) {
 190:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w = *pmap++;
 191:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)w;
 192:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)(w >> 8);
 193:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 194:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 195:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 196:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (i >= 1) {
 197:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf = (uint8_t)*pmap;
 198:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 199:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 200:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return n;
 201:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 202:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 203:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 204:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Writes to a dedicated packet buffer.
 205:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 206:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 207:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] buf       buffer where to fetch the packet data
 208:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] n         maximum number of bytes to copy. This value must
 209:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *                      not exceed the maximum packet size for this endpoint.
 210:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 211:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 212:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 213:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static void usb_packet_write_from_buffer(usbep_t ep,
 214:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                                          const uint8_t *buf,
 215:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                                          size_t n) {
  29              		.loc 1 215 52 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 216:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *udp = USB_GET_DESCRIPTOR(ep);
  34              		.loc 1 216 3 view .LVU1
  35              		.loc 1 216 33 is_stmt 0 view .LVU2
  36 0000 0C4B     		ldr	r3, .L4
  37 0002 1B6D     		ldr	r3, [r3, #80]
  38 0004 03F18043 		add	r3, r3, #1073741824
  39 0008 03F5C043 		add	r3, r3, #24576
  40 000c 03EB0010 		add	r0, r3, r0, lsl #4
  41              	.LVL1:
 217:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->TXADDR0);
  42              		.loc 1 217 3 is_stmt 1 view .LVU3
  43 0010 1144     		add	r1, r1, r2
  44              	.LVL2:
  45              		.loc 1 217 27 is_stmt 0 view .LVU4
  46 0012 0368     		ldr	r3, [r0]
 218:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   int i = (int)n;
 219:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 220:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 221:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t epr = STM32_USB->EPR[ep];
 222:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 223:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Double buffering is always enabled for isochronous endpoints, and
 224:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      although we overlap the two buffers for simplicity, we still need
 225:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      to write to the right counter. The DTOG_TX bit indicates the buffer
 226:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      that is currently in use by the USB peripheral, that is, the buffer
 227:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      from which the next packet will be sent, so we need to write the
 228:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      counter of that buffer.*/
 229:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (EPR_EP_TYPE_IS_ISO(epr) && (epr & EPR_DTOG_TX))
 230:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     udp->TXCOUNT1 = (stm32_usb_pma_t)n;
 231:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   else
 232:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     udp->TXCOUNT0 = (stm32_usb_pma_t)n;
 233:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 234:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   udp->TXCOUNT0 = (stm32_usb_pma_t)n;
  47              		.loc 1 234 17 view .LVU5
  48 0014 4260     		str	r2, [r0, #4]
 217:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->TXADDR0);
  49              		.loc 1 217 27 view .LVU6
  50 0016 03F10053 		add	r3, r3, #536870912
  51 001a 03F54053 		add	r3, r3, #12288
  52 001e 5B00     		lsls	r3, r3, #1
  53              	.LVL3:
 218:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   int i = (int)n;
  54              		.loc 1 218 3 is_stmt 1 view .LVU7
  55              		.loc 1 234 3 view .LVU8
 235:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 236:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 237:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_FAST_COPY
 238:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i >= 16) {
 239:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w;
 240:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 241:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 0);
 242:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 1) << 8;
 243:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 0) = (stm32_usb_pma_t)w;
 244:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 2);
 245:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 3) << 8;
 246:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 1) = (stm32_usb_pma_t)w;
 247:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 4);
 248:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 5) << 8;
 249:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 2) = (stm32_usb_pma_t)w;
 250:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 6);
 251:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 7) << 8;
 252:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 3) = (stm32_usb_pma_t)w;
 253:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 8);
 254:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 9) << 8;
 255:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 4) = (stm32_usb_pma_t)w;
 256:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 10);
 257:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 11) << 8;
 258:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 5) = (stm32_usb_pma_t)w;
 259:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 12);
 260:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 13) << 8;
 261:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 6) = (stm32_usb_pma_t)w;
 262:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *(buf + 14);
 263:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *(buf + 15) << 8;
 264:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(pmap + 7) = (stm32_usb_pma_t)w;
 265:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 266:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 16;
 267:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     buf += 16;
 268:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     pmap += 8;
 269:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 270:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_FAST_COPY */
 271:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 272:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (i > 0) {
  56              		.loc 1 272 3 view .LVU9
  57              	.L2:
  58              		.loc 1 272 9 is_stmt 0 view .LVU10
  59 0020 002A     		cmp	r2, #0
  60 0022 A1EB0200 		sub	r0, r1, r2
  61              	.LVL4:
  62              		.loc 1 272 9 is_stmt 1 view .LVU11
  63 0026 00DC     		bgt	.L3
 273:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w;
 274:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 275:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w  = *buf++;
 276:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *buf++ << 8;
 277:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *pmap++ = (stm32_usb_pma_t)w;
 278:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 279:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 280:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
  64              		.loc 1 280 1 is_stmt 0 view .LVU12
  65 0028 7047     		bx	lr
  66              	.L3:
  67              	.LBB111:
 273:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w;
  68              		.loc 1 273 5 is_stmt 1 view .LVU13
 275:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     w |= *buf++ << 8;
  69              		.loc 1 275 5 view .LVU14
  70              	.LVL5:
 276:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *pmap++ = (stm32_usb_pma_t)w;
  71              		.loc 1 276 5 view .LVU15
 277:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
  72              		.loc 1 277 5 view .LVU16
 276:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *pmap++ = (stm32_usb_pma_t)w;
  73              		.loc 1 276 7 is_stmt 0 view .LVU17
  74 002a 0088     		ldrh	r0, [r0]	@ unaligned
  75              	.LVL6:
 276:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *pmap++ = (stm32_usb_pma_t)w;
  76              		.loc 1 276 7 view .LVU18
  77 002c 43F8040B 		str	r0, [r3], #4
  78              	.LVL7:
 278:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
  79              		.loc 1 278 5 is_stmt 1 view .LVU19
 278:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
  80              		.loc 1 278 7 is_stmt 0 view .LVU20
  81 0030 023A     		subs	r2, r2, #2
  82              	.LVL8:
 278:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
  83              		.loc 1 278 7 view .LVU21
  84 0032 F5E7     		b	.L2
  85              	.L5:
  86              		.align	2
  87              	.L4:
  88 0034 005C0040 		.word	1073765376
  89              	.LBE111:
  90              		.cfi_endproc
  91              	.LFE281:
  93              		.section	.text.Vector16C,"ax",%progbits
  94              		.align	1
  95              		.global	Vector16C
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	Vector16C:
 102              	.LFB283:
 281:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 282:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 283:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Common ISR code, serves the EP-related interrupts.
 284:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 285:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 286:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 287:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 288:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 289:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 290:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** static void usb_serve_endpoints(USBDriver *usbp, uint32_t ep) {
 291:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 292:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t epr = STM32_USB->EPR[ep];
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   const USBEndpointConfig *epcp = usbp->epc[ep];
 294:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 295:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epr & EPR_CTR_TX) {
 296:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* IN endpoint, transmission.*/
 297:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     USBInEndpointState *isp = epcp->in_state;
 298:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_CLEAR_CTR_TX(ep);
 300:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     isp->txcnt += isp->txlast;
 302:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 303:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (n > 0) {
 304:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer not completed, there are more packets to send.*/
 305:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       if (n > epcp->in_maxsize)
 306:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         n = epcp->in_maxsize;
 307:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 308:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Writes the packet from the defined buffer.*/
 309:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txbuf += isp->txlast;
 310:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txlast = n;
 311:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       usb_packet_write_from_buffer(ep, isp->txbuf, n);
 312:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 313:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Starting IN operation.*/
 314:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       EPR_SET_STAT_TX(ep, EPR_STAT_TX_VALID);
 315:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 316:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 317:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer completed, invokes the callback.*/
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       _usb_isr_invoke_in_cb(usbp, ep);
 319:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 320:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 321:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epr & EPR_CTR_RX) {
 322:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* OUT endpoint, receive.*/
 323:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 324:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_CLEAR_CTR_RX(ep);
 325:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 326:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epr & EPR_SETUP) {
 327:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Setup packets handling, setup packets are handled using a
 328:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          specific callback.*/
 329:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       _usb_isr_invoke_setup_cb(usbp, ep);
 330:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 331:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 332:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       USBOutEndpointState *osp = epcp->out_state;
 333:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 334:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Reads the packet into the defined buffer.*/
 335:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       n = usb_packet_read_to_buffer(ep, osp->rxbuf);
 336:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxbuf += n;
 337:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 338:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transaction data updated.*/
 339:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxcnt  += n;
 340:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxsize -= n;
 341:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxpkts -= 1;
 342:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 343:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* The transaction is completed if the specified number of packets
 344:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          has been received or the current packet is a short packet.*/
 345:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       if ((n < epcp->out_maxsize) || (osp->rxpkts == 0)) {
 346:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer complete, invokes the callback.*/
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         _usb_isr_invoke_out_cb(usbp, ep);
 348:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 349:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       else {
 350:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer not complete, there are more packets to receive.*/
 351:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         EPR_SET_STAT_RX(ep, EPR_STAT_RX_VALID);
 352:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 353:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 354:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 355:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 356:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 357:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 358:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver interrupt handlers.                                                */
 359:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 360:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 361:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1 || defined(__DOXYGEN__)
 362:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB1_HP_NUMBER != STM32_USB1_LP_NUMBER
 363:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 364:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 365:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   USB high priority interrupt handler.
 366:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 367:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @isr
 368:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 369:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** OSAL_IRQ_HANDLER(STM32_USB1_HP_HANDLER) {
 370:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t istr;
 371:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBDriver *usbp = &USBD1;
 372:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 373:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_PROLOGUE();
 374:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 375:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Endpoint events handling.*/
 376:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   istr = STM32_USB->ISTR;
 377:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (istr & ISTR_CTR) {
 378:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_serve_endpoints(usbp, istr & ISTR_EP_ID_MASK);
 379:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     istr = STM32_USB->ISTR;
 380:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 381:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 382:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_EPILOGUE();
 383:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 384:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_ISOCHRONOUS */
 385:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB1_LP_NUMBER != STM32_USB1_HP_NUMBER */
 386:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 387:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 388:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   USB low priority interrupt handler.
 389:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 390:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @isr
 391:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 392:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** OSAL_IRQ_HANDLER(STM32_USB1_LP_HANDLER) {
 103              		.loc 1 392 41 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 393:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t istr;
 107              		.loc 1 393 3 view .LVU23
 394:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBDriver *usbp = &USBD1;
 108              		.loc 1 394 3 view .LVU24
 109              	.LVL9:
 395:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 396:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_PROLOGUE();
 110              		.loc 1 396 3 view .LVU25
 111              		.loc 1 396 3 view .LVU26
 112              		.loc 1 396 3 view .LVU27
 113              		.loc 1 396 3 view .LVU28
 114              		.loc 1 396 3 view .LVU29
 115              		.loc 1 396 22 view .LVU30
 397:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 398:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   istr = STM32_USB->ISTR;
 116              		.loc 1 398 3 view .LVU31
 392:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t istr;
 117              		.loc 1 392 41 is_stmt 0 view .LVU32
 118 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 119              		.cfi_def_cfa_offset 40
 120              		.cfi_offset 3, -40
 121              		.cfi_offset 4, -36
 122              		.cfi_offset 5, -32
 123              		.cfi_offset 6, -28
 124              		.cfi_offset 7, -24
 125              		.cfi_offset 8, -20
 126              		.cfi_offset 9, -16
 127              		.cfi_offset 10, -12
 128              		.cfi_offset 11, -8
 129              		.cfi_offset 14, -4
 130              		.loc 1 398 8 view .LVU33
 131 0004 894D     		ldr	r5, .L56
 132 0006 6C6C     		ldr	r4, [r5, #68]
 133              	.LVL10:
 399:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 400:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* USB bus reset condition handling.*/
 401:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_RESET) {
 134              		.loc 1 401 3 is_stmt 1 view .LVU34
 135              		.loc 1 401 6 is_stmt 0 view .LVU35
 136 0008 6705     		lsls	r7, r4, #21
 137 000a 05D5     		bpl	.L7
 402:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_RESET;
 138              		.loc 1 402 5 is_stmt 1 view .LVU36
 139              		.loc 1 402 21 is_stmt 0 view .LVU37
 140 000c 6FF48063 		mvn	r3, #1024
 403:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 404:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     _usb_reset(usbp);
 141              		.loc 1 404 5 view .LVU38
 142 0010 8748     		ldr	r0, .L56+4
 402:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_RESET;
 143              		.loc 1 402 21 view .LVU39
 144 0012 6B64     		str	r3, [r5, #68]
 145              		.loc 1 404 5 is_stmt 1 view .LVU40
 146 0014 FFF7FEFF 		bl	_usb_reset
 147              	.LVL11:
 148              	.L7:
 405:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 406:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 407:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* USB bus SUSPEND condition handling.*/
 408:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_SUSP) {
 149              		.loc 1 408 3 view .LVU41
 150              		.loc 1 408 6 is_stmt 0 view .LVU42
 151 0018 2605     		lsls	r6, r4, #20
 152 001a 09D5     		bpl	.L8
 409:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->CNTR |= CNTR_FSUSP;
 153              		.loc 1 409 5 is_stmt 1 view .LVU43
 154              		.loc 1 409 21 is_stmt 0 view .LVU44
 155 001c 2B6C     		ldr	r3, [r5, #64]
 410:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_LOW_POWER_ON_SUSPEND
 411:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->CNTR |= CNTR_LP_MODE;
 412:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 413:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_SUSP;
 414:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 415:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     _usb_suspend(usbp);
 156              		.loc 1 415 5 view .LVU45
 157 001e 8448     		ldr	r0, .L56+4
 409:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->CNTR |= CNTR_FSUSP;
 158              		.loc 1 409 21 view .LVU46
 159 0020 43F00803 		orr	r3, r3, #8
 160 0024 2B64     		str	r3, [r5, #64]
 413:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 161              		.loc 1 413 5 is_stmt 1 view .LVU47
 413:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 162              		.loc 1 413 21 is_stmt 0 view .LVU48
 163 0026 6FF40063 		mvn	r3, #2048
 164 002a 6B64     		str	r3, [r5, #68]
 165              		.loc 1 415 5 is_stmt 1 view .LVU49
 166 002c FFF7FEFF 		bl	_usb_suspend
 167              	.LVL12:
 168              	.L8:
 416:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 417:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 418:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* USB bus WAKEUP condition handling.*/
 419:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_WKUP) {
 169              		.loc 1 419 3 view .LVU50
 170              		.loc 1 419 6 is_stmt 0 view .LVU51
 171 0030 E004     		lsls	r0, r4, #19
 172 0032 0DD5     		bpl	.L9
 173              	.LBB150:
 420:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t fnr = STM32_USB->FNR;
 174              		.loc 1 420 5 is_stmt 1 view .LVU52
 175              		.loc 1 420 14 is_stmt 0 view .LVU53
 176 0034 7D4D     		ldr	r5, .L56
 177 0036 AB6C     		ldr	r3, [r5, #72]
 178              	.LVL13:
 421:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (!(fnr & FNR_RXDP)) {
 179              		.loc 1 421 5 is_stmt 1 view .LVU54
 180              		.loc 1 421 8 is_stmt 0 view .LVU55
 181 0038 1904     		lsls	r1, r3, #16
 182 003a 06D4     		bmi	.L10
 422:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR &= ~CNTR_FSUSP;
 183              		.loc 1 422 7 is_stmt 1 view .LVU56
 184              		.loc 1 422 23 is_stmt 0 view .LVU57
 185 003c 2B6C     		ldr	r3, [r5, #64]
 186              	.LVL14:
 423:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 424:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       _usb_wakeup(usbp);
 187              		.loc 1 424 7 view .LVU58
 188 003e 7C48     		ldr	r0, .L56+4
 422:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR &= ~CNTR_FSUSP;
 189              		.loc 1 422 23 view .LVU59
 190 0040 23F00803 		bic	r3, r3, #8
 191 0044 2B64     		str	r3, [r5, #64]
 192              		.loc 1 424 7 is_stmt 1 view .LVU60
 193 0046 FFF7FEFF 		bl	_usb_wakeup
 194              	.LVL15:
 195              	.L10:
 425:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 426:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_LOW_POWER_ON_SUSPEND
 427:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 428:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Just noise, going back in SUSPEND mode, reference manual 22.4.5,
 429:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          table 169.*/
 430:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR |= CNTR_LP_MODE;
 431:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 432:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 433:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_WKUP;
 196              		.loc 1 433 5 view .LVU61
 197              		.loc 1 433 21 is_stmt 0 view .LVU62
 198 004a 6FF48053 		mvn	r3, #4096
 199 004e 6B64     		str	r3, [r5, #68]
 200              	.L9:
 201              		.loc 1 433 21 view .LVU63
 202              	.LBE150:
 434:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 435:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 436:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* SOF handling.*/
 437:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (istr & ISTR_SOF) {
 203              		.loc 1 437 3 is_stmt 1 view .LVU64
 204              		.loc 1 437 6 is_stmt 0 view .LVU65
 205 0050 A205     		lsls	r2, r4, #22
 206 0052 08D5     		bpl	.L11
 438:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     _usb_isr_invoke_sof_cb(usbp);
 207              		.loc 1 438 5 is_stmt 1 view .LVU66
 208 0054 7648     		ldr	r0, .L56+4
 209 0056 4368     		ldr	r3, [r0, #4]
 210 0058 DB68     		ldr	r3, [r3, #12]
 211 005a 03B1     		cbz	r3, .L12
 212              		.loc 1 438 5 discriminator 1 view .LVU67
 213 005c 9847     		blx	r3
 214              	.LVL16:
 215              	.L12:
 216              		.loc 1 438 33 discriminator 3 view .LVU68
 439:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     STM32_USB->ISTR = ~ISTR_SOF;
 217              		.loc 1 439 5 discriminator 3 view .LVU69
 218              		.loc 1 439 21 is_stmt 0 discriminator 3 view .LVU70
 219 005e 734B     		ldr	r3, .L56
 220 0060 6FF40072 		mvn	r2, #512
 221 0064 5A64     		str	r2, [r3, #68]
 222              	.L11:
 223              	.LBB151:
 224              	.LBB152:
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 225              		.loc 1 293 28 view .LVU71
 226 0066 724D     		ldr	r5, .L56+4
 227              	.LBB153:
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 228              		.loc 1 299 5 view .LVU72
 229 0068 724E     		ldr	r6, .L56+8
 230              	.L13:
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 231              		.loc 1 299 5 view .LVU73
 232              	.LBE153:
 233              	.LBE152:
 234              	.LBE151:
 440:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 441:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 442:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Endpoint events handling.*/
 443:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   while (istr & ISTR_CTR) {
 235              		.loc 1 443 9 is_stmt 1 view .LVU74
 236 006a 2304     		lsls	r3, r4, #16
 237 006c 03D4     		bmi	.L25
 444:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_serve_endpoints(usbp, istr & ISTR_EP_ID_MASK);
 445:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     istr = STM32_USB->ISTR;
 446:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 447:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 448:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   OSAL_IRQ_EPILOGUE();
 238              		.loc 1 448 3 view .LVU75
 239              		.loc 1 448 3 view .LVU76
 240              		.loc 1 448 3 view .LVU77
 241              		.loc 1 448 3 view .LVU78
 242              		.loc 1 448 3 view .LVU79
 449:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 243              		.loc 1 449 1 is_stmt 0 view .LVU80
 244 006e BDE8F84F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 245              		.cfi_remember_state
 246              		.cfi_restore 14
 247              		.cfi_restore 11
 248              		.cfi_restore 10
 249              		.cfi_restore 9
 250              		.cfi_restore 8
 251              		.cfi_restore 7
 252              		.cfi_restore 6
 253              		.cfi_restore 5
 254              		.cfi_restore 4
 255              		.cfi_restore 3
 256              		.cfi_def_cfa_offset 0
 257              	.LVL17:
 448:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 258              		.loc 1 448 3 view .LVU81
 259 0072 FFF7FEBF 		b	_port_irq_epilogue
 260              	.LVL18:
 261              	.L25:
 262              		.cfi_restore_state
 444:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_serve_endpoints(usbp, istr & ISTR_EP_ID_MASK);
 263              		.loc 1 444 5 is_stmt 1 view .LVU82
 264 0076 04F00F04 		and	r4, r4, #15
 265              	.LVL19:
 266              	.LBB279:
 267              	.LBI151:
 290:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 268              		.loc 1 290 13 view .LVU83
 269              	.LBB261:
 291:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t epr = STM32_USB->EPR[ep];
 270              		.loc 1 291 3 view .LVU84
 292:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   const USBEndpointConfig *epcp = usbp->epc[ep];
 271              		.loc 1 292 3 view .LVU85
 272 007a A700     		lsls	r7, r4, #2
 273 007c 07F18047 		add	r7, r7, #1073741824
 274 0080 07F5B847 		add	r7, r7, #23552
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 275              		.loc 1 293 28 is_stmt 0 view .LVU86
 276 0084 04F10209 		add	r9, r4, #2
 292:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   const USBEndpointConfig *epcp = usbp->epc[ep];
 277              		.loc 1 292 12 view .LVU87
 278 0088 D7F800A0 		ldr	r10, [r7]
 279              	.LVL20:
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 280              		.loc 1 293 3 is_stmt 1 view .LVU88
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 281              		.loc 1 293 28 is_stmt 0 view .LVU89
 282 008c 05EB8903 		add	r3, r5, r9, lsl #2
 295:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* IN endpoint, transmission.*/
 283              		.loc 1 295 6 view .LVU90
 284 0090 1AF0800F 		tst	r10, #128
 293:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 285              		.loc 1 293 28 view .LVU91
 286 0094 D3F80480 		ldr	r8, [r3, #4]
 287              	.LVL21:
 295:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* IN endpoint, transmission.*/
 288              		.loc 1 295 3 is_stmt 1 view .LVU92
 295:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* IN endpoint, transmission.*/
 289              		.loc 1 295 6 is_stmt 0 view .LVU93
 290 0098 25D0     		beq	.L14
 291              	.LBB195:
 297:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 292              		.loc 1 297 5 is_stmt 1 view .LVU94
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 293              		.loc 1 299 5 is_stmt 0 view .LVU95
 294 009a 3A68     		ldr	r2, [r7]
 297:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 295              		.loc 1 297 25 view .LVU96
 296 009c D8F81430 		ldr	r3, [r8, #20]
 297              	.LVL22:
 299:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 298              		.loc 1 299 5 is_stmt 1 view .LVU97
 299 00a0 3240     		ands	r2, r2, r6
 300 00a2 42F40042 		orr	r2, r2, #32768
 301 00a6 3A60     		str	r2, [r7]
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 302              		.loc 1 301 5 view .LVU98
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 303              		.loc 1 301 22 is_stmt 0 view .LVU99
 304 00a8 1969     		ldr	r1, [r3, #16]
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 305              		.loc 1 301 16 view .LVU100
 306 00aa 5A68     		ldr	r2, [r3, #4]
 302:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (n > 0) {
 307              		.loc 1 302 7 view .LVU101
 308 00ac 1868     		ldr	r0, [r3]
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 309              		.loc 1 301 16 view .LVU102
 310 00ae 0A44     		add	r2, r2, r1
 303:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer not completed, there are more packets to send.*/
 311              		.loc 1 303 8 view .LVU103
 312 00b0 801A     		subs	r0, r0, r2
 301:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = isp->txsize - isp->txcnt;
 313              		.loc 1 301 16 view .LVU104
 314 00b2 5A60     		str	r2, [r3, #4]
 302:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (n > 0) {
 315              		.loc 1 302 5 is_stmt 1 view .LVU105
 316              	.LVL23:
 303:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer not completed, there are more packets to send.*/
 317              		.loc 1 303 5 view .LVU106
 303:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Transfer not completed, there are more packets to send.*/
 318              		.loc 1 303 8 is_stmt 0 view .LVU107
 319 00b4 2DD0     		beq	.L15
 305:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         n = epcp->in_maxsize;
 320              		.loc 1 305 7 is_stmt 1 view .LVU108
 305:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         n = epcp->in_maxsize;
 321              		.loc 1 305 19 is_stmt 0 view .LVU109
 322 00b6 B8F81020 		ldrh	r2, [r8, #16]
 323 00ba 8242     		cmp	r2, r0
 324 00bc 28BF     		it	cs
 325 00be 0246     		movcs	r2, r0
 326              	.LVL24:
 309:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txlast = n;
 327              		.loc 1 309 7 is_stmt 1 view .LVU110
 309:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txlast = n;
 328              		.loc 1 309 18 is_stmt 0 view .LVU111
 329 00c0 9868     		ldr	r0, [r3, #8]
 310:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       usb_packet_write_from_buffer(ep, isp->txbuf, n);
 330              		.loc 1 310 19 view .LVU112
 331 00c2 1A61     		str	r2, [r3, #16]
 309:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       isp->txlast = n;
 332              		.loc 1 309 18 view .LVU113
 333 00c4 0144     		add	r1, r1, r0
 334 00c6 9960     		str	r1, [r3, #8]
 310:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       usb_packet_write_from_buffer(ep, isp->txbuf, n);
 335              		.loc 1 310 7 is_stmt 1 view .LVU114
 311:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 336              		.loc 1 311 7 view .LVU115
 337 00c8 2046     		mov	r0, r4
 338 00ca FFF7FEFF 		bl	usb_packet_write_from_buffer
 339              	.LVL25:
 314:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 340              		.loc 1 314 7 view .LVU116
 341 00ce 3B68     		ldr	r3, [r7]
 342 00d0 23F4F043 		bic	r3, r3, #30720
 343 00d4 23F04003 		bic	r3, r3, #64
 344 00d8 83F03003 		eor	r3, r3, #48
 345 00dc 43F40043 		orr	r3, r3, #32768
 346 00e0 43F08003 		orr	r3, r3, #128
 347 00e4 3B60     		str	r3, [r7]
 348              	.L14:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 349              		.loc 1 318 38 view .LVU117
 350              	.LBE195:
 321:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* OUT endpoint, receive.*/
 351              		.loc 1 321 3 view .LVU118
 321:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* OUT endpoint, receive.*/
 352              		.loc 1 321 6 is_stmt 0 view .LVU119
 353 00e6 1AF4004F 		tst	r10, #32768
 354 00ea 0FD0     		beq	.L17
 324:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 355              		.loc 1 324 5 is_stmt 1 view .LVU120
 356 00ec 3B68     		ldr	r3, [r7]
 357 00ee 3340     		ands	r3, r3, r6
 358 00f0 43F08003 		orr	r3, r3, #128
 326:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Setup packets handling, setup packets are handled using a
 359              		.loc 1 326 8 is_stmt 0 view .LVU121
 360 00f4 1AF4006F 		tst	r10, #2048
 324:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 361              		.loc 1 324 5 view .LVU122
 362 00f8 3B60     		str	r3, [r7]
 326:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Setup packets handling, setup packets are handled using a
 363              		.loc 1 326 5 is_stmt 1 view .LVU123
 364              	.LBB196:
 311:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 365              		.loc 1 311 7 is_stmt 0 view .LVU124
 366 00fa E1B2     		uxtb	r1, r4
 367              	.LBE196:
 326:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Setup packets handling, setup packets are handled using a
 368              		.loc 1 326 8 view .LVU125
 369 00fc 25D0     		beq	.L18
 329:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 370              		.loc 1 329 7 is_stmt 1 view .LVU126
 371 00fe 05EB8909 		add	r9, r5, r9, lsl #2
 372 0102 2846     		mov	r0, r5
 373 0104 D9F80430 		ldr	r3, [r9, #4]
 374 0108 5B68     		ldr	r3, [r3, #4]
 375 010a 9847     		blx	r3
 376              	.LVL26:
 329:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 377              		.loc 1 329 41 view .LVU127
 378              	.L17:
 329:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 379              		.loc 1 329 41 is_stmt 0 view .LVU128
 380              	.LBE261:
 381              	.LBE279:
 445:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 382              		.loc 1 445 5 is_stmt 1 view .LVU129
 445:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 383              		.loc 1 445 10 is_stmt 0 view .LVU130
 384 010c 474B     		ldr	r3, .L56
 385 010e 5C6C     		ldr	r4, [r3, #68]
 386              	.LVL27:
 445:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 387              		.loc 1 445 10 view .LVU131
 388 0110 ABE7     		b	.L13
 389              	.LVL28:
 390              	.L15:
 391              	.LBB280:
 392              	.LBB262:
 393              	.LBB197:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 394              		.loc 1 318 7 is_stmt 1 view .LVU132
 395 0112 0123     		movs	r3, #1
 396              	.LVL29:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 397              		.loc 1 318 7 is_stmt 0 view .LVU133
 398 0114 03FA04F2 		lsl	r2, r3, r4
 399 0118 2B89     		ldrh	r3, [r5, #8]
 400 011a 23EA0203 		bic	r3, r3, r2
 401 011e 2B81     		strh	r3, [r5, #8]	@ movhi
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 402              		.loc 1 318 7 is_stmt 1 view .LVU134
 403 0120 D8F80830 		ldr	r3, [r8, #8]
 404 0124 13B1     		cbz	r3, .L16
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 405              		.loc 1 318 7 view .LVU135
 406 0126 2146     		mov	r1, r4
 407 0128 2846     		mov	r0, r5
 408 012a 9847     		blx	r3
 409              	.LVL30:
 410              	.L16:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 411              		.loc 1 318 7 view .LVU136
 412              	.LBB154:
 413              	.LBI154:
 414              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 415              		.loc 2 531 20 view .LVU137
 416              	.LBE154:
 417              	.LBE197:
 418              	.LBE262:
 419              	.LBE280:
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 420              		.loc 2 533 3 view .LVU138
 421              	.LBB281:
 422              	.LBB263:
 423              	.LBB198:
 424              	.LBB166:
 425              	.LBB155:
 426              	.LBI155:
 427              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 428              		.loc 3 393 20 view .LVU139
 429              	.LBE155:
 430              	.LBE166:
 431              	.LBE198:
 432              	.LBE263:
 433              	.LBE281:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 434              		.loc 3 395 3 view .LVU140
 435              	.LBB282:
 436              	.LBB264:
 437              	.LBB199:
 438              	.LBB167:
 439              	.LBB163:
 440              	.LBB156:
 441              	.LBI156:
 442              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock_from_isr(void) {
 443              		.loc 4 708 27 view .LVU141
 444              	.LBE156:
 445              	.LBE163:
 446              	.LBE167:
 447              	.LBE199:
 448              	.LBE264:
 449              	.LBE282:
 709:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
 450              		.loc 4 710 3 view .LVU142
 451              	.LBB283:
 452              	.LBB265:
 453              	.LBB200:
 454              	.LBB168:
 455              	.LBB164:
 456              	.LBB161:
 457              	.LBB157:
 458              	.LBI157:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 459              		.loc 4 669 27 view .LVU143
 460              	.LBE157:
 461              	.LBE161:
 462              	.LBE164:
 463              	.LBE168:
 464              	.LBE200:
 465              	.LBE265:
 466              	.LBE283:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 467              		.loc 4 677 3 view .LVU144
 468              	.LBB284:
 469              	.LBB266:
 470              	.LBB201:
 471              	.LBB169:
 472              	.LBB165:
 473              	.LBB162:
 474              	.LBB160:
 475              	.LBB158:
 476              	.LBI158:
 477              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 478              		.loc 5 491 27 view .LVU145
 479              	.LBB159:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 480              		.loc 5 493 3 view .LVU146
 481 012c 2023     		movs	r3, #32
 482              		.syntax unified
 483              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 484 012e 83F31188 		MSR basepri, r3
 485              	@ 0 "" 2
 486              	.LVL31:
 487              		.loc 5 493 3 is_stmt 0 view .LVU147
 488              		.thumb
 489              		.syntax unified
 490              	.LBE159:
 491              	.LBE158:
 492              	.LBE160:
 493              	.LBE162:
 494              	.LBE165:
 495              	.LBE169:
 496              	.LBE201:
 497              	.LBE266:
 498              	.LBE284:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 499              		.loc 3 396 34 is_stmt 1 view .LVU148
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 500              		.loc 3 397 29 view .LVU149
 501              	.LBB285:
 502              	.LBB267:
 503              	.LBB202:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 504              		.loc 1 318 7 view .LVU150
 505              	.LBB170:
 506              	.LBI170:
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 507              		.loc 2 773 20 view .LVU151
 508              	.LBB171:
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 509              		.loc 2 775 3 view .LVU152
 510              	.LBE171:
 511              	.LBE170:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 512              		.loc 1 318 7 is_stmt 0 view .LVU153
 513 0132 05EB8903 		add	r3, r5, r9, lsl #2
 514              	.LBB174:
 515              	.LBB172:
 516              		.loc 2 775 3 view .LVU154
 517 0136 0021     		movs	r1, #0
 518              	.LBE172:
 519              	.LBE174:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 520              		.loc 1 318 7 view .LVU155
 521 0138 5B68     		ldr	r3, [r3, #4]
 522 013a 5869     		ldr	r0, [r3, #20]
 523              	.LBB175:
 524              	.LBB173:
 525              		.loc 2 775 3 view .LVU156
 526 013c 0C30     		adds	r0, r0, #12
 527 013e FFF7FEFF 		bl	chThdResumeI
 528              	.LVL32:
 529              		.loc 2 775 3 view .LVU157
 530              	.LBE173:
 531              	.LBE175:
 318:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 532              		.loc 1 318 7 is_stmt 1 view .LVU158
 533              	.LBB176:
 534              	.LBI176:
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 535              		.loc 2 542 20 view .LVU159
 536              	.LBB177:
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 537              		.loc 2 544 3 view .LVU160
 538              	.LBB178:
 539              	.LBI178:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 540              		.loc 3 413 20 view .LVU161
 541              	.LBE178:
 542              	.LBE177:
 543              	.LBE176:
 544              	.LBE202:
 545              	.LBE267:
 546              	.LBE285:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 547              		.loc 3 415 31 view .LVU162
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 548              		.loc 3 416 33 view .LVU163
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 549              		.loc 3 417 3 view .LVU164
 550              	.LBB286:
 551              	.LBB268:
 552              	.LBB203:
 553              	.LBB192:
 554              	.LBB189:
 555              	.LBB186:
 556              	.LBB179:
 557              	.LBI179:
 711:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 712:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 713:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 714:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 715:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 716:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 717:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 718:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock_from_isr(void) {
 558              		.loc 4 719 27 view .LVU165
 559              	.LBE179:
 560              	.LBE186:
 561              	.LBE189:
 562              	.LBE192:
 563              	.LBE203:
 564              	.LBE268:
 565              	.LBE286:
 720:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 721:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 566              		.loc 4 721 3 view .LVU166
 567              	.LBB287:
 568              	.LBB269:
 569              	.LBB204:
 570              	.LBB193:
 571              	.LBB190:
 572              	.LBB187:
 573              	.LBB184:
 574              	.LBB180:
 575              	.LBI180:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 576              		.loc 4 693 27 view .LVU167
 577              	.LBE180:
 578              	.LBE184:
 579              	.LBE187:
 580              	.LBE190:
 581              	.LBE193:
 582              	.LBE204:
 583              	.LBE269:
 584              	.LBE287:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 585              		.loc 4 696 3 view .LVU168
 586              	.LBB288:
 587              	.LBB270:
 588              	.LBB205:
 589              	.LBB194:
 590              	.LBB191:
 591              	.LBB188:
 592              	.LBB185:
 593              	.LBB183:
 594              	.LBB181:
 595              	.LBI181:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 596              		.loc 5 491 27 view .LVU169
 597              	.LBB182:
 598              		.loc 5 493 3 view .LVU170
 599 0142 0023     		movs	r3, #0
 600              		.syntax unified
 601              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 602 0144 83F31188 		MSR basepri, r3
 603              	@ 0 "" 2
 604              	.LVL33:
 605              		.loc 5 493 3 is_stmt 0 view .LVU171
 606              		.thumb
 607              		.syntax unified
 608              	.LBE182:
 609              	.LBE181:
 610              	.LBE183:
 611              	.LBE185:
 612              	.LBE188:
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 613              		.loc 2 545 1 view .LVU172
 614 0148 CDE7     		b	.L14
 615              	.L18:
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 616              		.loc 2 545 1 view .LVU173
 617              	.LBE191:
 618              	.LBE194:
 619              	.LBE205:
 620              	.LBB206:
 332:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 621              		.loc 1 332 7 is_stmt 1 view .LVU174
 622              	.LBB207:
 623              	.LBB208:
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 624              		.loc 1 132 33 is_stmt 0 view .LVU175
 625 014a 384B     		ldr	r3, .L56
 626              	.LBE208:
 627              	.LBE207:
 332:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 628              		.loc 1 332 28 view .LVU176
 629 014c D8F81820 		ldr	r2, [r8, #24]
 630              	.LVL34:
 335:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxbuf += n;
 631              		.loc 1 335 7 is_stmt 1 view .LVU177
 632              	.LBB213:
 633              	.LBB210:
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 634              		.loc 1 132 33 is_stmt 0 view .LVU178
 635 0150 1B6D     		ldr	r3, [r3, #80]
 636              	.LBE210:
 637              	.LBE213:
 335:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxbuf += n;
 638              		.loc 1 335 11 view .LVU179
 639 0152 D2F808C0 		ldr	ip, [r2, #8]
 640              	.LVL35:
 641              	.LBB214:
 642              	.LBI207:
 130:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t i, n;
 643              		.loc 1 130 15 is_stmt 1 view .LVU180
 644              	.LBB211:
 131:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *udp = USB_GET_DESCRIPTOR(ep);
 645              		.loc 1 131 3 view .LVU181
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 646              		.loc 1 132 3 view .LVU182
 132:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap = USB_ADDR2PTR(udp->RXADDR0);
 647              		.loc 1 132 33 is_stmt 0 view .LVU183
 648 0156 03F18043 		add	r3, r3, #1073741824
 649 015a 03F5C043 		add	r3, r3, #24576
 650 015e 03EB0410 		add	r0, r3, r4, lsl #4
 651              	.LVL36:
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 652              		.loc 1 133 3 is_stmt 1 view .LVU184
 653 0162 E146     		mov	r9, ip
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 654              		.loc 1 133 27 is_stmt 0 view .LVU185
 655 0164 8368     		ldr	r3, [r0, #8]
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 656              		.loc 1 149 18 view .LVU186
 657 0166 D0F80CE0 		ldr	lr, [r0, #12]
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 658              		.loc 1 133 27 view .LVU187
 659 016a 03F10053 		add	r3, r3, #536870912
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 660              		.loc 1 149 5 view .LVU188
 661 016e CEF30900 		ubfx	r0, lr, #0, #10
 662              	.LVL37:
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 663              		.loc 1 149 5 view .LVU189
 664 0172 CEF3480E 		ubfx	lr, lr, #1, #9
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 665              		.loc 1 133 27 view .LVU190
 666 0176 03F54053 		add	r3, r3, #12288
 667              	.LVL38:
 149:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 668              		.loc 1 149 3 is_stmt 1 view .LVU191
 152:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 669              		.loc 1 152 3 view .LVU192
 189:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w = *pmap++;
 670              		.loc 1 189 3 view .LVU193
 671 017a 4FEA8E0A 		lsl	r10, lr, #2
 672              	.LVL39:
 189:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w = *pmap++;
 673              		.loc 1 189 3 is_stmt 0 view .LVU194
 674 017e 0AEB430A 		add	r10, r10, r3, lsl #1
 133:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 675              		.loc 1 133 20 view .LVU195
 676 0182 5B00     		lsls	r3, r3, #1
 677              	.LVL40:
 678              	.L19:
 189:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w = *pmap++;
 679              		.loc 1 189 9 is_stmt 1 view .LVU196
 680 0184 5345     		cmp	r3, r10
 681 0186 09F10209 		add	r9, r9, #2
 682              	.LVL41:
 189:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint32_t w = *pmap++;
 683              		.loc 1 189 9 is_stmt 0 view .LVU197
 684 018a 39D1     		bne	.L20
 196:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf = (uint8_t)*pmap;
 685              		.loc 1 196 3 is_stmt 1 view .LVU198
 196:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf = (uint8_t)*pmap;
 686              		.loc 1 196 6 is_stmt 0 view .LVU199
 687 018c 6FF00109 		mvn	r9, #1
 688              	.LVL42:
 196:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf = (uint8_t)*pmap;
 689              		.loc 1 196 6 view .LVU200
 690 0190 09FB0E09 		mla	r9, r9, lr, r0
 691 0194 B9F1000F 		cmp	r9, #0
 692 0198 02D0     		beq	.L21
 197:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 693              		.loc 1 197 5 is_stmt 1 view .LVU201
 197:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 694              		.loc 1 197 12 is_stmt 0 view .LVU202
 695 019a 1B68     		ldr	r3, [r3]
 696              	.LVL43:
 197:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 697              		.loc 1 197 12 view .LVU203
 698 019c 0CF81E30 		strb	r3, [ip, lr, lsl #1]
 699              	.L21:
 200:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 700              		.loc 1 200 3 is_stmt 1 view .LVU204
 701              	.LVL44:
 200:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 702              		.loc 1 200 3 is_stmt 0 view .LVU205
 703              	.LBE211:
 704              	.LBE214:
 336:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 705              		.loc 1 336 7 is_stmt 1 view .LVU206
 336:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 706              		.loc 1 336 18 is_stmt 0 view .LVU207
 707 01a0 9368     		ldr	r3, [r2, #8]
 708 01a2 0344     		add	r3, r3, r0
 709 01a4 9360     		str	r3, [r2, #8]
 339:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxsize -= n;
 710              		.loc 1 339 7 is_stmt 1 view .LVU208
 339:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxsize -= n;
 711              		.loc 1 339 19 is_stmt 0 view .LVU209
 712 01a6 5368     		ldr	r3, [r2, #4]
 713 01a8 0344     		add	r3, r3, r0
 714 01aa 5360     		str	r3, [r2, #4]
 340:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxpkts -= 1;
 715              		.loc 1 340 7 is_stmt 1 view .LVU210
 340:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       osp->rxpkts -= 1;
 716              		.loc 1 340 19 is_stmt 0 view .LVU211
 717 01ac 1368     		ldr	r3, [r2]
 718 01ae 1B1A     		subs	r3, r3, r0
 719 01b0 1360     		str	r3, [r2]
 341:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 720              		.loc 1 341 7 is_stmt 1 view .LVU212
 341:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 721              		.loc 1 341 19 is_stmt 0 view .LVU213
 722 01b2 138A     		ldrh	r3, [r2, #16]
 723 01b4 013B     		subs	r3, r3, #1
 724 01b6 9BB2     		uxth	r3, r3
 725 01b8 1382     		strh	r3, [r2, #16]	@ movhi
 345:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer complete, invokes the callback.*/
 726              		.loc 1 345 7 is_stmt 1 view .LVU214
 345:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer complete, invokes the callback.*/
 727              		.loc 1 345 20 is_stmt 0 view .LVU215
 728 01ba B8F81220 		ldrh	r2, [r8, #18]
 729              	.LVL45:
 345:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer complete, invokes the callback.*/
 730              		.loc 1 345 10 view .LVU216
 731 01be 8242     		cmp	r2, r0
 732 01c0 00D8     		bhi	.L22
 345:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****         /* Transfer complete, invokes the callback.*/
 733              		.loc 1 345 35 view .LVU217
 734 01c2 33BB     		cbnz	r3, .L23
 735              	.L22:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 736              		.loc 1 347 9 is_stmt 1 view .LVU218
 737 01c4 0123     		movs	r3, #1
 738 01c6 03FA04F2 		lsl	r2, r3, r4
 739 01ca 6B89     		ldrh	r3, [r5, #10]
 740 01cc 0234     		adds	r4, r4, #2
 741              	.LVL46:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 742              		.loc 1 347 9 is_stmt 0 view .LVU219
 743 01ce 23EA0203 		bic	r3, r3, r2
 744 01d2 6B81     		strh	r3, [r5, #10]	@ movhi
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 745              		.loc 1 347 9 is_stmt 1 view .LVU220
 746 01d4 05EB8403 		add	r3, r5, r4, lsl #2
 747 01d8 5B68     		ldr	r3, [r3, #4]
 748 01da DB68     		ldr	r3, [r3, #12]
 749 01dc 0BB1     		cbz	r3, .L24
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 750              		.loc 1 347 9 view .LVU221
 751 01de 2846     		mov	r0, r5
 752              	.LVL47:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 753              		.loc 1 347 9 is_stmt 0 view .LVU222
 754 01e0 9847     		blx	r3
 755              	.LVL48:
 756              	.L24:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 757              		.loc 1 347 9 is_stmt 1 view .LVU223
 758              	.LBB215:
 759              	.LBI215:
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 760              		.loc 2 531 20 view .LVU224
 761              	.LBE215:
 762              	.LBE206:
 763              	.LBE270:
 764              	.LBE288:
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 765              		.loc 2 533 3 view .LVU225
 766              	.LBB289:
 767              	.LBB271:
 768              	.LBB253:
 769              	.LBB227:
 770              	.LBB216:
 771              	.LBI216:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 772              		.loc 3 393 20 view .LVU226
 773              	.LBE216:
 774              	.LBE227:
 775              	.LBE253:
 776              	.LBE271:
 777              	.LBE289:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 778              		.loc 3 395 3 view .LVU227
 779              	.LBB290:
 780              	.LBB272:
 781              	.LBB254:
 782              	.LBB228:
 783              	.LBB224:
 784              	.LBB217:
 785              	.LBI217:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 786              		.loc 4 708 27 view .LVU228
 787              	.LBE217:
 788              	.LBE224:
 789              	.LBE228:
 790              	.LBE254:
 791              	.LBE272:
 792              	.LBE290:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 793              		.loc 4 710 3 view .LVU229
 794              	.LBB291:
 795              	.LBB273:
 796              	.LBB255:
 797              	.LBB229:
 798              	.LBB225:
 799              	.LBB222:
 800              	.LBB218:
 801              	.LBI218:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 802              		.loc 4 669 27 view .LVU230
 803              	.LBE218:
 804              	.LBE222:
 805              	.LBE225:
 806              	.LBE229:
 807              	.LBE255:
 808              	.LBE273:
 809              	.LBE291:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 810              		.loc 4 677 3 view .LVU231
 811              	.LBB292:
 812              	.LBB274:
 813              	.LBB256:
 814              	.LBB230:
 815              	.LBB226:
 816              	.LBB223:
 817              	.LBB221:
 818              	.LBB219:
 819              	.LBI219:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 820              		.loc 5 491 27 view .LVU232
 821              	.LBB220:
 822              		.loc 5 493 3 view .LVU233
 823 01e2 2023     		movs	r3, #32
 824              		.syntax unified
 825              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 826 01e4 83F31188 		MSR basepri, r3
 827              	@ 0 "" 2
 828              	.LVL49:
 829              		.loc 5 493 3 is_stmt 0 view .LVU234
 830              		.thumb
 831              		.syntax unified
 832              	.LBE220:
 833              	.LBE219:
 834              	.LBE221:
 835              	.LBE223:
 836              	.LBE226:
 837              	.LBE230:
 838              	.LBE256:
 839              	.LBE274:
 840              	.LBE292:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 841              		.loc 3 396 34 is_stmt 1 view .LVU235
 397:./lib/chibios/os/rt/include/chsys.h **** }
 842              		.loc 3 397 29 view .LVU236
 843              	.LBB293:
 844              	.LBB275:
 845              	.LBB257:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 846              		.loc 1 347 9 view .LVU237
 847 01e8 05EB8404 		add	r4, r5, r4, lsl #2
 848              	.LVL50:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 849              		.loc 1 347 9 is_stmt 0 view .LVU238
 850 01ec 6368     		ldr	r3, [r4, #4]
 851 01ee 9869     		ldr	r0, [r3, #24]
 852              	.LVL51:
 853              	.LBB231:
 854              	.LBI231:
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 855              		.loc 2 773 20 is_stmt 1 view .LVU239
 856              	.LBB232:
 857              		.loc 2 775 3 view .LVU240
 858 01f0 4168     		ldr	r1, [r0, #4]
 859 01f2 0C30     		adds	r0, r0, #12
 860              	.LVL52:
 861              		.loc 2 775 3 is_stmt 0 view .LVU241
 862 01f4 FFF7FEFF 		bl	chThdResumeI
 863              	.LVL53:
 864              		.loc 2 775 3 view .LVU242
 865              	.LBE232:
 866              	.LBE231:
 347:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 867              		.loc 1 347 9 is_stmt 1 view .LVU243
 868              	.LBB233:
 869              	.LBI233:
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 870              		.loc 2 542 20 view .LVU244
 871              	.LBB234:
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 872              		.loc 2 544 3 view .LVU245
 873              	.LBB235:
 874              	.LBI235:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 875              		.loc 3 413 20 view .LVU246
 876              	.LBE235:
 877              	.LBE234:
 878              	.LBE233:
 879              	.LBE257:
 880              	.LBE275:
 881              	.LBE293:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 882              		.loc 3 415 31 view .LVU247
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 883              		.loc 3 416 33 view .LVU248
 884              		.loc 3 417 3 view .LVU249
 885              	.LBB294:
 886              	.LBB276:
 887              	.LBB258:
 888              	.LBB249:
 889              	.LBB246:
 890              	.LBB243:
 891              	.LBB236:
 892              	.LBI236:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 893              		.loc 4 719 27 view .LVU250
 894              	.LBE236:
 895              	.LBE243:
 896              	.LBE246:
 897              	.LBE249:
 898              	.LBE258:
 899              	.LBE276:
 900              	.LBE294:
 901              		.loc 4 721 3 view .LVU251
 902              	.LBB295:
 903              	.LBB277:
 904              	.LBB259:
 905              	.LBB250:
 906              	.LBB247:
 907              	.LBB244:
 908              	.LBB241:
 909              	.LBB237:
 910              	.LBI237:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 911              		.loc 4 693 27 view .LVU252
 912              	.LBE237:
 913              	.LBE241:
 914              	.LBE244:
 915              	.LBE247:
 916              	.LBE250:
 917              	.LBE259:
 918              	.LBE277:
 919              	.LBE295:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 920              		.loc 4 696 3 view .LVU253
 921              	.LBB296:
 922              	.LBB278:
 923              	.LBB260:
 924              	.LBB251:
 925              	.LBB248:
 926              	.LBB245:
 927              	.LBB242:
 928              	.LBB240:
 929              	.LBB238:
 930              	.LBI238:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 931              		.loc 5 491 27 view .LVU254
 932              	.LBB239:
 933              		.loc 5 493 3 view .LVU255
 934 01f8 0023     		movs	r3, #0
 935              		.syntax unified
 936              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 937 01fa 83F31188 		MSR basepri, r3
 938              	@ 0 "" 2
 939              	.LVL54:
 940              		.loc 5 493 3 is_stmt 0 view .LVU256
 941              		.thumb
 942              		.syntax unified
 943              	.LBE239:
 944              	.LBE238:
 945              	.LBE240:
 946              	.LBE242:
 947              	.LBE245:
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 948              		.loc 2 545 1 view .LVU257
 949 01fe 85E7     		b	.L17
 950              	.LVL55:
 951              	.L20:
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 952              		.loc 2 545 1 view .LVU258
 953              	.LBE248:
 954              	.LBE251:
 955              	.LBB252:
 956              	.LBB212:
 957              	.LBB209:
 190:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)w;
 958              		.loc 1 190 5 is_stmt 1 view .LVU259
 190:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)w;
 959              		.loc 1 190 14 is_stmt 0 view .LVU260
 960 0200 53F804BB 		ldr	fp, [r3], #4
 961              	.LVL56:
 191:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)(w >> 8);
 962              		.loc 1 191 5 is_stmt 1 view .LVU261
 191:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *buf++ = (uint8_t)(w >> 8);
 963              		.loc 1 191 14 is_stmt 0 view .LVU262
 964 0204 09F802BC 		strb	fp, [r9, #-2]
 192:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 965              		.loc 1 192 5 is_stmt 1 view .LVU263
 966              	.LVL57:
 192:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 967              		.loc 1 192 26 is_stmt 0 view .LVU264
 968 0208 4FEA1B2B 		lsr	fp, fp, #8
 969              	.LVL58:
 192:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     i -= 2;
 970              		.loc 1 192 14 view .LVU265
 971 020c 09F801BC 		strb	fp, [r9, #-1]
 193:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 972              		.loc 1 193 5 is_stmt 1 view .LVU266
 973 0210 B8E7     		b	.L19
 974              	.LVL59:
 975              	.L23:
 193:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 976              		.loc 1 193 5 is_stmt 0 view .LVU267
 977              	.LBE209:
 978              	.LBE212:
 979              	.LBE252:
 351:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       }
 980              		.loc 1 351 9 is_stmt 1 view .LVU268
 981 0212 3B68     		ldr	r3, [r7]
 982 0214 23F49043 		bic	r3, r3, #18432
 983 0218 23F07003 		bic	r3, r3, #112
 984 021c 83F44053 		eor	r3, r3, #12288
 985 0220 43F40043 		orr	r3, r3, #32768
 986 0224 43F08003 		orr	r3, r3, #128
 987 0228 3B60     		str	r3, [r7]
 988 022a 6FE7     		b	.L17
 989              	.L57:
 990              		.align	2
 991              	.L56:
 992 022c 005C0040 		.word	1073765376
 993 0230 00000000 		.word	USBD1
 994 0234 0F07FFFF 		.word	-63729
 995              	.LBE260:
 996              	.LBE278:
 997              	.LBE296:
 998              		.cfi_endproc
 999              	.LFE283:
 1001              		.section	.text.usb_lld_init,"ax",%progbits
 1002              		.align	1
 1003              		.global	usb_lld_init
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1007              		.fpu fpv4-sp-d16
 1009              	usb_lld_init:
 1010              	.LFB284:
 450:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif /* STM32_USB_USE_USB1 */
 451:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 452:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 453:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /* Driver exported functions.                                                */
 454:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /*===========================================================================*/
 455:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 456:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 457:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Low level USB driver initialization.
 458:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 459:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 460:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 461:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_init(void) {
 1011              		.loc 1 461 25 view -0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 462:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 463:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Driver initialization.*/
 464:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbObjectInit(&USBD1);
 1016              		.loc 1 464 3 view .LVU270
 1017 0000 0148     		ldr	r0, .L59
 1018 0002 FFF7FEBF 		b	usbObjectInit
 1019              	.LVL60:
 1020              	.L60:
 1021 0006 00BF     		.align	2
 1022              	.L59:
 1023 0008 00000000 		.word	USBD1
 1024              		.cfi_endproc
 1025              	.LFE284:
 1027              		.section	.text.usb_lld_stop,"ax",%progbits
 1028              		.align	1
 1029              		.global	usb_lld_stop
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1033              		.fpu fpv4-sp-d16
 1035              	usb_lld_stop:
 1036              	.LVL61:
 1037              	.LFB286:
 465:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 466:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 467:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 468:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Configures and activates the USB peripheral.
 469:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 470:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 471:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 472:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 473:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_start(USBDriver *usbp) {
 475:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 476:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (usbp->state == USB_STOP) {
 477:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Clock activation.*/
 478:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1
 479:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (&USBD1 == usbp) {
 480:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* USB clock enabled.*/
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       rccEnableUSB(true);
 482:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 483:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR = CNTR_FRES;
 484:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Enabling the USB IRQ vectors, this also gives enough time to allow
 485:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****          the transceiver power up (1uS).*/
 486:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB1_HP_NUMBER != STM32_USB1_LP_NUMBER
 487:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicEnableVector(STM32_USB1_HP_NUMBER, STM32_USB_USB1_HP_IRQ_PRIORITY);
 488:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 489:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicEnableVector(STM32_USB1_LP_NUMBER, STM32_USB_USB1_LP_IRQ_PRIORITY);
 490:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Releases the USB reset.*/
 491:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR = 0;
 492:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 493:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 494:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Reset procedure enforced on driver start.*/
 495:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     usb_lld_reset(usbp);
 496:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 497:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 498:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 499:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 500:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Deactivates the USB peripheral.
 501:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 502:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 503:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 504:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 505:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 506:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_stop(USBDriver *usbp) {
 1038              		.loc 1 506 36 view -0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 507:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 508:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* If in ready state then disables the USB clock.*/
 509:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (usbp->state != USB_STOP) {
 1042              		.loc 1 509 3 view .LVU272
 506:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1043              		.loc 1 506 36 is_stmt 0 view .LVU273
 1044 0000 08B5     		push	{r3, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 3, -8
 1047              		.cfi_offset 14, -4
 1048              		.loc 1 509 6 view .LVU274
 1049 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1050 0004 012B     		cmp	r3, #1
 1051 0006 12D0     		beq	.L61
 510:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_USB1
 511:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (&USBD1 == usbp) {
 1052              		.loc 1 511 5 is_stmt 1 view .LVU275
 1053              		.loc 1 511 8 is_stmt 0 view .LVU276
 1054 0008 094B     		ldr	r3, .L66
 1055 000a 9842     		cmp	r0, r3
 1056 000c 0FD1     		bne	.L61
 512:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB1_HP_NUMBER != STM32_USB1_LP_NUMBER
 513:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicDisableVector(STM32_USB1_HP_NUMBER);
 1057              		.loc 1 513 7 is_stmt 1 view .LVU277
 1058 000e 4A20     		movs	r0, #74
 1059              	.LVL62:
 1060              		.loc 1 513 7 is_stmt 0 view .LVU278
 1061 0010 FFF7FEFF 		bl	nvicDisableVector
 1062              	.LVL63:
 514:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 515:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nvicDisableVector(STM32_USB1_LP_NUMBER);
 1063              		.loc 1 515 7 is_stmt 1 view .LVU279
 1064 0014 4B20     		movs	r0, #75
 1065 0016 FFF7FEFF 		bl	nvicDisableVector
 1066              	.LVL64:
 516:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       STM32_USB->CNTR = CNTR_PDWN | CNTR_FRES;
 1067              		.loc 1 516 7 view .LVU280
 1068              		.loc 1 516 23 is_stmt 0 view .LVU281
 1069 001a 064B     		ldr	r3, .L66+4
 1070 001c 0322     		movs	r2, #3
 1071 001e 1A64     		str	r2, [r3, #64]
 517:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       rccDisableUSB();
 1072              		.loc 1 517 7 is_stmt 1 view .LVU282
 1073 0020 03F5DA33 		add	r3, r3, #111616
 1074 0024 DA69     		ldr	r2, [r3, #28]
 1075 0026 22F40002 		bic	r2, r2, #8388608
 1076 002a DA61     		str	r2, [r3, #28]
 1077              		.loc 1 517 7 view .LVU283
 1078 002c DB69     		ldr	r3, [r3, #28]
 1079              		.loc 1 517 22 view .LVU284
 1080              	.L61:
 518:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 519:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 520:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 521:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1081              		.loc 1 521 1 is_stmt 0 view .LVU285
 1082 002e 08BD     		pop	{r3, pc}
 1083              	.L67:
 1084              		.align	2
 1085              	.L66:
 1086 0030 00000000 		.word	USBD1
 1087 0034 005C0040 		.word	1073765376
 1088              		.cfi_endproc
 1089              	.LFE286:
 1091              		.section	.text.usb_lld_set_address,"ax",%progbits
 1092              		.align	1
 1093              		.global	usb_lld_set_address
 1094              		.syntax unified
 1095              		.thumb
 1096              		.thumb_func
 1097              		.fpu fpv4-sp-d16
 1099              	usb_lld_set_address:
 1100              	.LVL65:
 1101              	.LFB288:
 522:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 523:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 524:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   USB low level reset routine.
 525:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 526:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 527:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 528:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 529:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 530:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_reset(USBDriver *usbp) {
 531:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t cntr;
 532:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 533:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Post reset initialization.*/
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->BTABLE = BTABLE_ADDR;
 535:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 536:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->DADDR  = DADDR_EF;
 537:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   cntr              = /*CNTR_ESOFM | */ CNTR_RESETM  | CNTR_SUSPM |
 538:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                       CNTR_WKUPM | /*CNTR_ERRM | CNTR_PMAOVRM |*/ CNTR_CTRM;
 539:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* The SOF interrupt is only enabled if a callback is defined for
 540:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      this service because it is an high rate source.*/
 541:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (usbp->config->sof_cb != NULL)
 542:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     cntr |= CNTR_SOFM;
 543:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->CNTR = cntr;
 544:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 545:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Resets the packet memory allocator.*/
 546:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_pm_reset(usbp);
 547:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 548:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* EP0 initialization.*/
 549:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->epc[0] = &ep0config;
 550:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_lld_init_endpoint(usbp, 0);
 551:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 552:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 553:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 554:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Sets the USB address.
 555:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 556:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 557:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 558:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 559:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 560:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_set_address(USBDriver *usbp) {
 1102              		.loc 1 560 43 is_stmt 1 view -0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              		@ link register save eliminated.
 561:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 562:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->DADDR = (uint32_t)(usbp->address) | DADDR_EF;
 1107              		.loc 1 562 3 view .LVU287
 1108              		.loc 1 562 48 is_stmt 0 view .LVU288
 1109 0000 90F87E30 		ldrb	r3, [r0, #126]	@ zero_extendqisi2
 1110              		.loc 1 562 20 view .LVU289
 1111 0004 024A     		ldr	r2, .L69
 1112              		.loc 1 562 48 view .LVU290
 1113 0006 43F08003 		orr	r3, r3, #128
 1114              		.loc 1 562 20 view .LVU291
 1115 000a D364     		str	r3, [r2, #76]
 563:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1116              		.loc 1 563 1 view .LVU292
 1117 000c 7047     		bx	lr
 1118              	.L70:
 1119 000e 00BF     		.align	2
 1120              	.L69:
 1121 0010 005C0040 		.word	1073765376
 1122              		.cfi_endproc
 1123              	.LFE288:
 1125              		.section	.text.usb_lld_init_endpoint,"ax",%progbits
 1126              		.align	1
 1127              		.global	usb_lld_init_endpoint
 1128              		.syntax unified
 1129              		.thumb
 1130              		.thumb_func
 1131              		.fpu fpv4-sp-d16
 1133              	usb_lld_init_endpoint:
 1134              	.LVL66:
 1135              	.LFB289:
 564:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 565:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 566:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Enables an endpoint.
 567:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 568:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 569:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 570:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 571:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 572:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 573:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_init_endpoint(USBDriver *usbp, usbep_t ep) {
 1136              		.loc 1 573 57 is_stmt 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 574:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint16_t epr;
 1140              		.loc 1 574 3 view .LVU294
 575:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *dp;
 1141              		.loc 1 575 3 view .LVU295
 576:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   const USBEndpointConfig *epcp = usbp->epc[ep];
 1142              		.loc 1 576 3 view .LVU296
 1143              		.loc 1 576 28 is_stmt 0 view .LVU297
 1144 0000 00EB8103 		add	r3, r0, r1, lsl #2
 573:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint16_t epr;
 1145              		.loc 1 573 57 view .LVU298
 1146 0004 70B5     		push	{r4, r5, r6, lr}
 1147              		.cfi_def_cfa_offset 16
 1148              		.cfi_offset 4, -16
 1149              		.cfi_offset 5, -12
 1150              		.cfi_offset 6, -8
 1151              		.cfi_offset 14, -4
 1152              		.loc 1 576 28 view .LVU299
 1153 0006 DD68     		ldr	r5, [r3, #12]
 1154              	.LVL67:
 577:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 578:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Setting the endpoint type. Note that isochronous endpoints cannot be
 579:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      bidirectional because it uses double buffering and both transmit and
 580:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      receive descriptor fields are used for either direction.*/
 581:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   switch (epcp->ep_mode & USB_EP_MODE_TYPE) {
 1155              		.loc 1 581 3 is_stmt 1 view .LVU300
 1156              		.loc 1 581 25 is_stmt 0 view .LVU301
 1157 0008 2B68     		ldr	r3, [r5]
 1158 000a 03F00303 		and	r3, r3, #3
 1159              		.loc 1 581 3 view .LVU302
 1160 000e 032B     		cmp	r3, #3
 1161 0010 5AD0     		beq	.L79
 582:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case USB_EP_MODE_TYPE_ISOC:
 583:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 584:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osalDbgAssert((epcp->in_state == NULL) || (epcp->out_state == NULL),
 585:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                   "isochronous EP cannot be IN and OUT");
 586:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_ISO;
 587:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 588:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 589:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osalDbgAssert(false, "isochronous support disabled");
 590:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 591:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Falls through.*/
 592:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case USB_EP_MODE_TYPE_BULK:
 593:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_BULK;
 1162              		.loc 1 593 9 view .LVU303
 1163 0012 002B     		cmp	r3, #0
 1164 0014 0CBF     		ite	eq
 1165 0016 4FF40073 		moveq	r3, #512
 1166 001a 0023     		movne	r3, #0
 1167              	.L72:
 1168              	.LVL68:
 594:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 595:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case USB_EP_MODE_TYPE_INTR:
 596:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_INTERRUPT;
 597:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     break;
 598:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   default:
 599:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr = EPR_EP_TYPE_CONTROL;
 600:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 601:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 602:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   dp = USB_GET_DESCRIPTOR(ep);
 1169              		.loc 1 602 3 is_stmt 1 view .LVU304
 1170              		.loc 1 602 8 is_stmt 0 view .LVU305
 1171 001c 2F4A     		ldr	r2, .L93
 1172 001e 146D     		ldr	r4, [r2, #80]
 603:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 604:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* IN endpoint handling.*/
 605:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epcp->in_state != NULL) {
 1173              		.loc 1 605 6 view .LVU306
 1174 0020 6A69     		ldr	r2, [r5, #20]
 602:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1175              		.loc 1 602 8 view .LVU307
 1176 0022 04F18044 		add	r4, r4, #1073741824
 1177 0026 04F5C044 		add	r4, r4, #24576
 1178 002a 04EB0114 		add	r4, r4, r1, lsl #4
 1179              	.LVL69:
 1180              		.loc 1 605 3 is_stmt 1 view .LVU308
 1181              		.loc 1 605 6 is_stmt 0 view .LVU309
 1182 002e 6AB1     		cbz	r2, .L73
 606:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->TXCOUNT0 = 0;
 1183              		.loc 1 606 5 is_stmt 1 view .LVU310
 1184              		.loc 1 606 18 is_stmt 0 view .LVU311
 1185 0030 0022     		movs	r2, #0
 1186 0032 6260     		str	r2, [r4, #4]
 607:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->TXADDR0  = usb_pm_alloc(usbp, epcp->in_maxsize);
 1187              		.loc 1 607 5 is_stmt 1 view .LVU312
 1188              	.LVL70:
 1189              	.LBB297:
 1190              	.LBI297:
 112:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t next;
 1191              		.loc 1 112 17 view .LVU313
 1192              	.LBB298:
 113:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1193              		.loc 1 113 3 view .LVU314
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 1194              		.loc 1 115 3 view .LVU315
 1195              	.LBE298:
 1196              	.LBE297:
 1197              		.loc 1 607 20 is_stmt 0 view .LVU316
 1198 0034 2A8A     		ldrh	r2, [r5, #16]
 1199              	.LVL71:
 1200              	.LBB300:
 1201              	.LBB299:
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 1202              		.loc 1 115 8 view .LVU317
 1203 0036 D0F88460 		ldr	r6, [r0, #132]
 1204              	.LVL72:
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1205              		.loc 1 116 3 is_stmt 1 view .LVU318
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1206              		.loc 1 116 25 is_stmt 0 view .LVU319
 1207 003a 0132     		adds	r2, r2, #1
 1208              	.LVL73:
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1209              		.loc 1 116 30 view .LVU320
 1210 003c 22F00102 		bic	r2, r2, #1
 1211              	.LVL74:
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1212              		.loc 1 116 16 view .LVU321
 1213 0040 3244     		add	r2, r2, r6
 1214 0042 C0F88420 		str	r2, [r0, #132]
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 1215              		.loc 1 117 3 is_stmt 1 view .LVU322
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 1216              		.loc 1 117 3 view .LVU323
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 1217              		.loc 1 117 3 view .LVU324
 118:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1218              		.loc 1 118 3 view .LVU325
 1219              	.LVL75:
 118:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1220              		.loc 1 118 3 is_stmt 0 view .LVU326
 1221              	.LBE299:
 1222              	.LBE300:
 608:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 609:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 610:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epr == EPR_EP_TYPE_ISO) {
 611:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_TX_VALID;
 612:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->TXCOUNT1 = dp->TXCOUNT0;
 613:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->TXADDR1  = dp->TXADDR0;   /* Both buffers overlapped.*/
 614:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 615:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 616:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_TX_NAK;
 617:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 618:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 619:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr |= EPR_STAT_TX_NAK;
 1223              		.loc 1 619 9 view .LVU327
 1224 0046 43F02003 		orr	r3, r3, #32
 1225              	.LVL76:
 607:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1226              		.loc 1 607 18 view .LVU328
 1227 004a 2660     		str	r6, [r4]
 1228              		.loc 1 619 5 is_stmt 1 view .LVU329
 1229              	.LVL77:
 1230              	.L73:
 620:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 621:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 622:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 623:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* OUT endpoint handling.*/
 624:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (epcp->out_state != NULL) {
 1231              		.loc 1 624 3 view .LVU330
 1232              		.loc 1 624 6 is_stmt 0 view .LVU331
 1233 004c AA69     		ldr	r2, [r5, #24]
 1234 004e C2B1     		cbz	r2, .L74
 1235              	.LBB301:
 625:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     uint16_t nblocks;
 1236              		.loc 1 625 5 is_stmt 1 view .LVU332
 626:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 627:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Endpoint size and address initialization.*/
 628:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epcp->out_maxsize > 62)
 1237              		.loc 1 628 5 view .LVU333
 1238              		.loc 1 628 13 is_stmt 0 view .LVU334
 1239 0050 6D8A     		ldrh	r5, [r5, #18]
 1240              	.LVL78:
 1241              		.loc 1 628 8 view .LVU335
 1242 0052 3E2D     		cmp	r5, #62
 629:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nblocks = (((((epcp->out_maxsize - 1) | 0x1f) + 1) / 32) << 10) |
 1243              		.loc 1 629 40 view .LVU336
 1244 0054 05F1FF32 		add	r2, r5, #-1
 628:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nblocks = (((((epcp->out_maxsize - 1) | 0x1f) + 1) / 32) << 10) |
 1245              		.loc 1 628 8 view .LVU337
 1246 0058 39D9     		bls	.L75
 1247              		.loc 1 629 7 is_stmt 1 view .LVU338
 1248              		.loc 1 629 45 is_stmt 0 view .LVU339
 1249 005a 42F01F02 		orr	r2, r2, #31
 1250              		.loc 1 629 71 view .LVU340
 1251 005e 204E     		ldr	r6, .L93+4
 1252              		.loc 1 629 53 view .LVU341
 1253 0060 0132     		adds	r2, r2, #1
 1254              		.loc 1 629 58 view .LVU342
 1255 0062 5211     		asrs	r2, r2, #5
 1256              		.loc 1 629 71 view .LVU343
 1257 0064 46EA8222 		orr	r2, r6, r2, lsl #10
 1258              		.loc 1 629 15 view .LVU344
 1259 0068 92B2     		uxth	r2, r2
 1260              	.LVL79:
 1261              	.L76:
 630:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                 0x8000;
 631:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else
 632:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       nblocks = ((((epcp->out_maxsize - 1) | 1) + 1) / 2) << 10;
 633:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 1262              		.loc 1 633 5 is_stmt 1 view .LVU345
 1263              		.loc 1 633 18 is_stmt 0 view .LVU346
 1264 006a E260     		str	r2, [r4, #12]
 634:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXADDR0  = usb_pm_alloc(usbp, epcp->out_maxsize);
 1265              		.loc 1 634 5 is_stmt 1 view .LVU347
 1266              	.LVL80:
 1267              	.LBB302:
 1268              	.LBI302:
 112:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t next;
 1269              		.loc 1 112 17 view .LVU348
 1270              	.LBB303:
 113:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1271              		.loc 1 113 3 view .LVU349
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 1272              		.loc 1 115 3 view .LVU350
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1273              		.loc 1 116 25 is_stmt 0 view .LVU351
 1274 006c 0135     		adds	r5, r5, #1
 1275              	.LVL81:
 115:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usbp->pmnext += (size + 1) & ~1;
 1276              		.loc 1 115 8 view .LVU352
 1277 006e D0F88420 		ldr	r2, [r0, #132]
 1278              	.LVL82:
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1279              		.loc 1 116 3 is_stmt 1 view .LVU353
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1280              		.loc 1 116 30 is_stmt 0 view .LVU354
 1281 0072 25F00105 		bic	r5, r5, #1
 116:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   osalDbgAssert(usbp->pmnext <= STM32_USB_PMA_SIZE, "PMA overflow");
 1282              		.loc 1 116 16 view .LVU355
 1283 0076 1544     		add	r5, r5, r2
 1284 0078 C0F88450 		str	r5, [r0, #132]
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 1285              		.loc 1 117 3 is_stmt 1 view .LVU356
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 1286              		.loc 1 117 3 view .LVU357
 117:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   return next;
 1287              		.loc 1 117 3 view .LVU358
 118:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1288              		.loc 1 118 3 view .LVU359
 1289              	.LVL83:
 118:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1290              		.loc 1 118 3 is_stmt 0 view .LVU360
 1291              	.LBE303:
 1292              	.LBE302:
 635:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 636:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #if STM32_USB_USE_ISOCHRONOUS
 637:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     if (epr == EPR_EP_TYPE_ISO) {
 638:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_RX_VALID;
 639:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->RXCOUNT1 = dp->RXCOUNT0;
 640:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       dp->RXADDR1  = dp->RXADDR0;   /* Both buffers overlapped.*/
 641:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 642:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     else {
 643:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       epr |= EPR_STAT_RX_NAK;
 644:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 645:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #else
 646:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr |= EPR_STAT_RX_NAK;
 1293              		.loc 1 646 9 view .LVU361
 1294 007c 43F40053 		orr	r3, r3, #8192
 1295              	.LVL84:
 634:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1296              		.loc 1 634 18 view .LVU362
 1297 0080 A260     		str	r2, [r4, #8]
 1298              		.loc 1 646 5 is_stmt 1 view .LVU363
 1299              	.LVL85:
 1300              	.L74:
 1301              		.loc 1 646 5 is_stmt 0 view .LVU364
 1302              	.LBE301:
 647:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 648:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 649:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 650:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Resetting the data toggling bits for this endpoint.*/
 651:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (STM32_USB->EPR[ep] & EPR_DTOG_RX) {
 1303              		.loc 1 651 3 is_stmt 1 view .LVU365
 1304 0082 8A00     		lsls	r2, r1, #2
 1305 0084 02F18042 		add	r2, r2, #1073741824
 1306 0088 02F5B842 		add	r2, r2, #23552
 1307              		.loc 1 651 21 is_stmt 0 view .LVU366
 1308 008c 1068     		ldr	r0, [r2]
 1309              	.LVL86:
 1310              		.loc 1 651 6 view .LVU367
 1311 008e 4404     		lsls	r4, r0, #17
 1312              	.LVL87:
 652:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr |= EPR_DTOG_RX;
 1313              		.loc 1 652 5 is_stmt 1 view .LVU368
 653:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 654:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 655:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (STM32_USB->EPR[ep] & EPR_DTOG_TX) {
 1314              		.loc 1 655 21 is_stmt 0 view .LVU369
 1315 0090 1068     		ldr	r0, [r2]
 652:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr |= EPR_DTOG_RX;
 1316              		.loc 1 652 9 view .LVU370
 1317 0092 48BF     		it	mi
 1318 0094 43F48043 		orrmi	r3, r3, #16384
 1319              	.LVL88:
 1320              		.loc 1 655 3 is_stmt 1 view .LVU371
 1321              		.loc 1 655 6 is_stmt 0 view .LVU372
 1322 0098 4006     		lsls	r0, r0, #25
 656:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     epr |= EPR_DTOG_TX;
 1323              		.loc 1 656 5 is_stmt 1 view .LVU373
 1324              		.loc 1 656 9 is_stmt 0 view .LVU374
 1325 009a 48BF     		it	mi
 1326 009c 43F04003 		orrmi	r3, r3, #64
 1327              	.LVL89:
 657:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 658:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 659:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* EPxR register setup.*/
 660:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET(ep, epr | ep);
 1328              		.loc 1 660 3 is_stmt 1 view .LVU375
 1329 00a0 1943     		orrs	r1, r1, r3
 1330              	.LVL90:
 1331              		.loc 1 660 3 is_stmt 0 view .LVU376
 1332 00a2 21F47841 		bic	r1, r1, #63488
 1333 00a6 48F28000 		movw	r0, #32896
 1334 00aa 21F0F001 		bic	r1, r1, #240
 1335 00ae 0143     		orrs	r1, r1, r0
 661:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_TOGGLE(ep, epr);
 1336              		.loc 1 661 3 view .LVU377
 1337 00b0 23F4F163 		bic	r3, r3, #1928
 1338              	.LVL91:
 660:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_TOGGLE(ep, epr);
 1339              		.loc 1 660 3 view .LVU378
 1340 00b4 1160     		str	r1, [r2]
 1341              		.loc 1 661 3 is_stmt 1 view .LVU379
 1342 00b6 23F00703 		bic	r3, r3, #7
 1343 00ba 1168     		ldr	r1, [r2]
 1344 00bc 5B04     		lsls	r3, r3, #17
 1345 00be 5B0C     		lsrs	r3, r3, #17
 1346 00c0 4B40     		eors	r3, r3, r1
 1347 00c2 0343     		orrs	r3, r3, r0
 1348 00c4 1360     		str	r3, [r2]
 662:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1349              		.loc 1 662 1 is_stmt 0 view .LVU380
 1350 00c6 70BD     		pop	{r4, r5, r6, pc}
 1351              	.LVL92:
 1352              	.L79:
 581:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case USB_EP_MODE_TYPE_ISOC:
 1353              		.loc 1 581 3 view .LVU381
 1354 00c8 4FF4C063 		mov	r3, #1536
 1355 00cc A6E7     		b	.L72
 1356              	.LVL93:
 1357              	.L75:
 1358              	.LBB304:
 632:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 1359              		.loc 1 632 7 is_stmt 1 view .LVU382
 632:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 1360              		.loc 1 632 44 is_stmt 0 view .LVU383
 1361 00ce 42F00102 		orr	r2, r2, #1
 632:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 1362              		.loc 1 632 49 view .LVU384
 1363 00d2 0132     		adds	r2, r2, #1
 632:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 1364              		.loc 1 632 15 view .LVU385
 1365 00d4 5202     		lsls	r2, r2, #9
 1366 00d6 02F47C42 		and	r2, r2, #64512
 1367              	.LVL94:
 632:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     dp->RXCOUNT0 = nblocks;
 1368              		.loc 1 632 15 view .LVU386
 1369 00da C6E7     		b	.L76
 1370              	.L94:
 1371              		.align	2
 1372              	.L93:
 1373 00dc 005C0040 		.word	1073765376
 1374 00e0 0080FFFF 		.word	-32768
 1375              	.LBE304:
 1376              		.cfi_endproc
 1377              	.LFE289:
 1379              		.section	.text.usb_lld_reset,"ax",%progbits
 1380              		.align	1
 1381              		.global	usb_lld_reset
 1382              		.syntax unified
 1383              		.thumb
 1384              		.thumb_func
 1385              		.fpu fpv4-sp-d16
 1387              	usb_lld_reset:
 1388              	.LVL95:
 1389              	.LFB287:
 530:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t cntr;
 1390              		.loc 1 530 37 is_stmt 1 view -0
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 0
 1393              		@ frame_needed = 0, uses_anonymous_args = 0
 1394              		@ link register save eliminated.
 531:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1395              		.loc 1 531 3 view .LVU388
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 1396              		.loc 1 534 3 view .LVU389
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 1397              		.loc 1 534 21 is_stmt 0 view .LVU390
 1398 0000 0C4A     		ldr	r2, .L98
 530:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t cntr;
 1399              		.loc 1 530 37 view .LVU391
 1400 0002 10B4     		push	{r4}
 1401              		.cfi_def_cfa_offset 4
 1402              		.cfi_offset 4, -4
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 1403              		.loc 1 534 21 view .LVU392
 1404 0004 0021     		movs	r1, #0
 536:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   cntr              = /*CNTR_ESOFM | */ CNTR_RESETM  | CNTR_SUSPM |
 1405              		.loc 1 536 21 view .LVU393
 1406 0006 8024     		movs	r4, #128
 534:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->ISTR   = 0;
 1407              		.loc 1 534 21 view .LVU394
 1408 0008 1165     		str	r1, [r2, #80]
 535:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->DADDR  = DADDR_EF;
 1409              		.loc 1 535 3 is_stmt 1 view .LVU395
 535:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->DADDR  = DADDR_EF;
 1410              		.loc 1 535 21 is_stmt 0 view .LVU396
 1411 000a 5164     		str	r1, [r2, #68]
 536:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   cntr              = /*CNTR_ESOFM | */ CNTR_RESETM  | CNTR_SUSPM |
 1412              		.loc 1 536 3 is_stmt 1 view .LVU397
 536:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   cntr              = /*CNTR_ESOFM | */ CNTR_RESETM  | CNTR_SUSPM |
 1413              		.loc 1 536 21 is_stmt 0 view .LVU398
 1414 000c D464     		str	r4, [r2, #76]
 537:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                       CNTR_WKUPM | /*CNTR_ERRM | CNTR_PMAOVRM |*/ CNTR_CTRM;
 1415              		.loc 1 537 3 is_stmt 1 view .LVU399
 1416              	.LVL96:
 541:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     cntr |= CNTR_SOFM;
 1417              		.loc 1 541 3 view .LVU400
 541:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     cntr |= CNTR_SOFM;
 1418              		.loc 1 541 19 is_stmt 0 view .LVU401
 1419 000e 4468     		ldr	r4, [r0, #4]
 541:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     cntr |= CNTR_SOFM;
 1420              		.loc 1 541 6 view .LVU402
 1421 0010 E468     		ldr	r4, [r4, #12]
 542:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   STM32_USB->CNTR = cntr;
 1422              		.loc 1 542 10 view .LVU403
 1423 0012 8C42     		cmp	r4, r1
 1424 0014 0CBF     		ite	eq
 1425 0016 4FF41C44 		moveq	r4, #39936
 1426 001a 4FF41E44 		movne	r4, #40448
 1427              	.LVL97:
 543:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1428              		.loc 1 543 3 is_stmt 1 view .LVU404
 543:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1429              		.loc 1 543 19 is_stmt 0 view .LVU405
 1430 001e 1464     		str	r4, [r2, #64]
 546:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1431              		.loc 1 546 3 is_stmt 1 view .LVU406
 1432              	.LVL98:
 1433              	.LBB305:
 1434              	.LBI305:
  98:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1435              		.loc 1 98 13 view .LVU407
 1436              	.LBB306:
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1437              		.loc 1 102 3 view .LVU408
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1438              		.loc 1 102 16 is_stmt 0 view .LVU409
 1439 0020 4022     		movs	r2, #64
 1440 0022 C0F88420 		str	r2, [r0, #132]
 1441              	.LVL99:
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1442              		.loc 1 102 16 view .LVU410
 1443              	.LBE306:
 1444              	.LBE305:
 549:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_lld_init_endpoint(usbp, 0);
 1445              		.loc 1 549 3 is_stmt 1 view .LVU411
 549:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_lld_init_endpoint(usbp, 0);
 1446              		.loc 1 549 16 is_stmt 0 view .LVU412
 1447 0026 044A     		ldr	r2, .L98+4
 551:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1448              		.loc 1 551 1 view .LVU413
 1449 0028 5DF8044B 		ldr	r4, [sp], #4
 1450              		.cfi_restore 4
 1451              		.cfi_def_cfa_offset 0
 1452              	.LVL100:
 549:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_lld_init_endpoint(usbp, 0);
 1453              		.loc 1 549 16 view .LVU414
 1454 002c C260     		str	r2, [r0, #12]
 550:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1455              		.loc 1 550 3 is_stmt 1 view .LVU415
 1456 002e FFF7FEBF 		b	usb_lld_init_endpoint
 1457              	.LVL101:
 1458              	.L99:
 550:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1459              		.loc 1 550 3 is_stmt 0 view .LVU416
 1460 0032 00BF     		.align	2
 1461              	.L98:
 1462 0034 005C0040 		.word	1073765376
 1463 0038 00000000 		.word	.LANCHOR0
 1464              		.cfi_endproc
 1465              	.LFE287:
 1467              		.section	.text.usb_lld_start,"ax",%progbits
 1468              		.align	1
 1469              		.global	usb_lld_start
 1470              		.syntax unified
 1471              		.thumb
 1472              		.thumb_func
 1473              		.fpu fpv4-sp-d16
 1475              	usb_lld_start:
 1476              	.LVL102:
 1477              	.LFB285:
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1478              		.loc 1 474 37 is_stmt 1 view -0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 476:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Clock activation.*/
 1482              		.loc 1 476 3 view .LVU418
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1483              		.loc 1 474 37 is_stmt 0 view .LVU419
 1484 0000 38B5     		push	{r3, r4, r5, lr}
 1485              		.cfi_def_cfa_offset 16
 1486              		.cfi_offset 3, -16
 1487              		.cfi_offset 4, -12
 1488              		.cfi_offset 5, -8
 1489              		.cfi_offset 14, -4
 476:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Clock activation.*/
 1490              		.loc 1 476 6 view .LVU420
 1491 0002 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 1492 0004 0129     		cmp	r1, #1
 474:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1493              		.loc 1 474 37 view .LVU421
 1494 0006 0446     		mov	r4, r0
 476:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     /* Clock activation.*/
 1495              		.loc 1 476 6 view .LVU422
 1496 0008 19D1     		bne	.L100
 479:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* USB clock enabled.*/
 1497              		.loc 1 479 5 is_stmt 1 view .LVU423
 479:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* USB clock enabled.*/
 1498              		.loc 1 479 8 is_stmt 0 view .LVU424
 1499 000a 0D4B     		ldr	r3, .L103
 1500 000c 9842     		cmp	r0, r3
 1501 000e 11D1     		bne	.L102
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 1502              		.loc 1 481 7 is_stmt 1 view .LVU425
 1503 0010 0C4B     		ldr	r3, .L103+4
 483:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Enabling the USB IRQ vectors, this also gives enough time to allow
 1504              		.loc 1 483 23 is_stmt 0 view .LVU426
 1505 0012 0D4D     		ldr	r5, .L103+8
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 1506              		.loc 1 481 7 view .LVU427
 1507 0014 DA69     		ldr	r2, [r3, #28]
 1508 0016 42F40002 		orr	r2, r2, #8388608
 1509 001a DA61     		str	r2, [r3, #28]
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 1510              		.loc 1 481 7 is_stmt 1 view .LVU428
 1511 001c DB69     		ldr	r3, [r3, #28]
 481:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Powers up the transceiver while holding the USB in reset state.*/
 1512              		.loc 1 481 25 view .LVU429
 483:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Enabling the USB IRQ vectors, this also gives enough time to allow
 1513              		.loc 1 483 7 view .LVU430
 483:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Enabling the USB IRQ vectors, this also gives enough time to allow
 1514              		.loc 1 483 23 is_stmt 0 view .LVU431
 1515 001e 2964     		str	r1, [r5, #64]
 487:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 1516              		.loc 1 487 7 is_stmt 1 view .LVU432
 1517 0020 4A20     		movs	r0, #74
 1518              	.LVL103:
 487:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** #endif
 1519              		.loc 1 487 7 is_stmt 0 view .LVU433
 1520 0022 0D21     		movs	r1, #13
 1521 0024 FFF7FEFF 		bl	nvicEnableVector
 1522              	.LVL104:
 489:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****       /* Releases the USB reset.*/
 1523              		.loc 1 489 7 is_stmt 1 view .LVU434
 1524 0028 0E21     		movs	r1, #14
 1525 002a 4B20     		movs	r0, #75
 1526 002c FFF7FEFF 		bl	nvicEnableVector
 1527              	.LVL105:
 491:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 1528              		.loc 1 491 7 view .LVU435
 491:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     }
 1529              		.loc 1 491 23 is_stmt 0 view .LVU436
 1530 0030 0023     		movs	r3, #0
 1531 0032 2B64     		str	r3, [r5, #64]
 1532              	.L102:
 495:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 1533              		.loc 1 495 5 is_stmt 1 view .LVU437
 1534 0034 2046     		mov	r0, r4
 497:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1535              		.loc 1 497 1 is_stmt 0 view .LVU438
 1536 0036 BDE83840 		pop	{r3, r4, r5, lr}
 1537              		.cfi_remember_state
 1538              		.cfi_restore 14
 1539              		.cfi_restore 5
 1540              		.cfi_restore 4
 1541              		.cfi_restore 3
 1542              		.cfi_def_cfa_offset 0
 1543              	.LVL106:
 495:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 1544              		.loc 1 495 5 view .LVU439
 1545 003a FFF7FEBF 		b	usb_lld_reset
 1546              	.LVL107:
 1547              	.L100:
 1548              		.cfi_restore_state
 497:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1549              		.loc 1 497 1 view .LVU440
 1550 003e 38BD     		pop	{r3, r4, r5, pc}
 1551              	.L104:
 1552              		.align	2
 1553              	.L103:
 1554 0040 00000000 		.word	USBD1
 1555 0044 00100240 		.word	1073876992
 1556 0048 005C0040 		.word	1073765376
 1557              		.cfi_endproc
 1558              	.LFE285:
 1560              		.section	.text.usb_lld_disable_endpoints,"ax",%progbits
 1561              		.align	1
 1562              		.global	usb_lld_disable_endpoints
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1566              		.fpu fpv4-sp-d16
 1568              	usb_lld_disable_endpoints:
 1569              	.LVL108:
 1570              	.LFB290:
 663:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 664:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 665:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Disables all the active endpoints except the endpoint zero.
 666:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 667:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 668:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 669:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 670:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 671:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_disable_endpoints(USBDriver *usbp) {
 1571              		.loc 1 671 49 is_stmt 1 view -0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 0
 1574              		@ frame_needed = 0, uses_anonymous_args = 0
 1575              		@ link register save eliminated.
 672:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   unsigned i;
 1576              		.loc 1 672 3 view .LVU442
 673:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 674:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Resets the packet memory allocator.*/
 675:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_pm_reset(usbp);
 1577              		.loc 1 675 3 view .LVU443
 1578              	.LBB307:
 1579              	.LBI307:
  98:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 1580              		.loc 1 98 13 view .LVU444
 1581              	.LBB308:
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1582              		.loc 1 102 3 view .LVU445
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1583              		.loc 1 102 16 is_stmt 0 view .LVU446
 1584 0000 4023     		movs	r3, #64
 1585 0002 C0F88430 		str	r3, [r0, #132]
 1586              	.LVL109:
 102:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1587              		.loc 1 102 16 view .LVU447
 1588              	.LBE308:
 1589              	.LBE307:
 676:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 677:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Disabling all endpoints.*/
 678:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (i = 1; i <= USB_ENDOPOINTS_NUMBER; i++) {
 1590              		.loc 1 678 3 is_stmt 1 view .LVU448
 1591              		.loc 1 678 15 view .LVU449
 1592              		.loc 1 678 10 is_stmt 0 view .LVU450
 1593 0006 0122     		movs	r2, #1
 679:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1594              		.loc 1 679 5 view .LVU451
 1595 0008 48F28000 		movw	r0, #32896
 1596              	.LVL110:
 1597              	.L106:
 1598              		.loc 1 679 5 is_stmt 1 discriminator 3 view .LVU452
 1599 000c 9300     		lsls	r3, r2, #2
 1600 000e 03F18043 		add	r3, r3, #1073741824
 1601 0012 03F5B843 		add	r3, r3, #23552
 678:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1602              		.loc 1 678 44 is_stmt 0 discriminator 3 view .LVU453
 1603 0016 0132     		adds	r2, r2, #1
 1604              	.LVL111:
 1605              		.loc 1 679 5 discriminator 3 view .LVU454
 1606 0018 1968     		ldr	r1, [r3]
 678:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1607              		.loc 1 678 3 discriminator 3 view .LVU455
 1608 001a 082A     		cmp	r2, #8
 1609              		.loc 1 679 5 discriminator 3 view .LVU456
 1610 001c 41EA0001 		orr	r1, r1, r0
 1611 0020 1960     		str	r1, [r3]
 680:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_SET(i, 0);
 1612              		.loc 1 680 5 is_stmt 1 discriminator 3 view .LVU457
 1613 0022 1860     		str	r0, [r3]
 678:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1614              		.loc 1 678 43 discriminator 3 view .LVU458
 1615              	.LVL112:
 678:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1616              		.loc 1 678 15 discriminator 3 view .LVU459
 678:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_TOGGLE(i, 0);
 1617              		.loc 1 678 3 is_stmt 0 discriminator 3 view .LVU460
 1618 0024 F2D1     		bne	.L106
 681:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 682:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1619              		.loc 1 682 1 view .LVU461
 1620 0026 7047     		bx	lr
 1621              		.cfi_endproc
 1622              	.LFE290:
 1624              		.section	.text.usb_lld_get_status_out,"ax",%progbits
 1625              		.align	1
 1626              		.global	usb_lld_get_status_out
 1627              		.syntax unified
 1628              		.thumb
 1629              		.thumb_func
 1630              		.fpu fpv4-sp-d16
 1632              	usb_lld_get_status_out:
 1633              	.LVL113:
 1634              	.LFB291:
 683:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 684:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 685:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Returns the status of an OUT endpoint.
 686:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 687:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 688:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 689:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The endpoint status.
 690:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_DISABLED The endpoint is not active.
 691:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_STALLED  The endpoint is stalled.
 692:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_ACTIVE   The endpoint is active.
 693:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 694:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 695:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 696:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** usbepstatus_t usb_lld_get_status_out(USBDriver *usbp, usbep_t ep) {
 1635              		.loc 1 696 67 is_stmt 1 view -0
 1636              		.cfi_startproc
 1637              		@ args = 0, pretend = 0, frame = 0
 1638              		@ frame_needed = 0, uses_anonymous_args = 0
 1639              		@ link register save eliminated.
 697:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 698:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 1640              		.loc 1 698 3 view .LVU463
 699:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   switch (STM32_USB->EPR[ep] & EPR_STAT_RX_MASK) {
 1641              		.loc 1 699 3 view .LVU464
 1642              		.loc 1 699 25 is_stmt 0 view .LVU465
 1643 0000 054B     		ldr	r3, .L112
 1644 0002 53F82100 		ldr	r0, [r3, r1, lsl #2]
 1645              	.LVL114:
 1646              		.loc 1 699 3 view .LVU466
 1647 0006 10F44050 		ands	r0, r0, #12288
 1648 000a 04D0     		beq	.L109
 1649 000c B0F5805F 		cmp	r0, #4096
 1650 0010 14BF     		ite	ne
 1651 0012 0220     		movne	r0, #2
 1652 0014 0120     		moveq	r0, #1
 1653              	.L109:
 700:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_RX_DIS:
 701:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_DISABLED;
 702:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_RX_STALL:
 703:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_STALLED;
 704:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   default:
 705:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_ACTIVE;
 706:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 707:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1654              		.loc 1 707 1 view .LVU467
 1655 0016 7047     		bx	lr
 1656              	.L113:
 1657              		.align	2
 1658              	.L112:
 1659 0018 005C0040 		.word	1073765376
 1660              		.cfi_endproc
 1661              	.LFE291:
 1663              		.section	.text.usb_lld_get_status_in,"ax",%progbits
 1664              		.align	1
 1665              		.global	usb_lld_get_status_in
 1666              		.syntax unified
 1667              		.thumb
 1668              		.thumb_func
 1669              		.fpu fpv4-sp-d16
 1671              	usb_lld_get_status_in:
 1672              	.LVL115:
 1673              	.LFB292:
 708:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 709:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 710:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Returns the status of an IN endpoint.
 711:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 712:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 713:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 714:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @return              The endpoint status.
 715:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_DISABLED The endpoint is not active.
 716:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_STALLED  The endpoint is stalled.
 717:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @retval EP_STATUS_ACTIVE   The endpoint is active.
 718:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 719:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 720:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 721:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** usbepstatus_t usb_lld_get_status_in(USBDriver *usbp, usbep_t ep) {
 1674              		.loc 1 721 66 is_stmt 1 view -0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 0
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 1678              		@ link register save eliminated.
 722:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 723:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 1679              		.loc 1 723 3 view .LVU469
 724:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   switch (STM32_USB->EPR[ep] & EPR_STAT_TX_MASK) {
 1680              		.loc 1 724 3 view .LVU470
 1681              		.loc 1 724 25 is_stmt 0 view .LVU471
 1682 0000 054B     		ldr	r3, .L118
 1683 0002 53F82100 		ldr	r0, [r3, r1, lsl #2]
 1684              	.LVL116:
 1685              		.loc 1 724 3 view .LVU472
 1686 0006 10F03000 		ands	r0, r0, #48
 1687 000a 03D0     		beq	.L115
 1688 000c 1028     		cmp	r0, #16
 1689 000e 14BF     		ite	ne
 1690 0010 0220     		movne	r0, #2
 1691 0012 0120     		moveq	r0, #1
 1692              	.L115:
 725:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_TX_DIS:
 726:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_DISABLED;
 727:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   case EPR_STAT_TX_STALL:
 728:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_STALLED;
 729:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   default:
 730:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     return EP_STATUS_ACTIVE;
 731:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 732:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1693              		.loc 1 732 1 view .LVU473
 1694 0014 7047     		bx	lr
 1695              	.L119:
 1696 0016 00BF     		.align	2
 1697              	.L118:
 1698 0018 005C0040 		.word	1073765376
 1699              		.cfi_endproc
 1700              	.LFE292:
 1702              		.section	.text.usb_lld_read_setup,"ax",%progbits
 1703              		.align	1
 1704              		.global	usb_lld_read_setup
 1705              		.syntax unified
 1706              		.thumb
 1707              		.thumb_func
 1708              		.fpu fpv4-sp-d16
 1710              	usb_lld_read_setup:
 1711              	.LVL117:
 1712              	.LFB293:
 733:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 734:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 735:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Reads a setup packet from the dedicated packet buffer.
 736:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @details This function must be invoked in the context of the @p setup_cb
 737:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *          callback in order to read the received setup packet.
 738:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @pre     In order to use this function the endpoint must have been
 739:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *          initialized as a control endpoint.
 740:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @post    The endpoint is ready to accept another packet.
 741:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 742:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 743:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 744:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[out] buf      buffer where to copy the packet data
 745:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 746:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 747:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 748:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_read_setup(USBDriver *usbp, usbep_t ep, uint8_t *buf) {
 1713              		.loc 1 748 68 is_stmt 1 view -0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
 749:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_pma_t *pmap;
 1718              		.loc 1 749 3 view .LVU475
 750:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   stm32_usb_descriptor_t *udp;
 1719              		.loc 1 750 3 view .LVU476
 751:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   uint32_t n;
 1720              		.loc 1 751 3 view .LVU477
 752:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 753:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 1721              		.loc 1 753 3 view .LVU478
 754:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   udp = USB_GET_DESCRIPTOR(ep);
 1722              		.loc 1 754 3 view .LVU479
 1723              		.loc 1 754 9 is_stmt 0 view .LVU480
 1724 0000 0B4B     		ldr	r3, .L123
 1725 0002 1B6D     		ldr	r3, [r3, #80]
 1726 0004 03F18043 		add	r3, r3, #1073741824
 1727 0008 03F5C043 		add	r3, r3, #24576
 1728 000c 03EB0111 		add	r1, r3, r1, lsl #4
 1729              	.LVL118:
 755:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   pmap = USB_ADDR2PTR(udp->RXADDR0);
 1730              		.loc 1 755 3 is_stmt 1 view .LVU481
 1731 0010 02F10800 		add	r0, r2, #8
 1732              	.LVL119:
 1733              		.loc 1 755 10 is_stmt 0 view .LVU482
 1734 0014 8B68     		ldr	r3, [r1, #8]
 1735 0016 03F10053 		add	r3, r3, #536870912
 1736 001a 03F54053 		add	r3, r3, #12288
 1737 001e 5B00     		lsls	r3, r3, #1
 1738              	.LVL120:
 756:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (n = 0; n < 4; n++) {
 1739              		.loc 1 756 3 is_stmt 1 view .LVU483
 1740              		.loc 1 756 15 view .LVU484
 1741              	.L121:
 757:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(uint16_t *)buf = (uint16_t)*pmap++;
 1742              		.loc 1 757 5 discriminator 3 view .LVU485
 1743              		.loc 1 757 24 is_stmt 0 discriminator 3 view .LVU486
 1744 0020 1968     		ldr	r1, [r3]
 1745 0022 22F8021B 		strh	r1, [r2], #2	@ movhi
 1746              	.LVL121:
 758:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     buf += 2;
 1747              		.loc 1 758 5 is_stmt 1 discriminator 3 view .LVU487
 756:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (n = 0; n < 4; n++) {
 1748              		.loc 1 756 22 discriminator 3 view .LVU488
 756:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (n = 0; n < 4; n++) {
 1749              		.loc 1 756 3 is_stmt 0 discriminator 3 view .LVU489
 1750 0026 9042     		cmp	r0, r2
 757:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     *(uint16_t *)buf = (uint16_t)*pmap++;
 1751              		.loc 1 757 24 discriminator 3 view .LVU490
 1752 0028 03F10403 		add	r3, r3, #4
 1753              	.LVL122:
 756:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (n = 0; n < 4; n++) {
 1754              		.loc 1 756 15 is_stmt 1 discriminator 3 view .LVU491
 756:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   for (n = 0; n < 4; n++) {
 1755              		.loc 1 756 3 is_stmt 0 discriminator 3 view .LVU492
 1756 002c F8D1     		bne	.L121
 759:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   }
 760:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1757              		.loc 1 760 1 view .LVU493
 1758 002e 7047     		bx	lr
 1759              	.L124:
 1760              		.align	2
 1761              	.L123:
 1762 0030 005C0040 		.word	1073765376
 1763              		.cfi_endproc
 1764              	.LFE293:
 1766              		.section	.text.usb_lld_start_out,"ax",%progbits
 1767              		.align	1
 1768              		.global	usb_lld_start_out
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1772              		.fpu fpv4-sp-d16
 1774              	usb_lld_start_out:
 1775              	.LVL123:
 1776              	.LFB294:
 761:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 762:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 763:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Starts a receive operation on an OUT endpoint.
 764:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 765:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 766:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 767:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 768:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 769:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 770:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_start_out(USBDriver *usbp, usbep_t ep) {
 1777              		.loc 1 770 53 is_stmt 1 view -0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 771:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBOutEndpointState *osp = usbp->epc[ep]->out_state;
 1781              		.loc 1 771 3 view .LVU495
 1782              		.loc 1 771 39 is_stmt 0 view .LVU496
 1783 0000 00EB8100 		add	r0, r0, r1, lsl #2
 1784              	.LVL124:
 770:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBOutEndpointState *osp = usbp->epc[ep]->out_state;
 1785              		.loc 1 770 53 view .LVU497
 1786 0004 10B5     		push	{r4, lr}
 1787              		.cfi_def_cfa_offset 8
 1788              		.cfi_offset 4, -8
 1789              		.cfi_offset 14, -4
 1790              		.loc 1 771 39 view .LVU498
 1791 0006 C368     		ldr	r3, [r0, #12]
 1792              		.loc 1 771 24 view .LVU499
 1793 0008 9869     		ldr	r0, [r3, #24]
 1794              	.LVL125:
 772:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 773:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Transfer initialization.*/
 774:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (osp->rxsize == 0)         /* Special case for zero sized packets.*/
 1795              		.loc 1 774 3 is_stmt 1 view .LVU500
 1796              		.loc 1 774 10 is_stmt 0 view .LVU501
 1797 000a 0268     		ldr	r2, [r0]
 1798              		.loc 1 774 6 view .LVU502
 1799 000c B2B1     		cbz	r2, .L127
 775:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osp->rxpkts = 1;
 776:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   else
 777:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osp->rxpkts = (uint16_t)((osp->rxsize + usbp->epc[ep]->out_maxsize - 1) /
 1800              		.loc 1 777 5 is_stmt 1 view .LVU503
 1801              		.loc 1 777 58 is_stmt 0 view .LVU504
 1802 000e 5C8A     		ldrh	r4, [r3, #18]
 1803              		.loc 1 777 43 view .LVU505
 1804 0010 1319     		adds	r3, r2, r4
 1805              		.loc 1 777 72 view .LVU506
 1806 0012 013B     		subs	r3, r3, #1
 1807              		.loc 1 777 77 view .LVU507
 1808 0014 B3FBF4F3 		udiv	r3, r3, r4
 1809              		.loc 1 777 19 view .LVU508
 1810 0018 9BB2     		uxth	r3, r3
 1811              	.L126:
 778:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****                              usbp->epc[ep]->out_maxsize);
 779:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 780:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_RX(ep, EPR_STAT_RX_VALID);
 1812              		.loc 1 780 3 view .LVU509
 1813 001a 094A     		ldr	r2, .L128
 1814 001c 0382     		strh	r3, [r0, #16]	@ movhi
 1815              		.loc 1 780 3 is_stmt 1 view .LVU510
 1816 001e 52F82130 		ldr	r3, [r2, r1, lsl #2]
 1817 0022 23F49043 		bic	r3, r3, #18432
 1818 0026 23F07003 		bic	r3, r3, #112
 1819 002a 83F44053 		eor	r3, r3, #12288
 1820 002e 43F40043 		orr	r3, r3, #32768
 1821 0032 43F08003 		orr	r3, r3, #128
 1822 0036 42F82130 		str	r3, [r2, r1, lsl #2]
 781:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1823              		.loc 1 781 1 is_stmt 0 view .LVU511
 1824 003a 10BD     		pop	{r4, pc}
 1825              	.L127:
 775:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     osp->rxpkts = 1;
 1826              		.loc 1 775 17 view .LVU512
 1827 003c 0123     		movs	r3, #1
 1828 003e ECE7     		b	.L126
 1829              	.L129:
 1830              		.align	2
 1831              	.L128:
 1832 0040 005C0040 		.word	1073765376
 1833              		.cfi_endproc
 1834              	.LFE294:
 1836              		.section	.text.usb_lld_start_in,"ax",%progbits
 1837              		.align	1
 1838              		.global	usb_lld_start_in
 1839              		.syntax unified
 1840              		.thumb
 1841              		.thumb_func
 1842              		.fpu fpv4-sp-d16
 1844              	usb_lld_start_in:
 1845              	.LVL126:
 1846              	.LFB295:
 782:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 783:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 784:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Starts a transmit operation on an IN endpoint.
 785:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 786:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 787:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 788:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 789:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 790:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 791:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_start_in(USBDriver *usbp, usbep_t ep) {
 1847              		.loc 1 791 52 is_stmt 1 view -0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 792:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 1851              		.loc 1 792 3 view .LVU514
 793:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   USBInEndpointState *isp = usbp->epc[ep]->in_state;
 1852              		.loc 1 793 3 view .LVU515
 1853              		.loc 1 793 38 is_stmt 0 view .LVU516
 1854 0000 00EB8100 		add	r0, r0, r1, lsl #2
 1855              	.LVL127:
 791:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 1856              		.loc 1 791 52 view .LVU517
 1857 0004 10B5     		push	{r4, lr}
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 4, -8
 1860              		.cfi_offset 14, -4
 791:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   size_t n;
 1861              		.loc 1 791 52 view .LVU518
 1862 0006 0C46     		mov	r4, r1
 1863              		.loc 1 793 38 view .LVU519
 1864 0008 C168     		ldr	r1, [r0, #12]
 1865              	.LVL128:
 1866              		.loc 1 793 23 view .LVU520
 1867 000a 4B69     		ldr	r3, [r1, #20]
 1868              	.LVL129:
 794:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 795:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Transfer initialization.*/
 796:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   n = isp->txsize;
 1869              		.loc 1 796 3 is_stmt 1 view .LVU521
 797:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (n > (size_t)usbp->epc[ep]->in_maxsize)
 1870              		.loc 1 797 11 is_stmt 0 view .LVU522
 1871 000c 0A8A     		ldrh	r2, [r1, #16]
 796:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if (n > (size_t)usbp->epc[ep]->in_maxsize)
 1872              		.loc 1 796 5 view .LVU523
 1873 000e 1868     		ldr	r0, [r3]
 1874              	.LVL130:
 1875              		.loc 1 797 3 is_stmt 1 view .LVU524
 798:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     n = (size_t)usbp->epc[ep]->in_maxsize;
 799:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 800:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   isp->txlast = n;
 801:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_packet_write_from_buffer(ep, isp->txbuf, n);
 1876              		.loc 1 801 3 is_stmt 0 view .LVU525
 1877 0010 9968     		ldr	r1, [r3, #8]
 1878 0012 8242     		cmp	r2, r0
 1879 0014 28BF     		it	cs
 1880 0016 0246     		movcs	r2, r0
 1881              	.LVL131:
 800:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_packet_write_from_buffer(ep, isp->txbuf, n);
 1882              		.loc 1 800 3 is_stmt 1 view .LVU526
 800:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   usb_packet_write_from_buffer(ep, isp->txbuf, n);
 1883              		.loc 1 800 15 is_stmt 0 view .LVU527
 1884 0018 1A61     		str	r2, [r3, #16]
 1885              		.loc 1 801 3 is_stmt 1 view .LVU528
 1886 001a 2046     		mov	r0, r4
 1887 001c FFF7FEFF 		bl	usb_packet_write_from_buffer
 1888              	.LVL132:
 802:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 803:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_TX(ep, EPR_STAT_TX_VALID);
 1889              		.loc 1 803 3 view .LVU529
 1890 0020 074A     		ldr	r2, .L131
 1891 0022 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1892 0026 23F4F043 		bic	r3, r3, #30720
 1893 002a 23F04003 		bic	r3, r3, #64
 1894 002e 83F03003 		eor	r3, r3, #48
 1895 0032 43F40043 		orr	r3, r3, #32768
 1896 0036 43F08003 		orr	r3, r3, #128
 1897 003a 42F82430 		str	r3, [r2, r4, lsl #2]
 804:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1898              		.loc 1 804 1 is_stmt 0 view .LVU530
 1899 003e 10BD     		pop	{r4, pc}
 1900              	.L132:
 1901              		.align	2
 1902              	.L131:
 1903 0040 005C0040 		.word	1073765376
 1904              		.cfi_endproc
 1905              	.LFE295:
 1907              		.section	.text.usb_lld_stall_out,"ax",%progbits
 1908              		.align	1
 1909              		.global	usb_lld_stall_out
 1910              		.syntax unified
 1911              		.thumb
 1912              		.thumb_func
 1913              		.fpu fpv4-sp-d16
 1915              	usb_lld_stall_out:
 1916              	.LVL133:
 1917              	.LFB296:
 805:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 806:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 807:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an OUT endpoint in the stalled state.
 808:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 809:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 810:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 811:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 812:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 813:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 814:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_stall_out(USBDriver *usbp, usbep_t ep) {
 1918              		.loc 1 814 53 is_stmt 1 view -0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 0
 1921              		@ frame_needed = 0, uses_anonymous_args = 0
 1922              		@ link register save eliminated.
 815:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 816:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 1923              		.loc 1 816 3 view .LVU532
 817:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 818:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_RX(ep, EPR_STAT_RX_STALL);
 1924              		.loc 1 818 3 view .LVU533
 1925 0000 074A     		ldr	r2, .L134
 1926 0002 52F82130 		ldr	r3, [r2, r1, lsl #2]
 1927 0006 23F49043 		bic	r3, r3, #18432
 1928 000a 23F07003 		bic	r3, r3, #112
 1929 000e 83F48053 		eor	r3, r3, #4096
 1930 0012 43F40043 		orr	r3, r3, #32768
 1931 0016 43F08003 		orr	r3, r3, #128
 1932 001a 42F82130 		str	r3, [r2, r1, lsl #2]
 819:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1933              		.loc 1 819 1 is_stmt 0 view .LVU534
 1934 001e 7047     		bx	lr
 1935              	.L135:
 1936              		.align	2
 1937              	.L134:
 1938 0020 005C0040 		.word	1073765376
 1939              		.cfi_endproc
 1940              	.LFE296:
 1942              		.section	.text.usb_lld_stall_in,"ax",%progbits
 1943              		.align	1
 1944              		.global	usb_lld_stall_in
 1945              		.syntax unified
 1946              		.thumb
 1947              		.thumb_func
 1948              		.fpu fpv4-sp-d16
 1950              	usb_lld_stall_in:
 1951              	.LVL134:
 1952              	.LFB297:
 820:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 821:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 822:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an IN endpoint in the stalled state.
 823:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 824:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 825:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 826:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 827:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 828:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 829:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_stall_in(USBDriver *usbp, usbep_t ep) {
 1953              		.loc 1 829 52 is_stmt 1 view -0
 1954              		.cfi_startproc
 1955              		@ args = 0, pretend = 0, frame = 0
 1956              		@ frame_needed = 0, uses_anonymous_args = 0
 1957              		@ link register save eliminated.
 830:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 831:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 1958              		.loc 1 831 3 view .LVU536
 832:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 833:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   EPR_SET_STAT_TX(ep, EPR_STAT_TX_STALL);
 1959              		.loc 1 833 3 view .LVU537
 1960 0000 074A     		ldr	r2, .L137
 1961 0002 52F82130 		ldr	r3, [r2, r1, lsl #2]
 1962 0006 23F4F043 		bic	r3, r3, #30720
 1963 000a 23F04003 		bic	r3, r3, #64
 1964 000e 83F01003 		eor	r3, r3, #16
 1965 0012 43F40043 		orr	r3, r3, #32768
 1966 0016 43F08003 		orr	r3, r3, #128
 1967 001a 42F82130 		str	r3, [r2, r1, lsl #2]
 834:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 1968              		.loc 1 834 1 is_stmt 0 view .LVU538
 1969 001e 7047     		bx	lr
 1970              	.L138:
 1971              		.align	2
 1972              	.L137:
 1973 0020 005C0040 		.word	1073765376
 1974              		.cfi_endproc
 1975              	.LFE297:
 1977              		.section	.text.usb_lld_clear_out,"ax",%progbits
 1978              		.align	1
 1979              		.global	usb_lld_clear_out
 1980              		.syntax unified
 1981              		.thumb
 1982              		.thumb_func
 1983              		.fpu fpv4-sp-d16
 1985              	usb_lld_clear_out:
 1986              	.LVL135:
 1987              	.LFB298:
 835:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 836:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 837:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an OUT endpoint in the active state.
 838:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 839:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 840:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 841:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 842:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 843:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 844:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_clear_out(USBDriver *usbp, usbep_t ep) {
 1988              		.loc 1 844 53 is_stmt 1 view -0
 1989              		.cfi_startproc
 1990              		@ args = 0, pretend = 0, frame = 0
 1991              		@ frame_needed = 0, uses_anonymous_args = 0
 1992              		@ link register save eliminated.
 845:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 846:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 1993              		.loc 1 846 3 view .LVU540
 847:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 848:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Makes sure to not put to NAK an endpoint that is already
 849:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      transferring.*/
 850:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if ((STM32_USB->EPR[ep] & EPR_STAT_RX_MASK) != EPR_STAT_RX_VALID)
 1994              		.loc 1 850 3 view .LVU541
 1995 0000 8900     		lsls	r1, r1, #2
 1996              	.LVL136:
 1997              		.loc 1 850 3 is_stmt 0 view .LVU542
 1998 0002 01F18041 		add	r1, r1, #1073741824
 1999 0006 01F5B841 		add	r1, r1, #23552
 2000              		.loc 1 850 22 view .LVU543
 2001 000a 0B68     		ldr	r3, [r1]
 2002              		.loc 1 850 27 view .LVU544
 2003 000c 03F44053 		and	r3, r3, #12288
 2004              		.loc 1 850 6 view .LVU545
 2005 0010 B3F5405F 		cmp	r3, #12288
 2006 0014 09D0     		beq	.L139
 851:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_SET_STAT_TX(ep, EPR_STAT_RX_NAK);
 2007              		.loc 1 851 5 is_stmt 1 view .LVU546
 2008 0016 0B68     		ldr	r3, [r1]
 2009 0018 23F4F043 		bic	r3, r3, #30720
 2010 001c 23F04003 		bic	r3, r3, #64
 2011 0020 43F42043 		orr	r3, r3, #40960
 2012 0024 43F08003 		orr	r3, r3, #128
 2013 0028 0B60     		str	r3, [r1]
 2014              	.L139:
 852:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 2015              		.loc 1 852 1 is_stmt 0 view .LVU547
 2016 002a 7047     		bx	lr
 2017              		.cfi_endproc
 2018              	.LFE298:
 2020              		.section	.text.usb_lld_clear_in,"ax",%progbits
 2021              		.align	1
 2022              		.global	usb_lld_clear_in
 2023              		.syntax unified
 2024              		.thumb
 2025              		.thumb_func
 2026              		.fpu fpv4-sp-d16
 2028              	usb_lld_clear_in:
 2029              	.LVL137:
 2030              	.LFB299:
 853:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 854:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** /**
 855:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @brief   Brings an IN endpoint in the active state.
 856:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 857:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 858:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @param[in] ep        endpoint number
 859:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  *
 860:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  * @notapi
 861:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****  */
 862:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** void usb_lld_clear_in(USBDriver *usbp, usbep_t ep) {
 2031              		.loc 1 862 52 is_stmt 1 view -0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 0
 2034              		@ frame_needed = 0, uses_anonymous_args = 0
 2035              		@ link register save eliminated.
 863:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 864:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   (void)usbp;
 2036              		.loc 1 864 3 view .LVU549
 865:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** 
 866:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   /* Makes sure to not put to NAK an endpoint that is already
 867:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****      transferring.*/
 868:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****   if ((STM32_USB->EPR[ep] & EPR_STAT_TX_MASK) != EPR_STAT_TX_VALID)
 2037              		.loc 1 868 3 view .LVU550
 2038 0000 8900     		lsls	r1, r1, #2
 2039              	.LVL138:
 2040              		.loc 1 868 3 is_stmt 0 view .LVU551
 2041 0002 01F18041 		add	r1, r1, #1073741824
 2042 0006 01F5B841 		add	r1, r1, #23552
 2043              		.loc 1 868 22 view .LVU552
 2044 000a 0B68     		ldr	r3, [r1]
 2045              		.loc 1 868 27 view .LVU553
 2046 000c 03F03003 		and	r3, r3, #48
 2047              		.loc 1 868 6 view .LVU554
 2048 0010 302B     		cmp	r3, #48
 2049 0012 0BD0     		beq	.L144
 869:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c ****     EPR_SET_STAT_TX(ep, EPR_STAT_TX_NAK);
 2050              		.loc 1 869 5 is_stmt 1 view .LVU555
 2051 0014 0B68     		ldr	r3, [r1]
 2052 0016 23F4F043 		bic	r3, r3, #30720
 2053 001a 23F04003 		bic	r3, r3, #64
 2054 001e 83F02003 		eor	r3, r3, #32
 2055 0022 43F40043 		orr	r3, r3, #32768
 2056 0026 43F08003 		orr	r3, r3, #128
 2057 002a 0B60     		str	r3, [r1]
 2058              	.L144:
 870:lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.c **** }
 2059              		.loc 1 870 1 is_stmt 0 view .LVU556
 2060 002c 7047     		bx	lr
 2061              		.cfi_endproc
 2062              	.LFE299:
 2064              		.comm	USBD1,136,4
 2065              		.section	.bss.ep0_state,"aw",%nobits
 2066              		.align	2
 2069              	ep0_state:
 2070 0000 00000000 		.space	20
 2070      00000000 
 2070      00000000 
 2070      00000000 
 2070      00000000 
 2071              		.section	.bss.ep0setup_buffer,"aw",%nobits
 2074              	ep0setup_buffer:
 2075 0000 00000000 		.space	8
 2075      00000000 
 2076              		.section	.rodata.ep0config,"a"
 2077              		.align	2
 2078              		.set	.LANCHOR0,. + 0
 2081              	ep0config:
 2082 0000 00000000 		.word	0
 2083 0004 00000000 		.word	_usb_ep0setup
 2084 0008 00000000 		.word	_usb_ep0in
 2085 000c 00000000 		.word	_usb_ep0out
 2086 0010 4000     		.short	64
 2087 0012 4000     		.short	64
 2088 0014 00000000 		.word	ep0_state
 2089 0018 00000000 		.word	ep0_state
 2090 001c 0100     		.short	1
 2091 001e 0000     		.space	2
 2092 0020 00000000 		.word	ep0setup_buffer
 2093              		.text
 2094              	.Letext0:
 2095              		.file 6 "c:\\qmk_msys\\mingw64\\lib\\gcc\\arm-none-eabi\\10.1.0\\include\\stddef.h"
 2096              		.file 7 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 2097              		.file 8 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 2098              		.file 9 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2099              		.file 10 "./lib/chibios/os/rt/include/chsystypes.h"
 2100              		.file 11 "./lib/chibios/os/rt/include/chschd.h"
 2101              		.file 12 "./lib/chibios/os/common/ext/ST/STM32F3xx/stm32f303xc.h"
 2102              		.file 13 "./lib/chibios/os/rt/include/chsem.h"
 2103              		.file 14 "./lib/chibios/os/rt/include/chmtx.h"
 2104              		.file 15 "./lib/chibios/os/hal/include/hal_usb.h"
 2105              		.file 16 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 2106              		.file 17 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/stm32_usb.h"
 2107              		.file 18 "./lib/chibios/os/hal/ports/common/ARMCMx/nvic.h"
 2108              		.file 19 "./lib/chibios/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_usb_lld.c
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:18     .text.usb_packet_write_from_buffer:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:25     .text.usb_packet_write_from_buffer:0000000000000000 usb_packet_write_from_buffer
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:88     .text.usb_packet_write_from_buffer:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:94     .text.Vector16C:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:101    .text.Vector16C:0000000000000000 Vector16C
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:992    .text.Vector16C:000000000000022c $d
                            *COM*:0000000000000088 USBD1
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1002   .text.usb_lld_init:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1009   .text.usb_lld_init:0000000000000000 usb_lld_init
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1023   .text.usb_lld_init:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1028   .text.usb_lld_stop:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1035   .text.usb_lld_stop:0000000000000000 usb_lld_stop
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1086   .text.usb_lld_stop:0000000000000030 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1092   .text.usb_lld_set_address:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1099   .text.usb_lld_set_address:0000000000000000 usb_lld_set_address
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1121   .text.usb_lld_set_address:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1126   .text.usb_lld_init_endpoint:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1133   .text.usb_lld_init_endpoint:0000000000000000 usb_lld_init_endpoint
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1373   .text.usb_lld_init_endpoint:00000000000000dc $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1380   .text.usb_lld_reset:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1387   .text.usb_lld_reset:0000000000000000 usb_lld_reset
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1462   .text.usb_lld_reset:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1468   .text.usb_lld_start:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1475   .text.usb_lld_start:0000000000000000 usb_lld_start
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1554   .text.usb_lld_start:0000000000000040 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1561   .text.usb_lld_disable_endpoints:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1568   .text.usb_lld_disable_endpoints:0000000000000000 usb_lld_disable_endpoints
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1625   .text.usb_lld_get_status_out:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1632   .text.usb_lld_get_status_out:0000000000000000 usb_lld_get_status_out
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1659   .text.usb_lld_get_status_out:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1664   .text.usb_lld_get_status_in:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1671   .text.usb_lld_get_status_in:0000000000000000 usb_lld_get_status_in
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1698   .text.usb_lld_get_status_in:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1703   .text.usb_lld_read_setup:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1710   .text.usb_lld_read_setup:0000000000000000 usb_lld_read_setup
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1762   .text.usb_lld_read_setup:0000000000000030 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1767   .text.usb_lld_start_out:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1774   .text.usb_lld_start_out:0000000000000000 usb_lld_start_out
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1832   .text.usb_lld_start_out:0000000000000040 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1837   .text.usb_lld_start_in:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1844   .text.usb_lld_start_in:0000000000000000 usb_lld_start_in
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1903   .text.usb_lld_start_in:0000000000000040 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1908   .text.usb_lld_stall_out:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1915   .text.usb_lld_stall_out:0000000000000000 usb_lld_stall_out
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1938   .text.usb_lld_stall_out:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1943   .text.usb_lld_stall_in:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1950   .text.usb_lld_stall_in:0000000000000000 usb_lld_stall_in
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1973   .text.usb_lld_stall_in:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1978   .text.usb_lld_clear_out:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:1985   .text.usb_lld_clear_out:0000000000000000 usb_lld_clear_out
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2021   .text.usb_lld_clear_in:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2028   .text.usb_lld_clear_in:0000000000000000 usb_lld_clear_in
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2066   .bss.ep0_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2069   .bss.ep0_state:0000000000000000 ep0_state
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2074   .bss.ep0setup_buffer:0000000000000000 ep0setup_buffer
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2075   .bss.ep0setup_buffer:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2077   .rodata.ep0config:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccCQSGHH.s:2081   .rodata.ep0config:0000000000000000 ep0config

UNDEFINED SYMBOLS
_usb_reset
_usb_suspend
_usb_wakeup
_port_irq_epilogue
chThdResumeI
usbObjectInit
nvicDisableVector
nvicEnableVector
_usb_ep0setup
_usb_ep0in
_usb_ep0out
