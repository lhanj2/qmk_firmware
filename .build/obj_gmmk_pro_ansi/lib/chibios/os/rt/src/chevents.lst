   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"chevents.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.chEvtRegisterMaskWithFlags,"ax",%progbits
  18              		.align	1
  19              		.global	chEvtRegisterMaskWithFlags
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	chEvtRegisterMaskWithFlags:
  27              	.LVL0:
  28              	.LFB239:
  29              		.file 1 "lib/chibios/os/rt/src/chevents.c"
   1:lib/chibios/os/rt/src/chevents.c **** /*
   2:lib/chibios/os/rt/src/chevents.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:lib/chibios/os/rt/src/chevents.c **** 
   4:lib/chibios/os/rt/src/chevents.c ****     This file is part of ChibiOS.
   5:lib/chibios/os/rt/src/chevents.c **** 
   6:lib/chibios/os/rt/src/chevents.c ****     ChibiOS is free software; you can redistribute it and/or modify
   7:lib/chibios/os/rt/src/chevents.c ****     it under the terms of the GNU General Public License as published by
   8:lib/chibios/os/rt/src/chevents.c ****     the Free Software Foundation; either version 3 of the License, or
   9:lib/chibios/os/rt/src/chevents.c ****     (at your option) any later version.
  10:lib/chibios/os/rt/src/chevents.c **** 
  11:lib/chibios/os/rt/src/chevents.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:lib/chibios/os/rt/src/chevents.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:lib/chibios/os/rt/src/chevents.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:lib/chibios/os/rt/src/chevents.c ****     GNU General Public License for more details.
  15:lib/chibios/os/rt/src/chevents.c **** 
  16:lib/chibios/os/rt/src/chevents.c ****     You should have received a copy of the GNU General Public License
  17:lib/chibios/os/rt/src/chevents.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:lib/chibios/os/rt/src/chevents.c **** */
  19:lib/chibios/os/rt/src/chevents.c **** /*
  20:lib/chibios/os/rt/src/chevents.c ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:lib/chibios/os/rt/src/chevents.c ****  */
  22:lib/chibios/os/rt/src/chevents.c **** 
  23:lib/chibios/os/rt/src/chevents.c **** /**
  24:lib/chibios/os/rt/src/chevents.c ****  * @file    rt/src/chevents.c
  25:lib/chibios/os/rt/src/chevents.c ****  * @brief   Events code.
  26:lib/chibios/os/rt/src/chevents.c ****  *
  27:lib/chibios/os/rt/src/chevents.c ****  * @addtogroup events
  28:lib/chibios/os/rt/src/chevents.c ****  * @details Event Flags, Event Sources and Event Listeners.
  29:lib/chibios/os/rt/src/chevents.c ****  *          <h2>Operation mode</h2>
  30:lib/chibios/os/rt/src/chevents.c ****  *          Each thread has a mask of pending events inside its
  31:lib/chibios/os/rt/src/chevents.c ****  *          @p thread_t structure.
  32:lib/chibios/os/rt/src/chevents.c ****  *          Operations defined for events:
  33:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Wait</b>, the invoking thread goes to sleep until a certain
  34:lib/chibios/os/rt/src/chevents.c ****  *            AND/OR combination of events are signaled.
  35:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Clear</b>, a mask of events is cleared from the pending
  36:lib/chibios/os/rt/src/chevents.c ****  *            events, the cleared events mask is returned (only the
  37:lib/chibios/os/rt/src/chevents.c ****  *            events that were actually pending and then cleared).
  38:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Signal</b>, an events mask is directly ORed to the mask of
  39:lib/chibios/os/rt/src/chevents.c ****  *            the signaled thread.
  40:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Broadcast</b>, each thread registered on an Event Source is
  41:lib/chibios/os/rt/src/chevents.c ****  *            signaled with the events specified in its Event Listener.
  42:lib/chibios/os/rt/src/chevents.c ****  *          - <b>Dispatch</b>, an events mask is scanned and for each bit set
  43:lib/chibios/os/rt/src/chevents.c ****  *            to one an associated handler function is invoked. Bit masks are
  44:lib/chibios/os/rt/src/chevents.c ****  *            scanned from bit zero upward.
  45:lib/chibios/os/rt/src/chevents.c ****  *          .
  46:lib/chibios/os/rt/src/chevents.c ****  *          An Event Source is a special object that can be "broadcasted" by
  47:lib/chibios/os/rt/src/chevents.c ****  *          a thread or an interrupt service routine. Broadcasting an Event
  48:lib/chibios/os/rt/src/chevents.c ****  *          Source has the effect that all the threads registered on the
  49:lib/chibios/os/rt/src/chevents.c ****  *          Event Source will be signaled with an events mask.<br>
  50:lib/chibios/os/rt/src/chevents.c ****  *          An unlimited number of Event Sources can exists in a system and
  51:lib/chibios/os/rt/src/chevents.c ****  *          each thread can be listening on an unlimited number of
  52:lib/chibios/os/rt/src/chevents.c ****  *          them.
  53:lib/chibios/os/rt/src/chevents.c ****  * @pre     In order to use the Events APIs the @p CH_CFG_USE_EVENTS option
  54:lib/chibios/os/rt/src/chevents.c ****  *          must be enabled in @p chconf.h.
  55:lib/chibios/os/rt/src/chevents.c ****  * @post    Enabling events requires 1-4 (depending on the architecture)
  56:lib/chibios/os/rt/src/chevents.c ****  *          extra bytes in the @p thread_t structure.
  57:lib/chibios/os/rt/src/chevents.c ****  * @{
  58:lib/chibios/os/rt/src/chevents.c ****  */
  59:lib/chibios/os/rt/src/chevents.c **** 
  60:lib/chibios/os/rt/src/chevents.c **** #include "ch.h"
  61:lib/chibios/os/rt/src/chevents.c **** 
  62:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  63:lib/chibios/os/rt/src/chevents.c **** 
  64:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  65:lib/chibios/os/rt/src/chevents.c **** /* Module local definitions.                                                 */
  66:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  67:lib/chibios/os/rt/src/chevents.c **** 
  68:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  69:lib/chibios/os/rt/src/chevents.c **** /* Module exported variables.                                                */
  70:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  71:lib/chibios/os/rt/src/chevents.c **** 
  72:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  73:lib/chibios/os/rt/src/chevents.c **** /* Module local types.                                                       */
  74:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  75:lib/chibios/os/rt/src/chevents.c **** 
  76:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  77:lib/chibios/os/rt/src/chevents.c **** /* Module local variables.                                                   */
  78:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  79:lib/chibios/os/rt/src/chevents.c **** 
  80:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  81:lib/chibios/os/rt/src/chevents.c **** /* Module local functions.                                                   */
  82:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  83:lib/chibios/os/rt/src/chevents.c **** 
  84:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  85:lib/chibios/os/rt/src/chevents.c **** /* Module exported functions.                                                */
  86:lib/chibios/os/rt/src/chevents.c **** /*===========================================================================*/
  87:lib/chibios/os/rt/src/chevents.c **** 
  88:lib/chibios/os/rt/src/chevents.c **** /**
  89:lib/chibios/os/rt/src/chevents.c ****  * @brief   Registers an Event Listener on an Event Source.
  90:lib/chibios/os/rt/src/chevents.c ****  * @details Once a thread has registered as listener on an event source it
  91:lib/chibios/os/rt/src/chevents.c ****  *          will be notified of all events broadcasted there.
  92:lib/chibios/os/rt/src/chevents.c ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
  93:lib/chibios/os/rt/src/chevents.c ****  *          different threads.
  94:lib/chibios/os/rt/src/chevents.c ****  *
  95:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
  96:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
  97:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events to be ORed to the thread when
  98:lib/chibios/os/rt/src/chevents.c ****  *                      the event source is broadcasted
  99:lib/chibios/os/rt/src/chevents.c ****  * @param[in] wflags    mask of flags the listening thread is interested in
 100:lib/chibios/os/rt/src/chevents.c ****  *
 101:lib/chibios/os/rt/src/chevents.c ****  * @api
 102:lib/chibios/os/rt/src/chevents.c ****  */
 103:lib/chibios/os/rt/src/chevents.c **** void chEvtRegisterMaskWithFlags(event_source_t *esp,
 104:lib/chibios/os/rt/src/chevents.c ****                                 event_listener_t *elp,
 105:lib/chibios/os/rt/src/chevents.c ****                                 eventmask_t events,
 106:lib/chibios/os/rt/src/chevents.c ****                                 eventflags_t wflags) {
  30              		.loc 1 106 54 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 107:lib/chibios/os/rt/src/chevents.c **** 
 108:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
  34              		.loc 1 108 3 view .LVU1
  35              		.loc 1 108 3 view .LVU2
  36              		.loc 1 108 3 view .LVU3
 109:lib/chibios/os/rt/src/chevents.c **** 
 110:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
  37              		.loc 1 110 3 view .LVU4
  38              	.LBB174:
  39              	.LBI174:
  40              		.file 2 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
  41              		.loc 2 353 20 view .LVU5
  42              	.LBE174:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
  43              		.loc 2 355 3 view .LVU6
  44              	.LBB182:
  45              	.LBB175:
  46              	.LBI175:
  47              		.file 3 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
  48              		.loc 3 669 27 view .LVU7
  49              	.LBE175:
  50              	.LBE182:
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
  51              		.loc 3 677 3 view .LVU8
  52              	.LBB183:
  53              	.LBB180:
  54              	.LBB176:
  55              	.LBI176:
  56              		.file 4 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
  57              		.loc 4 491 27 view .LVU9
  58              	.LBB177:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
  59              		.loc 4 493 3 view .LVU10
  60              	.LBE177:
  61              	.LBE176:
  62              	.LBE180:
  63              	.LBE183:
 106:lib/chibios/os/rt/src/chevents.c **** 
  64              		.loc 1 106 54 is_stmt 0 view .LVU11
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69              	.LBB184:
  70              	.LBB181:
  71              	.LBB179:
  72              	.LBB178:
  73              		.loc 4 493 3 view .LVU12
  74 0002 2024     		movs	r4, #32
  75              		.syntax unified
  76              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
  77 0004 84F31188 		MSR basepri, r4
  78              	@ 0 "" 2
  79              	.LVL1:
  80              		.loc 4 493 3 view .LVU13
  81              		.thumb
  82              		.syntax unified
  83              	.LBE178:
  84              	.LBE179:
  85              	.LBE181:
  86              	.LBE184:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
  87              		.loc 2 356 34 is_stmt 1 view .LVU14
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
  88              		.loc 2 357 20 view .LVU15
 111:lib/chibios/os/rt/src/chevents.c ****   elp->next     = esp->next;
  89              		.loc 1 111 3 view .LVU16
  90              		.loc 1 111 17 is_stmt 0 view .LVU17
  91 0008 0468     		ldr	r4, [r0]
  92 000a 0C60     		str	r4, [r1]
 112:lib/chibios/os/rt/src/chevents.c ****   esp->next     = elp;
  93              		.loc 1 112 3 is_stmt 1 view .LVU18
  94              		.loc 1 112 17 is_stmt 0 view .LVU19
  95 000c 0160     		str	r1, [r0]
 113:lib/chibios/os/rt/src/chevents.c ****   elp->listener = currp;
  96              		.loc 1 113 3 is_stmt 1 view .LVU20
  97              		.loc 1 113 19 is_stmt 0 view .LVU21
  98 000e 0548     		ldr	r0, .L2
  99              	.LVL2:
 100              		.loc 1 113 17 view .LVU22
 101 0010 0069     		ldr	r0, [r0, #16]
 114:lib/chibios/os/rt/src/chevents.c ****   elp->events   = events;
 102              		.loc 1 114 17 view .LVU23
 103 0012 C1E90102 		strd	r0, r2, [r1, #4]
 115:lib/chibios/os/rt/src/chevents.c ****   elp->flags    = (eventflags_t)0;
 104              		.loc 1 115 3 is_stmt 1 view .LVU24
 105              		.loc 1 115 17 is_stmt 0 view .LVU25
 106 0016 0022     		movs	r2, #0
 107              	.LVL3:
 116:lib/chibios/os/rt/src/chevents.c ****   elp->wflags   = wflags;
 108              		.loc 1 116 17 view .LVU26
 109 0018 C1E90323 		strd	r2, r3, [r1, #12]
 117:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 110              		.loc 1 117 3 is_stmt 1 view .LVU27
 111              	.LBB185:
 112              	.LBI185:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 113              		.loc 2 365 20 view .LVU28
 114              	.LBB186:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 115              		.loc 2 367 22 view .LVU29
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 116              		.loc 2 368 33 view .LVU30
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 117              		.loc 2 374 3 view .LVU31
 118              		.loc 2 374 3 view .LVU32
 119              		.loc 2 374 3 view .LVU33
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 120              		.loc 2 378 3 view .LVU34
 121              	.LBB187:
 122              	.LBI187:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 123              		.loc 3 693 27 view .LVU35
 124              	.LBE187:
 125              	.LBE186:
 126              	.LBE185:
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 127              		.loc 3 696 3 view .LVU36
 128              	.LVL4:
 129              	.LBB192:
 130              	.LBB191:
 131              	.LBB190:
 132              	.LBB188:
 133              	.LBI188:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 134              		.loc 4 491 27 view .LVU37
 135              	.LBB189:
 136              		.loc 4 493 3 view .LVU38
 137              		.syntax unified
 138              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 139 001c 82F31188 		MSR basepri, r2
 140              	@ 0 "" 2
 141              	.LVL5:
 142              		.loc 4 493 3 is_stmt 0 view .LVU39
 143              		.thumb
 144              		.syntax unified
 145              	.LBE189:
 146              	.LBE188:
 147              	.LBE190:
 148              	.LBE191:
 149              	.LBE192:
 118:lib/chibios/os/rt/src/chevents.c **** }
 150              		.loc 1 118 1 view .LVU40
 151 0020 10BD     		pop	{r4, pc}
 152              	.L3:
 153 0022 00BF     		.align	2
 154              	.L2:
 155 0024 00000000 		.word	ch
 156              		.cfi_endproc
 157              	.LFE239:
 159              		.section	.text.chEvtUnregister,"ax",%progbits
 160              		.align	1
 161              		.global	chEvtUnregister
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	chEvtUnregister:
 168              	.LVL6:
 169              	.LFB240:
 119:lib/chibios/os/rt/src/chevents.c **** 
 120:lib/chibios/os/rt/src/chevents.c **** /**
 121:lib/chibios/os/rt/src/chevents.c ****  * @brief   Unregisters an Event Listener from its Event Source.
 122:lib/chibios/os/rt/src/chevents.c ****  * @note    If the event listener is not registered on the specified event
 123:lib/chibios/os/rt/src/chevents.c ****  *          source then the function does nothing.
 124:lib/chibios/os/rt/src/chevents.c ****  * @note    For optimal performance it is better to perform the unregister
 125:lib/chibios/os/rt/src/chevents.c ****  *          operations in inverse order of the register operations (elements
 126:lib/chibios/os/rt/src/chevents.c ****  *          are found on top of the list).
 127:lib/chibios/os/rt/src/chevents.c ****  *
 128:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the  @p event_source_t structure
 129:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 130:lib/chibios/os/rt/src/chevents.c ****  *
 131:lib/chibios/os/rt/src/chevents.c ****  * @api
 132:lib/chibios/os/rt/src/chevents.c ****  */
 133:lib/chibios/os/rt/src/chevents.c **** void chEvtUnregister(event_source_t *esp, event_listener_t *elp) {
 170              		.loc 1 133 66 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 134:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *p;
 175              		.loc 1 134 3 view .LVU42
 135:lib/chibios/os/rt/src/chevents.c **** 
 136:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck((esp != NULL) && (elp != NULL));
 176              		.loc 1 136 3 view .LVU43
 177              		.loc 1 136 3 view .LVU44
 178              		.loc 1 136 3 view .LVU45
 137:lib/chibios/os/rt/src/chevents.c **** 
 138:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 139:lib/chibios/os/rt/src/chevents.c ****   p = (event_listener_t *)esp;
 179              		.loc 1 139 3 view .LVU46
 140:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 141:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 180              		.loc 1 141 3 view .LVU47
 181              	.LBB193:
 182              	.LBI193:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 183              		.loc 2 353 20 view .LVU48
 184              	.LBB194:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 185              		.loc 2 355 3 view .LVU49
 186              	.LBB195:
 187              	.LBI195:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 188              		.loc 3 669 27 view .LVU50
 189              	.LBE195:
 190              	.LBE194:
 191              	.LBE193:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 192              		.loc 3 677 3 view .LVU51
 193              	.LBB200:
 194              	.LBB199:
 195              	.LBB198:
 196              	.LBB196:
 197              	.LBI196:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 198              		.loc 4 491 27 view .LVU52
 199              	.LBB197:
 200              		.loc 4 493 3 view .LVU53
 201 0000 2023     		movs	r3, #32
 202              		.syntax unified
 203              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 204 0002 83F31188 		MSR basepri, r3
 205              	@ 0 "" 2
 206              	.LVL7:
 207              		.loc 4 493 3 is_stmt 0 view .LVU54
 208              		.thumb
 209              		.syntax unified
 210              	.LBE197:
 211              	.LBE196:
 212              	.LBE198:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 213              		.loc 2 356 34 is_stmt 1 view .LVU55
 357:./lib/chibios/os/rt/include/chsys.h **** }
 214              		.loc 2 357 20 view .LVU56
 215              	.LBE199:
 216              	.LBE200:
 139:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 217              		.loc 1 139 5 is_stmt 0 view .LVU57
 218 0006 0346     		mov	r3, r0
 219              	.LVL8:
 220              	.L5:
 142:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 143:lib/chibios/os/rt/src/chevents.c ****   while (p->next != (event_listener_t *)esp) {
 221              		.loc 1 143 9 is_stmt 1 view .LVU58
 222 0008 1A46     		mov	r2, r3
 223              		.loc 1 143 11 is_stmt 0 view .LVU59
 224 000a 1B68     		ldr	r3, [r3]
 225              	.LVL9:
 226              		.loc 1 143 9 view .LVU60
 227 000c 8342     		cmp	r3, r0
 228 000e 03D0     		beq	.L6
 144:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 145:lib/chibios/os/rt/src/chevents.c ****     if (p->next == elp) {
 229              		.loc 1 145 5 is_stmt 1 view .LVU61
 230              		.loc 1 145 8 is_stmt 0 view .LVU62
 231 0010 8B42     		cmp	r3, r1
 232 0012 F9D1     		bne	.L5
 146:lib/chibios/os/rt/src/chevents.c ****       p->next = elp->next;
 233              		.loc 1 146 7 is_stmt 1 view .LVU63
 234              		.loc 1 146 20 is_stmt 0 view .LVU64
 235 0014 1B68     		ldr	r3, [r3]
 236              		.loc 1 146 15 view .LVU65
 237 0016 1360     		str	r3, [r2]
 147:lib/chibios/os/rt/src/chevents.c ****       break;
 238              		.loc 1 147 7 is_stmt 1 view .LVU66
 239              	.L6:
 148:lib/chibios/os/rt/src/chevents.c ****     }
 149:lib/chibios/os/rt/src/chevents.c ****     p = p->next;
 150:lib/chibios/os/rt/src/chevents.c ****   }
 151:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 240              		.loc 1 151 3 view .LVU67
 241              	.LBB201:
 242              	.LBI201:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 243              		.loc 2 365 20 view .LVU68
 244              	.LBB202:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 245              		.loc 2 367 22 view .LVU69
 368:./lib/chibios/os/rt/include/chsys.h **** 
 246              		.loc 2 368 33 view .LVU70
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 247              		.loc 2 374 3 view .LVU71
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 248              		.loc 2 374 3 view .LVU72
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 249              		.loc 2 374 3 view .LVU73
 250              		.loc 2 378 3 view .LVU74
 251              	.LBB203:
 252              	.LBI203:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253              		.loc 3 693 27 view .LVU75
 254              	.LBE203:
 255              	.LBE202:
 256              	.LBE201:
 257              		.loc 3 696 3 view .LVU76
 258              	.LVL10:
 259              	.LBB208:
 260              	.LBB207:
 261              	.LBB206:
 262              	.LBB204:
 263              	.LBI204:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264              		.loc 4 491 27 view .LVU77
 265              	.LBB205:
 266              		.loc 4 493 3 view .LVU78
 267 0018 0023     		movs	r3, #0
 268              		.syntax unified
 269              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 270 001a 83F31188 		MSR basepri, r3
 271              	@ 0 "" 2
 272              	.LVL11:
 273              		.loc 4 493 3 is_stmt 0 view .LVU79
 274              		.thumb
 275              		.syntax unified
 276              	.LBE205:
 277              	.LBE204:
 278              	.LBE206:
 279              	.LBE207:
 280              	.LBE208:
 152:lib/chibios/os/rt/src/chevents.c **** }
 281              		.loc 1 152 1 view .LVU80
 282 001e 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE240:
 286              		.section	.text.chEvtGetAndClearEventsI,"ax",%progbits
 287              		.align	1
 288              		.global	chEvtGetAndClearEventsI
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	chEvtGetAndClearEventsI:
 295              	.LVL12:
 296              	.LFB241:
 153:lib/chibios/os/rt/src/chevents.c **** 
 154:lib/chibios/os/rt/src/chevents.c **** /**
 155:lib/chibios/os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 156:lib/chibios/os/rt/src/chevents.c ****  *
 157:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 158:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 159:lib/chibios/os/rt/src/chevents.c ****  *
 160:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 161:lib/chibios/os/rt/src/chevents.c ****  */
 162:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEventsI(eventmask_t events) {
 297              		.loc 1 162 57 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 163:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 302              		.loc 1 163 3 view .LVU82
 164:lib/chibios/os/rt/src/chevents.c **** 
 165:lib/chibios/os/rt/src/chevents.c ****   m = currp->epending & events;
 303              		.loc 1 165 3 view .LVU83
 304              		.loc 1 165 7 is_stmt 0 view .LVU84
 305 0000 034B     		ldr	r3, .L10
 306 0002 1A69     		ldr	r2, [r3, #16]
 307              		.loc 1 165 12 view .LVU85
 308 0004 9369     		ldr	r3, [r2, #24]
 309              	.LVL13:
 166:lib/chibios/os/rt/src/chevents.c ****   currp->epending &= ~events;
 310              		.loc 1 166 3 is_stmt 1 view .LVU86
 311              		.loc 1 166 19 is_stmt 0 view .LVU87
 312 0006 23EA0001 		bic	r1, r3, r0
 313 000a 9161     		str	r1, [r2, #24]
 167:lib/chibios/os/rt/src/chevents.c **** 
 168:lib/chibios/os/rt/src/chevents.c ****   return m;
 314              		.loc 1 168 3 is_stmt 1 view .LVU88
 169:lib/chibios/os/rt/src/chevents.c **** }
 315              		.loc 1 169 1 is_stmt 0 view .LVU89
 316 000c 1840     		ands	r0, r0, r3
 317              	.LVL14:
 318              		.loc 1 169 1 view .LVU90
 319 000e 7047     		bx	lr
 320              	.L11:
 321              		.align	2
 322              	.L10:
 323 0010 00000000 		.word	ch
 324              		.cfi_endproc
 325              	.LFE241:
 327              		.section	.text.chEvtGetAndClearEvents,"ax",%progbits
 328              		.align	1
 329              		.global	chEvtGetAndClearEvents
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	chEvtGetAndClearEvents:
 336              	.LVL15:
 337              	.LFB242:
 170:lib/chibios/os/rt/src/chevents.c **** 
 171:lib/chibios/os/rt/src/chevents.c **** /**
 172:lib/chibios/os/rt/src/chevents.c ****  * @brief   Clears the pending events specified in the events mask.
 173:lib/chibios/os/rt/src/chevents.c ****  *
 174:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be cleared
 175:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of pending events that were cleared.
 176:lib/chibios/os/rt/src/chevents.c ****  *
 177:lib/chibios/os/rt/src/chevents.c ****  * @api
 178:lib/chibios/os/rt/src/chevents.c ****  */
 179:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtGetAndClearEvents(eventmask_t events) {
 338              		.loc 1 179 56 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 180:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 342              		.loc 1 180 3 view .LVU92
 181:lib/chibios/os/rt/src/chevents.c **** 
 182:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 343              		.loc 1 182 3 view .LVU93
 344              	.LBB209:
 345              	.LBI209:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 346              		.loc 2 353 20 view .LVU94
 347              	.LBE209:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 348              		.loc 2 355 3 view .LVU95
 349              	.LBB217:
 350              	.LBB210:
 351              	.LBI210:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 352              		.loc 3 669 27 view .LVU96
 353              	.LBE210:
 354              	.LBE217:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 355              		.loc 3 677 3 view .LVU97
 356              	.LBB218:
 357              	.LBB215:
 358              	.LBB211:
 359              	.LBI211:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 360              		.loc 4 491 27 view .LVU98
 361              	.LBB212:
 362              		.loc 4 493 3 view .LVU99
 363              	.LBE212:
 364              	.LBE211:
 365              	.LBE215:
 366              	.LBE218:
 179:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 367              		.loc 1 179 56 is_stmt 0 view .LVU100
 368 0000 08B5     		push	{r3, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 3, -8
 371              		.cfi_offset 14, -4
 372              	.LBB219:
 373              	.LBB216:
 374              	.LBB214:
 375              	.LBB213:
 376              		.loc 4 493 3 view .LVU101
 377 0002 2023     		movs	r3, #32
 378              		.syntax unified
 379              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 380 0004 83F31188 		MSR basepri, r3
 381              	@ 0 "" 2
 382              	.LVL16:
 383              		.loc 4 493 3 view .LVU102
 384              		.thumb
 385              		.syntax unified
 386              	.LBE213:
 387              	.LBE214:
 388              	.LBE216:
 389              	.LBE219:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 390              		.loc 2 356 34 is_stmt 1 view .LVU103
 357:./lib/chibios/os/rt/include/chsys.h **** }
 391              		.loc 2 357 20 view .LVU104
 183:lib/chibios/os/rt/src/chevents.c ****   m = chEvtGetAndClearEventsI(events);
 392              		.loc 1 183 3 view .LVU105
 393              		.loc 1 183 7 is_stmt 0 view .LVU106
 394 0008 FFF7FEFF 		bl	chEvtGetAndClearEventsI
 395              	.LVL17:
 184:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 396              		.loc 1 184 3 is_stmt 1 view .LVU107
 397              	.LBB220:
 398              	.LBI220:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 399              		.loc 2 365 20 view .LVU108
 400              	.LBB221:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 401              		.loc 2 367 22 view .LVU109
 368:./lib/chibios/os/rt/include/chsys.h **** 
 402              		.loc 2 368 33 view .LVU110
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 403              		.loc 2 374 3 view .LVU111
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 404              		.loc 2 374 3 view .LVU112
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 405              		.loc 2 374 3 view .LVU113
 406              		.loc 2 378 3 view .LVU114
 407              	.LBB222:
 408              	.LBI222:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 409              		.loc 3 693 27 view .LVU115
 410              	.LBE222:
 411              	.LBE221:
 412              	.LBE220:
 413              		.loc 3 696 3 view .LVU116
 414              	.LBB227:
 415              	.LBB226:
 416              	.LBB225:
 417              	.LBB223:
 418              	.LBI223:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 419              		.loc 4 491 27 view .LVU117
 420              	.LBB224:
 421              		.loc 4 493 3 view .LVU118
 422 000c 0023     		movs	r3, #0
 423              		.syntax unified
 424              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 425 000e 83F31188 		MSR basepri, r3
 426              	@ 0 "" 2
 427              	.LVL18:
 428              		.loc 4 493 3 is_stmt 0 view .LVU119
 429              		.thumb
 430              		.syntax unified
 431              	.LBE224:
 432              	.LBE223:
 433              	.LBE225:
 434              	.LBE226:
 435              	.LBE227:
 185:lib/chibios/os/rt/src/chevents.c **** 
 186:lib/chibios/os/rt/src/chevents.c ****   return m;
 436              		.loc 1 186 3 is_stmt 1 view .LVU120
 187:lib/chibios/os/rt/src/chevents.c **** }
 437              		.loc 1 187 1 is_stmt 0 view .LVU121
 438 0012 08BD     		pop	{r3, pc}
 439              		.cfi_endproc
 440              	.LFE242:
 442              		.section	.text.chEvtAddEvents,"ax",%progbits
 443              		.align	1
 444              		.global	chEvtAddEvents
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	chEvtAddEvents:
 451              	.LVL19:
 452              	.LFB243:
 188:lib/chibios/os/rt/src/chevents.c **** 
 189:lib/chibios/os/rt/src/chevents.c **** /**
 190:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds (OR) a set of events to the current thread, this is
 191:lib/chibios/os/rt/src/chevents.c ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 192:lib/chibios/os/rt/src/chevents.c ****  *
 193:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events to be added
 194:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of currently pending events.
 195:lib/chibios/os/rt/src/chevents.c ****  *
 196:lib/chibios/os/rt/src/chevents.c ****  * @api
 197:lib/chibios/os/rt/src/chevents.c ****  */
 198:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtAddEvents(eventmask_t events) {
 453              		.loc 1 198 48 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 199:lib/chibios/os/rt/src/chevents.c ****   eventmask_t newevt;
 458              		.loc 1 199 3 view .LVU123
 200:lib/chibios/os/rt/src/chevents.c **** 
 201:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 459              		.loc 1 201 3 view .LVU124
 460              	.LBB239:
 461              	.LBI239:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 462              		.loc 2 353 20 view .LVU125
 463              	.LBE239:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 464              		.loc 2 355 3 view .LVU126
 465              	.LBB244:
 466              	.LBB240:
 467              	.LBI240:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 468              		.loc 3 669 27 view .LVU127
 469              	.LBE240:
 470              	.LBE244:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 471              		.loc 3 677 3 view .LVU128
 472              	.LBB245:
 473              	.LBB243:
 474              	.LBB241:
 475              	.LBI241:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 476              		.loc 4 491 27 view .LVU129
 477              	.LBB242:
 478              		.loc 4 493 3 view .LVU130
 479 0000 2023     		movs	r3, #32
 480              		.syntax unified
 481              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 482 0002 83F31188 		MSR basepri, r3
 483              	@ 0 "" 2
 484              	.LVL20:
 485              		.loc 4 493 3 is_stmt 0 view .LVU131
 486              		.thumb
 487              		.syntax unified
 488              	.LBE242:
 489              	.LBE241:
 490              	.LBE243:
 491              	.LBE245:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 492              		.loc 2 356 34 is_stmt 1 view .LVU132
 357:./lib/chibios/os/rt/include/chsys.h **** }
 493              		.loc 2 357 20 view .LVU133
 202:lib/chibios/os/rt/src/chevents.c ****   newevt = chEvtAddEventsI(events);
 494              		.loc 1 202 3 view .LVU134
 495              	.LBB246:
 496              	.LBI246:
 497              		.file 5 "./lib/chibios/os/rt/include/chevents.h"
   1:./lib/chibios/os/rt/include/chevents.h **** /*
   2:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chevents.h **** 
   4:./lib/chibios/os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chevents.h **** 
   6:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chevents.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chevents.h **** 
  11:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chevents.h **** 
  16:./lib/chibios/os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chevents.h **** */
  19:./lib/chibios/os/rt/include/chevents.h **** /*
  20:./lib/chibios/os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:./lib/chibios/os/rt/include/chevents.h ****  */
  22:./lib/chibios/os/rt/include/chevents.h **** 
  23:./lib/chibios/os/rt/include/chevents.h **** /**
  24:./lib/chibios/os/rt/include/chevents.h ****  * @file    rt/include/chevents.h
  25:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:./lib/chibios/os/rt/include/chevents.h ****  *
  27:./lib/chibios/os/rt/include/chevents.h ****  * @addtogroup events
  28:./lib/chibios/os/rt/include/chevents.h ****  * @{
  29:./lib/chibios/os/rt/include/chevents.h ****  */
  30:./lib/chibios/os/rt/include/chevents.h **** 
  31:./lib/chibios/os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:./lib/chibios/os/rt/include/chevents.h **** #define CHEVENTS_H
  33:./lib/chibios/os/rt/include/chevents.h **** 
  34:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:./lib/chibios/os/rt/include/chevents.h **** 
  36:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  37:./lib/chibios/os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  39:./lib/chibios/os/rt/include/chevents.h **** 
  40:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  41:./lib/chibios/os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  43:./lib/chibios/os/rt/include/chevents.h **** 
  44:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  45:./lib/chibios/os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  47:./lib/chibios/os/rt/include/chevents.h **** 
  48:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  49:./lib/chibios/os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  51:./lib/chibios/os/rt/include/chevents.h **** 
  52:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:./lib/chibios/os/rt/include/chevents.h **** 
  54:./lib/chibios/os/rt/include/chevents.h **** /**
  55:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:./lib/chibios/os/rt/include/chevents.h ****  */
  57:./lib/chibios/os/rt/include/chevents.h **** struct event_listener {
  58:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the event
  60:./lib/chibios/os/rt/include/chevents.h ****                                                     source.                 */
  61:./lib/chibios/os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:./lib/chibios/os/rt/include/chevents.h ****                                                     event source.           */
  63:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:./lib/chibios/os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:./lib/chibios/os/rt/include/chevents.h ****                                                     by the event source.    */
  67:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:./lib/chibios/os/rt/include/chevents.h ****                                                     interested in.          */
  69:./lib/chibios/os/rt/include/chevents.h **** };
  70:./lib/chibios/os/rt/include/chevents.h **** 
  71:./lib/chibios/os/rt/include/chevents.h **** /**
  72:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:./lib/chibios/os/rt/include/chevents.h ****  */
  74:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_source {
  75:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the Event
  77:./lib/chibios/os/rt/include/chevents.h ****                                                     Source.                 */
  78:./lib/chibios/os/rt/include/chevents.h **** } event_source_t;
  79:./lib/chibios/os/rt/include/chevents.h **** 
  80:./lib/chibios/os/rt/include/chevents.h **** /**
  81:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:./lib/chibios/os/rt/include/chevents.h ****  */
  83:./lib/chibios/os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:./lib/chibios/os/rt/include/chevents.h **** 
  85:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  88:./lib/chibios/os/rt/include/chevents.h **** 
  89:./lib/chibios/os/rt/include/chevents.h **** /**
  90:./lib/chibios/os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:./lib/chibios/os/rt/include/chevents.h ****  */
  92:./lib/chibios/os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:./lib/chibios/os/rt/include/chevents.h **** 
  94:./lib/chibios/os/rt/include/chevents.h **** /**
  95:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:./lib/chibios/os/rt/include/chevents.h ****  */
  97:./lib/chibios/os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:./lib/chibios/os/rt/include/chevents.h **** 
  99:./lib/chibios/os/rt/include/chevents.h **** /**
 100:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:./lib/chibios/os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:./lib/chibios/os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:./lib/chibios/os/rt/include/chevents.h ****  */
 105:./lib/chibios/os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:./lib/chibios/os/rt/include/chevents.h **** 
 107:./lib/chibios/os/rt/include/chevents.h **** /**
 108:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:./lib/chibios/os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:./lib/chibios/os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:./lib/chibios/os/rt/include/chevents.h ****  *
 112:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:./lib/chibios/os/rt/include/chevents.h ****  */
 114:./lib/chibios/os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:./lib/chibios/os/rt/include/chevents.h **** 
 116:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 119:./lib/chibios/os/rt/include/chevents.h **** 
 120:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 121:./lib/chibios/os/rt/include/chevents.h **** extern "C" {
 122:./lib/chibios/os/rt/include/chevents.h **** #endif
 123:./lib/chibios/os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:./lib/chibios/os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:./lib/chibios/os/rt/include/chevents.h ****                                   eventmask_t events,
 126:./lib/chibios/os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:./lib/chibios/os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEventsI(eventmask_t events);
 129:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 130:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 131:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 132:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 133:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 134:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 135:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 136:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 137:./lib/chibios/os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 138:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 139:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 140:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 141:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 142:./lib/chibios/os/rt/include/chevents.h **** #endif
 143:./lib/chibios/os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 144:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout);
 145:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout);
 146:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout);
 147:./lib/chibios/os/rt/include/chevents.h **** #endif
 148:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 149:./lib/chibios/os/rt/include/chevents.h **** }
 150:./lib/chibios/os/rt/include/chevents.h **** #endif
 151:./lib/chibios/os/rt/include/chevents.h **** 
 152:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 153:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 154:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 155:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 156:./lib/chibios/os/rt/include/chevents.h **** #endif
 157:./lib/chibios/os/rt/include/chevents.h **** 
 158:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 159:./lib/chibios/os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 160:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 161:./lib/chibios/os/rt/include/chevents.h **** 
 162:./lib/chibios/os/rt/include/chevents.h **** /**
 163:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 164:./lib/chibios/os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 165:./lib/chibios/os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 166:./lib/chibios/os/rt/include/chevents.h ****  *
 167:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 168:./lib/chibios/os/rt/include/chevents.h ****  *
 169:./lib/chibios/os/rt/include/chevents.h ****  * @init
 170:./lib/chibios/os/rt/include/chevents.h ****  */
 171:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 172:./lib/chibios/os/rt/include/chevents.h **** 
 173:./lib/chibios/os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 174:./lib/chibios/os/rt/include/chevents.h **** }
 175:./lib/chibios/os/rt/include/chevents.h **** 
 176:./lib/chibios/os/rt/include/chevents.h **** /**
 177:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 178:./lib/chibios/os/rt/include/chevents.h ****  * @details Once a thread has registered as listener on an event source it
 179:./lib/chibios/os/rt/include/chevents.h ****  *          will be notified of all events broadcasted there.
 180:./lib/chibios/os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can specify the same bits to be ORed to
 181:./lib/chibios/os/rt/include/chevents.h ****  *          different threads.
 182:./lib/chibios/os/rt/include/chevents.h ****  *
 183:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 184:./lib/chibios/os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 185:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] events    the mask of events to be ORed to the thread when
 186:./lib/chibios/os/rt/include/chevents.h ****  *                      the event source is broadcasted
 187:./lib/chibios/os/rt/include/chevents.h ****  *
 188:./lib/chibios/os/rt/include/chevents.h ****  * @api
 189:./lib/chibios/os/rt/include/chevents.h ****  */
 190:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtRegisterMask(event_source_t *esp,
 191:./lib/chibios/os/rt/include/chevents.h ****                                      event_listener_t *elp,
 192:./lib/chibios/os/rt/include/chevents.h ****                                      eventmask_t events) {
 193:./lib/chibios/os/rt/include/chevents.h **** 
 194:./lib/chibios/os/rt/include/chevents.h ****   chEvtRegisterMaskWithFlags(esp, elp, events, (eventflags_t)-1);
 195:./lib/chibios/os/rt/include/chevents.h **** }
 196:./lib/chibios/os/rt/include/chevents.h **** 
 197:./lib/chibios/os/rt/include/chevents.h **** /**
 198:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Registers an Event Listener on an Event Source.
 199:./lib/chibios/os/rt/include/chevents.h ****  * @note    Multiple Event Listeners can use the same event identifier, the
 200:./lib/chibios/os/rt/include/chevents.h ****  *          listener will share the callback function.
 201:./lib/chibios/os/rt/include/chevents.h ****  *
 202:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the  @p event_source_t structure
 203:./lib/chibios/os/rt/include/chevents.h ****  * @param[out] elp      pointer to the @p event_listener_t structure
 204:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] event     numeric identifier assigned to the Event Listener.
 205:./lib/chibios/os/rt/include/chevents.h ****  *                      The value must range between zero and the size, in bit,
 206:./lib/chibios/os/rt/include/chevents.h ****  *                      of the @p eventmask_t type minus one.
 207:./lib/chibios/os/rt/include/chevents.h ****  *
 208:./lib/chibios/os/rt/include/chevents.h ****  * @api
 209:./lib/chibios/os/rt/include/chevents.h ****  */
 210:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtRegister(event_source_t *esp,
 211:./lib/chibios/os/rt/include/chevents.h ****                                  event_listener_t *elp,
 212:./lib/chibios/os/rt/include/chevents.h ****                                  eventid_t event) {
 213:./lib/chibios/os/rt/include/chevents.h **** 
 214:./lib/chibios/os/rt/include/chevents.h ****   chEvtRegisterMask(esp, elp, EVENT_MASK(event));
 215:./lib/chibios/os/rt/include/chevents.h **** }
 216:./lib/chibios/os/rt/include/chevents.h **** 
 217:./lib/chibios/os/rt/include/chevents.h **** /**
 218:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Verifies if there is at least one @p event_listener_t registered.
 219:./lib/chibios/os/rt/include/chevents.h ****  *
 220:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:./lib/chibios/os/rt/include/chevents.h ****  * @return              The event source status.
 222:./lib/chibios/os/rt/include/chevents.h ****  *
 223:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 224:./lib/chibios/os/rt/include/chevents.h ****  */
 225:./lib/chibios/os/rt/include/chevents.h **** static inline bool chEvtIsListeningI(event_source_t *esp) {
 226:./lib/chibios/os/rt/include/chevents.h **** 
 227:./lib/chibios/os/rt/include/chevents.h ****   return (bool)(esp != (event_source_t *)esp->next);
 228:./lib/chibios/os/rt/include/chevents.h **** }
 229:./lib/chibios/os/rt/include/chevents.h **** 
 230:./lib/chibios/os/rt/include/chevents.h **** /**
 231:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 232:./lib/chibios/os/rt/include/chevents.h ****  *          Source.
 233:./lib/chibios/os/rt/include/chevents.h ****  *
 234:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 235:./lib/chibios/os/rt/include/chevents.h ****  *
 236:./lib/chibios/os/rt/include/chevents.h ****  * @api
 237:./lib/chibios/os/rt/include/chevents.h ****  */
 238:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtBroadcast(event_source_t *esp) {
 239:./lib/chibios/os/rt/include/chevents.h **** 
 240:./lib/chibios/os/rt/include/chevents.h ****   chEvtBroadcastFlags(esp, (eventflags_t)0);
 241:./lib/chibios/os/rt/include/chevents.h **** }
 242:./lib/chibios/os/rt/include/chevents.h **** 
 243:./lib/chibios/os/rt/include/chevents.h **** /**
 244:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Signals all the Event Listeners registered on the specified Event
 245:./lib/chibios/os/rt/include/chevents.h ****  *          Source.
 246:./lib/chibios/os/rt/include/chevents.h ****  * @post    This function does not reschedule so a call to a rescheduling
 247:./lib/chibios/os/rt/include/chevents.h ****  *          function must be performed before unlocking the kernel. Note that
 248:./lib/chibios/os/rt/include/chevents.h ****  *          interrupt handlers always reschedule on exit so an explicit
 249:./lib/chibios/os/rt/include/chevents.h ****  *          reschedule must not be performed in ISRs.
 250:./lib/chibios/os/rt/include/chevents.h ****  *
 251:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 252:./lib/chibios/os/rt/include/chevents.h ****  *
 253:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 254:./lib/chibios/os/rt/include/chevents.h ****  */
 255:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtBroadcastI(event_source_t *esp) {
 256:./lib/chibios/os/rt/include/chevents.h **** 
 257:./lib/chibios/os/rt/include/chevents.h ****   chEvtBroadcastFlagsI(esp, (eventflags_t)0);
 258:./lib/chibios/os/rt/include/chevents.h **** }
 259:./lib/chibios/os/rt/include/chevents.h **** 
 260:./lib/chibios/os/rt/include/chevents.h **** /**
 261:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Adds (OR) a set of events to the current thread, this is
 262:./lib/chibios/os/rt/include/chevents.h ****  *          @b much faster than using @p chEvtBroadcast() or @p chEvtSignal().
 263:./lib/chibios/os/rt/include/chevents.h ****  *
 264:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] events    the events to be added
 265:./lib/chibios/os/rt/include/chevents.h ****  * @return              The mask of currently pending events.
 266:./lib/chibios/os/rt/include/chevents.h ****  *
 267:./lib/chibios/os/rt/include/chevents.h ****  * @iclass
 268:./lib/chibios/os/rt/include/chevents.h ****  */
 269:./lib/chibios/os/rt/include/chevents.h **** static inline eventmask_t chEvtAddEventsI(eventmask_t events) {
 498              		.loc 5 269 27 view .LVU135
 499              	.LBB247:
 270:./lib/chibios/os/rt/include/chevents.h **** 
 271:./lib/chibios/os/rt/include/chevents.h ****   return currp->epending |= events;
 500              		.loc 5 271 3 view .LVU136
 501              		.loc 5 271 10 is_stmt 0 view .LVU137
 502 0006 044B     		ldr	r3, .L14
 503 0008 1B69     		ldr	r3, [r3, #16]
 504              		.loc 5 271 26 view .LVU138
 505 000a 9A69     		ldr	r2, [r3, #24]
 506 000c 1043     		orrs	r0, r0, r2
 507              	.LVL21:
 508              		.loc 5 271 26 view .LVU139
 509 000e 9861     		str	r0, [r3, #24]
 510              	.LVL22:
 511              		.loc 5 271 26 view .LVU140
 512              	.LBE247:
 513              	.LBE246:
 203:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 514              		.loc 1 203 3 is_stmt 1 view .LVU141
 515              	.LBB248:
 516              	.LBI248:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 517              		.loc 2 365 20 view .LVU142
 518              	.LBB249:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 519              		.loc 2 367 22 view .LVU143
 368:./lib/chibios/os/rt/include/chsys.h **** 
 520              		.loc 2 368 33 view .LVU144
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 521              		.loc 2 374 3 view .LVU145
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 522              		.loc 2 374 3 view .LVU146
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 523              		.loc 2 374 3 view .LVU147
 524              		.loc 2 378 3 view .LVU148
 525              	.LBB250:
 526              	.LBI250:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 527              		.loc 3 693 27 view .LVU149
 528              	.LBE250:
 529              	.LBE249:
 530              	.LBE248:
 531              		.loc 3 696 3 view .LVU150
 532              	.LBB255:
 533              	.LBB254:
 534              	.LBB253:
 535              	.LBB251:
 536              	.LBI251:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 537              		.loc 4 491 27 view .LVU151
 538              	.LBB252:
 539              		.loc 4 493 3 view .LVU152
 540 0010 0023     		movs	r3, #0
 541              		.syntax unified
 542              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 543 0012 83F31188 		MSR basepri, r3
 544              	@ 0 "" 2
 545              	.LVL23:
 546              		.loc 4 493 3 is_stmt 0 view .LVU153
 547              		.thumb
 548              		.syntax unified
 549              	.LBE252:
 550              	.LBE251:
 551              	.LBE253:
 552              	.LBE254:
 553              	.LBE255:
 204:lib/chibios/os/rt/src/chevents.c **** 
 205:lib/chibios/os/rt/src/chevents.c ****   return newevt;
 554              		.loc 1 205 3 is_stmt 1 view .LVU154
 206:lib/chibios/os/rt/src/chevents.c **** }
 555              		.loc 1 206 1 is_stmt 0 view .LVU155
 556 0016 7047     		bx	lr
 557              	.L15:
 558              		.align	2
 559              	.L14:
 560 0018 00000000 		.word	ch
 561              		.cfi_endproc
 562              	.LFE243:
 564              		.section	.text.chEvtGetAndClearFlags,"ax",%progbits
 565              		.align	1
 566              		.global	chEvtGetAndClearFlags
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	chEvtGetAndClearFlags:
 573              	.LVL24:
 574              	.LFB245:
 207:lib/chibios/os/rt/src/chevents.c **** 
 208:lib/chibios/os/rt/src/chevents.c **** /**
 209:lib/chibios/os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 210:lib/chibios/os/rt/src/chevents.c ****  *          Source.
 211:lib/chibios/os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 212:lib/chibios/os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 213:lib/chibios/os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 214:lib/chibios/os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 215:lib/chibios/os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 216:lib/chibios/os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 217:lib/chibios/os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 218:lib/chibios/os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 219:lib/chibios/os/rt/src/chevents.c ****  *
 220:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 221:lib/chibios/os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 222:lib/chibios/os/rt/src/chevents.c ****  *
 223:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 224:lib/chibios/os/rt/src/chevents.c ****  */
 225:lib/chibios/os/rt/src/chevents.c **** void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags) {
 226:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 227:lib/chibios/os/rt/src/chevents.c **** 
 228:lib/chibios/os/rt/src/chevents.c ****   chDbgCheckClassI();
 229:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 230:lib/chibios/os/rt/src/chevents.c **** 
 231:lib/chibios/os/rt/src/chevents.c ****   elp = esp->next;
 232:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 233:lib/chibios/os/rt/src/chevents.c ****   while (elp != (event_listener_t *)esp) {
 234:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 235:lib/chibios/os/rt/src/chevents.c ****     elp->flags |= flags;
 236:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 237:lib/chibios/os/rt/src/chevents.c ****        source does not emit any flag.*/
 238:lib/chibios/os/rt/src/chevents.c ****     if ((flags == (eventflags_t)0) ||
 239:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 240:lib/chibios/os/rt/src/chevents.c ****       chEvtSignalI(elp->listener, elp->events);
 241:lib/chibios/os/rt/src/chevents.c ****     }
 242:lib/chibios/os/rt/src/chevents.c ****     elp = elp->next;
 243:lib/chibios/os/rt/src/chevents.c ****   }
 244:lib/chibios/os/rt/src/chevents.c **** }
 245:lib/chibios/os/rt/src/chevents.c **** 
 246:lib/chibios/os/rt/src/chevents.c **** /**
 247:lib/chibios/os/rt/src/chevents.c ****  * @brief   Returns the flags associated to an @p event_listener_t.
 248:lib/chibios/os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 249:lib/chibios/os/rt/src/chevents.c ****  *          cleared.
 250:lib/chibios/os/rt/src/chevents.c ****  *
 251:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 252:lib/chibios/os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 253:lib/chibios/os/rt/src/chevents.c ****  *                      event source.
 254:lib/chibios/os/rt/src/chevents.c ****  *
 255:lib/chibios/os/rt/src/chevents.c ****  * @api
 256:lib/chibios/os/rt/src/chevents.c ****  */
 257:lib/chibios/os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlags(event_listener_t *elp) {
 575              		.loc 1 257 59 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 258:lib/chibios/os/rt/src/chevents.c ****   eventflags_t flags;
 580              		.loc 1 258 3 view .LVU157
 259:lib/chibios/os/rt/src/chevents.c **** 
 260:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 581              		.loc 1 260 3 view .LVU158
 582              	.LBB256:
 583              	.LBI256:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 584              		.loc 2 353 20 view .LVU159
 585              	.LBE256:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 586              		.loc 2 355 3 view .LVU160
 587              	.LBB261:
 588              	.LBB257:
 589              	.LBI257:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 590              		.loc 3 669 27 view .LVU161
 591              	.LBE257:
 592              	.LBE261:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 593              		.loc 3 677 3 view .LVU162
 594              	.LBB262:
 595              	.LBB260:
 596              	.LBB258:
 597              	.LBI258:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 598              		.loc 4 491 27 view .LVU163
 599              	.LBB259:
 600              		.loc 4 493 3 view .LVU164
 601 0000 2023     		movs	r3, #32
 602              		.syntax unified
 603              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 604 0002 83F31188 		MSR basepri, r3
 605              	@ 0 "" 2
 606              	.LVL25:
 607              		.loc 4 493 3 is_stmt 0 view .LVU165
 608              		.thumb
 609              		.syntax unified
 610              	.LBE259:
 611              	.LBE258:
 612              	.LBE260:
 613              	.LBE262:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 614              		.loc 2 356 34 is_stmt 1 view .LVU166
 357:./lib/chibios/os/rt/include/chsys.h **** }
 615              		.loc 2 357 20 view .LVU167
 261:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 616              		.loc 1 261 3 view .LVU168
 262:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 617              		.loc 1 262 14 is_stmt 0 view .LVU169
 618 0006 0023     		movs	r3, #0
 261:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 619              		.loc 1 261 9 view .LVU170
 620 0008 C268     		ldr	r2, [r0, #12]
 621              	.LVL26:
 622              		.loc 1 262 3 is_stmt 1 view .LVU171
 623              		.loc 1 262 14 is_stmt 0 view .LVU172
 624 000a C360     		str	r3, [r0, #12]
 263:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 625              		.loc 1 263 3 is_stmt 1 view .LVU173
 626              	.LBB263:
 627              	.LBI263:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 628              		.loc 2 365 20 view .LVU174
 629              	.LBB264:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 630              		.loc 2 367 22 view .LVU175
 368:./lib/chibios/os/rt/include/chsys.h **** 
 631              		.loc 2 368 33 view .LVU176
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 632              		.loc 2 374 3 view .LVU177
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 633              		.loc 2 374 3 view .LVU178
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 634              		.loc 2 374 3 view .LVU179
 635              		.loc 2 378 3 view .LVU180
 636              	.LBB265:
 637              	.LBI265:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 638              		.loc 3 693 27 view .LVU181
 639              	.LBE265:
 640              	.LBE264:
 641              	.LBE263:
 642              		.loc 3 696 3 view .LVU182
 643              	.LVL27:
 644              	.LBB270:
 645              	.LBB269:
 646              	.LBB268:
 647              	.LBB266:
 648              	.LBI266:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 649              		.loc 4 491 27 view .LVU183
 650              	.LBB267:
 651              		.loc 4 493 3 view .LVU184
 652              		.syntax unified
 653              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 654 000c 83F31188 		MSR basepri, r3
 655              	@ 0 "" 2
 656              	.LVL28:
 657              		.loc 4 493 3 is_stmt 0 view .LVU185
 658              		.thumb
 659              		.syntax unified
 660              	.LBE267:
 661              	.LBE266:
 662              	.LBE268:
 663              	.LBE269:
 664              	.LBE270:
 264:lib/chibios/os/rt/src/chevents.c **** 
 265:lib/chibios/os/rt/src/chevents.c ****   return flags & elp->wflags;
 665              		.loc 1 265 3 is_stmt 1 view .LVU186
 666              		.loc 1 265 16 is_stmt 0 view .LVU187
 667 0010 0069     		ldr	r0, [r0, #16]
 668              	.LVL29:
 266:lib/chibios/os/rt/src/chevents.c **** }
 669              		.loc 1 266 1 view .LVU188
 670 0012 1040     		ands	r0, r0, r2
 671 0014 7047     		bx	lr
 672              		.cfi_endproc
 673              	.LFE245:
 675              		.section	.text.chEvtSignalI,"ax",%progbits
 676              		.align	1
 677              		.global	chEvtSignalI
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu fpv4-sp-d16
 683              	chEvtSignalI:
 684              	.LVL30:
 685              	.LFB247:
 267:lib/chibios/os/rt/src/chevents.c **** 
 268:lib/chibios/os/rt/src/chevents.c **** /**
 269:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 270:lib/chibios/os/rt/src/chevents.c ****  *
 271:lib/chibios/os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 272:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 273:lib/chibios/os/rt/src/chevents.c ****  *
 274:lib/chibios/os/rt/src/chevents.c ****  * @api
 275:lib/chibios/os/rt/src/chevents.c ****  */
 276:lib/chibios/os/rt/src/chevents.c **** void chEvtSignal(thread_t *tp, eventmask_t events) {
 277:lib/chibios/os/rt/src/chevents.c **** 
 278:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 279:lib/chibios/os/rt/src/chevents.c **** 
 280:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 281:lib/chibios/os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 282:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 283:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 284:lib/chibios/os/rt/src/chevents.c **** }
 285:lib/chibios/os/rt/src/chevents.c **** 
 286:lib/chibios/os/rt/src/chevents.c **** /**
 287:lib/chibios/os/rt/src/chevents.c ****  * @brief   Adds a set of event flags directly to the specified @p thread_t.
 288:lib/chibios/os/rt/src/chevents.c ****  * @post    This function does not reschedule so a call to a rescheduling
 289:lib/chibios/os/rt/src/chevents.c ****  *          function must be performed before unlocking the kernel. Note that
 290:lib/chibios/os/rt/src/chevents.c ****  *          interrupt handlers always reschedule on exit so an explicit
 291:lib/chibios/os/rt/src/chevents.c ****  *          reschedule must not be performed in ISRs.
 292:lib/chibios/os/rt/src/chevents.c ****  *
 293:lib/chibios/os/rt/src/chevents.c ****  * @param[in] tp        the thread to be signaled
 294:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    the events set to be ORed
 295:lib/chibios/os/rt/src/chevents.c ****  *
 296:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 297:lib/chibios/os/rt/src/chevents.c ****  */
 298:lib/chibios/os/rt/src/chevents.c **** void chEvtSignalI(thread_t *tp, eventmask_t events) {
 686              		.loc 1 298 53 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 299:lib/chibios/os/rt/src/chevents.c **** 
 300:lib/chibios/os/rt/src/chevents.c ****   chDbgCheckClassI();
 691              		.loc 1 300 21 view .LVU190
 301:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(tp != NULL);
 692              		.loc 1 301 3 view .LVU191
 693              		.loc 1 301 3 view .LVU192
 694              		.loc 1 301 3 view .LVU193
 302:lib/chibios/os/rt/src/chevents.c **** 
 303:lib/chibios/os/rt/src/chevents.c ****   tp->epending |= events;
 695              		.loc 1 303 3 view .LVU194
 696              		.loc 1 303 16 is_stmt 0 view .LVU195
 697 0000 8369     		ldr	r3, [r0, #24]
 698 0002 1943     		orrs	r1, r1, r3
 699              	.LVL31:
 304:lib/chibios/os/rt/src/chevents.c ****   /* Test on the AND/OR conditions wait states.*/
 305:lib/chibios/os/rt/src/chevents.c ****   if (((tp->state == CH_STATE_WTOREVT) &&
 700              		.loc 1 305 11 view .LVU196
 701 0004 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 303:lib/chibios/os/rt/src/chevents.c ****   /* Test on the AND/OR conditions wait states.*/
 702              		.loc 1 303 16 view .LVU197
 703 0006 8161     		str	r1, [r0, #24]
 704              		.loc 1 305 3 is_stmt 1 view .LVU198
 705              		.loc 1 305 6 is_stmt 0 view .LVU199
 706 0008 0A2B     		cmp	r3, #10
 707 000a 03D1     		bne	.L18
 306:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 708              		.loc 1 306 23 discriminator 1 view .LVU200
 709 000c 4369     		ldr	r3, [r0, #20]
 305:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) != (eventmask_t)0)) ||
 710              		.loc 1 305 40 discriminator 1 view .LVU201
 711 000e 1942     		tst	r1, r3
 712 0010 05D1     		bne	.L19
 713 0012 7047     		bx	lr
 714              	.L18:
 715              		.loc 1 306 59 view .LVU202
 716 0014 0B2B     		cmp	r3, #11
 717 0016 06D1     		bne	.L17
 307:lib/chibios/os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 308:lib/chibios/os/rt/src/chevents.c ****        ((tp->epending & tp->u.ewmask) == tp->u.ewmask))) {
 718              		.loc 1 308 30 view .LVU203
 719 0018 4369     		ldr	r3, [r0, #20]
 307:lib/chibios/os/rt/src/chevents.c ****       ((tp->state == CH_STATE_WTANDEVT) &&
 720              		.loc 1 307 41 view .LVU204
 721 001a 8B43     		bics	r3, r3, r1
 722 001c 03D1     		bne	.L17
 723              	.L19:
 309:lib/chibios/os/rt/src/chevents.c ****     tp->u.rdymsg = MSG_OK;
 724              		.loc 1 309 5 is_stmt 1 view .LVU205
 725              		.loc 1 309 18 is_stmt 0 view .LVU206
 726 001e 0023     		movs	r3, #0
 727 0020 4361     		str	r3, [r0, #20]
 310:lib/chibios/os/rt/src/chevents.c ****     (void) chSchReadyI(tp);
 728              		.loc 1 310 5 is_stmt 1 view .LVU207
 729              		.loc 1 310 12 is_stmt 0 view .LVU208
 730 0022 FFF7FEBF 		b	chSchReadyI
 731              	.LVL32:
 732              	.L17:
 311:lib/chibios/os/rt/src/chevents.c ****   }
 312:lib/chibios/os/rt/src/chevents.c **** }
 733              		.loc 1 312 1 view .LVU209
 734 0026 7047     		bx	lr
 735              		.cfi_endproc
 736              	.LFE247:
 738              		.section	.text.chEvtBroadcastFlagsI,"ax",%progbits
 739              		.align	1
 740              		.global	chEvtBroadcastFlagsI
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	chEvtBroadcastFlagsI:
 747              	.LVL33:
 748              	.LFB244:
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 749              		.loc 1 225 68 is_stmt 1 view -0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 226:lib/chibios/os/rt/src/chevents.c **** 
 753              		.loc 1 226 3 view .LVU211
 228:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(esp != NULL);
 754              		.loc 1 228 21 view .LVU212
 229:lib/chibios/os/rt/src/chevents.c **** 
 755              		.loc 1 229 3 view .LVU213
 229:lib/chibios/os/rt/src/chevents.c **** 
 756              		.loc 1 229 3 view .LVU214
 229:lib/chibios/os/rt/src/chevents.c **** 
 757              		.loc 1 229 3 view .LVU215
 231:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 758              		.loc 1 231 3 view .LVU216
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 759              		.loc 1 225 68 is_stmt 0 view .LVU217
 760 0000 70B5     		push	{r4, r5, r6, lr}
 761              		.cfi_def_cfa_offset 16
 762              		.cfi_offset 4, -16
 763              		.cfi_offset 5, -12
 764              		.cfi_offset 6, -8
 765              		.cfi_offset 14, -4
 231:lib/chibios/os/rt/src/chevents.c ****   /*lint -save -e9087 -e740 [11.3, 1.3] Cast required by list handling.*/
 766              		.loc 1 231 7 view .LVU218
 767 0002 0468     		ldr	r4, [r0]
 768              	.LVL34:
 233:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 769              		.loc 1 233 3 is_stmt 1 view .LVU219
 225:lib/chibios/os/rt/src/chevents.c ****   event_listener_t *elp;
 770              		.loc 1 225 68 is_stmt 0 view .LVU220
 771 0004 0646     		mov	r6, r0
 772 0006 0D46     		mov	r5, r1
 773              	.LVL35:
 774              	.L22:
 233:lib/chibios/os/rt/src/chevents.c ****   /*lint -restore*/
 775              		.loc 1 233 9 is_stmt 1 view .LVU221
 776 0008 B442     		cmp	r4, r6
 777 000a 00D1     		bne	.L25
 244:lib/chibios/os/rt/src/chevents.c **** 
 778              		.loc 1 244 1 is_stmt 0 view .LVU222
 779 000c 70BD     		pop	{r4, r5, r6, pc}
 780              	.LVL36:
 781              	.L25:
 235:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 782              		.loc 1 235 5 is_stmt 1 view .LVU223
 235:lib/chibios/os/rt/src/chevents.c ****     /* When flags == 0 the thread will always be signaled because the
 783              		.loc 1 235 16 is_stmt 0 view .LVU224
 784 000e E368     		ldr	r3, [r4, #12]
 785 0010 2B43     		orrs	r3, r3, r5
 786 0012 E360     		str	r3, [r4, #12]
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 787              		.loc 1 238 5 is_stmt 1 view .LVU225
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 788              		.loc 1 238 8 is_stmt 0 view .LVU226
 789 0014 15B1     		cbz	r5, .L23
 239:lib/chibios/os/rt/src/chevents.c ****       chEvtSignalI(elp->listener, elp->events);
 790              		.loc 1 239 17 discriminator 1 view .LVU227
 791 0016 2369     		ldr	r3, [r4, #16]
 238:lib/chibios/os/rt/src/chevents.c ****         ((flags & elp->wflags) != (eventflags_t)0)) {
 792              		.loc 1 238 36 discriminator 1 view .LVU228
 793 0018 1D42     		tst	r5, r3
 794 001a 03D0     		beq	.L24
 795              	.L23:
 240:lib/chibios/os/rt/src/chevents.c ****     }
 796              		.loc 1 240 7 is_stmt 1 view .LVU229
 797 001c D4E90101 		ldrd	r0, r1, [r4, #4]
 798 0020 FFF7FEFF 		bl	chEvtSignalI
 799              	.LVL37:
 800              	.L24:
 242:lib/chibios/os/rt/src/chevents.c ****   }
 801              		.loc 1 242 5 view .LVU230
 242:lib/chibios/os/rt/src/chevents.c ****   }
 802              		.loc 1 242 9 is_stmt 0 view .LVU231
 803 0024 2468     		ldr	r4, [r4]
 804              	.LVL38:
 242:lib/chibios/os/rt/src/chevents.c ****   }
 805              		.loc 1 242 9 view .LVU232
 806 0026 EFE7     		b	.L22
 807              		.cfi_endproc
 808              	.LFE244:
 810              		.section	.text.chEvtSignal,"ax",%progbits
 811              		.align	1
 812              		.global	chEvtSignal
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 816              		.fpu fpv4-sp-d16
 818              	chEvtSignal:
 819              	.LVL39:
 820              	.LFB246:
 276:lib/chibios/os/rt/src/chevents.c **** 
 821              		.loc 1 276 52 is_stmt 1 view -0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 278:lib/chibios/os/rt/src/chevents.c **** 
 825              		.loc 1 278 3 view .LVU234
 278:lib/chibios/os/rt/src/chevents.c **** 
 826              		.loc 1 278 3 view .LVU235
 278:lib/chibios/os/rt/src/chevents.c **** 
 827              		.loc 1 278 3 view .LVU236
 280:lib/chibios/os/rt/src/chevents.c ****   chEvtSignalI(tp, events);
 828              		.loc 1 280 3 view .LVU237
 829              	.LBB271:
 830              	.LBI271:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 831              		.loc 2 353 20 view .LVU238
 832              	.LBE271:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 833              		.loc 2 355 3 view .LVU239
 834              	.LBB279:
 835              	.LBB272:
 836              	.LBI272:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 837              		.loc 3 669 27 view .LVU240
 838              	.LBE272:
 839              	.LBE279:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 840              		.loc 3 677 3 view .LVU241
 841              	.LBB280:
 842              	.LBB277:
 843              	.LBB273:
 844              	.LBI273:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 845              		.loc 4 491 27 view .LVU242
 846              	.LBB274:
 847              		.loc 4 493 3 view .LVU243
 848              	.LBE274:
 849              	.LBE273:
 850              	.LBE277:
 851              	.LBE280:
 276:lib/chibios/os/rt/src/chevents.c **** 
 852              		.loc 1 276 52 is_stmt 0 view .LVU244
 853 0000 08B5     		push	{r3, lr}
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 3, -8
 856              		.cfi_offset 14, -4
 857              	.LBB281:
 858              	.LBB278:
 859              	.LBB276:
 860              	.LBB275:
 861              		.loc 4 493 3 view .LVU245
 862 0002 2023     		movs	r3, #32
 863              		.syntax unified
 864              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 865 0004 83F31188 		MSR basepri, r3
 866              	@ 0 "" 2
 867              	.LVL40:
 868              		.loc 4 493 3 view .LVU246
 869              		.thumb
 870              		.syntax unified
 871              	.LBE275:
 872              	.LBE276:
 873              	.LBE278:
 874              	.LBE281:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 875              		.loc 2 356 34 is_stmt 1 view .LVU247
 357:./lib/chibios/os/rt/include/chsys.h **** }
 876              		.loc 2 357 20 view .LVU248
 281:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 877              		.loc 1 281 3 view .LVU249
 878 0008 FFF7FEFF 		bl	chEvtSignalI
 879              	.LVL41:
 282:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 880              		.loc 1 282 3 view .LVU250
 881 000c FFF7FEFF 		bl	chSchRescheduleS
 882              	.LVL42:
 283:lib/chibios/os/rt/src/chevents.c **** }
 883              		.loc 1 283 3 view .LVU251
 884              	.LBB282:
 885              	.LBI282:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 886              		.loc 2 365 20 view .LVU252
 887              	.LBB283:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 888              		.loc 2 367 22 view .LVU253
 368:./lib/chibios/os/rt/include/chsys.h **** 
 889              		.loc 2 368 33 view .LVU254
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 890              		.loc 2 374 3 view .LVU255
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 891              		.loc 2 374 3 view .LVU256
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 892              		.loc 2 374 3 view .LVU257
 893              		.loc 2 378 3 view .LVU258
 894              	.LBB284:
 895              	.LBI284:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 896              		.loc 3 693 27 view .LVU259
 897              	.LBE284:
 898              	.LBE283:
 899              	.LBE282:
 900              		.loc 3 696 3 view .LVU260
 901              	.LBB289:
 902              	.LBB288:
 903              	.LBB287:
 904              	.LBB285:
 905              	.LBI285:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 906              		.loc 4 491 27 view .LVU261
 907              	.LBB286:
 908              		.loc 4 493 3 view .LVU262
 909 0010 0023     		movs	r3, #0
 910              		.syntax unified
 911              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 912 0012 83F31188 		MSR basepri, r3
 913              	@ 0 "" 2
 914              	.LVL43:
 915              		.loc 4 493 3 is_stmt 0 view .LVU263
 916              		.thumb
 917              		.syntax unified
 918              	.LBE286:
 919              	.LBE285:
 920              	.LBE287:
 921              	.LBE288:
 922              	.LBE289:
 284:lib/chibios/os/rt/src/chevents.c **** 
 923              		.loc 1 284 1 view .LVU264
 924 0016 08BD     		pop	{r3, pc}
 925              		.cfi_endproc
 926              	.LFE246:
 928              		.section	.text.chEvtBroadcastFlags,"ax",%progbits
 929              		.align	1
 930              		.global	chEvtBroadcastFlags
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu fpv4-sp-d16
 936              	chEvtBroadcastFlags:
 937              	.LVL44:
 938              	.LFB248:
 313:lib/chibios/os/rt/src/chevents.c **** 
 314:lib/chibios/os/rt/src/chevents.c **** /**
 315:lib/chibios/os/rt/src/chevents.c ****  * @brief   Signals all the Event Listeners registered on the specified Event
 316:lib/chibios/os/rt/src/chevents.c ****  *          Source.
 317:lib/chibios/os/rt/src/chevents.c ****  * @details This function variants ORs the specified event flags to all the
 318:lib/chibios/os/rt/src/chevents.c ****  *          threads registered on the @p event_source_t in addition to the
 319:lib/chibios/os/rt/src/chevents.c ****  *          event flags specified by the threads themselves in the
 320:lib/chibios/os/rt/src/chevents.c ****  *          @p event_listener_t objects.
 321:lib/chibios/os/rt/src/chevents.c ****  *
 322:lib/chibios/os/rt/src/chevents.c ****  * @param[in] esp       pointer to the @p event_source_t structure
 323:lib/chibios/os/rt/src/chevents.c ****  * @param[in] flags     the flags set to be added to the listener flags mask
 324:lib/chibios/os/rt/src/chevents.c ****  *
 325:lib/chibios/os/rt/src/chevents.c ****  * @api
 326:lib/chibios/os/rt/src/chevents.c ****  */
 327:lib/chibios/os/rt/src/chevents.c **** void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags) {
 939              		.loc 1 327 67 is_stmt 1 view -0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 328:lib/chibios/os/rt/src/chevents.c **** 
 329:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 943              		.loc 1 329 3 view .LVU266
 944              	.LBB290:
 945              	.LBI290:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 946              		.loc 2 353 20 view .LVU267
 947              	.LBE290:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 948              		.loc 2 355 3 view .LVU268
 949              	.LBB298:
 950              	.LBB291:
 951              	.LBI291:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 952              		.loc 3 669 27 view .LVU269
 953              	.LBE291:
 954              	.LBE298:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 955              		.loc 3 677 3 view .LVU270
 956              	.LBB299:
 957              	.LBB296:
 958              	.LBB292:
 959              	.LBI292:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 960              		.loc 4 491 27 view .LVU271
 961              	.LBB293:
 962              		.loc 4 493 3 view .LVU272
 963              	.LBE293:
 964              	.LBE292:
 965              	.LBE296:
 966              	.LBE299:
 327:lib/chibios/os/rt/src/chevents.c **** 
 967              		.loc 1 327 67 is_stmt 0 view .LVU273
 968 0000 08B5     		push	{r3, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 3, -8
 971              		.cfi_offset 14, -4
 972              	.LBB300:
 973              	.LBB297:
 974              	.LBB295:
 975              	.LBB294:
 976              		.loc 4 493 3 view .LVU274
 977 0002 2023     		movs	r3, #32
 978              		.syntax unified
 979              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 980 0004 83F31188 		MSR basepri, r3
 981              	@ 0 "" 2
 982              	.LVL45:
 983              		.loc 4 493 3 view .LVU275
 984              		.thumb
 985              		.syntax unified
 986              	.LBE294:
 987              	.LBE295:
 988              	.LBE297:
 989              	.LBE300:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 990              		.loc 2 356 34 is_stmt 1 view .LVU276
 357:./lib/chibios/os/rt/include/chsys.h **** }
 991              		.loc 2 357 20 view .LVU277
 330:lib/chibios/os/rt/src/chevents.c ****   chEvtBroadcastFlagsI(esp, flags);
 992              		.loc 1 330 3 view .LVU278
 993 0008 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 994              	.LVL46:
 331:lib/chibios/os/rt/src/chevents.c ****   chSchRescheduleS();
 995              		.loc 1 331 3 view .LVU279
 996 000c FFF7FEFF 		bl	chSchRescheduleS
 997              	.LVL47:
 332:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 998              		.loc 1 332 3 view .LVU280
 999              	.LBB301:
 1000              	.LBI301:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1001              		.loc 2 365 20 view .LVU281
 1002              	.LBB302:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1003              		.loc 2 367 22 view .LVU282
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1004              		.loc 2 368 33 view .LVU283
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1005              		.loc 2 374 3 view .LVU284
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1006              		.loc 2 374 3 view .LVU285
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1007              		.loc 2 374 3 view .LVU286
 1008              		.loc 2 378 3 view .LVU287
 1009              	.LBB303:
 1010              	.LBI303:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1011              		.loc 3 693 27 view .LVU288
 1012              	.LBE303:
 1013              	.LBE302:
 1014              	.LBE301:
 1015              		.loc 3 696 3 view .LVU289
 1016              	.LBB308:
 1017              	.LBB307:
 1018              	.LBB306:
 1019              	.LBB304:
 1020              	.LBI304:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1021              		.loc 4 491 27 view .LVU290
 1022              	.LBB305:
 1023              		.loc 4 493 3 view .LVU291
 1024 0010 0023     		movs	r3, #0
 1025              		.syntax unified
 1026              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1027 0012 83F31188 		MSR basepri, r3
 1028              	@ 0 "" 2
 1029              	.LVL48:
 1030              		.loc 4 493 3 is_stmt 0 view .LVU292
 1031              		.thumb
 1032              		.syntax unified
 1033              	.LBE305:
 1034              	.LBE304:
 1035              	.LBE306:
 1036              	.LBE307:
 1037              	.LBE308:
 333:lib/chibios/os/rt/src/chevents.c **** }
 1038              		.loc 1 333 1 view .LVU293
 1039 0016 08BD     		pop	{r3, pc}
 1040              		.cfi_endproc
 1041              	.LFE248:
 1043              		.section	.text.chEvtGetAndClearFlagsI,"ax",%progbits
 1044              		.align	1
 1045              		.global	chEvtGetAndClearFlagsI
 1046              		.syntax unified
 1047              		.thumb
 1048              		.thumb_func
 1049              		.fpu fpv4-sp-d16
 1051              	chEvtGetAndClearFlagsI:
 1052              	.LVL49:
 1053              	.LFB249:
 334:lib/chibios/os/rt/src/chevents.c **** 
 335:lib/chibios/os/rt/src/chevents.c **** /**
 336:lib/chibios/os/rt/src/chevents.c ****  * @brief   Returns the unmasked flags associated to an @p event_listener_t.
 337:lib/chibios/os/rt/src/chevents.c ****  * @details The flags are returned and the @p event_listener_t flags mask is
 338:lib/chibios/os/rt/src/chevents.c ****  *          cleared.
 339:lib/chibios/os/rt/src/chevents.c ****  *
 340:lib/chibios/os/rt/src/chevents.c ****  * @param[in] elp       pointer to the @p event_listener_t structure
 341:lib/chibios/os/rt/src/chevents.c ****  * @return              The flags added to the listener by the associated
 342:lib/chibios/os/rt/src/chevents.c ****  *                      event source.
 343:lib/chibios/os/rt/src/chevents.c ****  *
 344:lib/chibios/os/rt/src/chevents.c ****  * @iclass
 345:lib/chibios/os/rt/src/chevents.c ****  */
 346:lib/chibios/os/rt/src/chevents.c **** eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp) {
 1054              		.loc 1 346 60 is_stmt 1 view -0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              		@ link register save eliminated.
 347:lib/chibios/os/rt/src/chevents.c ****   eventflags_t flags;
 1059              		.loc 1 347 3 view .LVU295
 348:lib/chibios/os/rt/src/chevents.c **** 
 349:lib/chibios/os/rt/src/chevents.c ****   flags = elp->flags;
 1060              		.loc 1 349 3 view .LVU296
 350:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 1061              		.loc 1 350 14 is_stmt 0 view .LVU297
 1062 0000 0023     		movs	r3, #0
 349:lib/chibios/os/rt/src/chevents.c ****   elp->flags = (eventflags_t)0;
 1063              		.loc 1 349 9 view .LVU298
 1064 0002 C268     		ldr	r2, [r0, #12]
 1065              	.LVL50:
 1066              		.loc 1 350 3 is_stmt 1 view .LVU299
 1067              		.loc 1 350 14 is_stmt 0 view .LVU300
 1068 0004 C360     		str	r3, [r0, #12]
 351:lib/chibios/os/rt/src/chevents.c **** 
 352:lib/chibios/os/rt/src/chevents.c ****   return flags & elp->wflags;
 1069              		.loc 1 352 3 is_stmt 1 view .LVU301
 1070              		.loc 1 352 16 is_stmt 0 view .LVU302
 1071 0006 0069     		ldr	r0, [r0, #16]
 1072              	.LVL51:
 353:lib/chibios/os/rt/src/chevents.c **** }
 1073              		.loc 1 353 1 view .LVU303
 1074 0008 1040     		ands	r0, r0, r2
 1075 000a 7047     		bx	lr
 1076              		.cfi_endproc
 1077              	.LFE249:
 1079              		.section	.text.chEvtDispatch,"ax",%progbits
 1080              		.align	1
 1081              		.global	chEvtDispatch
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1085              		.fpu fpv4-sp-d16
 1087              	chEvtDispatch:
 1088              	.LVL52:
 1089              	.LFB250:
 354:lib/chibios/os/rt/src/chevents.c **** 
 355:lib/chibios/os/rt/src/chevents.c **** /**
 356:lib/chibios/os/rt/src/chevents.c ****  * @brief   Invokes the event handlers associated to an event flags mask.
 357:lib/chibios/os/rt/src/chevents.c ****  *
 358:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    mask of events to be dispatched
 359:lib/chibios/os/rt/src/chevents.c ****  * @param[in] handlers  an array of @p evhandler_t. The array must have size
 360:lib/chibios/os/rt/src/chevents.c ****  *                      equal to the number of bits in eventmask_t.
 361:lib/chibios/os/rt/src/chevents.c ****  *
 362:lib/chibios/os/rt/src/chevents.c ****  * @api
 363:lib/chibios/os/rt/src/chevents.c ****  */
 364:lib/chibios/os/rt/src/chevents.c **** void chEvtDispatch(const evhandler_t *handlers, eventmask_t events) {
 1090              		.loc 1 364 69 is_stmt 1 view -0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 365:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1094              		.loc 1 365 3 view .LVU305
 366:lib/chibios/os/rt/src/chevents.c **** 
 367:lib/chibios/os/rt/src/chevents.c ****   chDbgCheck(handlers != NULL);
 1095              		.loc 1 367 3 view .LVU306
 1096              		.loc 1 367 3 view .LVU307
 1097              		.loc 1 367 3 view .LVU308
 368:lib/chibios/os/rt/src/chevents.c **** 
 369:lib/chibios/os/rt/src/chevents.c ****   eid = (eventid_t)0;
 1098              		.loc 1 369 3 view .LVU309
 370:lib/chibios/os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 1099              		.loc 1 370 3 view .LVU310
 364:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1100              		.loc 1 364 69 is_stmt 0 view .LVU311
 1101 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1102              		.cfi_def_cfa_offset 24
 1103              		.cfi_offset 3, -24
 1104              		.cfi_offset 4, -20
 1105              		.cfi_offset 5, -16
 1106              		.cfi_offset 6, -12
 1107              		.cfi_offset 7, -8
 1108              		.cfi_offset 14, -4
 364:lib/chibios/os/rt/src/chevents.c ****   eventid_t eid;
 1109              		.loc 1 364 69 view .LVU312
 1110 0002 0646     		mov	r6, r0
 1111 0004 0C46     		mov	r4, r1
 369:lib/chibios/os/rt/src/chevents.c ****   while (events != (eventmask_t)0) {
 1112              		.loc 1 369 7 view .LVU313
 1113 0006 0025     		movs	r5, #0
 371:lib/chibios/os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 372:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 373:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1114              		.loc 1 373 18 view .LVU314
 1115 0008 0127     		movs	r7, #1
 1116              	.LVL53:
 1117              	.L36:
 370:lib/chibios/os/rt/src/chevents.c ****     if ((events & EVENT_MASK(eid)) != (eventmask_t)0) {
 1118              		.loc 1 370 9 is_stmt 1 view .LVU315
 1119 000a 04B9     		cbnz	r4, .L38
 374:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 375:lib/chibios/os/rt/src/chevents.c ****     }
 376:lib/chibios/os/rt/src/chevents.c ****     eid++;
 377:lib/chibios/os/rt/src/chevents.c ****   }
 378:lib/chibios/os/rt/src/chevents.c **** }
 1120              		.loc 1 378 1 is_stmt 0 view .LVU316
 1121 000c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1122              	.LVL54:
 1123              	.L38:
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1124              		.loc 1 371 5 is_stmt 1 view .LVU317
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1125              		.loc 1 371 36 is_stmt 0 view .LVU318
 1126 000e 24FA05F3 		lsr	r3, r4, r5
 371:lib/chibios/os/rt/src/chevents.c ****       chDbgAssert(handlers[eid] != NULL, "null handler");
 1127              		.loc 1 371 8 view .LVU319
 1128 0012 DB07     		lsls	r3, r3, #31
 1129 0014 07D5     		bpl	.L37
 372:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1130              		.loc 1 372 7 is_stmt 1 discriminator 5 view .LVU320
 372:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1131              		.loc 1 372 7 discriminator 5 view .LVU321
 372:lib/chibios/os/rt/src/chevents.c ****       events &= ~EVENT_MASK(eid);
 1132              		.loc 1 372 7 discriminator 5 view .LVU322
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1133              		.loc 1 373 7 discriminator 5 view .LVU323
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1134              		.loc 1 373 18 is_stmt 0 discriminator 5 view .LVU324
 1135 0016 07FA05F3 		lsl	r3, r7, r5
 373:lib/chibios/os/rt/src/chevents.c ****       handlers[eid](eid);
 1136              		.loc 1 373 14 discriminator 5 view .LVU325
 1137 001a 24EA0304 		bic	r4, r4, r3
 1138              	.LVL55:
 374:lib/chibios/os/rt/src/chevents.c ****     }
 1139              		.loc 1 374 7 is_stmt 1 discriminator 5 view .LVU326
 1140 001e 2846     		mov	r0, r5
 1141 0020 56F82530 		ldr	r3, [r6, r5, lsl #2]
 1142 0024 9847     		blx	r3
 1143              	.LVL56:
 1144              	.L37:
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1145              		.loc 1 376 5 view .LVU327
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1146              		.loc 1 376 8 is_stmt 0 view .LVU328
 1147 0026 0135     		adds	r5, r5, #1
 1148              	.LVL57:
 376:lib/chibios/os/rt/src/chevents.c ****   }
 1149              		.loc 1 376 8 view .LVU329
 1150 0028 EFE7     		b	.L36
 1151              		.cfi_endproc
 1152              	.LFE250:
 1154              		.section	.text.chEvtWaitOne,"ax",%progbits
 1155              		.align	1
 1156              		.global	chEvtWaitOne
 1157              		.syntax unified
 1158              		.thumb
 1159              		.thumb_func
 1160              		.fpu fpv4-sp-d16
 1162              	chEvtWaitOne:
 1163              	.LVL58:
 1164              	.LFB251:
 379:lib/chibios/os/rt/src/chevents.c **** 
 380:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) ||                                      \
 381:lib/chibios/os/rt/src/chevents.c ****     (CH_CFG_USE_EVENTS_TIMEOUT == FALSE) ||                                 \
 382:lib/chibios/os/rt/src/chevents.c ****     defined(__DOXYGEN__)
 383:lib/chibios/os/rt/src/chevents.c **** /**
 384:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 385:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 386:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 387:lib/chibios/os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 388:lib/chibios/os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop in
 389:lib/chibios/os/rt/src/chevents.c ****  *          order to serve all the pending events.<br>
 390:lib/chibios/os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 391:lib/chibios/os/rt/src/chevents.c ****  *          an higher priority.
 392:lib/chibios/os/rt/src/chevents.c ****  *
 393:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 394:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 395:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 396:lib/chibios/os/rt/src/chevents.c ****  *
 397:lib/chibios/os/rt/src/chevents.c ****  * @api
 398:lib/chibios/os/rt/src/chevents.c ****  */
 399:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitOne(eventmask_t events) {
 1165              		.loc 1 399 46 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 400:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1169              		.loc 1 400 3 view .LVU331
 399:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1170              		.loc 1 399 46 is_stmt 0 view .LVU332
 1171 0000 38B5     		push	{r3, r4, r5, lr}
 1172              		.cfi_def_cfa_offset 16
 1173              		.cfi_offset 3, -16
 1174              		.cfi_offset 4, -12
 1175              		.cfi_offset 5, -8
 1176              		.cfi_offset 14, -4
 1177              		.loc 1 400 13 view .LVU333
 1178 0002 0C4B     		ldr	r3, .L44
 399:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1179              		.loc 1 399 46 view .LVU334
 1180 0004 0446     		mov	r4, r0
 1181              		.loc 1 400 13 view .LVU335
 1182 0006 1D69     		ldr	r5, [r3, #16]
 1183              	.LVL59:
 401:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1184              		.loc 1 401 3 is_stmt 1 view .LVU336
 402:lib/chibios/os/rt/src/chevents.c **** 
 403:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1185              		.loc 1 403 3 view .LVU337
 1186              	.LBB309:
 1187              	.LBI309:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1188              		.loc 2 353 20 view .LVU338
 1189              	.LBE309:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1190              		.loc 2 355 3 view .LVU339
 1191              	.LBB314:
 1192              	.LBB310:
 1193              	.LBI310:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1194              		.loc 3 669 27 view .LVU340
 1195              	.LBE310:
 1196              	.LBE314:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1197              		.loc 3 677 3 view .LVU341
 1198              	.LBB315:
 1199              	.LBB313:
 1200              	.LBB311:
 1201              	.LBI311:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1202              		.loc 4 491 27 view .LVU342
 1203              	.LBB312:
 1204              		.loc 4 493 3 view .LVU343
 1205 0008 2023     		movs	r3, #32
 1206              		.syntax unified
 1207              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1208 000a 83F31188 		MSR basepri, r3
 1209              	@ 0 "" 2
 1210              	.LVL60:
 1211              		.loc 4 493 3 is_stmt 0 view .LVU344
 1212              		.thumb
 1213              		.syntax unified
 1214              	.LBE312:
 1215              	.LBE311:
 1216              	.LBE313:
 1217              	.LBE315:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1218              		.loc 2 356 34 is_stmt 1 view .LVU345
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1219              		.loc 2 357 20 view .LVU346
 404:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1220              		.loc 1 404 3 view .LVU347
 1221              		.loc 1 404 5 is_stmt 0 view .LVU348
 1222 000e AB69     		ldr	r3, [r5, #24]
 1223              	.LVL61:
 405:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1224              		.loc 1 405 3 is_stmt 1 view .LVU349
 1225              		.loc 1 405 6 is_stmt 0 view .LVU350
 1226 0010 0340     		ands	r3, r0, r3
 1227              	.LVL62:
 1228              		.loc 1 405 6 view .LVU351
 1229 0012 05D1     		bne	.L43
 406:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1230              		.loc 1 406 5 is_stmt 1 view .LVU352
 1231              		.loc 1 406 19 is_stmt 0 view .LVU353
 1232 0014 6861     		str	r0, [r5, #20]
 407:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1233              		.loc 1 407 5 is_stmt 1 view .LVU354
 1234 0016 0A20     		movs	r0, #10
 1235              	.LVL63:
 1236              		.loc 1 407 5 is_stmt 0 view .LVU355
 1237 0018 FFF7FEFF 		bl	chSchGoSleepS
 1238              	.LVL64:
 408:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 1239              		.loc 1 408 5 is_stmt 1 view .LVU356
 1240              		.loc 1 408 7 is_stmt 0 view .LVU357
 1241 001c AB69     		ldr	r3, [r5, #24]
 1242 001e 2340     		ands	r3, r3, r4
 1243              	.LVL65:
 1244              	.L43:
 409:lib/chibios/os/rt/src/chevents.c ****   }
 410:lib/chibios/os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 1245              		.loc 1 410 3 is_stmt 1 view .LVU358
 1246              		.loc 1 410 5 is_stmt 0 view .LVU359
 1247 0020 5842     		rsbs	r0, r3, #0
 1248 0022 1840     		ands	r0, r0, r3
 1249              	.LVL66:
 411:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1250              		.loc 1 411 3 is_stmt 1 view .LVU360
 1251              		.loc 1 411 17 is_stmt 0 view .LVU361
 1252 0024 AB69     		ldr	r3, [r5, #24]
 1253 0026 23EA0003 		bic	r3, r3, r0
 1254 002a AB61     		str	r3, [r5, #24]
 412:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1255              		.loc 1 412 3 is_stmt 1 view .LVU362
 1256              	.LBB316:
 1257              	.LBI316:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1258              		.loc 2 365 20 view .LVU363
 1259              	.LBB317:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1260              		.loc 2 367 22 view .LVU364
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1261              		.loc 2 368 33 view .LVU365
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1262              		.loc 2 374 3 view .LVU366
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1263              		.loc 2 374 3 view .LVU367
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1264              		.loc 2 374 3 view .LVU368
 1265              		.loc 2 378 3 view .LVU369
 1266              	.LBB318:
 1267              	.LBI318:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1268              		.loc 3 693 27 view .LVU370
 1269              	.LBE318:
 1270              	.LBE317:
 1271              	.LBE316:
 1272              		.loc 3 696 3 view .LVU371
 1273              	.LVL67:
 1274              	.LBB323:
 1275              	.LBB322:
 1276              	.LBB321:
 1277              	.LBB319:
 1278              	.LBI319:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1279              		.loc 4 491 27 view .LVU372
 1280              	.LBB320:
 1281              		.loc 4 493 3 view .LVU373
 1282 002c 0023     		movs	r3, #0
 1283              		.syntax unified
 1284              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1285 002e 83F31188 		MSR basepri, r3
 1286              	@ 0 "" 2
 1287              	.LVL68:
 1288              		.loc 4 493 3 is_stmt 0 view .LVU374
 1289              		.thumb
 1290              		.syntax unified
 1291              	.LBE320:
 1292              	.LBE319:
 1293              	.LBE321:
 1294              	.LBE322:
 1295              	.LBE323:
 413:lib/chibios/os/rt/src/chevents.c **** 
 414:lib/chibios/os/rt/src/chevents.c ****   return m;
 1296              		.loc 1 414 3 is_stmt 1 view .LVU375
 415:lib/chibios/os/rt/src/chevents.c **** }
 1297              		.loc 1 415 1 is_stmt 0 view .LVU376
 1298 0032 38BD     		pop	{r3, r4, r5, pc}
 1299              	.LVL69:
 1300              	.L45:
 1301              		.loc 1 415 1 view .LVU377
 1302              		.align	2
 1303              	.L44:
 1304 0034 00000000 		.word	ch
 1305              		.cfi_endproc
 1306              	.LFE251:
 1308              		.section	.text.chEvtWaitAny,"ax",%progbits
 1309              		.align	1
 1310              		.global	chEvtWaitAny
 1311              		.syntax unified
 1312              		.thumb
 1313              		.thumb_func
 1314              		.fpu fpv4-sp-d16
 1316              	chEvtWaitAny:
 1317              	.LVL70:
 1318              	.LFB252:
 416:lib/chibios/os/rt/src/chevents.c **** 
 417:lib/chibios/os/rt/src/chevents.c **** /**
 418:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 419:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 420:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 421:lib/chibios/os/rt/src/chevents.c ****  *          returned.
 422:lib/chibios/os/rt/src/chevents.c ****  *
 423:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 424:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 425:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 426:lib/chibios/os/rt/src/chevents.c ****  *
 427:lib/chibios/os/rt/src/chevents.c ****  * @api
 428:lib/chibios/os/rt/src/chevents.c ****  */
 429:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAny(eventmask_t events) {
 1319              		.loc 1 429 46 is_stmt 1 view -0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 0, uses_anonymous_args = 0
 430:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1323              		.loc 1 430 3 view .LVU379
 429:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1324              		.loc 1 429 46 is_stmt 0 view .LVU380
 1325 0000 38B5     		push	{r3, r4, r5, lr}
 1326              		.cfi_def_cfa_offset 16
 1327              		.cfi_offset 3, -16
 1328              		.cfi_offset 4, -12
 1329              		.cfi_offset 5, -8
 1330              		.cfi_offset 14, -4
 1331              		.loc 1 430 13 view .LVU381
 1332 0002 0C4B     		ldr	r3, .L48
 429:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1333              		.loc 1 429 46 view .LVU382
 1334 0004 0446     		mov	r4, r0
 1335              		.loc 1 430 13 view .LVU383
 1336 0006 1D69     		ldr	r5, [r3, #16]
 1337              	.LVL71:
 431:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1338              		.loc 1 431 3 is_stmt 1 view .LVU384
 432:lib/chibios/os/rt/src/chevents.c **** 
 433:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1339              		.loc 1 433 3 view .LVU385
 1340              	.LBB324:
 1341              	.LBI324:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1342              		.loc 2 353 20 view .LVU386
 1343              	.LBE324:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1344              		.loc 2 355 3 view .LVU387
 1345              	.LBB329:
 1346              	.LBB325:
 1347              	.LBI325:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1348              		.loc 3 669 27 view .LVU388
 1349              	.LBE325:
 1350              	.LBE329:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1351              		.loc 3 677 3 view .LVU389
 1352              	.LBB330:
 1353              	.LBB328:
 1354              	.LBB326:
 1355              	.LBI326:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1356              		.loc 4 491 27 view .LVU390
 1357              	.LBB327:
 1358              		.loc 4 493 3 view .LVU391
 1359 0008 2023     		movs	r3, #32
 1360              		.syntax unified
 1361              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1362 000a 83F31188 		MSR basepri, r3
 1363              	@ 0 "" 2
 1364              	.LVL72:
 1365              		.loc 4 493 3 is_stmt 0 view .LVU392
 1366              		.thumb
 1367              		.syntax unified
 1368              	.LBE327:
 1369              	.LBE326:
 1370              	.LBE328:
 1371              	.LBE330:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1372              		.loc 2 356 34 is_stmt 1 view .LVU393
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1373              		.loc 2 357 20 view .LVU394
 434:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1374              		.loc 1 434 3 view .LVU395
 1375              		.loc 1 434 5 is_stmt 0 view .LVU396
 1376 000e AB69     		ldr	r3, [r5, #24]
 1377              	.LVL73:
 435:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1378              		.loc 1 435 3 is_stmt 1 view .LVU397
 1379              		.loc 1 435 6 is_stmt 0 view .LVU398
 1380 0010 1840     		ands	r0, r0, r3
 1381              	.LVL74:
 1382              		.loc 1 435 6 view .LVU399
 1383 0012 06D1     		bne	.L47
 436:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1384              		.loc 1 436 5 is_stmt 1 view .LVU400
 437:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTOREVT);
 1385              		.loc 1 437 5 is_stmt 0 view .LVU401
 1386 0014 0A20     		movs	r0, #10
 1387              	.LVL75:
 436:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1388              		.loc 1 436 19 view .LVU402
 1389 0016 6C61     		str	r4, [r5, #20]
 1390              		.loc 1 437 5 is_stmt 1 view .LVU403
 1391 0018 FFF7FEFF 		bl	chSchGoSleepS
 1392              	.LVL76:
 438:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 1393              		.loc 1 438 5 view .LVU404
 1394              		.loc 1 438 7 is_stmt 0 view .LVU405
 1395 001c AB69     		ldr	r3, [r5, #24]
 1396 001e 04EA0300 		and	r0, r4, r3
 1397              	.LVL77:
 1398              	.L47:
 439:lib/chibios/os/rt/src/chevents.c ****   }
 440:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1399              		.loc 1 440 3 is_stmt 1 view .LVU406
 1400              		.loc 1 440 17 is_stmt 0 view .LVU407
 1401 0022 AB69     		ldr	r3, [r5, #24]
 1402 0024 23EA0003 		bic	r3, r3, r0
 1403 0028 AB61     		str	r3, [r5, #24]
 441:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1404              		.loc 1 441 3 is_stmt 1 view .LVU408
 1405              	.LBB331:
 1406              	.LBI331:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1407              		.loc 2 365 20 view .LVU409
 1408              	.LBB332:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1409              		.loc 2 367 22 view .LVU410
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1410              		.loc 2 368 33 view .LVU411
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1411              		.loc 2 374 3 view .LVU412
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1412              		.loc 2 374 3 view .LVU413
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1413              		.loc 2 374 3 view .LVU414
 1414              		.loc 2 378 3 view .LVU415
 1415              	.LBB333:
 1416              	.LBI333:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1417              		.loc 3 693 27 view .LVU416
 1418              	.LBE333:
 1419              	.LBE332:
 1420              	.LBE331:
 1421              		.loc 3 696 3 view .LVU417
 1422              	.LVL78:
 1423              	.LBB338:
 1424              	.LBB337:
 1425              	.LBB336:
 1426              	.LBB334:
 1427              	.LBI334:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1428              		.loc 4 491 27 view .LVU418
 1429              	.LBB335:
 1430              		.loc 4 493 3 view .LVU419
 1431 002a 0023     		movs	r3, #0
 1432              		.syntax unified
 1433              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1434 002c 83F31188 		MSR basepri, r3
 1435              	@ 0 "" 2
 1436              	.LVL79:
 1437              		.loc 4 493 3 is_stmt 0 view .LVU420
 1438              		.thumb
 1439              		.syntax unified
 1440              	.LBE335:
 1441              	.LBE334:
 1442              	.LBE336:
 1443              	.LBE337:
 1444              	.LBE338:
 442:lib/chibios/os/rt/src/chevents.c **** 
 443:lib/chibios/os/rt/src/chevents.c ****   return m;
 1445              		.loc 1 443 3 is_stmt 1 view .LVU421
 444:lib/chibios/os/rt/src/chevents.c **** }
 1446              		.loc 1 444 1 is_stmt 0 view .LVU422
 1447 0030 38BD     		pop	{r3, r4, r5, pc}
 1448              	.LVL80:
 1449              	.L49:
 1450              		.loc 1 444 1 view .LVU423
 1451 0032 00BF     		.align	2
 1452              	.L48:
 1453 0034 00000000 		.word	ch
 1454              		.cfi_endproc
 1455              	.LFE252:
 1457              		.section	.text.chEvtWaitAll,"ax",%progbits
 1458              		.align	1
 1459              		.global	chEvtWaitAll
 1460              		.syntax unified
 1461              		.thumb
 1462              		.thumb_func
 1463              		.fpu fpv4-sp-d16
 1465              	chEvtWaitAll:
 1466              	.LVL81:
 1467              	.LFB253:
 445:lib/chibios/os/rt/src/chevents.c **** 
 446:lib/chibios/os/rt/src/chevents.c **** /**
 447:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 448:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 449:lib/chibios/os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 450:lib/chibios/os/rt/src/chevents.c ****  *
 451:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 452:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 453:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 454:lib/chibios/os/rt/src/chevents.c ****  *
 455:lib/chibios/os/rt/src/chevents.c ****  * @api
 456:lib/chibios/os/rt/src/chevents.c ****  */
 457:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAll(eventmask_t events) {
 1468              		.loc 1 457 46 is_stmt 1 view -0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 0
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 458:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1472              		.loc 1 458 3 view .LVU425
 457:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1473              		.loc 1 457 46 is_stmt 0 view .LVU426
 1474 0000 38B5     		push	{r3, r4, r5, lr}
 1475              		.cfi_def_cfa_offset 16
 1476              		.cfi_offset 3, -16
 1477              		.cfi_offset 4, -12
 1478              		.cfi_offset 5, -8
 1479              		.cfi_offset 14, -4
 1480              		.loc 1 458 13 view .LVU427
 1481 0002 0B4B     		ldr	r3, .L52
 457:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1482              		.loc 1 457 46 view .LVU428
 1483 0004 0446     		mov	r4, r0
 1484              		.loc 1 458 13 view .LVU429
 1485 0006 1D69     		ldr	r5, [r3, #16]
 1486              	.LVL82:
 459:lib/chibios/os/rt/src/chevents.c **** 
 460:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1487              		.loc 1 460 3 is_stmt 1 view .LVU430
 1488              	.LBB339:
 1489              	.LBI339:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1490              		.loc 2 353 20 view .LVU431
 1491              	.LBE339:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1492              		.loc 2 355 3 view .LVU432
 1493              	.LBB344:
 1494              	.LBB340:
 1495              	.LBI340:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1496              		.loc 3 669 27 view .LVU433
 1497              	.LBE340:
 1498              	.LBE344:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1499              		.loc 3 677 3 view .LVU434
 1500              	.LBB345:
 1501              	.LBB343:
 1502              	.LBB341:
 1503              	.LBI341:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1504              		.loc 4 491 27 view .LVU435
 1505              	.LBB342:
 1506              		.loc 4 493 3 view .LVU436
 1507 0008 2023     		movs	r3, #32
 1508              		.syntax unified
 1509              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1510 000a 83F31188 		MSR basepri, r3
 1511              	@ 0 "" 2
 1512              	.LVL83:
 1513              		.loc 4 493 3 is_stmt 0 view .LVU437
 1514              		.thumb
 1515              		.syntax unified
 1516              	.LBE342:
 1517              	.LBE341:
 1518              	.LBE343:
 1519              	.LBE345:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1520              		.loc 2 356 34 is_stmt 1 view .LVU438
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1521              		.loc 2 357 20 view .LVU439
 461:lib/chibios/os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 1522              		.loc 1 461 3 view .LVU440
 1523              		.loc 1 461 22 is_stmt 0 view .LVU441
 1524 000e AB69     		ldr	r3, [r5, #24]
 1525              		.loc 1 461 6 view .LVU442
 1526 0010 30EA0303 		bics	r3, r0, r3
 1527 0014 03D0     		beq	.L51
 462:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 1528              		.loc 1 462 5 is_stmt 1 view .LVU443
 1529              		.loc 1 462 19 is_stmt 0 view .LVU444
 1530 0016 6861     		str	r0, [r5, #20]
 463:lib/chibios/os/rt/src/chevents.c ****     chSchGoSleepS(CH_STATE_WTANDEVT);
 1531              		.loc 1 463 5 is_stmt 1 view .LVU445
 1532 0018 0B20     		movs	r0, #11
 1533              	.LVL84:
 1534              		.loc 1 463 5 is_stmt 0 view .LVU446
 1535 001a FFF7FEFF 		bl	chSchGoSleepS
 1536              	.LVL85:
 1537              	.L51:
 464:lib/chibios/os/rt/src/chevents.c ****   }
 465:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~events;
 1538              		.loc 1 465 3 is_stmt 1 view .LVU447
 1539              		.loc 1 465 17 is_stmt 0 view .LVU448
 1540 001e AB69     		ldr	r3, [r5, #24]
 1541 0020 23EA0403 		bic	r3, r3, r4
 1542 0024 AB61     		str	r3, [r5, #24]
 466:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1543              		.loc 1 466 3 is_stmt 1 view .LVU449
 1544              	.LBB346:
 1545              	.LBI346:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1546              		.loc 2 365 20 view .LVU450
 1547              	.LBB347:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1548              		.loc 2 367 22 view .LVU451
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1549              		.loc 2 368 33 view .LVU452
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1550              		.loc 2 374 3 view .LVU453
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1551              		.loc 2 374 3 view .LVU454
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1552              		.loc 2 374 3 view .LVU455
 1553              		.loc 2 378 3 view .LVU456
 1554              	.LBB348:
 1555              	.LBI348:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1556              		.loc 3 693 27 view .LVU457
 1557              	.LBE348:
 1558              	.LBE347:
 1559              	.LBE346:
 1560              		.loc 3 696 3 view .LVU458
 1561              	.LVL86:
 1562              	.LBB353:
 1563              	.LBB352:
 1564              	.LBB351:
 1565              	.LBB349:
 1566              	.LBI349:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1567              		.loc 4 491 27 view .LVU459
 1568              	.LBB350:
 1569              		.loc 4 493 3 view .LVU460
 1570 0026 0023     		movs	r3, #0
 1571              		.syntax unified
 1572              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1573 0028 83F31188 		MSR basepri, r3
 1574              	@ 0 "" 2
 1575              	.LVL87:
 1576              		.loc 4 493 3 is_stmt 0 view .LVU461
 1577              		.thumb
 1578              		.syntax unified
 1579              	.LBE350:
 1580              	.LBE349:
 1581              	.LBE351:
 1582              	.LBE352:
 1583              	.LBE353:
 467:lib/chibios/os/rt/src/chevents.c **** 
 468:lib/chibios/os/rt/src/chevents.c ****   return events;
 1584              		.loc 1 468 3 is_stmt 1 view .LVU462
 469:lib/chibios/os/rt/src/chevents.c **** }
 1585              		.loc 1 469 1 is_stmt 0 view .LVU463
 1586 002c 2046     		mov	r0, r4
 1587 002e 38BD     		pop	{r3, r4, r5, pc}
 1588              	.LVL88:
 1589              	.L53:
 1590              		.loc 1 469 1 view .LVU464
 1591              		.align	2
 1592              	.L52:
 1593 0030 00000000 		.word	ch
 1594              		.cfi_endproc
 1595              	.LFE253:
 1597              		.section	.text.chEvtWaitOneTimeout,"ax",%progbits
 1598              		.align	1
 1599              		.global	chEvtWaitOneTimeout
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu fpv4-sp-d16
 1605              	chEvtWaitOneTimeout:
 1606              	.LVL89:
 1607              	.LFB254:
 470:lib/chibios/os/rt/src/chevents.c **** #endif /* CH_CFG_OPTIMIZE_SPEED || !CH_CFG_USE_EVENTS_TIMEOUT */
 471:lib/chibios/os/rt/src/chevents.c **** 
 472:lib/chibios/os/rt/src/chevents.c **** #if (CH_CFG_USE_EVENTS_TIMEOUT == TRUE) || defined(__DOXYGEN__)
 473:lib/chibios/os/rt/src/chevents.c **** /**
 474:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for exactly one of the specified events.
 475:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for one event among those specified in
 476:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the event is cleared and returned.
 477:lib/chibios/os/rt/src/chevents.c ****  * @note    One and only one event is served in the function, the one with the
 478:lib/chibios/os/rt/src/chevents.c ****  *          lowest event id. The function is meant to be invoked into a loop
 479:lib/chibios/os/rt/src/chevents.c ****  *          in order to serve all the pending events.<br>
 480:lib/chibios/os/rt/src/chevents.c ****  *          This means that Event Listeners with a lower event identifier have
 481:lib/chibios/os/rt/src/chevents.c ****  *          an higher priority.
 482:lib/chibios/os/rt/src/chevents.c ****  *
 483:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 484:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 485:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 486:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 487:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 488:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 489:lib/chibios/os/rt/src/chevents.c ****  *                      .
 490:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the lowest event id served and cleared.
 491:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 492:lib/chibios/os/rt/src/chevents.c ****  *
 493:lib/chibios/os/rt/src/chevents.c ****  * @api
 494:lib/chibios/os/rt/src/chevents.c ****  */
 495:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout) {
 1608              		.loc 1 495 76 is_stmt 1 view -0
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 496:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1612              		.loc 1 496 3 view .LVU466
 1613              		.loc 1 496 13 is_stmt 0 view .LVU467
 1614 0000 104A     		ldr	r2, .L60
 495:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1615              		.loc 1 495 76 view .LVU468
 1616 0002 70B5     		push	{r4, r5, r6, lr}
 1617              		.cfi_def_cfa_offset 16
 1618              		.cfi_offset 4, -16
 1619              		.cfi_offset 5, -12
 1620              		.cfi_offset 6, -8
 1621              		.cfi_offset 14, -4
 1622              		.loc 1 496 13 view .LVU469
 1623 0004 1669     		ldr	r6, [r2, #16]
 1624              	.LVL90:
 497:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1625              		.loc 1 497 3 is_stmt 1 view .LVU470
 498:lib/chibios/os/rt/src/chevents.c **** 
 499:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1626              		.loc 1 499 3 view .LVU471
 1627              	.LBB354:
 1628              	.LBI354:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1629              		.loc 2 353 20 view .LVU472
 1630              	.LBE354:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1631              		.loc 2 355 3 view .LVU473
 1632              	.LBB362:
 1633              	.LBB355:
 1634              	.LBI355:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1635              		.loc 3 669 27 view .LVU474
 1636              	.LBE355:
 1637              	.LBE362:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1638              		.loc 3 677 3 view .LVU475
 1639              	.LBB363:
 1640              	.LBB360:
 1641              	.LBB356:
 1642              	.LBI356:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1643              		.loc 4 491 27 view .LVU476
 1644              	.LBB357:
 1645              		.loc 4 493 3 view .LVU477
 1646              	.LBE357:
 1647              	.LBE356:
 1648              	.LBE360:
 1649              	.LBE363:
 495:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1650              		.loc 1 495 76 is_stmt 0 view .LVU478
 1651 0006 0546     		mov	r5, r0
 1652              	.LBB364:
 1653              	.LBB361:
 1654              	.LBB359:
 1655              	.LBB358:
 1656              		.loc 4 493 3 view .LVU479
 1657 0008 2022     		movs	r2, #32
 1658              		.syntax unified
 1659              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1660 000a 82F31188 		MSR basepri, r2
 1661              	@ 0 "" 2
 1662              	.LVL91:
 1663              		.loc 4 493 3 view .LVU480
 1664              		.thumb
 1665              		.syntax unified
 1666              	.LBE358:
 1667              	.LBE359:
 1668              	.LBE361:
 1669              	.LBE364:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1670              		.loc 2 356 34 is_stmt 1 view .LVU481
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1671              		.loc 2 357 20 view .LVU482
 500:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1672              		.loc 1 500 3 view .LVU483
 1673              		.loc 1 500 5 is_stmt 0 view .LVU484
 1674 000e B469     		ldr	r4, [r6, #24]
 1675              	.LVL92:
 501:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1676              		.loc 1 501 3 is_stmt 1 view .LVU485
 1677              		.loc 1 501 6 is_stmt 0 view .LVU486
 1678 0010 0440     		ands	r4, r0, r4
 1679              	.LVL93:
 1680              		.loc 1 501 6 view .LVU487
 1681 0012 0CD1     		bne	.L55
 502:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1682              		.loc 1 502 5 is_stmt 1 view .LVU488
 1683              		.loc 1 502 8 is_stmt 0 view .LVU489
 1684 0014 19B9     		cbnz	r1, .L56
 1685              	.LVL94:
 1686              	.L59:
 503:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 504:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 505:lib/chibios/os/rt/src/chevents.c ****     }
 506:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 507:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 508:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1687              		.loc 1 508 7 is_stmt 1 view .LVU490
 1688              	.LBB365:
 1689              	.LBI365:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1690              		.loc 2 365 20 view .LVU491
 1691              	.LBB366:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1692              		.loc 2 367 22 view .LVU492
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1693              		.loc 2 368 33 view .LVU493
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1694              		.loc 2 374 3 view .LVU494
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1695              		.loc 2 374 3 view .LVU495
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1696              		.loc 2 374 3 view .LVU496
 1697              		.loc 2 378 3 view .LVU497
 1698              	.LBB367:
 1699              	.LBI367:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1700              		.loc 3 693 27 view .LVU498
 1701              	.LBE367:
 1702              	.LBE366:
 1703              	.LBE365:
 1704              		.loc 3 696 3 view .LVU499
 1705              	.LBB372:
 1706              	.LBB371:
 1707              	.LBB370:
 1708              	.LBB368:
 1709              	.LBI368:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1710              		.loc 4 491 27 view .LVU500
 1711              	.LBB369:
 1712              		.loc 4 493 3 view .LVU501
 1713              		.syntax unified
 1714              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1715 0016 84F31188 		MSR basepri, r4
 1716              	@ 0 "" 2
 1717              	.LVL95:
 1718              		.loc 4 493 3 is_stmt 0 view .LVU502
 1719              		.thumb
 1720              		.syntax unified
 1721              	.LBE369:
 1722              	.LBE368:
 1723              	.LBE370:
 1724              	.LBE371:
 1725              	.LBE372:
 509:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1726              		.loc 1 509 7 is_stmt 1 view .LVU503
 1727              	.L54:
 510:lib/chibios/os/rt/src/chevents.c ****     }
 511:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 512:lib/chibios/os/rt/src/chevents.c ****   }
 513:lib/chibios/os/rt/src/chevents.c ****   m ^= m & (m - (eventmask_t)1);
 514:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 515:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 516:lib/chibios/os/rt/src/chevents.c **** 
 517:lib/chibios/os/rt/src/chevents.c ****   return m;
 518:lib/chibios/os/rt/src/chevents.c **** }
 1728              		.loc 1 518 1 is_stmt 0 view .LVU504
 1729 001a 2046     		mov	r0, r4
 1730 001c 70BD     		pop	{r4, r5, r6, pc}
 1731              	.LVL96:
 1732              	.L56:
 506:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1733              		.loc 1 506 5 is_stmt 1 view .LVU505
 506:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1734              		.loc 1 506 19 is_stmt 0 view .LVU506
 1735 001e 7061     		str	r0, [r6, #20]
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1736              		.loc 1 507 5 is_stmt 1 view .LVU507
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1737              		.loc 1 507 9 is_stmt 0 view .LVU508
 1738 0020 0A20     		movs	r0, #10
 1739              	.LVL97:
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1740              		.loc 1 507 9 view .LVU509
 1741 0022 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1742              	.LVL98:
 507:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1743              		.loc 1 507 8 view .LVU510
 1744 0026 0028     		cmp	r0, #0
 1745 0028 F5DB     		blt	.L59
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1746              		.loc 1 511 5 is_stmt 1 view .LVU511
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1747              		.loc 1 511 7 is_stmt 0 view .LVU512
 1748 002a B469     		ldr	r4, [r6, #24]
 1749              	.LVL99:
 511:lib/chibios/os/rt/src/chevents.c ****   }
 1750              		.loc 1 511 7 view .LVU513
 1751 002c 2C40     		ands	r4, r4, r5
 1752              	.LVL100:
 1753              	.L55:
 513:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1754              		.loc 1 513 3 is_stmt 1 view .LVU514
 513:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 1755              		.loc 1 513 5 is_stmt 0 view .LVU515
 1756 002e 6342     		rsbs	r3, r4, #0
 1757 0030 1C40     		ands	r4, r4, r3
 1758              	.LVL101:
 514:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1759              		.loc 1 514 3 is_stmt 1 view .LVU516
 514:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1760              		.loc 1 514 17 is_stmt 0 view .LVU517
 1761 0032 B369     		ldr	r3, [r6, #24]
 1762 0034 23EA0403 		bic	r3, r3, r4
 1763 0038 B361     		str	r3, [r6, #24]
 515:lib/chibios/os/rt/src/chevents.c **** 
 1764              		.loc 1 515 3 is_stmt 1 view .LVU518
 1765              	.LBB373:
 1766              	.LBI373:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1767              		.loc 2 365 20 view .LVU519
 1768              	.LBB374:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1769              		.loc 2 367 22 view .LVU520
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1770              		.loc 2 368 33 view .LVU521
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1771              		.loc 2 374 3 view .LVU522
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1772              		.loc 2 374 3 view .LVU523
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1773              		.loc 2 374 3 view .LVU524
 1774              		.loc 2 378 3 view .LVU525
 1775              	.LBB375:
 1776              	.LBI375:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1777              		.loc 3 693 27 view .LVU526
 1778              	.LBE375:
 1779              	.LBE374:
 1780              	.LBE373:
 1781              		.loc 3 696 3 view .LVU527
 1782              	.LVL102:
 1783              	.LBB380:
 1784              	.LBB379:
 1785              	.LBB378:
 1786              	.LBB376:
 1787              	.LBI376:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1788              		.loc 4 491 27 view .LVU528
 1789              	.LBB377:
 1790              		.loc 4 493 3 view .LVU529
 1791 003a 0023     		movs	r3, #0
 1792              		.syntax unified
 1793              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1794 003c 83F31188 		MSR basepri, r3
 1795              	@ 0 "" 2
 1796              	.LVL103:
 1797              		.loc 4 493 3 is_stmt 0 view .LVU530
 1798              		.thumb
 1799              		.syntax unified
 1800              	.LBE377:
 1801              	.LBE376:
 1802              	.LBE378:
 1803              	.LBE379:
 1804              	.LBE380:
 517:lib/chibios/os/rt/src/chevents.c **** }
 1805              		.loc 1 517 3 is_stmt 1 view .LVU531
 517:lib/chibios/os/rt/src/chevents.c **** }
 1806              		.loc 1 517 10 is_stmt 0 view .LVU532
 1807 0040 EBE7     		b	.L54
 1808              	.L61:
 1809 0042 00BF     		.align	2
 1810              	.L60:
 1811 0044 00000000 		.word	ch
 1812              		.cfi_endproc
 1813              	.LFE254:
 1815              		.section	.text.chEvtWaitAnyTimeout,"ax",%progbits
 1816              		.align	1
 1817              		.global	chEvtWaitAnyTimeout
 1818              		.syntax unified
 1819              		.thumb
 1820              		.thumb_func
 1821              		.fpu fpv4-sp-d16
 1823              	chEvtWaitAnyTimeout:
 1824              	.LVL104:
 1825              	.LFB255:
 519:lib/chibios/os/rt/src/chevents.c **** 
 520:lib/chibios/os/rt/src/chevents.c **** /**
 521:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for any of the specified events.
 522:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for any event among those specified in
 523:lib/chibios/os/rt/src/chevents.c ****  *          @p events to become pending then the events are cleared and
 524:lib/chibios/os/rt/src/chevents.c ****  *          returned.
 525:lib/chibios/os/rt/src/chevents.c ****  *
 526:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 527:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS enables all the events
 528:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 529:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 530:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 531:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 532:lib/chibios/os/rt/src/chevents.c ****  *                      .
 533:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 534:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 535:lib/chibios/os/rt/src/chevents.c ****  *
 536:lib/chibios/os/rt/src/chevents.c ****  * @api
 537:lib/chibios/os/rt/src/chevents.c ****  */
 538:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout) {
 1826              		.loc 1 538 76 is_stmt 1 view -0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 0
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
 539:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1830              		.loc 1 539 3 view .LVU534
 1831              		.loc 1 539 13 is_stmt 0 view .LVU535
 1832 0000 0F4A     		ldr	r2, .L68
 538:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1833              		.loc 1 538 76 view .LVU536
 1834 0002 70B5     		push	{r4, r5, r6, lr}
 1835              		.cfi_def_cfa_offset 16
 1836              		.cfi_offset 4, -16
 1837              		.cfi_offset 5, -12
 1838              		.cfi_offset 6, -8
 1839              		.cfi_offset 14, -4
 1840              		.loc 1 539 13 view .LVU537
 1841 0004 1669     		ldr	r6, [r2, #16]
 1842              	.LVL105:
 540:lib/chibios/os/rt/src/chevents.c ****   eventmask_t m;
 1843              		.loc 1 540 3 is_stmt 1 view .LVU538
 541:lib/chibios/os/rt/src/chevents.c **** 
 542:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 1844              		.loc 1 542 3 view .LVU539
 1845              	.LBB381:
 1846              	.LBI381:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 1847              		.loc 2 353 20 view .LVU540
 1848              	.LBE381:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 1849              		.loc 2 355 3 view .LVU541
 1850              	.LBB389:
 1851              	.LBB382:
 1852              	.LBI382:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1853              		.loc 3 669 27 view .LVU542
 1854              	.LBE382:
 1855              	.LBE389:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1856              		.loc 3 677 3 view .LVU543
 1857              	.LBB390:
 1858              	.LBB387:
 1859              	.LBB383:
 1860              	.LBI383:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1861              		.loc 4 491 27 view .LVU544
 1862              	.LBB384:
 1863              		.loc 4 493 3 view .LVU545
 1864              	.LBE384:
 1865              	.LBE383:
 1866              	.LBE387:
 1867              	.LBE390:
 538:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 1868              		.loc 1 538 76 is_stmt 0 view .LVU546
 1869 0006 0546     		mov	r5, r0
 1870              	.LBB391:
 1871              	.LBB388:
 1872              	.LBB386:
 1873              	.LBB385:
 1874              		.loc 4 493 3 view .LVU547
 1875 0008 2022     		movs	r2, #32
 1876              		.syntax unified
 1877              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1878 000a 82F31188 		MSR basepri, r2
 1879              	@ 0 "" 2
 1880              	.LVL106:
 1881              		.loc 4 493 3 view .LVU548
 1882              		.thumb
 1883              		.syntax unified
 1884              	.LBE385:
 1885              	.LBE386:
 1886              	.LBE388:
 1887              	.LBE391:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 1888              		.loc 2 356 34 is_stmt 1 view .LVU549
 357:./lib/chibios/os/rt/include/chsys.h **** }
 1889              		.loc 2 357 20 view .LVU550
 543:lib/chibios/os/rt/src/chevents.c ****   m = ctp->epending & events;
 1890              		.loc 1 543 3 view .LVU551
 1891              		.loc 1 543 5 is_stmt 0 view .LVU552
 1892 000e B469     		ldr	r4, [r6, #24]
 1893              	.LVL107:
 544:lib/chibios/os/rt/src/chevents.c ****   if (m == (eventmask_t)0) {
 1894              		.loc 1 544 3 is_stmt 1 view .LVU553
 1895              		.loc 1 544 6 is_stmt 0 view .LVU554
 1896 0010 0440     		ands	r4, r0, r4
 1897              	.LVL108:
 1898              		.loc 1 544 6 view .LVU555
 1899 0012 0CD1     		bne	.L63
 545:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 1900              		.loc 1 545 5 is_stmt 1 view .LVU556
 1901              		.loc 1 545 8 is_stmt 0 view .LVU557
 1902 0014 19B9     		cbnz	r1, .L64
 1903              	.LVL109:
 1904              	.L67:
 546:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 547:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 548:lib/chibios/os/rt/src/chevents.c ****     }
 549:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 550:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 551:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1905              		.loc 1 551 7 is_stmt 1 view .LVU558
 1906              	.LBB392:
 1907              	.LBI392:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1908              		.loc 2 365 20 view .LVU559
 1909              	.LBB393:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1910              		.loc 2 367 22 view .LVU560
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1911              		.loc 2 368 33 view .LVU561
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1912              		.loc 2 374 3 view .LVU562
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1913              		.loc 2 374 3 view .LVU563
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1914              		.loc 2 374 3 view .LVU564
 1915              		.loc 2 378 3 view .LVU565
 1916              	.LBB394:
 1917              	.LBI394:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1918              		.loc 3 693 27 view .LVU566
 1919              	.LBE394:
 1920              	.LBE393:
 1921              	.LBE392:
 1922              		.loc 3 696 3 view .LVU567
 1923              	.LBB399:
 1924              	.LBB398:
 1925              	.LBB397:
 1926              	.LBB395:
 1927              	.LBI395:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1928              		.loc 4 491 27 view .LVU568
 1929              	.LBB396:
 1930              		.loc 4 493 3 view .LVU569
 1931              		.syntax unified
 1932              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1933 0016 84F31188 		MSR basepri, r4
 1934              	@ 0 "" 2
 1935              	.LVL110:
 1936              		.loc 4 493 3 is_stmt 0 view .LVU570
 1937              		.thumb
 1938              		.syntax unified
 1939              	.LBE396:
 1940              	.LBE395:
 1941              	.LBE397:
 1942              	.LBE398:
 1943              	.LBE399:
 552:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 1944              		.loc 1 552 7 is_stmt 1 view .LVU571
 1945              	.L62:
 553:lib/chibios/os/rt/src/chevents.c ****     }
 554:lib/chibios/os/rt/src/chevents.c ****     m = ctp->epending & events;
 555:lib/chibios/os/rt/src/chevents.c ****   }
 556:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~m;
 557:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 558:lib/chibios/os/rt/src/chevents.c **** 
 559:lib/chibios/os/rt/src/chevents.c ****   return m;
 560:lib/chibios/os/rt/src/chevents.c **** }
 1946              		.loc 1 560 1 is_stmt 0 view .LVU572
 1947 001a 2046     		mov	r0, r4
 1948 001c 70BD     		pop	{r4, r5, r6, pc}
 1949              	.LVL111:
 1950              	.L64:
 549:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1951              		.loc 1 549 5 is_stmt 1 view .LVU573
 549:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTOREVT, timeout) < MSG_OK) {
 1952              		.loc 1 549 19 is_stmt 0 view .LVU574
 1953 001e 7061     		str	r0, [r6, #20]
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1954              		.loc 1 550 5 is_stmt 1 view .LVU575
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1955              		.loc 1 550 9 is_stmt 0 view .LVU576
 1956 0020 0A20     		movs	r0, #10
 1957              	.LVL112:
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1958              		.loc 1 550 9 view .LVU577
 1959 0022 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 1960              	.LVL113:
 550:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 1961              		.loc 1 550 8 view .LVU578
 1962 0026 0028     		cmp	r0, #0
 1963 0028 F5DB     		blt	.L67
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1964              		.loc 1 554 5 is_stmt 1 view .LVU579
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1965              		.loc 1 554 7 is_stmt 0 view .LVU580
 1966 002a B469     		ldr	r4, [r6, #24]
 1967              	.LVL114:
 554:lib/chibios/os/rt/src/chevents.c ****   }
 1968              		.loc 1 554 7 view .LVU581
 1969 002c 2C40     		ands	r4, r4, r5
 1970              	.LVL115:
 1971              	.L63:
 556:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1972              		.loc 1 556 3 is_stmt 1 view .LVU582
 556:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 1973              		.loc 1 556 17 is_stmt 0 view .LVU583
 1974 002e B369     		ldr	r3, [r6, #24]
 1975 0030 23EA0403 		bic	r3, r3, r4
 1976 0034 B361     		str	r3, [r6, #24]
 557:lib/chibios/os/rt/src/chevents.c **** 
 1977              		.loc 1 557 3 is_stmt 1 view .LVU584
 1978              	.LBB400:
 1979              	.LBI400:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 1980              		.loc 2 365 20 view .LVU585
 1981              	.LBB401:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 1982              		.loc 2 367 22 view .LVU586
 368:./lib/chibios/os/rt/include/chsys.h **** 
 1983              		.loc 2 368 33 view .LVU587
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1984              		.loc 2 374 3 view .LVU588
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1985              		.loc 2 374 3 view .LVU589
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 1986              		.loc 2 374 3 view .LVU590
 1987              		.loc 2 378 3 view .LVU591
 1988              	.LBB402:
 1989              	.LBI402:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1990              		.loc 3 693 27 view .LVU592
 1991              	.LBE402:
 1992              	.LBE401:
 1993              	.LBE400:
 1994              		.loc 3 696 3 view .LVU593
 1995              	.LVL116:
 1996              	.LBB407:
 1997              	.LBB406:
 1998              	.LBB405:
 1999              	.LBB403:
 2000              	.LBI403:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2001              		.loc 4 491 27 view .LVU594
 2002              	.LBB404:
 2003              		.loc 4 493 3 view .LVU595
 2004 0036 0023     		movs	r3, #0
 2005              		.syntax unified
 2006              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2007 0038 83F31188 		MSR basepri, r3
 2008              	@ 0 "" 2
 2009              	.LVL117:
 2010              		.loc 4 493 3 is_stmt 0 view .LVU596
 2011              		.thumb
 2012              		.syntax unified
 2013              	.LBE404:
 2014              	.LBE403:
 2015              	.LBE405:
 2016              	.LBE406:
 2017              	.LBE407:
 559:lib/chibios/os/rt/src/chevents.c **** }
 2018              		.loc 1 559 3 is_stmt 1 view .LVU597
 559:lib/chibios/os/rt/src/chevents.c **** }
 2019              		.loc 1 559 10 is_stmt 0 view .LVU598
 2020 003c EDE7     		b	.L62
 2021              	.L69:
 2022 003e 00BF     		.align	2
 2023              	.L68:
 2024 0040 00000000 		.word	ch
 2025              		.cfi_endproc
 2026              	.LFE255:
 2028              		.section	.text.chEvtWaitAllTimeout,"ax",%progbits
 2029              		.align	1
 2030              		.global	chEvtWaitAllTimeout
 2031              		.syntax unified
 2032              		.thumb
 2033              		.thumb_func
 2034              		.fpu fpv4-sp-d16
 2036              	chEvtWaitAllTimeout:
 2037              	.LVL118:
 2038              	.LFB256:
 561:lib/chibios/os/rt/src/chevents.c **** 
 562:lib/chibios/os/rt/src/chevents.c **** /**
 563:lib/chibios/os/rt/src/chevents.c ****  * @brief   Waits for all the specified events.
 564:lib/chibios/os/rt/src/chevents.c ****  * @details The function waits for all the events specified in @p events to
 565:lib/chibios/os/rt/src/chevents.c ****  *          become pending then the events are cleared and returned.
 566:lib/chibios/os/rt/src/chevents.c ****  *
 567:lib/chibios/os/rt/src/chevents.c ****  * @param[in] events    events that the function should wait
 568:lib/chibios/os/rt/src/chevents.c ****  *                      for, @p ALL_EVENTS requires all the events
 569:lib/chibios/os/rt/src/chevents.c ****  * @param[in] timeout   the number of ticks before the operation timeouts,
 570:lib/chibios/os/rt/src/chevents.c ****  *                      the following special values are allowed:
 571:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 572:lib/chibios/os/rt/src/chevents.c ****  *                      - @a TIME_INFINITE no timeout.
 573:lib/chibios/os/rt/src/chevents.c ****  *                      .
 574:lib/chibios/os/rt/src/chevents.c ****  * @return              The mask of the served and cleared events.
 575:lib/chibios/os/rt/src/chevents.c ****  * @retval 0            if the operation has timed out.
 576:lib/chibios/os/rt/src/chevents.c ****  *
 577:lib/chibios/os/rt/src/chevents.c ****  * @api
 578:lib/chibios/os/rt/src/chevents.c ****  */
 579:lib/chibios/os/rt/src/chevents.c **** eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout) {
 2039              		.loc 1 579 76 is_stmt 1 view -0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 580:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 2043              		.loc 1 580 3 view .LVU600
 579:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 2044              		.loc 1 579 76 is_stmt 0 view .LVU601
 2045 0000 38B5     		push	{r3, r4, r5, lr}
 2046              		.cfi_def_cfa_offset 16
 2047              		.cfi_offset 3, -16
 2048              		.cfi_offset 4, -12
 2049              		.cfi_offset 5, -8
 2050              		.cfi_offset 14, -4
 2051              		.loc 1 580 13 view .LVU602
 2052 0002 104B     		ldr	r3, .L75
 579:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 2053              		.loc 1 579 76 view .LVU603
 2054 0004 0446     		mov	r4, r0
 2055              		.loc 1 580 13 view .LVU604
 2056 0006 1D69     		ldr	r5, [r3, #16]
 2057              	.LVL119:
 581:lib/chibios/os/rt/src/chevents.c **** 
 582:lib/chibios/os/rt/src/chevents.c ****   chSysLock();
 2058              		.loc 1 582 3 is_stmt 1 view .LVU605
 2059              	.LBB408:
 2060              	.LBI408:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2061              		.loc 2 353 20 view .LVU606
 2062              	.LBE408:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2063              		.loc 2 355 3 view .LVU607
 2064              	.LBB416:
 2065              	.LBB409:
 2066              	.LBI409:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2067              		.loc 3 669 27 view .LVU608
 2068              	.LBE409:
 2069              	.LBE416:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2070              		.loc 3 677 3 view .LVU609
 2071              	.LBB417:
 2072              	.LBB414:
 2073              	.LBB410:
 2074              	.LBI410:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2075              		.loc 4 491 27 view .LVU610
 2076              	.LBB411:
 2077              		.loc 4 493 3 view .LVU611
 2078              	.LBE411:
 2079              	.LBE410:
 2080              	.LBE414:
 2081              	.LBE417:
 579:lib/chibios/os/rt/src/chevents.c ****   thread_t *ctp = currp;
 2082              		.loc 1 579 76 is_stmt 0 view .LVU612
 2083 0008 0846     		mov	r0, r1
 2084              	.LVL120:
 2085              	.LBB418:
 2086              	.LBB415:
 2087              	.LBB413:
 2088              	.LBB412:
 2089              		.loc 4 493 3 view .LVU613
 2090 000a 2023     		movs	r3, #32
 2091              		.syntax unified
 2092              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2093 000c 83F31188 		MSR basepri, r3
 2094              	@ 0 "" 2
 2095              	.LVL121:
 2096              		.loc 4 493 3 view .LVU614
 2097              		.thumb
 2098              		.syntax unified
 2099              	.LBE412:
 2100              	.LBE413:
 2101              	.LBE415:
 2102              	.LBE418:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2103              		.loc 2 356 34 is_stmt 1 view .LVU615
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2104              		.loc 2 357 20 view .LVU616
 583:lib/chibios/os/rt/src/chevents.c ****   if ((ctp->epending & events) != events) {
 2105              		.loc 1 583 3 view .LVU617
 2106              		.loc 1 583 22 is_stmt 0 view .LVU618
 2107 0010 AB69     		ldr	r3, [r5, #24]
 2108              		.loc 1 583 6 view .LVU619
 2109 0012 34EA0303 		bics	r3, r4, r3
 2110 0016 0BD0     		beq	.L71
 584:lib/chibios/os/rt/src/chevents.c ****     if (TIME_IMMEDIATE == timeout) {
 2111              		.loc 1 584 5 is_stmt 1 view .LVU620
 2112              		.loc 1 584 8 is_stmt 0 view .LVU621
 2113 0018 11B9     		cbnz	r1, .L72
 2114              	.LVL122:
 2115              	.L74:
 2116              	.LBB419:
 2117              	.LBB420:
 2118              	.LBB421:
 2119              	.LBB422:
 2120              	.LBB423:
 2121              		.loc 4 493 3 view .LVU622
 2122              		.syntax unified
 2123              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2124 001a 80F31188 		MSR basepri, r0
 2125              	@ 0 "" 2
 2126              		.thumb
 2127              		.syntax unified
 2128              	.LBE423:
 2129              	.LBE422:
 2130              	.LBE421:
 2131              	.LBE420:
 2132              	.LBE419:
 585:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 586:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 587:lib/chibios/os/rt/src/chevents.c ****     }
 588:lib/chibios/os/rt/src/chevents.c ****     ctp->u.ewmask = events;
 589:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 590:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 591:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 2133              		.loc 1 591 7 is_stmt 1 view .LVU623
 2134              	.L73:
 592:lib/chibios/os/rt/src/chevents.c ****     }
 593:lib/chibios/os/rt/src/chevents.c ****   }
 594:lib/chibios/os/rt/src/chevents.c ****   ctp->epending &= ~events;
 595:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 596:lib/chibios/os/rt/src/chevents.c **** 
 597:lib/chibios/os/rt/src/chevents.c ****   return events;
 598:lib/chibios/os/rt/src/chevents.c **** }
 2135              		.loc 1 598 1 is_stmt 0 view .LVU624
 2136 001e 38BD     		pop	{r3, r4, r5, pc}
 2137              	.LVL123:
 2138              	.L72:
 588:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 2139              		.loc 1 588 5 is_stmt 1 view .LVU625
 588:lib/chibios/os/rt/src/chevents.c ****     if (chSchGoSleepTimeoutS(CH_STATE_WTANDEVT, timeout) < MSG_OK) {
 2140              		.loc 1 588 19 is_stmt 0 view .LVU626
 2141 0020 6C61     		str	r4, [r5, #20]
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 2142              		.loc 1 589 5 is_stmt 1 view .LVU627
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 2143              		.loc 1 589 9 is_stmt 0 view .LVU628
 2144 0022 0B20     		movs	r0, #11
 2145              	.LVL124:
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 2146              		.loc 1 589 9 view .LVU629
 2147 0024 FFF7FEFF 		bl	chSchGoSleepTimeoutS
 2148              	.LVL125:
 589:lib/chibios/os/rt/src/chevents.c ****       chSysUnlock();
 2149              		.loc 1 589 8 view .LVU630
 2150 0028 0028     		cmp	r0, #0
 2151 002a 01DA     		bge	.L71
 590:lib/chibios/os/rt/src/chevents.c ****       return (eventmask_t)0;
 2152              		.loc 1 590 7 is_stmt 1 view .LVU631
 2153              	.LBB430:
 2154              	.LBI419:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2155              		.loc 2 365 20 view .LVU632
 2156              	.LBB428:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2157              		.loc 2 367 22 view .LVU633
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2158              		.loc 2 368 33 view .LVU634
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2159              		.loc 2 374 3 view .LVU635
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2160              		.loc 2 374 3 view .LVU636
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2161              		.loc 2 374 3 view .LVU637
 2162              		.loc 2 378 3 view .LVU638
 2163              	.LBB426:
 2164              	.LBI421:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2165              		.loc 3 693 27 view .LVU639
 2166              	.LBE426:
 2167              	.LBE428:
 2168              	.LBE430:
 2169              		.loc 3 696 3 view .LVU640
 2170              	.LVL126:
 2171              	.LBB431:
 2172              	.LBB429:
 2173              	.LBB427:
 2174              	.LBB425:
 2175              	.LBI422:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2176              		.loc 4 491 27 view .LVU641
 2177              	.LBB424:
 2178              		.loc 4 493 3 view .LVU642
 2179 002c 0020     		movs	r0, #0
 2180 002e F4E7     		b	.L74
 2181              	.LVL127:
 2182              	.L71:
 2183              		.loc 4 493 3 is_stmt 0 view .LVU643
 2184              	.LBE424:
 2185              	.LBE425:
 2186              	.LBE427:
 2187              	.LBE429:
 2188              	.LBE431:
 594:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 2189              		.loc 1 594 3 is_stmt 1 view .LVU644
 594:lib/chibios/os/rt/src/chevents.c ****   chSysUnlock();
 2190              		.loc 1 594 17 is_stmt 0 view .LVU645
 2191 0030 AB69     		ldr	r3, [r5, #24]
 2192 0032 23EA0403 		bic	r3, r3, r4
 2193 0036 AB61     		str	r3, [r5, #24]
 595:lib/chibios/os/rt/src/chevents.c **** 
 2194              		.loc 1 595 3 is_stmt 1 view .LVU646
 2195              	.LBB432:
 2196              	.LBI432:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2197              		.loc 2 365 20 view .LVU647
 2198              	.LBB433:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2199              		.loc 2 367 22 view .LVU648
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2200              		.loc 2 368 33 view .LVU649
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2201              		.loc 2 374 3 view .LVU650
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2202              		.loc 2 374 3 view .LVU651
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2203              		.loc 2 374 3 view .LVU652
 2204              		.loc 2 378 3 view .LVU653
 2205              	.LBB434:
 2206              	.LBI434:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2207              		.loc 3 693 27 view .LVU654
 2208              	.LBE434:
 2209              	.LBE433:
 2210              	.LBE432:
 2211              		.loc 3 696 3 view .LVU655
 2212              	.LVL128:
 2213              	.LBB439:
 2214              	.LBB438:
 2215              	.LBB437:
 2216              	.LBB435:
 2217              	.LBI435:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2218              		.loc 4 491 27 view .LVU656
 2219              	.LBB436:
 2220              		.loc 4 493 3 view .LVU657
 2221 0038 0023     		movs	r3, #0
 2222              		.syntax unified
 2223              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2224 003a 83F31188 		MSR basepri, r3
 2225              	@ 0 "" 2
 2226              	.LVL129:
 2227              		.loc 4 493 3 is_stmt 0 view .LVU658
 2228              		.thumb
 2229              		.syntax unified
 2230              	.LBE436:
 2231              	.LBE435:
 2232              	.LBE437:
 2233              	.LBE438:
 2234              	.LBE439:
 597:lib/chibios/os/rt/src/chevents.c **** }
 2235              		.loc 1 597 3 is_stmt 1 view .LVU659
 597:lib/chibios/os/rt/src/chevents.c **** }
 2236              		.loc 1 597 10 is_stmt 0 view .LVU660
 2237 003e 2046     		mov	r0, r4
 2238 0040 EDE7     		b	.L73
 2239              	.L76:
 2240 0042 00BF     		.align	2
 2241              	.L75:
 2242 0044 00000000 		.word	ch
 2243              		.cfi_endproc
 2244              	.LFE256:
 2246              		.text
 2247              	.Letext0:
 2248              		.file 6 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 2249              		.file 7 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 2250              		.file 8 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 2251              		.file 9 "./lib/chibios/os/rt/include/chsystypes.h"
 2252              		.file 10 "./lib/chibios/os/rt/include/chschd.h"
 2253              		.file 11 "./lib/chibios/os/rt/include/chtime.h"
 2254              		.file 12 "./lib/chibios/os/rt/include/chsem.h"
 2255              		.file 13 "./lib/chibios/os/rt/include/chmtx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chevents.c
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:18     .text.chEvtRegisterMaskWithFlags:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:26     .text.chEvtRegisterMaskWithFlags:0000000000000000 chEvtRegisterMaskWithFlags
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:155    .text.chEvtRegisterMaskWithFlags:0000000000000024 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:160    .text.chEvtUnregister:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:167    .text.chEvtUnregister:0000000000000000 chEvtUnregister
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:287    .text.chEvtGetAndClearEventsI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:294    .text.chEvtGetAndClearEventsI:0000000000000000 chEvtGetAndClearEventsI
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:323    .text.chEvtGetAndClearEventsI:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:328    .text.chEvtGetAndClearEvents:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:335    .text.chEvtGetAndClearEvents:0000000000000000 chEvtGetAndClearEvents
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:443    .text.chEvtAddEvents:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:450    .text.chEvtAddEvents:0000000000000000 chEvtAddEvents
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:560    .text.chEvtAddEvents:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:565    .text.chEvtGetAndClearFlags:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:572    .text.chEvtGetAndClearFlags:0000000000000000 chEvtGetAndClearFlags
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:676    .text.chEvtSignalI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:683    .text.chEvtSignalI:0000000000000000 chEvtSignalI
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:739    .text.chEvtBroadcastFlagsI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:746    .text.chEvtBroadcastFlagsI:0000000000000000 chEvtBroadcastFlagsI
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:811    .text.chEvtSignal:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:818    .text.chEvtSignal:0000000000000000 chEvtSignal
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:929    .text.chEvtBroadcastFlags:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:936    .text.chEvtBroadcastFlags:0000000000000000 chEvtBroadcastFlags
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1044   .text.chEvtGetAndClearFlagsI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1051   .text.chEvtGetAndClearFlagsI:0000000000000000 chEvtGetAndClearFlagsI
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1080   .text.chEvtDispatch:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1087   .text.chEvtDispatch:0000000000000000 chEvtDispatch
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1155   .text.chEvtWaitOne:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1162   .text.chEvtWaitOne:0000000000000000 chEvtWaitOne
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1304   .text.chEvtWaitOne:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1309   .text.chEvtWaitAny:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1316   .text.chEvtWaitAny:0000000000000000 chEvtWaitAny
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1453   .text.chEvtWaitAny:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1458   .text.chEvtWaitAll:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1465   .text.chEvtWaitAll:0000000000000000 chEvtWaitAll
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1593   .text.chEvtWaitAll:0000000000000030 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1598   .text.chEvtWaitOneTimeout:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1605   .text.chEvtWaitOneTimeout:0000000000000000 chEvtWaitOneTimeout
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1811   .text.chEvtWaitOneTimeout:0000000000000044 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1816   .text.chEvtWaitAnyTimeout:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:1823   .text.chEvtWaitAnyTimeout:0000000000000000 chEvtWaitAnyTimeout
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:2024   .text.chEvtWaitAnyTimeout:0000000000000040 $d
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:2029   .text.chEvtWaitAllTimeout:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:2036   .text.chEvtWaitAllTimeout:0000000000000000 chEvtWaitAllTimeout
C:\Users\lhanj\AppData\Local\Temp\ccKdk22J.s:2242   .text.chEvtWaitAllTimeout:0000000000000044 $d

UNDEFINED SYMBOLS
ch
chSchReadyI
chSchRescheduleS
chSchGoSleepS
chSchGoSleepTimeoutS
