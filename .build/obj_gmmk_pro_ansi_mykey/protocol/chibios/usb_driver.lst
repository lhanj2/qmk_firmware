   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"usb_driver.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.obnotify,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	obnotify:
  26              	.LVL0:
  27              	.LFB288:
  28              		.file 1 "tmk_core/protocol/chibios/usb_driver.c"
   1:tmk_core/protocol/chibios/usb_driver.c **** /*
   2:tmk_core/protocol/chibios/usb_driver.c ****     ChibiOS - Copyright (C) 2006..2016 Giovanni Di Sirio
   3:tmk_core/protocol/chibios/usb_driver.c **** 
   4:tmk_core/protocol/chibios/usb_driver.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:tmk_core/protocol/chibios/usb_driver.c ****     you may not use this file except in compliance with the License.
   6:tmk_core/protocol/chibios/usb_driver.c ****     You may obtain a copy of the License at
   7:tmk_core/protocol/chibios/usb_driver.c **** 
   8:tmk_core/protocol/chibios/usb_driver.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:tmk_core/protocol/chibios/usb_driver.c **** 
  10:tmk_core/protocol/chibios/usb_driver.c ****     Unless required by applicable law or agreed to in writing, software
  11:tmk_core/protocol/chibios/usb_driver.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:tmk_core/protocol/chibios/usb_driver.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:tmk_core/protocol/chibios/usb_driver.c ****     See the License for the specific language governing permissions and
  14:tmk_core/protocol/chibios/usb_driver.c ****     limitations under the License.
  15:tmk_core/protocol/chibios/usb_driver.c **** */
  16:tmk_core/protocol/chibios/usb_driver.c **** 
  17:tmk_core/protocol/chibios/usb_driver.c **** /**
  18:tmk_core/protocol/chibios/usb_driver.c ****  * @file    hal_serial_usb.c
  19:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Serial over USB Driver code.
  20:tmk_core/protocol/chibios/usb_driver.c ****  *
  21:tmk_core/protocol/chibios/usb_driver.c ****  * @addtogroup SERIAL_USB
  22:tmk_core/protocol/chibios/usb_driver.c ****  * @{
  23:tmk_core/protocol/chibios/usb_driver.c ****  */
  24:tmk_core/protocol/chibios/usb_driver.c **** 
  25:tmk_core/protocol/chibios/usb_driver.c **** #include <hal.h>
  26:tmk_core/protocol/chibios/usb_driver.c **** #include "usb_driver.h"
  27:tmk_core/protocol/chibios/usb_driver.c **** #include <string.h>
  28:tmk_core/protocol/chibios/usb_driver.c **** 
  29:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  30:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local definitions.                                                 */
  31:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  32:tmk_core/protocol/chibios/usb_driver.c **** 
  33:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  34:tmk_core/protocol/chibios/usb_driver.c **** /* Driver exported variables.                                                */
  35:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  36:tmk_core/protocol/chibios/usb_driver.c **** 
  37:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  38:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local variables and types.                                         */
  39:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  40:tmk_core/protocol/chibios/usb_driver.c **** 
  41:tmk_core/protocol/chibios/usb_driver.c **** /*
  42:tmk_core/protocol/chibios/usb_driver.c ****  * Current Line Coding.
  43:tmk_core/protocol/chibios/usb_driver.c ****  */
  44:tmk_core/protocol/chibios/usb_driver.c **** static cdc_linecoding_t linecoding = {{0x00, 0x96, 0x00, 0x00}, /* 38400.                          
  45:tmk_core/protocol/chibios/usb_driver.c ****                                       LC_STOP_1,
  46:tmk_core/protocol/chibios/usb_driver.c ****                                       LC_PARITY_NONE,
  47:tmk_core/protocol/chibios/usb_driver.c ****                                       8};
  48:tmk_core/protocol/chibios/usb_driver.c **** 
  49:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  50:tmk_core/protocol/chibios/usb_driver.c **** /* Driver local functions.                                                   */
  51:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
  52:tmk_core/protocol/chibios/usb_driver.c **** 
  53:tmk_core/protocol/chibios/usb_driver.c **** static bool qmkusb_start_receive(QMKUSBDriver *qmkusbp) {
  54:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
  55:tmk_core/protocol/chibios/usb_driver.c **** 
  56:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
  57:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
  58:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
  59:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  60:tmk_core/protocol/chibios/usb_driver.c ****     }
  61:tmk_core/protocol/chibios/usb_driver.c **** 
  62:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is already a transaction ongoing on the endpoint.*/
  63:tmk_core/protocol/chibios/usb_driver.c ****     if (usbGetReceiveStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
  64:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  65:tmk_core/protocol/chibios/usb_driver.c ****     }
  66:tmk_core/protocol/chibios/usb_driver.c **** 
  67:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is a buffer ready for incoming data.*/
  68:tmk_core/protocol/chibios/usb_driver.c ****     buf = ibqGetEmptyBufferI(&qmkusbp->ibqueue);
  69:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
  70:tmk_core/protocol/chibios/usb_driver.c ****         return true;
  71:tmk_core/protocol/chibios/usb_driver.c ****     }
  72:tmk_core/protocol/chibios/usb_driver.c **** 
  73:tmk_core/protocol/chibios/usb_driver.c ****     /* Buffer found, starting a new transaction.*/
  74:tmk_core/protocol/chibios/usb_driver.c ****     usbStartReceiveI(qmkusbp->config->usbp, qmkusbp->config->bulk_out, buf, qmkusbp->ibqueue.bsize 
  75:tmk_core/protocol/chibios/usb_driver.c **** 
  76:tmk_core/protocol/chibios/usb_driver.c ****     return false;
  77:tmk_core/protocol/chibios/usb_driver.c **** }
  78:tmk_core/protocol/chibios/usb_driver.c **** 
  79:tmk_core/protocol/chibios/usb_driver.c **** /*
  80:tmk_core/protocol/chibios/usb_driver.c ****  * Interface implementation.
  81:tmk_core/protocol/chibios/usb_driver.c ****  */
  82:tmk_core/protocol/chibios/usb_driver.c **** 
  83:tmk_core/protocol/chibios/usb_driver.c **** static size_t _write(void *ip, const uint8_t *bp, size_t n) { return obqWriteTimeout(&((QMKUSBDrive
  84:tmk_core/protocol/chibios/usb_driver.c **** 
  85:tmk_core/protocol/chibios/usb_driver.c **** static size_t _read(void *ip, uint8_t *bp, size_t n) { return ibqReadTimeout(&((QMKUSBDriver *)ip)-
  86:tmk_core/protocol/chibios/usb_driver.c **** 
  87:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _put(void *ip, uint8_t b) { return obqPutTimeout(&((QMKUSBDriver *)ip)->obqueue, b, TI
  88:tmk_core/protocol/chibios/usb_driver.c **** 
  89:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _get(void *ip) { return ibqGetTimeout(&((QMKUSBDriver *)ip)->ibqueue, TIME_INFINITE); 
  90:tmk_core/protocol/chibios/usb_driver.c **** 
  91:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _putt(void *ip, uint8_t b, sysinterval_t timeout) { return obqPutTimeout(&((QMKUSBDriv
  92:tmk_core/protocol/chibios/usb_driver.c **** 
  93:tmk_core/protocol/chibios/usb_driver.c **** static msg_t _gett(void *ip, sysinterval_t timeout) { return ibqGetTimeout(&((QMKUSBDriver *)ip)->i
  94:tmk_core/protocol/chibios/usb_driver.c **** 
  95:tmk_core/protocol/chibios/usb_driver.c **** static size_t _writet(void *ip, const uint8_t *bp, size_t n, sysinterval_t timeout) { return obqWri
  96:tmk_core/protocol/chibios/usb_driver.c **** 
  97:tmk_core/protocol/chibios/usb_driver.c **** static size_t _readt(void *ip, uint8_t *bp, size_t n, sysinterval_t timeout) { return ibqReadTimeou
  98:tmk_core/protocol/chibios/usb_driver.c **** 
  99:tmk_core/protocol/chibios/usb_driver.c **** static const struct QMKUSBDriverVMT vmt = {0, _write, _read, _put, _get, _putt, _gett, _writet, _re
 100:tmk_core/protocol/chibios/usb_driver.c **** 
 101:tmk_core/protocol/chibios/usb_driver.c **** /**
 102:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Notification of empty buffer released into the input buffers queue.
 103:tmk_core/protocol/chibios/usb_driver.c ****  *
 104:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] bqp       the buffers queue pointer.
 105:tmk_core/protocol/chibios/usb_driver.c ****  */
 106:tmk_core/protocol/chibios/usb_driver.c **** static void ibnotify(io_buffers_queue_t *bqp) {
 107:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
 108:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 109:tmk_core/protocol/chibios/usb_driver.c **** }
 110:tmk_core/protocol/chibios/usb_driver.c **** 
 111:tmk_core/protocol/chibios/usb_driver.c **** /**
 112:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Notification of filled buffer inserted into the output buffers queue.
 113:tmk_core/protocol/chibios/usb_driver.c ****  *
 114:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] bqp       the buffers queue pointer.
 115:tmk_core/protocol/chibios/usb_driver.c ****  */
 116:tmk_core/protocol/chibios/usb_driver.c **** static void obnotify(io_buffers_queue_t *bqp) {
  29              		.loc 1 116 47 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 117:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
  33              		.loc 1 117 5 view .LVU1
 118:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
  34              		.loc 1 118 5 view .LVU2
 116:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
  35              		.loc 1 116 47 is_stmt 0 view .LVU3
  36 0000 13B5     		push	{r0, r1, r4, lr}
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 118 19 view .LVU4
  41 0002 446B     		ldr	r4, [r0, #52]
  42              	.LVL1:
 119:tmk_core/protocol/chibios/usb_driver.c **** 
 120:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 121:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
 122:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
  43              		.loc 1 122 5 is_stmt 1 view .LVU5
  44              		.loc 1 122 10 is_stmt 0 view .LVU6
  45 0004 E36F     		ldr	r3, [r4, #124]
  46 0006 1A68     		ldr	r2, [r3]
  47              		.loc 1 122 8 view .LVU7
  48 0008 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
  49 000a 0429     		cmp	r1, #4
  50 000c 15D1     		bne	.L1
  51              		.loc 1 122 67 discriminator 1 view .LVU8
  52 000e 217A     		ldrb	r1, [r4, #8]	@ zero_extendqisi2
  53 0010 0229     		cmp	r1, #2
  54 0012 12D1     		bne	.L1
 123:tmk_core/protocol/chibios/usb_driver.c ****         return;
 124:tmk_core/protocol/chibios/usb_driver.c ****     }
 125:tmk_core/protocol/chibios/usb_driver.c **** 
 126:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is already a transaction ongoing on the endpoint.*/
 127:tmk_core/protocol/chibios/usb_driver.c ****     if (!usbGetTransmitStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
  55              		.loc 1 127 5 is_stmt 1 view .LVU9
  56              		.loc 1 127 10 is_stmt 0 view .LVU10
  57 0014 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
  58              		.loc 1 127 9 view .LVU11
  59 0016 1289     		ldrh	r2, [r2, #8]
  60              		.loc 1 127 10 view .LVU12
  61 0018 0123     		movs	r3, #1
  62 001a 8B40     		lsls	r3, r3, r1
  63              		.loc 1 127 8 view .LVU13
  64 001c 1342     		tst	r3, r2
  65 001e 0CD1     		bne	.L1
  66              	.LBB132:
 128:tmk_core/protocol/chibios/usb_driver.c ****         /* Trying to get a full buffer.*/
 129:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
  67              		.loc 1 129 9 is_stmt 1 view .LVU14
  68              		.loc 1 129 24 is_stmt 0 view .LVU15
  69 0020 01A9     		add	r1, sp, #4
  70 0022 04F14400 		add	r0, r4, #68
  71              	.LVL2:
  72              		.loc 1 129 24 view .LVU16
  73 0026 FFF7FEFF 		bl	obqGetFullBufferI
  74              	.LVL3:
 130:tmk_core/protocol/chibios/usb_driver.c ****         if (buf != NULL) {
  75              		.loc 1 130 9 is_stmt 1 view .LVU17
  76              		.loc 1 130 12 is_stmt 0 view .LVU18
  77 002a 0246     		mov	r2, r0
  78 002c 28B1     		cbz	r0, .L1
 131:tmk_core/protocol/chibios/usb_driver.c ****             /* Buffer found, starting a new transaction.*/
 132:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(qmkusbp->config->usbp, qmkusbp->config->bulk_in, buf, n);
  79              		.loc 1 132 13 is_stmt 1 view .LVU19
  80              		.loc 1 132 38 is_stmt 0 view .LVU20
  81 002e E46F     		ldr	r4, [r4, #124]
  82              	.LVL4:
  83              		.loc 1 132 13 view .LVU21
  84 0030 019B     		ldr	r3, [sp, #4]
  85 0032 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
  86 0034 2068     		ldr	r0, [r4]
  87              	.LVL5:
  88              		.loc 1 132 13 view .LVU22
  89 0036 FFF7FEFF 		bl	usbStartTransmitI
  90              	.LVL6:
  91              	.L1:
  92              		.loc 1 132 13 view .LVU23
  93              	.LBE132:
 133:tmk_core/protocol/chibios/usb_driver.c ****         }
 134:tmk_core/protocol/chibios/usb_driver.c ****     }
 135:tmk_core/protocol/chibios/usb_driver.c **** }
  94              		.loc 1 135 1 view .LVU24
  95 003a 02B0     		add	sp, sp, #8
  96              		.cfi_def_cfa_offset 8
  97              		@ sp needed
  98 003c 10BD     		pop	{r4, pc}
  99              		.cfi_endproc
 100              	.LFE288:
 102              		.section	.text._readt,"ax",%progbits
 103              		.align	1
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	_readt:
 110              	.LVL7:
 111              	.LFB286:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 112              		.loc 1 97 78 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 117              		.loc 1 97 80 view .LVU26
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 118              		.loc 1 97 87 is_stmt 0 view .LVU27
 119 0000 0C30     		adds	r0, r0, #12
 120              	.LVL8:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 121              		.loc 1 97 87 view .LVU28
 122 0002 FFF7FEBF 		b	ibqReadTimeout
 123              	.LVL9:
  97:tmk_core/protocol/chibios/usb_driver.c **** 
 124              		.loc 1 97 87 view .LVU29
 125              		.cfi_endproc
 126              	.LFE286:
 128              		.section	.text._read,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv4-sp-d16
 135              	_read:
 136              	.LVL10:
 137              	.LFB280:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 138              		.loc 1 85 54 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 143              		.loc 1 85 56 view .LVU31
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 144              		.loc 1 85 63 is_stmt 0 view .LVU32
 145 0000 4FF0FF33 		mov	r3, #-1
 146 0004 0C30     		adds	r0, r0, #12
 147              	.LVL11:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 148              		.loc 1 85 63 view .LVU33
 149 0006 FFF7FEBF 		b	ibqReadTimeout
 150              	.LVL12:
  85:tmk_core/protocol/chibios/usb_driver.c **** 
 151              		.loc 1 85 63 view .LVU34
 152              		.cfi_endproc
 153              	.LFE280:
 155              		.section	.text._writet,"ax",%progbits
 156              		.align	1
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	_writet:
 163              	.LVL13:
 164              	.LFB285:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 165              		.loc 1 95 85 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 170              		.loc 1 95 87 view .LVU36
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 171              		.loc 1 95 94 is_stmt 0 view .LVU37
 172 0000 4430     		adds	r0, r0, #68
 173              	.LVL14:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 174              		.loc 1 95 94 view .LVU38
 175 0002 FFF7FEBF 		b	obqWriteTimeout
 176              	.LVL15:
  95:tmk_core/protocol/chibios/usb_driver.c **** 
 177              		.loc 1 95 94 view .LVU39
 178              		.cfi_endproc
 179              	.LFE285:
 181              		.section	.text._write,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 186              		.fpu fpv4-sp-d16
 188              	_write:
 189              	.LVL16:
 190              	.LFB279:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 191              		.loc 1 83 61 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 196              		.loc 1 83 63 view .LVU41
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 197              		.loc 1 83 70 is_stmt 0 view .LVU42
 198 0000 4FF0FF33 		mov	r3, #-1
 199 0004 4430     		adds	r0, r0, #68
 200              	.LVL17:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 201              		.loc 1 83 70 view .LVU43
 202 0006 FFF7FEBF 		b	obqWriteTimeout
 203              	.LVL18:
  83:tmk_core/protocol/chibios/usb_driver.c **** 
 204              		.loc 1 83 70 view .LVU44
 205              		.cfi_endproc
 206              	.LFE279:
 208              		.section	.text._gett,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	_gett:
 216              	.LVL19:
 217              	.LFB284:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 218              		.loc 1 93 53 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 223              		.loc 1 93 55 view .LVU46
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 224              		.loc 1 93 62 is_stmt 0 view .LVU47
 225 0000 0C30     		adds	r0, r0, #12
 226              	.LVL20:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 227              		.loc 1 93 62 view .LVU48
 228 0002 FFF7FEBF 		b	ibqGetTimeout
 229              	.LVL21:
  93:tmk_core/protocol/chibios/usb_driver.c **** 
 230              		.loc 1 93 62 view .LVU49
 231              		.cfi_endproc
 232              	.LFE284:
 234              		.section	.text._get,"ax",%progbits
 235              		.align	1
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv4-sp-d16
 241              	_get:
 242              	.LVL22:
 243              	.LFB282:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 244              		.loc 1 89 29 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 249              		.loc 1 89 31 view .LVU51
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 250              		.loc 1 89 38 is_stmt 0 view .LVU52
 251 0000 4FF0FF31 		mov	r1, #-1
 252 0004 0C30     		adds	r0, r0, #12
 253              	.LVL23:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 254              		.loc 1 89 38 view .LVU53
 255 0006 FFF7FEBF 		b	ibqGetTimeout
 256              	.LVL24:
  89:tmk_core/protocol/chibios/usb_driver.c **** 
 257              		.loc 1 89 38 view .LVU54
 258              		.cfi_endproc
 259              	.LFE282:
 261              		.section	.text._putt,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	_putt:
 269              	.LVL25:
 270              	.LFB283:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 271              		.loc 1 91 64 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 276              		.loc 1 91 66 view .LVU56
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 277              		.loc 1 91 73 is_stmt 0 view .LVU57
 278 0000 4430     		adds	r0, r0, #68
 279              	.LVL26:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 280              		.loc 1 91 73 view .LVU58
 281 0002 FFF7FEBF 		b	obqPutTimeout
 282              	.LVL27:
  91:tmk_core/protocol/chibios/usb_driver.c **** 
 283              		.loc 1 91 73 view .LVU59
 284              		.cfi_endproc
 285              	.LFE283:
 287              		.section	.text._put,"ax",%progbits
 288              		.align	1
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	_put:
 295              	.LVL28:
 296              	.LFB281:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 297              		.loc 1 87 40 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 302              		.loc 1 87 42 view .LVU61
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 303              		.loc 1 87 49 is_stmt 0 view .LVU62
 304 0000 4FF0FF32 		mov	r2, #-1
 305 0004 4430     		adds	r0, r0, #68
 306              	.LVL29:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 307              		.loc 1 87 49 view .LVU63
 308 0006 FFF7FEBF 		b	obqPutTimeout
 309              	.LVL30:
  87:tmk_core/protocol/chibios/usb_driver.c **** 
 310              		.loc 1 87 49 view .LVU64
 311              		.cfi_endproc
 312              	.LFE281:
 314              		.section	.text.qmkusb_start_receive.isra.0,"ax",%progbits
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	qmkusb_start_receive.isra.0:
 322              	.LVL31:
 323              	.LFB302:
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 324              		.loc 1 53 13 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
  54:tmk_core/protocol/chibios/usb_driver.c **** 
 328              		.loc 1 54 5 view .LVU66
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 329              		.loc 1 58 5 view .LVU67
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 330              		.loc 1 53 13 is_stmt 0 view .LVU68
 331 0000 70B5     		push	{r4, r5, r6, lr}
 332              		.cfi_def_cfa_offset 16
 333              		.cfi_offset 4, -16
 334              		.cfi_offset 5, -12
 335              		.cfi_offset 6, -8
 336              		.cfi_offset 14, -4
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 337              		.loc 1 58 10 view .LVU69
 338 0002 C36F     		ldr	r3, [r0, #124]
 339 0004 1A68     		ldr	r2, [r3]
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 340              		.loc 1 58 8 view .LVU70
 341 0006 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 342 0008 0429     		cmp	r1, #4
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 343              		.loc 1 53 13 view .LVU71
 344 000a 0446     		mov	r4, r0
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 345              		.loc 1 58 8 view .LVU72
 346 000c 16D1     		bne	.L17
  58:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 347              		.loc 1 58 67 view .LVU73
 348 000e 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 349 0010 0229     		cmp	r1, #2
 350 0012 13D1     		bne	.L17
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 351              		.loc 1 63 5 is_stmt 1 view .LVU74
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 352              		.loc 1 63 9 is_stmt 0 view .LVU75
 353 0014 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 354 0016 5289     		ldrh	r2, [r2, #10]
 355 0018 0123     		movs	r3, #1
 356 001a 8B40     		lsls	r3, r3, r1
  63:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 357              		.loc 1 63 8 view .LVU76
 358 001c 1342     		tst	r3, r2
 359 001e 0DD1     		bne	.L17
 360              	.LVL32:
 361              	.LBB135:
 362              	.LBI135:
  53:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *buf;
 363              		.loc 1 53 13 is_stmt 1 view .LVU77
 364              	.LBB136:
  68:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
 365              		.loc 1 68 5 view .LVU78
  68:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
 366              		.loc 1 68 11 is_stmt 0 view .LVU79
 367 0020 0C30     		adds	r0, r0, #12
 368              	.LVL33:
  68:tmk_core/protocol/chibios/usb_driver.c ****     if (buf == NULL) {
 369              		.loc 1 68 11 view .LVU80
 370 0022 FFF7FEFF 		bl	ibqGetEmptyBufferI
 371              	.LVL34:
  69:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 372              		.loc 1 69 5 is_stmt 1 view .LVU81
  69:tmk_core/protocol/chibios/usb_driver.c ****         return true;
 373              		.loc 1 69 8 is_stmt 0 view .LVU82
 374 0026 0246     		mov	r2, r0
 375 0028 40B1     		cbz	r0, .L17
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 376              		.loc 1 74 5 is_stmt 1 view .LVU83
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 377              		.loc 1 74 29 is_stmt 0 view .LVU84
 378 002a E56F     		ldr	r5, [r4, #124]
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 379              		.loc 1 74 5 view .LVU85
 380 002c A36A     		ldr	r3, [r4, #40]
 381 002e 6979     		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 382 0030 2868     		ldr	r0, [r5]
 383              	.LVL35:
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 384              		.loc 1 74 5 view .LVU86
 385 0032 043B     		subs	r3, r3, #4
 386              	.LBE136:
 387              	.LBE135:
  77:tmk_core/protocol/chibios/usb_driver.c **** 
 388              		.loc 1 77 1 view .LVU87
 389 0034 BDE87040 		pop	{r4, r5, r6, lr}
 390              		.cfi_remember_state
 391              		.cfi_restore 14
 392              		.cfi_restore 6
 393              		.cfi_restore 5
 394              		.cfi_restore 4
 395              		.cfi_def_cfa_offset 0
 396              	.LVL36:
 397              	.LBB138:
 398              	.LBB137:
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 399              		.loc 1 74 5 view .LVU88
 400 0038 FFF7FEBF 		b	usbStartReceiveI
 401              	.LVL37:
 402              	.L17:
 403              		.cfi_restore_state
  74:tmk_core/protocol/chibios/usb_driver.c **** 
 404              		.loc 1 74 5 view .LVU89
 405              	.LBE137:
 406              	.LBE138:
  77:tmk_core/protocol/chibios/usb_driver.c **** 
 407              		.loc 1 77 1 view .LVU90
 408 003c 70BD     		pop	{r4, r5, r6, pc}
  77:tmk_core/protocol/chibios/usb_driver.c **** 
 409              		.loc 1 77 1 view .LVU91
 410              		.cfi_endproc
 411              	.LFE302:
 413              		.section	.text.ibnotify,"ax",%progbits
 414              		.align	1
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	ibnotify:
 421              	.LVL38:
 422              	.LFB287:
 106:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = bqGetLinkX(bqp);
 423              		.loc 1 106 47 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 107:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 428              		.loc 1 107 5 view .LVU93
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 429              		.loc 1 108 5 view .LVU94
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 430              		.loc 1 108 11 is_stmt 0 view .LVU95
 431 0000 406B     		ldr	r0, [r0, #52]
 432              	.LVL39:
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 433              		.loc 1 108 11 view .LVU96
 434 0002 FFF7FEBF 		b	qmkusb_start_receive.isra.0
 435              	.LVL40:
 108:tmk_core/protocol/chibios/usb_driver.c **** }
 436              		.loc 1 108 11 view .LVU97
 437              		.cfi_endproc
 438              	.LFE287:
 440              		.section	.text.qmkusbInit,"ax",%progbits
 441              		.align	1
 442              		.global	qmkusbInit
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv4-sp-d16
 448              	qmkusbInit:
 449              	.LFB289:
 136:tmk_core/protocol/chibios/usb_driver.c **** 
 137:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
 138:tmk_core/protocol/chibios/usb_driver.c **** /* Driver exported functions.                                                */
 139:tmk_core/protocol/chibios/usb_driver.c **** /*===========================================================================*/
 140:tmk_core/protocol/chibios/usb_driver.c **** 
 141:tmk_core/protocol/chibios/usb_driver.c **** /**
 142:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Serial Driver initialization.
 143:tmk_core/protocol/chibios/usb_driver.c ****  * @note    This function is implicitly invoked by @p halInit(), there is
 144:tmk_core/protocol/chibios/usb_driver.c ****  *          no need to explicitly initialize the driver.
 145:tmk_core/protocol/chibios/usb_driver.c ****  *
 146:tmk_core/protocol/chibios/usb_driver.c ****  * @init
 147:tmk_core/protocol/chibios/usb_driver.c ****  */
 148:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbInit(void) {}
 450              		.loc 1 148 23 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455              		.loc 1 148 24 view .LVU99
 456 0000 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE289:
 460              		.section	.text.qmkusbObjectInit,"ax",%progbits
 461              		.align	1
 462              		.global	qmkusbObjectInit
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	qmkusbObjectInit:
 469              	.LVL41:
 470              	.LFB290:
 149:tmk_core/protocol/chibios/usb_driver.c **** 
 150:tmk_core/protocol/chibios/usb_driver.c **** /**
 151:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Initializes a generic full duplex driver object.
 152:tmk_core/protocol/chibios/usb_driver.c ****  * @details The HW dependent part of the initialization has to be performed
 153:tmk_core/protocol/chibios/usb_driver.c ****  *          outside, usually in the hardware initialization code.
 154:tmk_core/protocol/chibios/usb_driver.c ****  *
 155:tmk_core/protocol/chibios/usb_driver.c ****  * @param[out] qmkusbp     pointer to a @p QMKUSBDriver structure
 156:tmk_core/protocol/chibios/usb_driver.c ****  *
 157:tmk_core/protocol/chibios/usb_driver.c ****  * @init
 158:tmk_core/protocol/chibios/usb_driver.c ****  */
 159:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbObjectInit(QMKUSBDriver *qmkusbp, const QMKUSBConfig *config) {
 471              		.loc 1 159 74 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 160:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 475              		.loc 1 160 5 view .LVU101
 159:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 476              		.loc 1 159 74 is_stmt 0 view .LVU102
 477 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 478              		.cfi_def_cfa_offset 32
 479              		.cfi_offset 4, -16
 480              		.cfi_offset 5, -12
 481              		.cfi_offset 6, -8
 482              		.cfi_offset 14, -4
 483              		.loc 1 160 18 view .LVU103
 484 0002 0346     		mov	r3, r0
 485 0004 104A     		ldr	r2, .L27
 486 0006 43F8042B 		str	r2, [r3], #4
 161:tmk_core/protocol/chibios/usb_driver.c ****     osalEventObjectInit(&qmkusbp->event);
 487              		.loc 1 161 5 is_stmt 1 view .LVU104
 488              	.LVL42:
 489              	.LBB139:
 490              	.LBI139:
 491              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 762:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 763:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 764:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          ISR context.
 767:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 768:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 770:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 771:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 772:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 773:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 775:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeI(trp, msg);
 776:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 777:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 778:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 779:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 780:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 781:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 782:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 783:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 784:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 785:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 786:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 787:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 788:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadResumeS(thread_reference_t *trp, msg_t msg) {
 789:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 790:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdResumeS(trp, msg);
 791:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 792:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 793:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 794:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes a threads queue object.
 795:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 796:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[out] tqp      pointer to the threads queue object
 797:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 798:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @init
 799:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 800:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadQueueObjectInit(threads_queue_t *tqp) {
 801:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 802:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdQueueObjectInit(tqp);
 803:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 804:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 805:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 806:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enqueues the caller thread.
 807:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details The caller thread is enqueued and put to sleep until it is
 808:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          dequeued or the specified timeouts expires.
 809:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 810:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 811:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 812:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 813:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 814:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 815:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 816:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 817:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 818:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 819:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The message from @p osalQueueWakeupOneI() or
 820:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      @p osalQueueWakeupAllI() functions.
 821:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the thread has not been dequeued within the
 822:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specified timeout or if the function has been
 823:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      invoked with @p TIME_IMMEDIATE as timeout
 824:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      specification.
 825:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 826:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 827:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 828:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadEnqueueTimeoutS(threads_queue_t *tqp,
 829:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 830:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 831:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdEnqueueTimeoutS(tqp, timeout);
 832:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 833:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 834:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 835:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up one thread from the queue, if any.
 836:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 837:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 838:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 839:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 840:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 841:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 842:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueNextI(threads_queue_t *tqp, msg_t msg) {
 843:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 844:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueNextI(tqp, msg);
 845:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 846:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 847:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 848:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Dequeues and wakes up all threads from the queue.
 849:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 850:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] tqp       pointer to the threads queue object
 851:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msg       the message code
 852:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 853:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 854:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 855:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadDequeueAllI(threads_queue_t *tqp, msg_t msg) {
 856:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdDequeueAllI(tqp, msg);
 858:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 859:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 860:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 861:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 862:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Initializes an event source object.
 863:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 864:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[out] esp      pointer to the event source object
 865:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 866:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @init
 867:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 868:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 492              		.loc 2 868 20 view .LVU105
 493              	.LBE139:
 869:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 870:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chEvtObjectInit(esp);
 494              		.loc 2 870 3 view .LVU106
 495              	.LBB144:
 496              	.LBB140:
 497              	.LBI140:
 498              		.file 3 "./lib/chibios/os/rt/include/chevents.h"
   1:./lib/chibios/os/rt/include/chevents.h **** /*
   2:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chevents.h **** 
   4:./lib/chibios/os/rt/include/chevents.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chevents.h **** 
   6:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chevents.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chevents.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chevents.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chevents.h **** 
  11:./lib/chibios/os/rt/include/chevents.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chevents.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chevents.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chevents.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chevents.h **** 
  16:./lib/chibios/os/rt/include/chevents.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chevents.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chevents.h **** */
  19:./lib/chibios/os/rt/include/chevents.h **** /*
  20:./lib/chibios/os/rt/include/chevents.h ****    Concepts and parts of this file have been contributed by Scott (skute).
  21:./lib/chibios/os/rt/include/chevents.h ****  */
  22:./lib/chibios/os/rt/include/chevents.h **** 
  23:./lib/chibios/os/rt/include/chevents.h **** /**
  24:./lib/chibios/os/rt/include/chevents.h ****  * @file    rt/include/chevents.h
  25:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Events macros and structures.
  26:./lib/chibios/os/rt/include/chevents.h ****  *
  27:./lib/chibios/os/rt/include/chevents.h ****  * @addtogroup events
  28:./lib/chibios/os/rt/include/chevents.h ****  * @{
  29:./lib/chibios/os/rt/include/chevents.h ****  */
  30:./lib/chibios/os/rt/include/chevents.h **** 
  31:./lib/chibios/os/rt/include/chevents.h **** #ifndef CHEVENTS_H
  32:./lib/chibios/os/rt/include/chevents.h **** #define CHEVENTS_H
  33:./lib/chibios/os/rt/include/chevents.h **** 
  34:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
  35:./lib/chibios/os/rt/include/chevents.h **** 
  36:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  37:./lib/chibios/os/rt/include/chevents.h **** /* Module constants.                                                         */
  38:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  39:./lib/chibios/os/rt/include/chevents.h **** 
  40:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  41:./lib/chibios/os/rt/include/chevents.h **** /* Module pre-compile time settings.                                         */
  42:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  43:./lib/chibios/os/rt/include/chevents.h **** 
  44:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  45:./lib/chibios/os/rt/include/chevents.h **** /* Derived constants and error checks.                                       */
  46:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  47:./lib/chibios/os/rt/include/chevents.h **** 
  48:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  49:./lib/chibios/os/rt/include/chevents.h **** /* Module data structures and types.                                         */
  50:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  51:./lib/chibios/os/rt/include/chevents.h **** 
  52:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_listener event_listener_t;
  53:./lib/chibios/os/rt/include/chevents.h **** 
  54:./lib/chibios/os/rt/include/chevents.h **** /**
  55:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Listener structure.
  56:./lib/chibios/os/rt/include/chevents.h ****  */
  57:./lib/chibios/os/rt/include/chevents.h **** struct event_listener {
  58:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief Next Event Listener
  59:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the event
  60:./lib/chibios/os/rt/include/chevents.h ****                                                     source.                 */
  61:./lib/chibios/os/rt/include/chevents.h ****   thread_t              *listener;      /**< @brief Thread interested in the
  62:./lib/chibios/os/rt/include/chevents.h ****                                                     event source.           */
  63:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t           events;         /**< @brief Events to be set in
  64:./lib/chibios/os/rt/include/chevents.h ****                                                     the listening thread.   */
  65:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          flags;          /**< @brief Flags added to the listener
  66:./lib/chibios/os/rt/include/chevents.h ****                                                     by the event source.    */
  67:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t          wflags;         /**< @brief Flags that this listener
  68:./lib/chibios/os/rt/include/chevents.h ****                                                     interested in.          */
  69:./lib/chibios/os/rt/include/chevents.h **** };
  70:./lib/chibios/os/rt/include/chevents.h **** 
  71:./lib/chibios/os/rt/include/chevents.h **** /**
  72:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Source structure.
  73:./lib/chibios/os/rt/include/chevents.h ****  */
  74:./lib/chibios/os/rt/include/chevents.h **** typedef struct event_source {
  75:./lib/chibios/os/rt/include/chevents.h ****   event_listener_t      *next;          /**< @brief First Event Listener
  76:./lib/chibios/os/rt/include/chevents.h ****                                                     registered on the Event
  77:./lib/chibios/os/rt/include/chevents.h ****                                                     Source.                 */
  78:./lib/chibios/os/rt/include/chevents.h **** } event_source_t;
  79:./lib/chibios/os/rt/include/chevents.h **** 
  80:./lib/chibios/os/rt/include/chevents.h **** /**
  81:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Event Handler callback function.
  82:./lib/chibios/os/rt/include/chevents.h ****  */
  83:./lib/chibios/os/rt/include/chevents.h **** typedef void (*evhandler_t)(eventid_t id);
  84:./lib/chibios/os/rt/include/chevents.h **** 
  85:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chevents.h **** /* Module macros.                                                            */
  87:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
  88:./lib/chibios/os/rt/include/chevents.h **** 
  89:./lib/chibios/os/rt/include/chevents.h **** /**
  90:./lib/chibios/os/rt/include/chevents.h ****  * @brief   All events allowed mask.
  91:./lib/chibios/os/rt/include/chevents.h ****  */
  92:./lib/chibios/os/rt/include/chevents.h **** #define ALL_EVENTS      ((eventmask_t)-1)
  93:./lib/chibios/os/rt/include/chevents.h **** 
  94:./lib/chibios/os/rt/include/chevents.h **** /**
  95:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Returns an event mask from an event identifier.
  96:./lib/chibios/os/rt/include/chevents.h ****  */
  97:./lib/chibios/os/rt/include/chevents.h **** #define EVENT_MASK(eid) ((eventmask_t)1 << (eventmask_t)(eid))
  98:./lib/chibios/os/rt/include/chevents.h **** 
  99:./lib/chibios/os/rt/include/chevents.h **** /**
 100:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Data part of a static event source initializer.
 101:./lib/chibios/os/rt/include/chevents.h ****  * @details This macro should be used when statically initializing an event
 102:./lib/chibios/os/rt/include/chevents.h ****  *          source that is part of a bigger structure.
 103:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 104:./lib/chibios/os/rt/include/chevents.h ****  */
 105:./lib/chibios/os/rt/include/chevents.h **** #define _EVENTSOURCE_DATA(name) {(event_listener_t *)(&name)}
 106:./lib/chibios/os/rt/include/chevents.h **** 
 107:./lib/chibios/os/rt/include/chevents.h **** /**
 108:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Static event source initializer.
 109:./lib/chibios/os/rt/include/chevents.h ****  * @details Statically initialized event sources require no explicit
 110:./lib/chibios/os/rt/include/chevents.h ****  *          initialization using @p chEvtInit().
 111:./lib/chibios/os/rt/include/chevents.h ****  *
 112:./lib/chibios/os/rt/include/chevents.h ****  * @param name          the name of the event source variable
 113:./lib/chibios/os/rt/include/chevents.h ****  */
 114:./lib/chibios/os/rt/include/chevents.h **** #define EVENTSOURCE_DECL(name) event_source_t name = _EVENTSOURCE_DATA(name)
 115:./lib/chibios/os/rt/include/chevents.h **** 
 116:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 117:./lib/chibios/os/rt/include/chevents.h **** /* External declarations.                                                    */
 118:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 119:./lib/chibios/os/rt/include/chevents.h **** 
 120:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 121:./lib/chibios/os/rt/include/chevents.h **** extern "C" {
 122:./lib/chibios/os/rt/include/chevents.h **** #endif
 123:./lib/chibios/os/rt/include/chevents.h ****   void chEvtRegisterMaskWithFlags(event_source_t *esp,
 124:./lib/chibios/os/rt/include/chevents.h ****                                   event_listener_t *elp,
 125:./lib/chibios/os/rt/include/chevents.h ****                                   eventmask_t events,
 126:./lib/chibios/os/rt/include/chevents.h ****                                   eventflags_t wflags);
 127:./lib/chibios/os/rt/include/chevents.h ****   void chEvtUnregister(event_source_t *esp, event_listener_t *elp);
 128:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEventsI(eventmask_t events);
 129:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtGetAndClearEvents(eventmask_t events);
 130:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtAddEvents(eventmask_t events);
 131:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlags(event_listener_t *elp);
 132:./lib/chibios/os/rt/include/chevents.h ****   eventflags_t chEvtGetAndClearFlagsI(event_listener_t *elp);
 133:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignal(thread_t *tp, eventmask_t events);
 134:./lib/chibios/os/rt/include/chevents.h ****   void chEvtSignalI(thread_t *tp, eventmask_t events);
 135:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlags(event_source_t *esp, eventflags_t flags);
 136:./lib/chibios/os/rt/include/chevents.h ****   void chEvtBroadcastFlagsI(event_source_t *esp, eventflags_t flags);
 137:./lib/chibios/os/rt/include/chevents.h ****   void chEvtDispatch(const evhandler_t *handlers, eventmask_t events);
 138:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == TRUE) || (CH_CFG_USE_EVENTS_TIMEOUT == FALSE)
 139:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOne(eventmask_t events);
 140:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAny(eventmask_t events);
 141:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAll(eventmask_t events);
 142:./lib/chibios/os/rt/include/chevents.h **** #endif
 143:./lib/chibios/os/rt/include/chevents.h **** #if CH_CFG_USE_EVENTS_TIMEOUT == TRUE
 144:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitOneTimeout(eventmask_t events, sysinterval_t timeout);
 145:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAnyTimeout(eventmask_t events, sysinterval_t timeout);
 146:./lib/chibios/os/rt/include/chevents.h ****   eventmask_t chEvtWaitAllTimeout(eventmask_t events, sysinterval_t timeout);
 147:./lib/chibios/os/rt/include/chevents.h **** #endif
 148:./lib/chibios/os/rt/include/chevents.h **** #ifdef __cplusplus
 149:./lib/chibios/os/rt/include/chevents.h **** }
 150:./lib/chibios/os/rt/include/chevents.h **** #endif
 151:./lib/chibios/os/rt/include/chevents.h **** 
 152:./lib/chibios/os/rt/include/chevents.h **** #if (CH_CFG_OPTIMIZE_SPEED == FALSE) && (CH_CFG_USE_EVENTS_TIMEOUT == TRUE)
 153:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitOne(mask) chEvtWaitOneTimeout(mask, TIME_INFINITE)
 154:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAny(mask) chEvtWaitAnyTimeout(mask, TIME_INFINITE)
 155:./lib/chibios/os/rt/include/chevents.h **** #define chEvtWaitAll(mask) chEvtWaitAllTimeout(mask, TIME_INFINITE)
 156:./lib/chibios/os/rt/include/chevents.h **** #endif
 157:./lib/chibios/os/rt/include/chevents.h **** 
 158:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 159:./lib/chibios/os/rt/include/chevents.h **** /* Module inline functions.                                                  */
 160:./lib/chibios/os/rt/include/chevents.h **** /*===========================================================================*/
 161:./lib/chibios/os/rt/include/chevents.h **** 
 162:./lib/chibios/os/rt/include/chevents.h **** /**
 163:./lib/chibios/os/rt/include/chevents.h ****  * @brief   Initializes an Event Source.
 164:./lib/chibios/os/rt/include/chevents.h ****  * @note    This function can be invoked before the kernel is initialized
 165:./lib/chibios/os/rt/include/chevents.h ****  *          because it just prepares a @p event_source_t structure.
 166:./lib/chibios/os/rt/include/chevents.h ****  *
 167:./lib/chibios/os/rt/include/chevents.h ****  * @param[in] esp       pointer to the @p event_source_t structure
 168:./lib/chibios/os/rt/include/chevents.h ****  *
 169:./lib/chibios/os/rt/include/chevents.h ****  * @init
 170:./lib/chibios/os/rt/include/chevents.h ****  */
 171:./lib/chibios/os/rt/include/chevents.h **** static inline void chEvtObjectInit(event_source_t *esp) {
 499              		.loc 3 171 20 view .LVU107
 500              	.LBB141:
 172:./lib/chibios/os/rt/include/chevents.h **** 
 173:./lib/chibios/os/rt/include/chevents.h ****   esp->next = (event_listener_t *)esp;
 501              		.loc 3 173 3 view .LVU108
 502              	.LBE141:
 503              	.LBE140:
 504              	.LBE144:
 162:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state = QMKUSB_STOP;
 505              		.loc 1 162 20 is_stmt 0 view .LVU109
 506 000a 0126     		movs	r6, #1
 507              	.LBB145:
 508              	.LBB143:
 509              	.LBB142:
 510              		.loc 3 173 13 view .LVU110
 511 000c 4360     		str	r3, [r0, #4]
 512              	.LVL43:
 513              		.loc 3 173 13 view .LVU111
 514              	.LBE142:
 515              	.LBE143:
 516              	.LBE145:
 517              		.loc 1 162 5 is_stmt 1 view .LVU112
 163:tmk_core/protocol/chibios/usb_driver.c ****     // Note that the config uses the USB direction naming
 164:tmk_core/protocol/chibios/usb_driver.c ****     ibqObjectInit(&qmkusbp->ibqueue, true, config->ob, config->out_size, config->out_buffers, ibnot
 518              		.loc 1 164 5 is_stmt 0 view .LVU113
 519 000e 0F4B     		ldr	r3, .L27+4
 162:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state = QMKUSB_STOP;
 520              		.loc 1 162 20 view .LVU114
 521 0010 0672     		strb	r6, [r0, #8]
 522              		.loc 1 164 5 is_stmt 1 view .LVU115
 523 0012 0290     		str	r0, [sp, #8]
 524 0014 0193     		str	r3, [sp, #4]
 525 0016 CB68     		ldr	r3, [r1, #12]
 526 0018 0093     		str	r3, [sp]
 159:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->vmt = &vmt;
 527              		.loc 1 159 74 is_stmt 0 view .LVU116
 528 001a 0D46     		mov	r5, r1
 529 001c 0446     		mov	r4, r0
 530              		.loc 1 164 5 view .LVU117
 531 001e 4B69     		ldr	r3, [r1, #20]
 532 0020 0A6A     		ldr	r2, [r1, #32]
 533 0022 0C30     		adds	r0, r0, #12
 534              	.LVL44:
 535              		.loc 1 164 5 view .LVU118
 536 0024 3146     		mov	r1, r6
 537              	.LVL45:
 538              		.loc 1 164 5 view .LVU119
 539 0026 FFF7FEFF 		bl	ibqObjectInit
 540              	.LVL46:
 165:tmk_core/protocol/chibios/usb_driver.c ****     obqObjectInit(&qmkusbp->obqueue, true, config->ib, config->in_size, config->in_buffers, obnotif
 541              		.loc 1 165 5 is_stmt 1 view .LVU120
 542 002a 094B     		ldr	r3, .L27+8
 543 002c 0193     		str	r3, [sp, #4]
 544 002e AB68     		ldr	r3, [r5, #8]
 545 0030 0093     		str	r3, [sp]
 546 0032 EA69     		ldr	r2, [r5, #28]
 547 0034 2B69     		ldr	r3, [r5, #16]
 548 0036 0294     		str	r4, [sp, #8]
 549 0038 3146     		mov	r1, r6
 550 003a 04F14400 		add	r0, r4, #68
 551 003e FFF7FEFF 		bl	obqObjectInit
 552              	.LVL47:
 166:tmk_core/protocol/chibios/usb_driver.c **** }
 553              		.loc 1 166 1 is_stmt 0 view .LVU121
 554 0042 04B0     		add	sp, sp, #16
 555              		.cfi_def_cfa_offset 16
 556              		@ sp needed
 557 0044 70BD     		pop	{r4, r5, r6, pc}
 558              	.LVL48:
 559              	.L28:
 560              		.loc 1 166 1 view .LVU122
 561 0046 00BF     		.align	2
 562              	.L27:
 563 0048 00000000 		.word	.LANCHOR0
 564 004c 00000000 		.word	ibnotify
 565 0050 00000000 		.word	obnotify
 566              		.cfi_endproc
 567              	.LFE290:
 569              		.section	.text.qmkusbStart,"ax",%progbits
 570              		.align	1
 571              		.global	qmkusbStart
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu fpv4-sp-d16
 577              	qmkusbStart:
 578              	.LVL49:
 579              	.LFB291:
 167:tmk_core/protocol/chibios/usb_driver.c **** 
 168:tmk_core/protocol/chibios/usb_driver.c **** /**
 169:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Configures and starts the driver.
 170:tmk_core/protocol/chibios/usb_driver.c ****  *
 171:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 172:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] config    the serial over USB driver configuration
 173:tmk_core/protocol/chibios/usb_driver.c ****  *
 174:tmk_core/protocol/chibios/usb_driver.c ****  * @api
 175:tmk_core/protocol/chibios/usb_driver.c ****  */
 176:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbStart(QMKUSBDriver *qmkusbp, const QMKUSBConfig *config) {
 580              		.loc 1 176 69 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 177:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = config->usbp;
 585              		.loc 1 177 5 view .LVU124
 586              		.loc 1 177 16 is_stmt 0 view .LVU125
 587 0000 0B68     		ldr	r3, [r1]
 588              	.LVL50:
 178:tmk_core/protocol/chibios/usb_driver.c **** 
 179:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgCheck(qmkusbp != NULL);
 589              		.loc 1 179 5 is_stmt 1 view .LVU126
 590              		.loc 1 179 5 view .LVU127
 591              		.loc 1 179 5 view .LVU128
 180:tmk_core/protocol/chibios/usb_driver.c **** 
 181:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLock();
 592              		.loc 1 181 5 view .LVU129
 593              	.LBB146:
 594              	.LBI146:
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 595              		.loc 2 509 20 view .LVU130
 596              	.LBE146:
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 597              		.loc 2 511 3 view .LVU131
 598              	.LBB154:
 599              	.LBB147:
 600              	.LBI147:
 601              		.file 4 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 602              		.loc 4 353 20 view .LVU132
 603              	.LBE147:
 604              	.LBE154:
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 605              		.loc 4 355 3 view .LVU133
 606              	.LBB155:
 607              	.LBB152:
 608              	.LBB148:
 609              	.LBI148:
 610              		.file 5 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 611              		.loc 5 669 27 view .LVU134
 612              	.LBE148:
 613              	.LBE152:
 614              	.LBE155:
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 615              		.loc 5 677 3 view .LVU135
 616              	.LBB156:
 617              	.LBB153:
 618              	.LBB151:
 619              	.LBB149:
 620              	.LBI149:
 621              		.file 6 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 622              		.loc 6 491 27 view .LVU136
 623              	.LBB150:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 624              		.loc 6 493 3 view .LVU137
 625 0002 2022     		movs	r2, #32
 626              		.syntax unified
 627              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 628 0004 82F31188 		MSR basepri, r2
 629              	@ 0 "" 2
 630              	.LVL51:
 631              		.loc 6 493 3 is_stmt 0 view .LVU138
 632              		.thumb
 633              		.syntax unified
 634              	.LBE150:
 635              	.LBE149:
 636              	.LBE151:
 637              	.LBE153:
 638              	.LBE156:
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 639              		.loc 4 356 34 is_stmt 1 view .LVU139
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 640              		.loc 4 357 20 view .LVU140
 182:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgAssert((qmkusbp->state == QMKUSB_STOP) || (qmkusbp->state == QMKUSB_READY), "invalid sta
 641              		.loc 1 182 5 view .LVU141
 642              		.loc 1 182 5 view .LVU142
 643              		.loc 1 182 5 view .LVU143
 183:tmk_core/protocol/chibios/usb_driver.c ****     usbp->in_params[config->bulk_in - 1U]   = qmkusbp;
 644              		.loc 1 183 5 view .LVU144
 645              		.loc 1 183 27 is_stmt 0 view .LVU145
 646 0008 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 647              		.loc 1 183 45 view .LVU146
 648 000a 03EB8202 		add	r2, r3, r2, lsl #2
 649 000e 9062     		str	r0, [r2, #40]
 184:tmk_core/protocol/chibios/usb_driver.c ****     usbp->out_params[config->bulk_out - 1U] = qmkusbp;
 650              		.loc 1 184 5 is_stmt 1 view .LVU147
 651              		.loc 1 184 28 is_stmt 0 view .LVU148
 652 0010 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 653              		.loc 1 184 45 view .LVU149
 654 0012 1132     		adds	r2, r2, #17
 655 0014 43F82200 		str	r0, [r3, r2, lsl #2]
 185:tmk_core/protocol/chibios/usb_driver.c ****     if (config->int_in > 0U) {
 656              		.loc 1 185 5 is_stmt 1 view .LVU150
 657              		.loc 1 185 15 is_stmt 0 view .LVU151
 658 0018 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 659              		.loc 1 185 8 view .LVU152
 660 001a 12B1     		cbz	r2, .L30
 186:tmk_core/protocol/chibios/usb_driver.c ****         usbp->in_params[config->int_in - 1U] = qmkusbp;
 661              		.loc 1 186 9 is_stmt 1 view .LVU153
 662              		.loc 1 186 46 is_stmt 0 view .LVU154
 663 001c 03EB8203 		add	r3, r3, r2, lsl #2
 664              	.LVL52:
 665              		.loc 1 186 46 view .LVU155
 666 0020 9862     		str	r0, [r3, #40]
 667              	.L30:
 187:tmk_core/protocol/chibios/usb_driver.c ****     }
 188:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->config = config;
 668              		.loc 1 188 5 is_stmt 1 view .LVU156
 189:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_READY;
 669              		.loc 1 189 21 is_stmt 0 view .LVU157
 670 0022 0223     		movs	r3, #2
 671 0024 0372     		strb	r3, [r0, #8]
 672              	.LVL53:
 188:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_READY;
 673              		.loc 1 188 21 view .LVU158
 674 0026 C167     		str	r1, [r0, #124]
 675              		.loc 1 189 5 is_stmt 1 view .LVU159
 190:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlock();
 676              		.loc 1 190 5 view .LVU160
 677              	.LBB157:
 678              	.LBI157:
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 679              		.loc 2 520 20 view .LVU161
 680              	.LBE157:
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 681              		.loc 2 522 3 view .LVU162
 682              	.LBB166:
 683              	.LBB158:
 684              	.LBI158:
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 685              		.loc 4 365 20 view .LVU163
 686              	.LBB159:
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 687              		.loc 4 367 22 view .LVU164
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 688              		.loc 4 368 33 view .LVU165
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 689              		.loc 4 374 3 view .LVU166
 690              		.loc 4 374 3 view .LVU167
 691              		.loc 4 374 3 view .LVU168
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 692              		.loc 4 378 3 view .LVU169
 693              	.LBB160:
 694              	.LBI160:
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 695              		.loc 5 693 27 view .LVU170
 696              	.LBE160:
 697              	.LBE159:
 698              	.LBE158:
 699              	.LBE166:
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 700              		.loc 5 696 3 view .LVU171
 701              	.LVL54:
 702              	.LBB167:
 703              	.LBB165:
 704              	.LBB164:
 705              	.LBB163:
 706              	.LBB161:
 707              	.LBI161:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 708              		.loc 6 491 27 view .LVU172
 709              	.LBB162:
 710              		.loc 6 493 3 view .LVU173
 711 0028 0023     		movs	r3, #0
 712              		.syntax unified
 713              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 714 002a 83F31188 		MSR basepri, r3
 715              	@ 0 "" 2
 716              	.LVL55:
 717              		.loc 6 493 3 is_stmt 0 view .LVU174
 718              		.thumb
 719              		.syntax unified
 720              	.LBE162:
 721              	.LBE161:
 722              	.LBE163:
 723              	.LBE164:
 724              	.LBE165:
 725              	.LBE167:
 191:tmk_core/protocol/chibios/usb_driver.c **** }
 726              		.loc 1 191 1 view .LVU175
 727 002e 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE291:
 731              		.section	.text.qmkusbStop,"ax",%progbits
 732              		.align	1
 733              		.global	qmkusbStop
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	qmkusbStop:
 740              	.LVL56:
 741              	.LFB292:
 192:tmk_core/protocol/chibios/usb_driver.c **** 
 193:tmk_core/protocol/chibios/usb_driver.c **** /**
 194:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Stops the driver.
 195:tmk_core/protocol/chibios/usb_driver.c ****  * @details Any thread waiting on the driver's queues will be awakened with
 196:tmk_core/protocol/chibios/usb_driver.c ****  *          the message @p MSG_RESET.
 197:tmk_core/protocol/chibios/usb_driver.c ****  *
 198:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 199:tmk_core/protocol/chibios/usb_driver.c ****  *
 200:tmk_core/protocol/chibios/usb_driver.c ****  * @api
 201:tmk_core/protocol/chibios/usb_driver.c ****  */
 202:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbStop(QMKUSBDriver *qmkusbp) {
 742              		.loc 1 202 40 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 203:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 746              		.loc 1 203 5 view .LVU177
 202:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 747              		.loc 1 202 40 is_stmt 0 view .LVU178
 748 0000 38B5     		push	{r3, r4, r5, lr}
 749              		.cfi_def_cfa_offset 16
 750              		.cfi_offset 3, -16
 751              		.cfi_offset 4, -12
 752              		.cfi_offset 5, -8
 753              		.cfi_offset 14, -4
 754              		.loc 1 203 16 view .LVU179
 755 0002 C36F     		ldr	r3, [r0, #124]
 202:tmk_core/protocol/chibios/usb_driver.c ****     USBDriver *usbp = qmkusbp->config->usbp;
 756              		.loc 1 202 40 view .LVU180
 757 0004 0446     		mov	r4, r0
 758              		.loc 1 203 16 view .LVU181
 759 0006 1B68     		ldr	r3, [r3]
 760              	.LVL57:
 204:tmk_core/protocol/chibios/usb_driver.c **** 
 205:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgCheck(qmkusbp != NULL);
 761              		.loc 1 205 5 is_stmt 1 view .LVU182
 762              		.loc 1 205 5 view .LVU183
 763              		.loc 1 205 5 view .LVU184
 206:tmk_core/protocol/chibios/usb_driver.c **** 
 207:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLock();
 764              		.loc 1 207 5 view .LVU185
 765              	.LBB168:
 766              	.LBI168:
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 767              		.loc 2 509 20 view .LVU186
 768              	.LBE168:
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 769              		.loc 2 511 3 view .LVU187
 770              	.LBB176:
 771              	.LBB169:
 772              	.LBI169:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 773              		.loc 4 353 20 view .LVU188
 774              	.LBE169:
 775              	.LBE176:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 776              		.loc 4 355 3 view .LVU189
 777              	.LBB177:
 778              	.LBB174:
 779              	.LBB170:
 780              	.LBI170:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 781              		.loc 5 669 27 view .LVU190
 782              	.LBE170:
 783              	.LBE174:
 784              	.LBE177:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 785              		.loc 5 677 3 view .LVU191
 786              	.LBB178:
 787              	.LBB175:
 788              	.LBB173:
 789              	.LBB171:
 790              	.LBI171:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 791              		.loc 6 491 27 view .LVU192
 792              	.LBB172:
 793              		.loc 6 493 3 view .LVU193
 794 0008 2022     		movs	r2, #32
 795              		.syntax unified
 796              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 797 000a 82F31188 		MSR basepri, r2
 798              	@ 0 "" 2
 799              	.LVL58:
 800              		.loc 6 493 3 is_stmt 0 view .LVU194
 801              		.thumb
 802              		.syntax unified
 803              	.LBE172:
 804              	.LBE171:
 805              	.LBE173:
 806              	.LBE175:
 807              	.LBE178:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 808              		.loc 4 356 34 is_stmt 1 view .LVU195
 357:./lib/chibios/os/rt/include/chsys.h **** }
 809              		.loc 4 357 20 view .LVU196
 208:tmk_core/protocol/chibios/usb_driver.c **** 
 209:tmk_core/protocol/chibios/usb_driver.c ****     osalDbgAssert((qmkusbp->state == QMKUSB_STOP) || (qmkusbp->state == QMKUSB_READY), "invalid sta
 810              		.loc 1 209 5 view .LVU197
 811              		.loc 1 209 5 view .LVU198
 812              		.loc 1 209 5 view .LVU199
 210:tmk_core/protocol/chibios/usb_driver.c **** 
 211:tmk_core/protocol/chibios/usb_driver.c ****     /* Driver in stopped state.*/
 212:tmk_core/protocol/chibios/usb_driver.c ****     usbp->in_params[qmkusbp->config->bulk_in - 1U]   = NULL;
 813              		.loc 1 212 5 view .LVU200
 814              		.loc 1 212 28 is_stmt 0 view .LVU201
 815 000e C06F     		ldr	r0, [r0, #124]
 816              	.LVL59:
 817              		.loc 1 212 36 view .LVU202
 818 0010 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 819              		.loc 1 212 54 view .LVU203
 820 0012 0932     		adds	r2, r2, #9
 821 0014 03EB8202 		add	r2, r3, r2, lsl #2
 822 0018 0021     		movs	r1, #0
 823 001a 5160     		str	r1, [r2, #4]
 213:tmk_core/protocol/chibios/usb_driver.c ****     usbp->out_params[qmkusbp->config->bulk_out - 1U] = NULL;
 824              		.loc 1 213 5 is_stmt 1 view .LVU204
 825              		.loc 1 213 37 is_stmt 0 view .LVU205
 826 001c 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 827              		.loc 1 213 54 view .LVU206
 828 001e 1132     		adds	r2, r2, #17
 829 0020 43F82210 		str	r1, [r3, r2, lsl #2]
 214:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp->config->int_in > 0U) {
 830              		.loc 1 214 5 is_stmt 1 view .LVU207
 831              		.loc 1 214 24 is_stmt 0 view .LVU208
 832 0024 8279     		ldrb	r2, [r0, #6]	@ zero_extendqisi2
 833              		.loc 1 214 8 view .LVU209
 834 0026 1AB1     		cbz	r2, .L35
 215:tmk_core/protocol/chibios/usb_driver.c ****         usbp->in_params[qmkusbp->config->int_in - 1U] = NULL;
 835              		.loc 1 215 9 is_stmt 1 view .LVU210
 836              		.loc 1 215 55 is_stmt 0 view .LVU211
 837 0028 0932     		adds	r2, r2, #9
 838 002a 03EB8203 		add	r3, r3, r2, lsl #2
 839              	.LVL60:
 840              		.loc 1 215 55 view .LVU212
 841 002e 5960     		str	r1, [r3, #4]
 842              	.L35:
 216:tmk_core/protocol/chibios/usb_driver.c ****     }
 217:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->config = NULL;
 843              		.loc 1 217 5 is_stmt 1 view .LVU213
 218:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_STOP;
 844              		.loc 1 218 21 is_stmt 0 view .LVU214
 845 0030 0123     		movs	r3, #1
 217:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_STOP;
 846              		.loc 1 217 21 view .LVU215
 847 0032 0025     		movs	r5, #0
 848              		.loc 1 218 21 view .LVU216
 849 0034 2372     		strb	r3, [r4, #8]
 850              	.LVL61:
 851              	.LBB179:
 852              	.LBB180:
 871:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 872:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 873:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalEventObjectInit(event_source_t *esp) {
 874:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 875:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   osalDbgCheck(esp != NULL);
 876:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 877:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   esp->flags = (eventflags_t)0;
 878:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   esp->cb    = NULL;
 879:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   esp->param = NULL;
 880:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 881:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 882:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 883:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == TRUE) || defined(__DOXYGEN__)
 884:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 885:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Add flags to an event source object.
 886:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 887:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] esp       pointer to the event flags object
 888:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] flags     flags to be ORed to the flags mask
 889:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 890:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @iclass
 891:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalEventBroadcastFlagsI(event_source_t *esp,
 893:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 894:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 895:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chEvtBroadcastFlagsI(esp, flags);
 853              		.loc 2 895 3 view .LVU217
 854 0036 0221     		movs	r1, #2
 855 0038 201D     		adds	r0, r4, #4
 856              	.LBE180:
 857              	.LBE179:
 217:tmk_core/protocol/chibios/usb_driver.c ****     qmkusbp->state  = QMKUSB_STOP;
 858              		.loc 1 217 21 view .LVU218
 859 003a E567     		str	r5, [r4, #124]
 860              		.loc 1 218 5 is_stmt 1 view .LVU219
 219:tmk_core/protocol/chibios/usb_driver.c **** 
 220:tmk_core/protocol/chibios/usb_driver.c ****     /* Enforces a disconnection.*/
 221:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 861              		.loc 1 221 5 view .LVU220
 862              	.LVL62:
 863              	.LBB182:
 864              	.LBI179:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 865              		.loc 2 892 20 view .LVU221
 866              	.LBB181:
 867              		.loc 2 895 3 view .LVU222
 868 003c FFF7FEFF 		bl	chEvtBroadcastFlagsI
 869              	.LVL63:
 870              		.loc 2 895 3 is_stmt 0 view .LVU223
 871              	.LBE181:
 872              	.LBE182:
 873              		.loc 1 221 44 is_stmt 1 view .LVU224
 222:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 874              		.loc 1 222 5 view .LVU225
 875 0040 04F10C00 		add	r0, r4, #12
 876 0044 FFF7FEFF 		bl	ibqResetI
 877              	.LVL64:
 223:tmk_core/protocol/chibios/usb_driver.c ****     obqResetI(&qmkusbp->obqueue);
 878              		.loc 1 223 5 view .LVU226
 879 0048 04F14400 		add	r0, r4, #68
 880 004c FFF7FEFF 		bl	obqResetI
 881              	.LVL65:
 224:tmk_core/protocol/chibios/usb_driver.c ****     osalOsRescheduleS();
 882              		.loc 1 224 5 view .LVU227
 883              	.LBB183:
 884              	.LBI183:
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 885              		.loc 2 616 20 view .LVU228
 886              	.LBB184:
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 887              		.loc 2 618 3 view .LVU229
 888 0050 FFF7FEFF 		bl	chSchRescheduleS
 889              	.LVL66:
 890              	.LBE184:
 891              	.LBE183:
 225:tmk_core/protocol/chibios/usb_driver.c **** 
 226:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlock();
 892              		.loc 1 226 5 view .LVU230
 893              	.LBB185:
 894              	.LBI185:
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 895              		.loc 2 520 20 view .LVU231
 896              	.LBE185:
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 897              		.loc 2 522 3 view .LVU232
 898              	.LBB194:
 899              	.LBB186:
 900              	.LBI186:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 901              		.loc 4 365 20 view .LVU233
 902              	.LBB187:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 903              		.loc 4 367 22 view .LVU234
 368:./lib/chibios/os/rt/include/chsys.h **** 
 904              		.loc 4 368 33 view .LVU235
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 905              		.loc 4 374 3 view .LVU236
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 906              		.loc 4 374 3 view .LVU237
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 907              		.loc 4 374 3 view .LVU238
 908              		.loc 4 378 3 view .LVU239
 909              	.LBB188:
 910              	.LBI188:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 911              		.loc 5 693 27 view .LVU240
 912              	.LBE188:
 913              	.LBE187:
 914              	.LBE186:
 915              	.LBE194:
 916              		.loc 5 696 3 view .LVU241
 917              	.LBB195:
 918              	.LBB193:
 919              	.LBB192:
 920              	.LBB191:
 921              	.LBB189:
 922              	.LBI189:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 923              		.loc 6 491 27 view .LVU242
 924              	.LBB190:
 925              		.loc 6 493 3 view .LVU243
 926              		.syntax unified
 927              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 928 0054 85F31188 		MSR basepri, r5
 929              	@ 0 "" 2
 930              	.LVL67:
 931              		.loc 6 493 3 is_stmt 0 view .LVU244
 932              		.thumb
 933              		.syntax unified
 934              	.LBE190:
 935              	.LBE189:
 936              	.LBE191:
 937              	.LBE192:
 938              	.LBE193:
 939              	.LBE195:
 227:tmk_core/protocol/chibios/usb_driver.c **** }
 940              		.loc 1 227 1 view .LVU245
 941 0058 38BD     		pop	{r3, r4, r5, pc}
 942              		.loc 1 227 1 view .LVU246
 943              		.cfi_endproc
 944              	.LFE292:
 946              		.section	.text.qmkusbSuspendHookI,"ax",%progbits
 947              		.align	1
 948              		.global	qmkusbSuspendHookI
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu fpv4-sp-d16
 954              	qmkusbSuspendHookI:
 955              	.LVL68:
 956              	.LFB293:
 228:tmk_core/protocol/chibios/usb_driver.c **** 
 229:tmk_core/protocol/chibios/usb_driver.c **** /**
 230:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device suspend handler.
 231:tmk_core/protocol/chibios/usb_driver.c ****  * @details Generates a @p CHN_DISCONNECT event and puts queues in
 232:tmk_core/protocol/chibios/usb_driver.c ****  *          non-blocking mode, this way the application cannot get stuck
 233:tmk_core/protocol/chibios/usb_driver.c ****  *          in the middle of an I/O operations.
 234:tmk_core/protocol/chibios/usb_driver.c ****  * @note    If this function is not called from an ISR then an explicit call
 235:tmk_core/protocol/chibios/usb_driver.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 236:tmk_core/protocol/chibios/usb_driver.c ****  *
 237:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 238:tmk_core/protocol/chibios/usb_driver.c ****  *
 239:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 240:tmk_core/protocol/chibios/usb_driver.c ****  */
 241:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbSuspendHookI(QMKUSBDriver *qmkusbp) {
 957              		.loc 1 241 48 is_stmt 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 242:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 961              		.loc 1 242 5 view .LVU248
 962              	.LBB196:
 963              	.LBI196:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 964              		.loc 2 892 20 view .LVU249
 965              	.LBB197:
 966              		.loc 2 895 3 view .LVU250
 967              	.LBE197:
 968              	.LBE196:
 241:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 969              		.loc 1 241 48 is_stmt 0 view .LVU251
 970 0000 38B5     		push	{r3, r4, r5, lr}
 971              		.cfi_def_cfa_offset 16
 972              		.cfi_offset 3, -16
 973              		.cfi_offset 4, -12
 974              		.cfi_offset 5, -8
 975              		.cfi_offset 14, -4
 241:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_DISCONNECTED);
 976              		.loc 1 241 48 view .LVU252
 977 0002 0446     		mov	r4, r0
 243:tmk_core/protocol/chibios/usb_driver.c ****     bqSuspendI(&qmkusbp->ibqueue);
 978              		.loc 1 243 5 view .LVU253
 979 0004 0125     		movs	r5, #1
 980              	.LBB199:
 981              	.LBB198:
 982              		.loc 2 895 3 view .LVU254
 983 0006 0221     		movs	r1, #2
 984 0008 0430     		adds	r0, r0, #4
 985              	.LVL69:
 986              		.loc 2 895 3 view .LVU255
 987 000a FFF7FEFF 		bl	chEvtBroadcastFlagsI
 988              	.LVL70:
 989              		.loc 2 895 3 view .LVU256
 990              	.LBE198:
 991              	.LBE199:
 242:tmk_core/protocol/chibios/usb_driver.c ****     bqSuspendI(&qmkusbp->ibqueue);
 992              		.loc 1 242 44 is_stmt 1 view .LVU257
 993              		.loc 1 243 5 view .LVU258
 994              	.LBB200:
 995              	.LBB201:
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 996              		.loc 2 857 3 is_stmt 0 view .LVU259
 997 000e 04F10C00 		add	r0, r4, #12
 998              	.LBE201:
 999              	.LBE200:
 1000              		.loc 1 243 5 view .LVU260
 1001 0012 2575     		strb	r5, [r4, #20]
 1002              		.loc 1 243 5 is_stmt 1 view .LVU261
 1003              	.LVL71:
 1004              	.LBB203:
 1005              	.LBI200:
 855:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1006              		.loc 2 855 20 view .LVU262
 1007              	.LBB202:
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1008              		.loc 2 857 3 view .LVU263
 1009 0014 6FF00101 		mvn	r1, #1
 1010 0018 FFF7FEFF 		bl	chThdDequeueAllI
 1011              	.LVL72:
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1012              		.loc 2 857 3 is_stmt 0 view .LVU264
 1013              	.LBE202:
 1014              	.LBE203:
 1015              		.loc 1 243 34 is_stmt 1 view .LVU265
 244:tmk_core/protocol/chibios/usb_driver.c ****     bqSuspendI(&qmkusbp->obqueue);
 1016              		.loc 1 244 5 view .LVU266
 1017 001c 84F84C50 		strb	r5, [r4, #76]
 1018              		.loc 1 244 5 view .LVU267
 1019              	.LVL73:
 1020              	.LBB204:
 1021              	.LBI204:
 855:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1022              		.loc 2 855 20 view .LVU268
 1023              	.LBB205:
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1024              		.loc 2 857 3 view .LVU269
 1025 0020 04F14400 		add	r0, r4, #68
 1026              	.LVL74:
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1027              		.loc 2 857 3 is_stmt 0 view .LVU270
 1028 0024 6FF00101 		mvn	r1, #1
 1029              	.LBE205:
 1030              	.LBE204:
 245:tmk_core/protocol/chibios/usb_driver.c **** }
 1031              		.loc 1 245 1 view .LVU271
 1032 0028 BDE83840 		pop	{r3, r4, r5, lr}
 1033              		.cfi_restore 14
 1034              		.cfi_restore 5
 1035              		.cfi_restore 4
 1036              		.cfi_restore 3
 1037              		.cfi_def_cfa_offset 0
 1038              	.LVL75:
 1039              	.LBB207:
 1040              	.LBB206:
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1041              		.loc 2 857 3 view .LVU272
 1042 002c FFF7FEBF 		b	chThdDequeueAllI
 1043              	.LVL76:
 857:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1044              		.loc 2 857 3 view .LVU273
 1045              	.LBE206:
 1046              	.LBE207:
 1047              		.cfi_endproc
 1048              	.LFE293:
 1050              		.section	.text.qmkusbWakeupHookI,"ax",%progbits
 1051              		.align	1
 1052              		.global	qmkusbWakeupHookI
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1056              		.fpu fpv4-sp-d16
 1058              	qmkusbWakeupHookI:
 1059              	.LVL77:
 1060              	.LFB294:
 246:tmk_core/protocol/chibios/usb_driver.c **** 
 247:tmk_core/protocol/chibios/usb_driver.c **** /**
 248:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device wakeup handler.
 249:tmk_core/protocol/chibios/usb_driver.c ****  * @details Generates a @p CHN_CONNECT event and resumes normal queues
 250:tmk_core/protocol/chibios/usb_driver.c ****  *          operations.
 251:tmk_core/protocol/chibios/usb_driver.c ****  *
 252:tmk_core/protocol/chibios/usb_driver.c ****  * @note    If this function is not called from an ISR then an explicit call
 253:tmk_core/protocol/chibios/usb_driver.c ****  *          to @p osalOsRescheduleS() in necessary afterward.
 254:tmk_core/protocol/chibios/usb_driver.c ****  *
 255:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 256:tmk_core/protocol/chibios/usb_driver.c ****  *
 257:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 258:tmk_core/protocol/chibios/usb_driver.c ****  */
 259:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbWakeupHookI(QMKUSBDriver *qmkusbp) {
 1061              		.loc 1 259 47 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 260:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1065              		.loc 1 260 5 view .LVU275
 1066              	.LBB208:
 1067              	.LBI208:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1068              		.loc 2 892 20 view .LVU276
 1069              	.LBB209:
 1070              		.loc 2 895 3 view .LVU277
 1071              	.LBE209:
 1072              	.LBE208:
 259:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1073              		.loc 1 259 47 is_stmt 0 view .LVU278
 1074 0000 10B5     		push	{r4, lr}
 1075              		.cfi_def_cfa_offset 8
 1076              		.cfi_offset 4, -8
 1077              		.cfi_offset 14, -4
 1078              	.LBB212:
 1079              	.LBB210:
 1080              		.loc 2 895 3 view .LVU279
 1081 0002 0121     		movs	r1, #1
 1082              	.LBE210:
 1083              	.LBE212:
 259:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1084              		.loc 1 259 47 view .LVU280
 1085 0004 0446     		mov	r4, r0
 1086              	.LBB213:
 1087              	.LBB211:
 1088              		.loc 2 895 3 view .LVU281
 1089 0006 0430     		adds	r0, r0, #4
 1090              	.LVL78:
 1091              		.loc 2 895 3 view .LVU282
 1092 0008 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1093              	.LVL79:
 1094              		.loc 2 895 3 view .LVU283
 1095              	.LBE211:
 1096              	.LBE213:
 1097              		.loc 1 260 41 is_stmt 1 view .LVU284
 261:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1098              		.loc 1 261 5 view .LVU285
 1099 000c 0023     		movs	r3, #0
 1100 000e 2375     		strb	r3, [r4, #20]
 1101              		.loc 1 261 33 view .LVU286
 262:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->obqueue);
 1102              		.loc 1 262 5 view .LVU287
 1103 0010 84F84C30 		strb	r3, [r4, #76]
 1104              		.loc 1 262 33 view .LVU288
 263:tmk_core/protocol/chibios/usb_driver.c **** }
 1105              		.loc 1 263 1 is_stmt 0 view .LVU289
 1106 0014 10BD     		pop	{r4, pc}
 1107              		.loc 1 263 1 view .LVU290
 1108              		.cfi_endproc
 1109              	.LFE294:
 1111              		.section	.text.qmkusbConfigureHookI,"ax",%progbits
 1112              		.align	1
 1113              		.global	qmkusbConfigureHookI
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1117              		.fpu fpv4-sp-d16
 1119              	qmkusbConfigureHookI:
 1120              	.LVL80:
 1121              	.LFB295:
 264:tmk_core/protocol/chibios/usb_driver.c **** 
 265:tmk_core/protocol/chibios/usb_driver.c **** /**
 266:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   USB device configured handler.
 267:tmk_core/protocol/chibios/usb_driver.c ****  *
 268:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 269:tmk_core/protocol/chibios/usb_driver.c ****  *
 270:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 271:tmk_core/protocol/chibios/usb_driver.c ****  */
 272:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbConfigureHookI(QMKUSBDriver *qmkusbp) {
 1122              		.loc 1 272 50 is_stmt 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 273:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1126              		.loc 1 273 5 view .LVU292
 272:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1127              		.loc 1 272 50 is_stmt 0 view .LVU293
 1128 0000 38B5     		push	{r3, r4, r5, lr}
 1129              		.cfi_def_cfa_offset 16
 1130              		.cfi_offset 3, -16
 1131              		.cfi_offset 4, -12
 1132              		.cfi_offset 5, -8
 1133              		.cfi_offset 14, -4
 272:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1134              		.loc 1 272 50 view .LVU294
 1135 0002 0446     		mov	r4, r0
 274:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1136              		.loc 1 274 5 view .LVU295
 1137 0004 0025     		movs	r5, #0
 273:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1138              		.loc 1 273 5 view .LVU296
 1139 0006 0C30     		adds	r0, r0, #12
 1140              	.LVL81:
 273:tmk_core/protocol/chibios/usb_driver.c ****     ibqResetI(&qmkusbp->ibqueue);
 1141              		.loc 1 273 5 view .LVU297
 1142 0008 FFF7FEFF 		bl	ibqResetI
 1143              	.LVL82:
 1144              		.loc 1 274 5 is_stmt 1 view .LVU298
 275:tmk_core/protocol/chibios/usb_driver.c ****     obqResetI(&qmkusbp->obqueue);
 1145              		.loc 1 275 5 is_stmt 0 view .LVU299
 1146 000c 04F14400 		add	r0, r4, #68
 274:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1147              		.loc 1 274 5 view .LVU300
 1148 0010 2575     		strb	r5, [r4, #20]
 274:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->ibqueue);
 1149              		.loc 1 274 33 is_stmt 1 view .LVU301
 1150              		.loc 1 275 5 view .LVU302
 1151 0012 FFF7FEFF 		bl	obqResetI
 1152              	.LVL83:
 276:tmk_core/protocol/chibios/usb_driver.c ****     bqResumeX(&qmkusbp->obqueue);
 1153              		.loc 1 276 5 view .LVU303
 1154              	.LBB214:
 1155              	.LBB215:
 1156              		.loc 2 895 3 is_stmt 0 view .LVU304
 1157 0016 201D     		adds	r0, r4, #4
 1158              	.LBE215:
 1159              	.LBE214:
 1160              		.loc 1 276 5 view .LVU305
 1161 0018 84F84C50 		strb	r5, [r4, #76]
 1162              		.loc 1 276 33 is_stmt 1 view .LVU306
 277:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_CONNECTED);
 1163              		.loc 1 277 5 view .LVU307
 1164              	.LVL84:
 1165              	.LBB217:
 1166              	.LBI214:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1167              		.loc 2 892 20 view .LVU308
 1168              	.LBB216:
 1169              		.loc 2 895 3 view .LVU309
 1170 001c 0121     		movs	r1, #1
 1171 001e FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1172              	.LVL85:
 1173              		.loc 2 895 3 is_stmt 0 view .LVU310
 1174              	.LBE216:
 1175              	.LBE217:
 1176              		.loc 1 277 41 is_stmt 1 view .LVU311
 278:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 1177              		.loc 1 278 5 view .LVU312
 1178              		.loc 1 278 11 is_stmt 0 view .LVU313
 1179 0022 2046     		mov	r0, r4
 279:tmk_core/protocol/chibios/usb_driver.c **** }
 1180              		.loc 1 279 1 view .LVU314
 1181 0024 BDE83840 		pop	{r3, r4, r5, lr}
 1182              		.cfi_restore 14
 1183              		.cfi_restore 5
 1184              		.cfi_restore 4
 1185              		.cfi_restore 3
 1186              		.cfi_def_cfa_offset 0
 1187              	.LVL86:
 278:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 1188              		.loc 1 278 11 view .LVU315
 1189 0028 FFF7FEBF 		b	qmkusb_start_receive.isra.0
 1190              	.LVL87:
 278:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 1191              		.loc 1 278 11 view .LVU316
 1192              		.cfi_endproc
 1193              	.LFE295:
 1195              		.section	.text.qmkusbRequestsHook,"ax",%progbits
 1196              		.align	1
 1197              		.global	qmkusbRequestsHook
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
 1201              		.fpu fpv4-sp-d16
 1203              	qmkusbRequestsHook:
 1204              	.LVL88:
 1205              	.LFB296:
 280:tmk_core/protocol/chibios/usb_driver.c **** 
 281:tmk_core/protocol/chibios/usb_driver.c **** /**
 282:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default requests hook.
 283:tmk_core/protocol/chibios/usb_driver.c ****  * @details Applications wanting to use the Serial over USB driver can use
 284:tmk_core/protocol/chibios/usb_driver.c ****  *          this function as requests hook in the USB configuration.
 285:tmk_core/protocol/chibios/usb_driver.c ****  *          The following requests are emulated:
 286:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_GET_LINE_CODING.
 287:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_SET_LINE_CODING.
 288:tmk_core/protocol/chibios/usb_driver.c ****  *          - CDC_SET_CONTROL_LINE_STATE.
 289:tmk_core/protocol/chibios/usb_driver.c ****  *          .
 290:tmk_core/protocol/chibios/usb_driver.c ****  *
 291:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 292:tmk_core/protocol/chibios/usb_driver.c ****  * @return              The hook status.
 293:tmk_core/protocol/chibios/usb_driver.c ****  * @retval true         Message handled internally.
 294:tmk_core/protocol/chibios/usb_driver.c ****  * @retval false        Message not handled.
 295:tmk_core/protocol/chibios/usb_driver.c ****  */
 296:tmk_core/protocol/chibios/usb_driver.c **** bool qmkusbRequestsHook(USBDriver *usbp) {
 1206              		.loc 1 296 42 is_stmt 1 view -0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 297:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) {
 1211              		.loc 1 297 5 view .LVU318
 1212              		.loc 1 297 8 is_stmt 0 view .LVU319
 1213 0000 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 1214 0004 03F06003 		and	r3, r3, #96
 1215 0008 202B     		cmp	r3, #32
 1216 000a 07D1     		bne	.L47
 298:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 1217              		.loc 1 298 9 is_stmt 1 view .LVU320
 1218              		.loc 1 298 28 is_stmt 0 view .LVU321
 1219 000c 90F87520 		ldrb	r2, [r0, #117]	@ zero_extendqisi2
 1220              		.loc 1 298 9 view .LVU322
 1221 0010 212A     		cmp	r2, #33
 1222 0012 4FF00003 		mov	r3, #0
 1223 0016 03D8     		bhi	.L44
 1224 0018 1F2A     		cmp	r2, #31
 1225 001a 06D8     		bhi	.L45
 1226              	.L47:
 299:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_GET_LINE_CODING:
 300:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 301:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 302:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_SET_LINE_CODING:
 303:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, (uint8_t *)&linecoding, sizeof(linecoding), NULL);
 304:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 305:tmk_core/protocol/chibios/usb_driver.c ****             case CDC_SET_CONTROL_LINE_STATE:
 306:tmk_core/protocol/chibios/usb_driver.c ****                 /* Nothing to do, there are no control lines.*/
 307:tmk_core/protocol/chibios/usb_driver.c ****                 usbSetupTransfer(usbp, NULL, 0, NULL);
 308:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 309:tmk_core/protocol/chibios/usb_driver.c ****             default:
 310:tmk_core/protocol/chibios/usb_driver.c ****                 return false;
 311:tmk_core/protocol/chibios/usb_driver.c ****         }
 312:tmk_core/protocol/chibios/usb_driver.c ****     }
 313:tmk_core/protocol/chibios/usb_driver.c ****     return false;
 1227              		.loc 1 313 12 view .LVU323
 1228 001c 0020     		movs	r0, #0
 1229              	.LVL89:
 314:tmk_core/protocol/chibios/usb_driver.c **** }
 1230              		.loc 1 314 1 view .LVU324
 1231 001e 7047     		bx	lr
 1232              	.LVL90:
 1233              	.L44:
 298:tmk_core/protocol/chibios/usb_driver.c ****         switch (usbp->setup[1]) {
 1234              		.loc 1 298 9 view .LVU325
 1235 0020 222A     		cmp	r2, #34
 1236 0022 FBD1     		bne	.L47
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1237              		.loc 1 307 17 is_stmt 1 view .LVU326
 1238 0024 C0E91A33 		strd	r3, r3, [r0, #104]
 1239 0028 03E0     		b	.L48
 1240              	.L45:
 300:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1241              		.loc 1 300 17 view .LVU327
 1242 002a 034A     		ldr	r2, .L49
 1243 002c 8266     		str	r2, [r0, #104]
 300:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1244              		.loc 1 300 17 view .LVU328
 1245 002e 0722     		movs	r2, #7
 1246 0030 C266     		str	r2, [r0, #108]
 300:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1247              		.loc 1 300 17 view .LVU329
 1248              	.L48:
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1249              		.loc 1 307 17 view .LVU330
 1250 0032 0367     		str	r3, [r0, #112]
 307:tmk_core/protocol/chibios/usb_driver.c ****                 return true;
 1251              		.loc 1 307 54 view .LVU331
 308:tmk_core/protocol/chibios/usb_driver.c ****             default:
 1252              		.loc 1 308 17 view .LVU332
 308:tmk_core/protocol/chibios/usb_driver.c ****             default:
 1253              		.loc 1 308 24 is_stmt 0 view .LVU333
 1254 0034 0120     		movs	r0, #1
 1255              	.LVL91:
 308:tmk_core/protocol/chibios/usb_driver.c ****             default:
 1256              		.loc 1 308 24 view .LVU334
 1257 0036 7047     		bx	lr
 1258              	.L50:
 1259              		.align	2
 1260              	.L49:
 1261 0038 00000000 		.word	.LANCHOR1
 1262              		.cfi_endproc
 1263              	.LFE296:
 1265              		.section	.text.qmkusbSOFHookI,"ax",%progbits
 1266              		.align	1
 1267              		.global	qmkusbSOFHookI
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1271              		.fpu fpv4-sp-d16
 1273              	qmkusbSOFHookI:
 1274              	.LVL92:
 1275              	.LFB297:
 315:tmk_core/protocol/chibios/usb_driver.c **** 
 316:tmk_core/protocol/chibios/usb_driver.c **** /**
 317:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   SOF handler.
 318:tmk_core/protocol/chibios/usb_driver.c ****  * @details The SOF interrupt is used for automatic flushing of incomplete
 319:tmk_core/protocol/chibios/usb_driver.c ****  *          buffers pending in the output queue.
 320:tmk_core/protocol/chibios/usb_driver.c ****  *
 321:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] qmkusbp      pointer to a @p QMKUSBDriver object
 322:tmk_core/protocol/chibios/usb_driver.c ****  *
 323:tmk_core/protocol/chibios/usb_driver.c ****  * @iclass
 324:tmk_core/protocol/chibios/usb_driver.c ****  */
 325:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbSOFHookI(QMKUSBDriver *qmkusbp) {
 1276              		.loc 1 325 44 is_stmt 1 view -0
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 8
 1279              		@ frame_needed = 0, uses_anonymous_args = 0
 326:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 327:tmk_core/protocol/chibios/usb_driver.c ****        must not be started.*/
 328:tmk_core/protocol/chibios/usb_driver.c ****     if ((usbGetDriverStateI(qmkusbp->config->usbp) != USB_ACTIVE) || (qmkusbp->state != QMKUSB_READ
 1280              		.loc 1 328 5 view .LVU336
 325:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 1281              		.loc 1 325 44 is_stmt 0 view .LVU337
 1282 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1283              		.cfi_def_cfa_offset 24
 1284              		.cfi_offset 4, -16
 1285              		.cfi_offset 5, -12
 1286              		.cfi_offset 6, -8
 1287              		.cfi_offset 14, -4
 1288              		.loc 1 328 10 view .LVU338
 1289 0002 C36F     		ldr	r3, [r0, #124]
 1290 0004 1A68     		ldr	r2, [r3]
 1291              		.loc 1 328 8 view .LVU339
 1292 0006 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1293 0008 0429     		cmp	r1, #4
 325:tmk_core/protocol/chibios/usb_driver.c ****     /* If the USB driver is not in the appropriate state then transactions
 1294              		.loc 1 325 44 view .LVU340
 1295 000a 0446     		mov	r4, r0
 1296              		.loc 1 328 8 view .LVU341
 1297 000c 27D1     		bne	.L51
 1298              		.loc 1 328 67 discriminator 1 view .LVU342
 1299 000e 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 1300 0010 0229     		cmp	r1, #2
 1301 0012 24D1     		bne	.L51
 329:tmk_core/protocol/chibios/usb_driver.c ****         return;
 330:tmk_core/protocol/chibios/usb_driver.c ****     }
 331:tmk_core/protocol/chibios/usb_driver.c **** 
 332:tmk_core/protocol/chibios/usb_driver.c ****     /* If there is already a transaction ongoing then another one cannot be
 333:tmk_core/protocol/chibios/usb_driver.c ****        started.*/
 334:tmk_core/protocol/chibios/usb_driver.c ****     if (usbGetTransmitStatusI(qmkusbp->config->usbp, qmkusbp->config->bulk_in)) {
 1302              		.loc 1 334 5 is_stmt 1 view .LVU343
 1303              		.loc 1 334 9 is_stmt 0 view .LVU344
 1304 0014 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1305 0016 1589     		ldrh	r5, [r2, #8]
 1306 0018 0123     		movs	r3, #1
 1307 001a 8B40     		lsls	r3, r3, r1
 1308              		.loc 1 334 8 view .LVU345
 1309 001c 1D40     		ands	r5, r3, r5
 1310 001e 1ED1     		bne	.L51
 335:tmk_core/protocol/chibios/usb_driver.c ****         return;
 336:tmk_core/protocol/chibios/usb_driver.c ****     }
 337:tmk_core/protocol/chibios/usb_driver.c **** 
 338:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there only a buffer partially filled, if so then it is
 339:tmk_core/protocol/chibios/usb_driver.c ****        enforced in the queue and transmitted.*/
 340:tmk_core/protocol/chibios/usb_driver.c ****     if (obqTryFlushI(&qmkusbp->obqueue)) {
 1311              		.loc 1 340 5 is_stmt 1 view .LVU346
 1312              		.loc 1 340 9 is_stmt 0 view .LVU347
 1313 0020 00F14406 		add	r6, r0, #68
 1314 0024 3046     		mov	r0, r6
 1315              	.LVL93:
 1316              		.loc 1 340 9 view .LVU348
 1317 0026 FFF7FEFF 		bl	obqTryFlushI
 1318              	.LVL94:
 1319              		.loc 1 340 8 view .LVU349
 1320 002a C0B1     		cbz	r0, .L51
 1321              	.LBB218:
 341:tmk_core/protocol/chibios/usb_driver.c ****         size_t   n;
 1322              		.loc 1 341 9 is_stmt 1 view .LVU350
 342:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1323              		.loc 1 342 9 view .LVU351
 1324              		.loc 1 342 24 is_stmt 0 view .LVU352
 1325 002c 3046     		mov	r0, r6
 1326 002e 01A9     		add	r1, sp, #4
 1327 0030 FFF7FEFF 		bl	obqGetFullBufferI
 1328              	.LVL95:
 343:tmk_core/protocol/chibios/usb_driver.c **** 
 344:tmk_core/protocol/chibios/usb_driver.c ****         /* For fixed size drivers, fill the end with zeros */
 345:tmk_core/protocol/chibios/usb_driver.c ****         if (qmkusbp->config->fixed_size) {
 1329              		.loc 1 345 20 view .LVU353
 1330 0034 E36F     		ldr	r3, [r4, #124]
 1331              		.loc 1 345 12 view .LVU354
 1332 0036 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 342:tmk_core/protocol/chibios/usb_driver.c ****         uint8_t *buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1333              		.loc 1 342 24 view .LVU355
 1334 0038 0646     		mov	r6, r0
 1335              	.LVL96:
 1336              		.loc 1 345 9 is_stmt 1 view .LVU356
 1337              		.loc 1 345 12 is_stmt 0 view .LVU357
 1338 003a 4AB1     		cbz	r2, .L55
 346:tmk_core/protocol/chibios/usb_driver.c ****             memset(buf + n, 0, qmkusbp->config->in_size - n);
 1339              		.loc 1 346 13 is_stmt 1 view .LVU358
 1340 003c 0198     		ldr	r0, [sp, #4]
 1341              	.LVL97:
 1342              		.loc 1 346 13 is_stmt 0 view .LVU359
 1343 003e 1A69     		ldr	r2, [r3, #16]
 1344 0040 2946     		mov	r1, r5
 1345 0042 121A     		subs	r2, r2, r0
 1346 0044 3044     		add	r0, r0, r6
 1347 0046 FFF7FEFF 		bl	memset
 1348              	.LVL98:
 347:tmk_core/protocol/chibios/usb_driver.c ****             n = qmkusbp->config->in_size;
 1349              		.loc 1 347 13 is_stmt 1 view .LVU360
 1350              		.loc 1 347 32 is_stmt 0 view .LVU361
 1351 004a E36F     		ldr	r3, [r4, #124]
 1352              		.loc 1 347 15 view .LVU362
 1353 004c 1B69     		ldr	r3, [r3, #16]
 1354 004e 0193     		str	r3, [sp, #4]
 1355              	.L55:
 348:tmk_core/protocol/chibios/usb_driver.c ****         }
 349:tmk_core/protocol/chibios/usb_driver.c **** 
 350:tmk_core/protocol/chibios/usb_driver.c ****         osalDbgAssert(buf != NULL, "queue is empty");
 1356              		.loc 1 350 9 is_stmt 1 discriminator 5 view .LVU363
 1357              		.loc 1 350 9 discriminator 5 view .LVU364
 1358              		.loc 1 350 9 discriminator 5 view .LVU365
 351:tmk_core/protocol/chibios/usb_driver.c **** 
 352:tmk_core/protocol/chibios/usb_driver.c ****         usbStartTransmitI(qmkusbp->config->usbp, qmkusbp->config->bulk_in, buf, n);
 1359              		.loc 1 352 9 discriminator 5 view .LVU366
 1360              		.loc 1 352 34 is_stmt 0 discriminator 5 view .LVU367
 1361 0050 E06F     		ldr	r0, [r4, #124]
 1362              		.loc 1 352 9 discriminator 5 view .LVU368
 1363 0052 019B     		ldr	r3, [sp, #4]
 1364 0054 0179     		ldrb	r1, [r0, #4]	@ zero_extendqisi2
 1365 0056 0068     		ldr	r0, [r0]
 1366 0058 3246     		mov	r2, r6
 1367 005a FFF7FEFF 		bl	usbStartTransmitI
 1368              	.LVL99:
 1369              	.L51:
 1370              		.loc 1 352 9 discriminator 5 view .LVU369
 1371              	.LBE218:
 353:tmk_core/protocol/chibios/usb_driver.c ****     }
 354:tmk_core/protocol/chibios/usb_driver.c **** }
 1372              		.loc 1 354 1 view .LVU370
 1373 005e 02B0     		add	sp, sp, #8
 1374              		.cfi_def_cfa_offset 16
 1375              		@ sp needed
 1376 0060 70BD     		pop	{r4, r5, r6, pc}
 1377              		.loc 1 354 1 view .LVU371
 1378              		.cfi_endproc
 1379              	.LFE297:
 1381              		.section	.text.qmkusbDataTransmitted,"ax",%progbits
 1382              		.align	1
 1383              		.global	qmkusbDataTransmitted
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu fpv4-sp-d16
 1389              	qmkusbDataTransmitted:
 1390              	.LVL100:
 1391              	.LFB298:
 355:tmk_core/protocol/chibios/usb_driver.c **** 
 356:tmk_core/protocol/chibios/usb_driver.c **** /**
 357:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data transmitted callback.
 358:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the IN
 359:tmk_core/protocol/chibios/usb_driver.c ****  *          data endpoint.
 360:tmk_core/protocol/chibios/usb_driver.c ****  *
 361:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 362:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        IN endpoint number
 363:tmk_core/protocol/chibios/usb_driver.c ****  */
 364:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbDataTransmitted(USBDriver *usbp, usbep_t ep) {
 1392              		.loc 1 364 57 is_stmt 1 view -0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 16
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 365:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1396              		.loc 1 365 5 view .LVU373
 366:tmk_core/protocol/chibios/usb_driver.c ****     size_t        n;
 1397              		.loc 1 366 5 view .LVU374
 367:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->in_params[ep - 1U];
 1398              		.loc 1 367 5 view .LVU375
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1399              		.loc 1 364 57 is_stmt 0 view .LVU376
 1400 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1401              		.cfi_def_cfa_offset 20
 1402              		.cfi_offset 4, -20
 1403              		.cfi_offset 5, -16
 1404              		.cfi_offset 6, -12
 1405              		.cfi_offset 7, -8
 1406              		.cfi_offset 14, -4
 1407              		.loc 1 367 19 view .LVU377
 1408 0002 00EB8103 		add	r3, r0, r1, lsl #2
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1409              		.loc 1 364 57 view .LVU378
 1410 0006 85B0     		sub	sp, sp, #20
 1411              		.cfi_def_cfa_offset 40
 1412              		.loc 1 367 19 view .LVU379
 1413 0008 9E6A     		ldr	r6, [r3, #40]
 1414              	.LVL101:
 368:tmk_core/protocol/chibios/usb_driver.c **** 
 369:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp == NULL) {
 1415              		.loc 1 369 5 is_stmt 1 view .LVU380
 364:tmk_core/protocol/chibios/usb_driver.c ****     uint8_t *     buf;
 1416              		.loc 1 364 57 is_stmt 0 view .LVU381
 1417 000a 0446     		mov	r4, r0
 1418 000c 0D46     		mov	r5, r1
 1419              		.loc 1 369 8 view .LVU382
 1420 000e FEB1     		cbz	r6, .L62
 370:tmk_core/protocol/chibios/usb_driver.c ****         return;
 371:tmk_core/protocol/chibios/usb_driver.c ****     }
 372:tmk_core/protocol/chibios/usb_driver.c **** 
 373:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLockFromISR();
 1421              		.loc 1 373 5 is_stmt 1 view .LVU383
 1422              	.LBB219:
 1423              	.LBI219:
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1424              		.loc 2 531 20 view .LVU384
 1425              	.LBE219:
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1426              		.loc 2 533 3 view .LVU385
 1427              	.LBB231:
 1428              	.LBB220:
 1429              	.LBI220:
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
 1430              		.loc 4 393 20 view .LVU386
 1431              	.LBE220:
 1432              	.LBE231:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
 1433              		.loc 4 395 3 view .LVU387
 1434              	.LBB232:
 1435              	.LBB228:
 1436              	.LBB221:
 1437              	.LBI221:
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock_from_isr(void) {
 1438              		.loc 5 708 27 view .LVU388
 1439              	.LBE221:
 1440              	.LBE228:
 1441              	.LBE232:
 709:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
 1442              		.loc 5 710 3 view .LVU389
 1443              	.LBB233:
 1444              	.LBB229:
 1445              	.LBB226:
 1446              	.LBB222:
 1447              	.LBI222:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1448              		.loc 5 669 27 view .LVU390
 1449              	.LBE222:
 1450              	.LBE226:
 1451              	.LBE229:
 1452              	.LBE233:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1453              		.loc 5 677 3 view .LVU391
 1454              	.LVL102:
 1455              	.LBB234:
 1456              	.LBB230:
 1457              	.LBB227:
 1458              	.LBB225:
 1459              	.LBB223:
 1460              	.LBI223:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1461              		.loc 6 491 27 view .LVU392
 1462              	.LBB224:
 1463              		.loc 6 493 3 view .LVU393
 1464 0010 2023     		movs	r3, #32
 1465              		.syntax unified
 1466              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1467 0012 83F31188 		MSR basepri, r3
 1468              	@ 0 "" 2
 1469              	.LVL103:
 1470              		.loc 6 493 3 is_stmt 0 view .LVU394
 1471              		.thumb
 1472              		.syntax unified
 1473              	.LBE224:
 1474              	.LBE223:
 1475              	.LBE225:
 1476              	.LBE227:
 1477              	.LBE230:
 1478              	.LBE234:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1479              		.loc 4 396 34 is_stmt 1 view .LVU395
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1480              		.loc 4 397 29 view .LVU396
 374:tmk_core/protocol/chibios/usb_driver.c **** 
 375:tmk_core/protocol/chibios/usb_driver.c ****     /* Signaling that space is available in the output queue.*/
 376:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_OUTPUT_EMPTY);
 1481              		.loc 1 376 5 view .LVU397
 1482              	.LBB235:
 1483              	.LBI235:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1484              		.loc 2 892 20 view .LVU398
 1485              	.LBB236:
 1486              		.loc 2 895 3 view .LVU399
 1487 0016 04EB8507 		add	r7, r4, r5, lsl #2
 1488 001a 301D     		adds	r0, r6, #4
 1489              	.LVL104:
 1490              		.loc 2 895 3 is_stmt 0 view .LVU400
 1491 001c 0821     		movs	r1, #8
 1492              	.LVL105:
 1493              		.loc 2 895 3 view .LVU401
 1494 001e FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1495              	.LVL106:
 1496              		.loc 2 895 3 view .LVU402
 1497              	.LBE236:
 1498              	.LBE235:
 1499              		.loc 1 376 44 is_stmt 1 view .LVU403
 377:tmk_core/protocol/chibios/usb_driver.c **** 
 378:tmk_core/protocol/chibios/usb_driver.c ****     /* Freeing the buffer just transmitted, if it was not a zero size packet.*/
 379:tmk_core/protocol/chibios/usb_driver.c ****     if (usbp->epc[ep]->in_state->txsize > 0U) {
 1500              		.loc 1 379 5 view .LVU404
 1501              		.loc 1 379 22 is_stmt 0 view .LVU405
 1502 0022 FB68     		ldr	r3, [r7, #12]
 1503              		.loc 1 379 32 view .LVU406
 1504 0024 5B69     		ldr	r3, [r3, #20]
 1505              		.loc 1 379 8 view .LVU407
 1506 0026 1B68     		ldr	r3, [r3]
 380:tmk_core/protocol/chibios/usb_driver.c ****         obqReleaseEmptyBufferI(&qmkusbp->obqueue);
 1507              		.loc 1 380 9 view .LVU408
 1508 0028 06F14400 		add	r0, r6, #68
 379:tmk_core/protocol/chibios/usb_driver.c ****         obqReleaseEmptyBufferI(&qmkusbp->obqueue);
 1509              		.loc 1 379 8 view .LVU409
 1510 002c 1BB1     		cbz	r3, .L65
 1511              		.loc 1 380 9 is_stmt 1 view .LVU410
 1512 002e 0190     		str	r0, [sp, #4]
 1513 0030 FFF7FEFF 		bl	obqReleaseEmptyBufferI
 1514              	.LVL107:
 1515 0034 0198     		ldr	r0, [sp, #4]
 1516              	.L65:
 381:tmk_core/protocol/chibios/usb_driver.c ****     }
 382:tmk_core/protocol/chibios/usb_driver.c **** 
 383:tmk_core/protocol/chibios/usb_driver.c ****     /* Checking if there is a buffer ready for transmission.*/
 384:tmk_core/protocol/chibios/usb_driver.c ****     buf = obqGetFullBufferI(&qmkusbp->obqueue, &n);
 1517              		.loc 1 384 5 view .LVU411
 1518              		.loc 1 384 11 is_stmt 0 view .LVU412
 1519 0036 03A9     		add	r1, sp, #12
 1520 0038 FFF7FEFF 		bl	obqGetFullBufferI
 1521              	.LVL108:
 385:tmk_core/protocol/chibios/usb_driver.c **** 
 386:tmk_core/protocol/chibios/usb_driver.c ****     if (buf != NULL) {
 1522              		.loc 1 386 5 is_stmt 1 view .LVU413
 1523              		.loc 1 386 8 is_stmt 0 view .LVU414
 1524 003c 0246     		mov	r2, r0
 1525 003e 48B1     		cbz	r0, .L66
 387:tmk_core/protocol/chibios/usb_driver.c ****         /* The endpoint cannot be busy, we are in the context of the callback,
 388:tmk_core/protocol/chibios/usb_driver.c ****            so it is safe to transmit without a check.*/
 389:tmk_core/protocol/chibios/usb_driver.c ****         usbStartTransmitI(usbp, ep, buf, n);
 1526              		.loc 1 389 9 is_stmt 1 view .LVU415
 1527 0040 039B     		ldr	r3, [sp, #12]
 1528              	.L74:
 390:tmk_core/protocol/chibios/usb_driver.c ****     } else if ((usbp->epc[ep]->in_state->txsize > 0U) && ((usbp->epc[ep]->in_state->txsize & ((size
 391:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 392:tmk_core/protocol/chibios/usb_driver.c ****            size. Otherwise the recipient may expect more data coming soon and
 393:tmk_core/protocol/chibios/usb_driver.c ****            not return buffered data to app. See section 5.8.3 Bulk Transfer
 394:tmk_core/protocol/chibios/usb_driver.c ****            Packet Size Constraints of the USB Specification document.*/
 395:tmk_core/protocol/chibios/usb_driver.c ****         if (!qmkusbp->config->fixed_size) {
 396:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1529              		.loc 1 396 13 is_stmt 0 view .LVU416
 1530 0042 2946     		mov	r1, r5
 1531 0044 2046     		mov	r0, r4
 1532              	.LVL109:
 1533              		.loc 1 396 13 view .LVU417
 1534 0046 FFF7FEFF 		bl	usbStartTransmitI
 1535              	.LVL110:
 1536              	.L67:
 397:tmk_core/protocol/chibios/usb_driver.c ****         }
 398:tmk_core/protocol/chibios/usb_driver.c **** 
 399:tmk_core/protocol/chibios/usb_driver.c ****     } else {
 400:tmk_core/protocol/chibios/usb_driver.c ****         /* Nothing to transmit.*/
 401:tmk_core/protocol/chibios/usb_driver.c ****     }
 1537              		.loc 1 401 5 is_stmt 1 discriminator 1 view .LVU418
 402:tmk_core/protocol/chibios/usb_driver.c **** 
 403:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlockFromISR();
 1538              		.loc 1 403 5 discriminator 1 view .LVU419
 1539              	.LBB237:
 1540              	.LBI237:
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1541              		.loc 2 542 20 discriminator 1 view .LVU420
 1542              	.LBE237:
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1543              		.loc 2 544 3 discriminator 1 view .LVU421
 1544              	.LBB249:
 1545              	.LBB238:
 1546              	.LBI238:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 1547              		.loc 4 413 20 discriminator 1 view .LVU422
 1548              	.LBE238:
 1549              	.LBE249:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 1550              		.loc 4 415 31 discriminator 1 view .LVU423
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1551              		.loc 4 416 33 discriminator 1 view .LVU424
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1552              		.loc 4 417 3 discriminator 1 view .LVU425
 1553              	.LBB250:
 1554              	.LBB246:
 1555              	.LBB239:
 1556              	.LBI239:
 711:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 712:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 713:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 714:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 715:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 716:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 717:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 718:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock_from_isr(void) {
 1557              		.loc 5 719 27 discriminator 1 view .LVU426
 1558              	.LBE239:
 1559              	.LBE246:
 1560              	.LBE250:
 720:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 721:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 1561              		.loc 5 721 3 discriminator 1 view .LVU427
 1562              	.LBB251:
 1563              	.LBB247:
 1564              	.LBB244:
 1565              	.LBB240:
 1566              	.LBI240:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1567              		.loc 5 693 27 discriminator 1 view .LVU428
 1568              	.LBE240:
 1569              	.LBE244:
 1570              	.LBE247:
 1571              	.LBE251:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1572              		.loc 5 696 3 discriminator 1 view .LVU429
 1573              	.LBB252:
 1574              	.LBB248:
 1575              	.LBB245:
 1576              	.LBB243:
 1577              	.LBB241:
 1578              	.LBI241:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1579              		.loc 6 491 27 discriminator 1 view .LVU430
 1580              	.LBB242:
 1581              		.loc 6 493 3 discriminator 1 view .LVU431
 1582 004a 0023     		movs	r3, #0
 1583              		.syntax unified
 1584              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1585 004c 83F31188 		MSR basepri, r3
 1586              	@ 0 "" 2
 1587              	.LVL111:
 1588              		.thumb
 1589              		.syntax unified
 1590              	.L62:
 1591              		.loc 6 493 3 is_stmt 0 discriminator 1 view .LVU432
 1592              	.LBE242:
 1593              	.LBE241:
 1594              	.LBE243:
 1595              	.LBE245:
 1596              	.LBE248:
 1597              	.LBE252:
 404:tmk_core/protocol/chibios/usb_driver.c **** }
 1598              		.loc 1 404 1 view .LVU433
 1599 0050 05B0     		add	sp, sp, #20
 1600              		.cfi_remember_state
 1601              		.cfi_def_cfa_offset 20
 1602              		@ sp needed
 1603 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 1604              	.LVL112:
 1605              	.L66:
 1606              		.cfi_restore_state
 390:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 1607              		.loc 1 390 12 is_stmt 1 view .LVU434
 390:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 1608              		.loc 1 390 26 is_stmt 0 view .LVU435
 1609 0054 FB68     		ldr	r3, [r7, #12]
 390:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 1610              		.loc 1 390 40 view .LVU436
 1611 0056 5A69     		ldr	r2, [r3, #20]
 1612 0058 1268     		ldr	r2, [r2]
 390:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 1613              		.loc 1 390 15 view .LVU437
 1614 005a 002A     		cmp	r2, #0
 1615 005c F5D0     		beq	.L67
 390:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 1616              		.loc 1 390 95 discriminator 1 view .LVU438
 1617 005e 1B8A     		ldrh	r3, [r3, #16]
 390:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 1618              		.loc 1 390 129 discriminator 1 view .LVU439
 1619 0060 013B     		subs	r3, r3, #1
 390:tmk_core/protocol/chibios/usb_driver.c ****         /* Transmit zero sized packet in case the last one has maximum allowed
 1620              		.loc 1 390 55 discriminator 1 view .LVU440
 1621 0062 1342     		tst	r3, r2
 1622 0064 F1D1     		bne	.L67
 395:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1623              		.loc 1 395 9 is_stmt 1 view .LVU441
 395:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1624              		.loc 1 395 29 is_stmt 0 view .LVU442
 1625 0066 F36F     		ldr	r3, [r6, #124]
 395:tmk_core/protocol/chibios/usb_driver.c ****             usbStartTransmitI(usbp, ep, usbp->setup, 0);
 1626              		.loc 1 395 12 view .LVU443
 1627 0068 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1628 006a 002B     		cmp	r3, #0
 1629 006c EDD1     		bne	.L67
 396:tmk_core/protocol/chibios/usb_driver.c ****         }
 1630              		.loc 1 396 13 is_stmt 1 view .LVU444
 1631 006e 04F17402 		add	r2, r4, #116
 1632 0072 E6E7     		b	.L74
 1633              		.cfi_endproc
 1634              	.LFE298:
 1636              		.section	.text.qmkusbDataReceived,"ax",%progbits
 1637              		.align	1
 1638              		.global	qmkusbDataReceived
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1642              		.fpu fpv4-sp-d16
 1644              	qmkusbDataReceived:
 1645              	.LVL113:
 1646              	.LFB299:
 405:tmk_core/protocol/chibios/usb_driver.c **** 
 406:tmk_core/protocol/chibios/usb_driver.c **** /**
 407:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data received callback.
 408:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the OUT
 409:tmk_core/protocol/chibios/usb_driver.c ****  *          data endpoint.
 410:tmk_core/protocol/chibios/usb_driver.c ****  *
 411:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 412:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        OUT endpoint number
 413:tmk_core/protocol/chibios/usb_driver.c ****  */
 414:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbDataReceived(USBDriver *usbp, usbep_t ep) {
 1647              		.loc 1 414 54 view -0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 415:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->out_params[ep - 1U];
 1651              		.loc 1 415 5 view .LVU446
 1652              		.loc 1 415 19 is_stmt 0 view .LVU447
 1653 0000 1131     		adds	r1, r1, #17
 1654              	.LVL114:
 414:tmk_core/protocol/chibios/usb_driver.c ****     QMKUSBDriver *qmkusbp = usbp->out_params[ep - 1U];
 1655              		.loc 1 414 54 view .LVU448
 1656 0002 10B5     		push	{r4, lr}
 1657              		.cfi_def_cfa_offset 8
 1658              		.cfi_offset 4, -8
 1659              		.cfi_offset 14, -4
 1660              		.loc 1 415 19 view .LVU449
 1661 0004 50F82140 		ldr	r4, [r0, r1, lsl #2]
 1662              	.LVL115:
 416:tmk_core/protocol/chibios/usb_driver.c ****     if (qmkusbp == NULL) {
 1663              		.loc 1 416 5 is_stmt 1 view .LVU450
 1664              		.loc 1 416 8 is_stmt 0 view .LVU451
 1665 0008 C4B1     		cbz	r4, .L75
 417:tmk_core/protocol/chibios/usb_driver.c ****         return;
 418:tmk_core/protocol/chibios/usb_driver.c ****     }
 419:tmk_core/protocol/chibios/usb_driver.c **** 
 420:tmk_core/protocol/chibios/usb_driver.c ****     osalSysLockFromISR();
 1666              		.loc 1 420 5 is_stmt 1 view .LVU452
 1667              	.LBB253:
 1668              	.LBI253:
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1669              		.loc 2 531 20 view .LVU453
 1670              	.LBE253:
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1671              		.loc 2 533 3 view .LVU454
 1672              	.LBB265:
 1673              	.LBB254:
 1674              	.LBI254:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1675              		.loc 4 393 20 view .LVU455
 1676              	.LBE254:
 1677              	.LBE265:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1678              		.loc 4 395 3 view .LVU456
 1679              	.LBB266:
 1680              	.LBB262:
 1681              	.LBB255:
 1682              	.LBI255:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1683              		.loc 5 708 27 view .LVU457
 1684              	.LBE255:
 1685              	.LBE262:
 1686              	.LBE266:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1687              		.loc 5 710 3 view .LVU458
 1688              	.LBB267:
 1689              	.LBB263:
 1690              	.LBB260:
 1691              	.LBB256:
 1692              	.LBI256:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1693              		.loc 5 669 27 view .LVU459
 1694              	.LBE256:
 1695              	.LBE260:
 1696              	.LBE263:
 1697              	.LBE267:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1698              		.loc 5 677 3 view .LVU460
 1699              	.LVL116:
 1700              	.LBB268:
 1701              	.LBB264:
 1702              	.LBB261:
 1703              	.LBB259:
 1704              	.LBB257:
 1705              	.LBI257:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1706              		.loc 6 491 27 view .LVU461
 1707              	.LBB258:
 1708              		.loc 6 493 3 view .LVU462
 1709 000a 2023     		movs	r3, #32
 1710              		.syntax unified
 1711              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1712 000c 83F31188 		MSR basepri, r3
 1713              	@ 0 "" 2
 1714              	.LVL117:
 1715              		.loc 6 493 3 is_stmt 0 view .LVU463
 1716              		.thumb
 1717              		.syntax unified
 1718              	.LBE258:
 1719              	.LBE257:
 1720              	.LBE259:
 1721              	.LBE261:
 1722              	.LBE264:
 1723              	.LBE268:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1724              		.loc 4 396 34 is_stmt 1 view .LVU464
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1725              		.loc 4 397 29 view .LVU465
 421:tmk_core/protocol/chibios/usb_driver.c **** 
 422:tmk_core/protocol/chibios/usb_driver.c ****     /* Signaling that data is available in the input queue.*/
 423:tmk_core/protocol/chibios/usb_driver.c ****     chnAddFlagsI(qmkusbp, CHN_INPUT_AVAILABLE);
 1726              		.loc 1 423 5 view .LVU466
 1727              	.LBB269:
 1728              	.LBI269:
 892:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                             eventflags_t flags) {
 1729              		.loc 2 892 20 view .LVU467
 1730              	.LBB270:
 1731              		.loc 2 895 3 view .LVU468
 1732 0010 0421     		movs	r1, #4
 1733 0012 6018     		adds	r0, r4, r1
 1734              	.LVL118:
 1735              		.loc 2 895 3 is_stmt 0 view .LVU469
 1736 0014 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 1737              	.LVL119:
 1738              		.loc 2 895 3 view .LVU470
 1739              	.LBE270:
 1740              	.LBE269:
 1741              		.loc 1 423 47 is_stmt 1 view .LVU471
 424:tmk_core/protocol/chibios/usb_driver.c **** 
 425:tmk_core/protocol/chibios/usb_driver.c ****     /* Posting the filled buffer in the queue.*/
 426:tmk_core/protocol/chibios/usb_driver.c ****     ibqPostFullBufferI(&qmkusbp->ibqueue, usbGetReceiveTransactionSizeX(qmkusbp->config->usbp, qmku
 1742              		.loc 1 426 5 view .LVU472
 1743              		.loc 1 426 43 is_stmt 0 view .LVU473
 1744 0018 E26F     		ldr	r2, [r4, #124]
 1745 001a 1368     		ldr	r3, [r2]
 1746 001c 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 1747 001e 03EB8203 		add	r3, r3, r2, lsl #2
 1748              		.loc 1 426 5 view .LVU474
 1749 0022 04F10C00 		add	r0, r4, #12
 1750              		.loc 1 426 43 view .LVU475
 1751 0026 DB68     		ldr	r3, [r3, #12]
 1752              		.loc 1 426 5 view .LVU476
 1753 0028 9B69     		ldr	r3, [r3, #24]
 1754 002a 5968     		ldr	r1, [r3, #4]
 1755 002c FFF7FEFF 		bl	ibqPostFullBufferI
 1756              	.LVL120:
 427:tmk_core/protocol/chibios/usb_driver.c **** 
 428:tmk_core/protocol/chibios/usb_driver.c ****     /* The endpoint cannot be busy, we are in the context of the callback,
 429:tmk_core/protocol/chibios/usb_driver.c ****        so a packet is in the buffer for sure. Trying to get a free buffer
 430:tmk_core/protocol/chibios/usb_driver.c ****        for the next transaction.*/
 431:tmk_core/protocol/chibios/usb_driver.c ****     (void)qmkusb_start_receive(qmkusbp);
 1757              		.loc 1 431 5 is_stmt 1 view .LVU477
 1758              		.loc 1 431 11 is_stmt 0 view .LVU478
 1759 0030 2046     		mov	r0, r4
 1760 0032 FFF7FEFF 		bl	qmkusb_start_receive.isra.0
 1761              	.LVL121:
 432:tmk_core/protocol/chibios/usb_driver.c **** 
 433:tmk_core/protocol/chibios/usb_driver.c ****     osalSysUnlockFromISR();
 1762              		.loc 1 433 5 is_stmt 1 view .LVU479
 1763              	.LBB271:
 1764              	.LBI271:
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1765              		.loc 2 542 20 view .LVU480
 1766              	.LBB272:
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1767              		.loc 2 544 3 view .LVU481
 1768              	.LBB273:
 1769              	.LBI273:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1770              		.loc 4 413 20 view .LVU482
 1771              	.LBE273:
 1772              	.LBE272:
 1773              	.LBE271:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1774              		.loc 4 415 31 view .LVU483
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1775              		.loc 4 416 33 view .LVU484
 1776              		.loc 4 417 3 view .LVU485
 1777              	.LBB287:
 1778              	.LBB284:
 1779              	.LBB281:
 1780              	.LBB274:
 1781              	.LBI274:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1782              		.loc 5 719 27 view .LVU486
 1783              	.LBE274:
 1784              	.LBE281:
 1785              	.LBE284:
 1786              	.LBE287:
 1787              		.loc 5 721 3 view .LVU487
 1788              	.LBB288:
 1789              	.LBB285:
 1790              	.LBB282:
 1791              	.LBB279:
 1792              	.LBB275:
 1793              	.LBI275:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1794              		.loc 5 693 27 view .LVU488
 1795              	.LBE275:
 1796              	.LBE279:
 1797              	.LBE282:
 1798              	.LBE285:
 1799              	.LBE288:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1800              		.loc 5 696 3 view .LVU489
 1801              	.LBB289:
 1802              	.LBB286:
 1803              	.LBB283:
 1804              	.LBB280:
 1805              	.LBB278:
 1806              	.LBB276:
 1807              	.LBI276:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1808              		.loc 6 491 27 view .LVU490
 1809              	.LBB277:
 1810              		.loc 6 493 3 view .LVU491
 1811 0036 0023     		movs	r3, #0
 1812              		.syntax unified
 1813              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1814 0038 83F31188 		MSR basepri, r3
 1815              	@ 0 "" 2
 1816              	.LVL122:
 1817              		.thumb
 1818              		.syntax unified
 1819              	.L75:
 1820              		.loc 6 493 3 is_stmt 0 view .LVU492
 1821              	.LBE277:
 1822              	.LBE276:
 1823              	.LBE278:
 1824              	.LBE280:
 1825              	.LBE283:
 1826              	.LBE286:
 1827              	.LBE289:
 434:tmk_core/protocol/chibios/usb_driver.c **** }
 1828              		.loc 1 434 1 view .LVU493
 1829 003c 10BD     		pop	{r4, pc}
 1830              		.loc 1 434 1 view .LVU494
 1831              		.cfi_endproc
 1832              	.LFE299:
 1834              		.section	.text.qmkusbInterruptTransmitted,"ax",%progbits
 1835              		.align	1
 1836              		.global	qmkusbInterruptTransmitted
 1837              		.syntax unified
 1838              		.thumb
 1839              		.thumb_func
 1840              		.fpu fpv4-sp-d16
 1842              	qmkusbInterruptTransmitted:
 1843              	.LVL123:
 1844              	.LFB300:
 435:tmk_core/protocol/chibios/usb_driver.c **** 
 436:tmk_core/protocol/chibios/usb_driver.c **** /**
 437:tmk_core/protocol/chibios/usb_driver.c ****  * @brief   Default data received callback.
 438:tmk_core/protocol/chibios/usb_driver.c ****  * @details The application must use this function as callback for the IN
 439:tmk_core/protocol/chibios/usb_driver.c ****  *          interrupt endpoint.
 440:tmk_core/protocol/chibios/usb_driver.c ****  *
 441:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] usbp      pointer to the @p USBDriver object
 442:tmk_core/protocol/chibios/usb_driver.c ****  * @param[in] ep        endpoint number
 443:tmk_core/protocol/chibios/usb_driver.c ****  */
 444:tmk_core/protocol/chibios/usb_driver.c **** void qmkusbInterruptTransmitted(USBDriver *usbp, usbep_t ep) {
 1845              		.loc 1 444 62 is_stmt 1 view -0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 0
 1848              		@ frame_needed = 0, uses_anonymous_args = 0
 1849              		@ link register save eliminated.
 445:tmk_core/protocol/chibios/usb_driver.c ****     (void)usbp;
 1850              		.loc 1 445 5 view .LVU496
 446:tmk_core/protocol/chibios/usb_driver.c ****     (void)ep;
 1851              		.loc 1 446 5 view .LVU497
 447:tmk_core/protocol/chibios/usb_driver.c **** }
 1852              		.loc 1 447 1 is_stmt 0 view .LVU498
 1853 0000 7047     		bx	lr
 1854              		.cfi_endproc
 1855              	.LFE300:
 1857              		.section	.data.linecoding,"aw"
 1858              		.set	.LANCHOR1,. + 0
 1861              	linecoding:
 1862 0000 00960000 		.ascii	"\000\226\000\000"
 1863 0004 00       		.byte	0
 1864 0005 00       		.byte	0
 1865 0006 08       		.byte	8
 1866              		.section	.rodata.vmt,"a"
 1867              		.align	2
 1868              		.set	.LANCHOR0,. + 0
 1871              	vmt:
 1872 0000 00000000 		.word	0
 1873 0004 00000000 		.word	_write
 1874 0008 00000000 		.word	_read
 1875 000c 00000000 		.word	_put
 1876 0010 00000000 		.word	_get
 1877 0014 00000000 		.word	_putt
 1878 0018 00000000 		.word	_gett
 1879 001c 00000000 		.word	_writet
 1880 0020 00000000 		.word	_readt
 1881 0024 00000000 		.space	4
 1882              		.text
 1883              	.Letext0:
 1884              		.file 7 "c:\\qmk_msys\\mingw64\\lib\\gcc\\arm-none-eabi\\10.1.0\\include\\stddef.h"
 1885              		.file 8 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 1886              		.file 9 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 1887              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 1888              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 1889              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 1890              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 1891              		.file 14 "./lib/chibios/os/rt/include/chsem.h"
 1892              		.file 15 "./lib/chibios/os/rt/include/chmtx.h"
 1893              		.file 16 "./lib/chibios/os/hal/include/hal_buffers.h"
 1894              		.file 17 "./lib/chibios/os/hal/include/hal_usb.h"
 1895              		.file 18 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 1896              		.file 19 "./lib/chibios/os/hal/include/hal_usb_cdc.h"
 1897              		.file 20 "tmk_core/protocol/chibios/usb_driver.h"
 1898              		.file 21 "./lib/chibios/os/rt/include/chthreads.h"
 1899              		.file 22 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_driver.c
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:18     .text.obnotify:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:25     .text.obnotify:0000000000000000 obnotify
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:103    .text._readt:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:109    .text._readt:0000000000000000 _readt
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:129    .text._read:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:135    .text._read:0000000000000000 _read
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:156    .text._writet:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:162    .text._writet:0000000000000000 _writet
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:182    .text._write:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:188    .text._write:0000000000000000 _write
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:209    .text._gett:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:215    .text._gett:0000000000000000 _gett
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:235    .text._get:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:241    .text._get:0000000000000000 _get
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:262    .text._putt:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:268    .text._putt:0000000000000000 _putt
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:288    .text._put:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:294    .text._put:0000000000000000 _put
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:315    .text.qmkusb_start_receive.isra.0:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:321    .text.qmkusb_start_receive.isra.0:0000000000000000 qmkusb_start_receive.isra.0
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:414    .text.ibnotify:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:420    .text.ibnotify:0000000000000000 ibnotify
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:441    .text.qmkusbInit:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:448    .text.qmkusbInit:0000000000000000 qmkusbInit
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:461    .text.qmkusbObjectInit:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:468    .text.qmkusbObjectInit:0000000000000000 qmkusbObjectInit
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:563    .text.qmkusbObjectInit:0000000000000048 $d
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:570    .text.qmkusbStart:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:577    .text.qmkusbStart:0000000000000000 qmkusbStart
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:732    .text.qmkusbStop:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:739    .text.qmkusbStop:0000000000000000 qmkusbStop
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:947    .text.qmkusbSuspendHookI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:954    .text.qmkusbSuspendHookI:0000000000000000 qmkusbSuspendHookI
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1051   .text.qmkusbWakeupHookI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1058   .text.qmkusbWakeupHookI:0000000000000000 qmkusbWakeupHookI
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1112   .text.qmkusbConfigureHookI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1119   .text.qmkusbConfigureHookI:0000000000000000 qmkusbConfigureHookI
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1196   .text.qmkusbRequestsHook:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1203   .text.qmkusbRequestsHook:0000000000000000 qmkusbRequestsHook
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1261   .text.qmkusbRequestsHook:0000000000000038 $d
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1266   .text.qmkusbSOFHookI:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1273   .text.qmkusbSOFHookI:0000000000000000 qmkusbSOFHookI
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1382   .text.qmkusbDataTransmitted:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1389   .text.qmkusbDataTransmitted:0000000000000000 qmkusbDataTransmitted
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1637   .text.qmkusbDataReceived:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1644   .text.qmkusbDataReceived:0000000000000000 qmkusbDataReceived
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1835   .text.qmkusbInterruptTransmitted:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1842   .text.qmkusbInterruptTransmitted:0000000000000000 qmkusbInterruptTransmitted
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1861   .data.linecoding:0000000000000000 linecoding
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1867   .rodata.vmt:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccjopScC.s:1871   .rodata.vmt:0000000000000000 vmt

UNDEFINED SYMBOLS
obqGetFullBufferI
usbStartTransmitI
ibqReadTimeout
obqWriteTimeout
ibqGetTimeout
obqPutTimeout
ibqGetEmptyBufferI
usbStartReceiveI
ibqObjectInit
obqObjectInit
chEvtBroadcastFlagsI
ibqResetI
obqResetI
chSchRescheduleS
chThdDequeueAllI
obqTryFlushI
memset
obqReleaseEmptyBufferI
ibqPostFullBufferI
