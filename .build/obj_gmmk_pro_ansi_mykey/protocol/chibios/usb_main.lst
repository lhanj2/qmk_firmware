   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"usb_main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.kbd_in_cb,"ax",%progbits
  18              		.align	1
  19              		.global	kbd_in_cb
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	kbd_in_cb:
  27              	.LVL0:
  28              	.LFB295:
  29              		.file 1 "tmk_core/protocol/chibios/usb_main.c"
   1:tmk_core/protocol/chibios/usb_main.c **** /*
   2:tmk_core/protocol/chibios/usb_main.c ****  * (c) 2015 flabberast <s3+flabbergast@sdfeu.org>
   3:tmk_core/protocol/chibios/usb_main.c ****  *
   4:tmk_core/protocol/chibios/usb_main.c ****  * Based on the following work:
   5:tmk_core/protocol/chibios/usb_main.c ****  *  - Guillaume Duc's raw hid example (MIT License)
   6:tmk_core/protocol/chibios/usb_main.c ****  *    https://github.com/guiduc/usb-hid-chibios-example
   7:tmk_core/protocol/chibios/usb_main.c ****  *  - PJRC Teensy examples (MIT License)
   8:tmk_core/protocol/chibios/usb_main.c ****  *    https://www.pjrc.com/teensy/usb_keyboard.html
   9:tmk_core/protocol/chibios/usb_main.c ****  *  - hasu's TMK keyboard code (GPL v2 and some code Modified BSD)
  10:tmk_core/protocol/chibios/usb_main.c ****  *    https://github.com/tmk/tmk_keyboard/
  11:tmk_core/protocol/chibios/usb_main.c ****  *  - ChibiOS demo code (Apache 2.0 License)
  12:tmk_core/protocol/chibios/usb_main.c ****  *    http://www.chibios.org
  13:tmk_core/protocol/chibios/usb_main.c ****  *
  14:tmk_core/protocol/chibios/usb_main.c ****  * Since some GPL'd code is used, this work is licensed under
  15:tmk_core/protocol/chibios/usb_main.c ****  * GPL v2 or later.
  16:tmk_core/protocol/chibios/usb_main.c ****  */
  17:tmk_core/protocol/chibios/usb_main.c **** 
  18:tmk_core/protocol/chibios/usb_main.c **** /*
  19:tmk_core/protocol/chibios/usb_main.c ****  * Implementation notes:
  20:tmk_core/protocol/chibios/usb_main.c ****  *
  21:tmk_core/protocol/chibios/usb_main.c ****  * USBEndpointConfig - Configured using explicit order instead of struct member name.
  22:tmk_core/protocol/chibios/usb_main.c ****  *   This is due to ChibiOS hal LLD differences, which is dependent on hardware,
  23:tmk_core/protocol/chibios/usb_main.c ****  *   "USBv1" devices have `ep_buffers` and "OTGv1" have `in_multiplier`.
  24:tmk_core/protocol/chibios/usb_main.c ****  *   Given `USBv1/hal_usb_lld.h` marks the field as "not currently used" this code file
  25:tmk_core/protocol/chibios/usb_main.c ****  *   makes the assumption this is safe to avoid littering with preprocessor directives.
  26:tmk_core/protocol/chibios/usb_main.c ****  */
  27:tmk_core/protocol/chibios/usb_main.c **** 
  28:tmk_core/protocol/chibios/usb_main.c **** #include <ch.h>
  29:tmk_core/protocol/chibios/usb_main.c **** #include <hal.h>
  30:tmk_core/protocol/chibios/usb_main.c **** #include <string.h>
  31:tmk_core/protocol/chibios/usb_main.c **** 
  32:tmk_core/protocol/chibios/usb_main.c **** #include "usb_main.h"
  33:tmk_core/protocol/chibios/usb_main.c **** 
  34:tmk_core/protocol/chibios/usb_main.c **** #include "host.h"
  35:tmk_core/protocol/chibios/usb_main.c **** #include "debug.h"
  36:tmk_core/protocol/chibios/usb_main.c **** #include "suspend.h"
  37:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
  38:tmk_core/protocol/chibios/usb_main.c **** #    include "sleep_led.h"
  39:tmk_core/protocol/chibios/usb_main.c **** #    include "led.h"
  40:tmk_core/protocol/chibios/usb_main.c **** #endif
  41:tmk_core/protocol/chibios/usb_main.c **** #include "wait.h"
  42:tmk_core/protocol/chibios/usb_main.c **** #include "usb_descriptor.h"
  43:tmk_core/protocol/chibios/usb_main.c **** #include "usb_driver.h"
  44:tmk_core/protocol/chibios/usb_main.c **** 
  45:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
  46:tmk_core/protocol/chibios/usb_main.c **** #    include "keycode_config.h"
  47:tmk_core/protocol/chibios/usb_main.c **** 
  48:tmk_core/protocol/chibios/usb_main.c **** extern keymap_config_t keymap_config;
  49:tmk_core/protocol/chibios/usb_main.c **** #endif
  50:tmk_core/protocol/chibios/usb_main.c **** 
  51:tmk_core/protocol/chibios/usb_main.c **** #ifdef JOYSTICK_ENABLE
  52:tmk_core/protocol/chibios/usb_main.c **** #    include "joystick.h"
  53:tmk_core/protocol/chibios/usb_main.c **** #endif
  54:tmk_core/protocol/chibios/usb_main.c **** 
  55:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
  56:tmk_core/protocol/chibios/usb_main.c ****  *       Global interface variables and declarations
  57:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
  58:tmk_core/protocol/chibios/usb_main.c ****  */
  59:tmk_core/protocol/chibios/usb_main.c **** 
  60:tmk_core/protocol/chibios/usb_main.c **** #ifndef usb_lld_connect_bus
  61:tmk_core/protocol/chibios/usb_main.c **** #    define usb_lld_connect_bus(usbp)
  62:tmk_core/protocol/chibios/usb_main.c **** #endif
  63:tmk_core/protocol/chibios/usb_main.c **** 
  64:tmk_core/protocol/chibios/usb_main.c **** #ifndef usb_lld_disconnect_bus
  65:tmk_core/protocol/chibios/usb_main.c **** #    define usb_lld_disconnect_bus(usbp)
  66:tmk_core/protocol/chibios/usb_main.c **** #endif
  67:tmk_core/protocol/chibios/usb_main.c **** 
  68:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_idle __attribute__((aligned(2)))     = 0;
  69:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_protocol __attribute__((aligned(2))) = 1;
  70:tmk_core/protocol/chibios/usb_main.c **** uint8_t                keyboard_led_state                            = 0;
  71:tmk_core/protocol/chibios/usb_main.c **** volatile uint16_t      keyboard_idle_count                           = 0;
  72:tmk_core/protocol/chibios/usb_main.c **** static virtual_timer_t keyboard_idle_timer;
  73:tmk_core/protocol/chibios/usb_main.c **** static void            keyboard_idle_timer_cb(void *arg);
  74:tmk_core/protocol/chibios/usb_main.c **** 
  75:tmk_core/protocol/chibios/usb_main.c **** report_keyboard_t keyboard_report_sent = {{0}};
  76:tmk_core/protocol/chibios/usb_main.c **** #ifdef MOUSE_ENABLE
  77:tmk_core/protocol/chibios/usb_main.c **** report_mouse_t mouse_report_blank = {0};
  78:tmk_core/protocol/chibios/usb_main.c **** #endif /* MOUSE_ENABLE */
  79:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
  80:tmk_core/protocol/chibios/usb_main.c **** uint8_t extra_report_blank[3] = {0};
  81:tmk_core/protocol/chibios/usb_main.c **** #endif /* EXTRAKEY_ENABLE */
  82:tmk_core/protocol/chibios/usb_main.c **** 
  83:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
  84:tmk_core/protocol/chibios/usb_main.c ****  *            Descriptors and USB driver objects
  85:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
  86:tmk_core/protocol/chibios/usb_main.c ****  */
  87:tmk_core/protocol/chibios/usb_main.c **** 
  88:tmk_core/protocol/chibios/usb_main.c **** /* HID specific constants */
  89:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_REPORT 0x01
  90:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_IDLE 0x02
  91:tmk_core/protocol/chibios/usb_main.c **** #define HID_GET_PROTOCOL 0x03
  92:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_REPORT 0x09
  93:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_IDLE 0x0A
  94:tmk_core/protocol/chibios/usb_main.c **** #define HID_SET_PROTOCOL 0x0B
  95:tmk_core/protocol/chibios/usb_main.c **** 
  96:tmk_core/protocol/chibios/usb_main.c **** /*
  97:tmk_core/protocol/chibios/usb_main.c ****  * Handles the GET_DESCRIPTOR callback
  98:tmk_core/protocol/chibios/usb_main.c ****  *
  99:tmk_core/protocol/chibios/usb_main.c ****  * Returns the proper descriptor
 100:tmk_core/protocol/chibios/usb_main.c ****  */
 101:tmk_core/protocol/chibios/usb_main.c **** static const USBDescriptor *usb_get_descriptor_cb(USBDriver *usbp, uint8_t dtype, uint8_t dindex, u
 102:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 103:tmk_core/protocol/chibios/usb_main.c ****     static USBDescriptor desc;
 104:tmk_core/protocol/chibios/usb_main.c ****     uint16_t             wValue = ((uint16_t)dtype << 8) | dindex;
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_string              = NULL;
 106:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 107:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 108:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
 109:tmk_core/protocol/chibios/usb_main.c ****     else
 110:tmk_core/protocol/chibios/usb_main.c ****         return &desc;
 111:tmk_core/protocol/chibios/usb_main.c **** }
 112:tmk_core/protocol/chibios/usb_main.c **** 
 113:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 114:tmk_core/protocol/chibios/usb_main.c **** /* keyboard endpoint state structure */
 115:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState kbd_ep_state;
 116:tmk_core/protocol/chibios/usb_main.c **** /* keyboard endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file *
 117:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig kbd_ep_config = {
 118:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 119:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 120:tmk_core/protocol/chibios/usb_main.c ****     kbd_in_cb,             /* IN notification callback */
 121:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 122:tmk_core/protocol/chibios/usb_main.c ****     KEYBOARD_EPSIZE,       /* IN maximum packet size */
 123:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 124:tmk_core/protocol/chibios/usb_main.c ****     &kbd_ep_state,         /* IN Endpoint state */
 125:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 126:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 127:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 128:tmk_core/protocol/chibios/usb_main.c **** };
 129:tmk_core/protocol/chibios/usb_main.c **** #endif
 130:tmk_core/protocol/chibios/usb_main.c **** 
 131:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 132:tmk_core/protocol/chibios/usb_main.c **** /* mouse endpoint state structure */
 133:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState mouse_ep_state;
 134:tmk_core/protocol/chibios/usb_main.c **** 
 135:tmk_core/protocol/chibios/usb_main.c **** /* mouse endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file */
 136:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig mouse_ep_config = {
 137:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 138:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 139:tmk_core/protocol/chibios/usb_main.c ****     mouse_in_cb,           /* IN notification callback */
 140:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 141:tmk_core/protocol/chibios/usb_main.c ****     MOUSE_EPSIZE,          /* IN maximum packet size */
 142:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 143:tmk_core/protocol/chibios/usb_main.c ****     &mouse_ep_state,       /* IN Endpoint state */
 144:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 145:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 146:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 147:tmk_core/protocol/chibios/usb_main.c **** };
 148:tmk_core/protocol/chibios/usb_main.c **** #endif
 149:tmk_core/protocol/chibios/usb_main.c **** 
 150:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 151:tmk_core/protocol/chibios/usb_main.c **** /* shared endpoint state structure */
 152:tmk_core/protocol/chibios/usb_main.c **** static USBInEndpointState shared_ep_state;
 153:tmk_core/protocol/chibios/usb_main.c **** 
 154:tmk_core/protocol/chibios/usb_main.c **** /* shared endpoint initialization structure (IN) - see USBEndpointConfig comment at top of file */
 155:tmk_core/protocol/chibios/usb_main.c **** static const USBEndpointConfig shared_ep_config = {
 156:tmk_core/protocol/chibios/usb_main.c ****     USB_EP_MODE_TYPE_INTR, /* Interrupt EP */
 157:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* SETUP packet notification callback */
 158:tmk_core/protocol/chibios/usb_main.c ****     shared_in_cb,          /* IN notification callback */
 159:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT notification callback */
 160:tmk_core/protocol/chibios/usb_main.c ****     SHARED_EPSIZE,         /* IN maximum packet size */
 161:tmk_core/protocol/chibios/usb_main.c ****     0,                     /* OUT maximum packet size */
 162:tmk_core/protocol/chibios/usb_main.c ****     &shared_ep_state,      /* IN Endpoint state */
 163:tmk_core/protocol/chibios/usb_main.c ****     NULL,                  /* OUT endpoint state */
 164:tmk_core/protocol/chibios/usb_main.c ****     2,                     /* IN multiplier */
 165:tmk_core/protocol/chibios/usb_main.c ****     NULL                   /* SETUP buffer (not a SETUP endpoint) */
 166:tmk_core/protocol/chibios/usb_main.c **** };
 167:tmk_core/protocol/chibios/usb_main.c **** #endif
 168:tmk_core/protocol/chibios/usb_main.c **** 
 169:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 170:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 171:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_in;
 172:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_out;
 173:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  in_ep_state;
 174:tmk_core/protocol/chibios/usb_main.c ****     USBOutEndpointState out_ep_state;
 175:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  int_ep_state;
 176:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   inout_ep_config;
 177:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   int_ep_config;
 178:tmk_core/protocol/chibios/usb_main.c ****     const QMKUSBConfig  config;
 179:tmk_core/protocol/chibios/usb_main.c ****     QMKUSBDriver        driver;
 180:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_config_t;
 181:tmk_core/protocol/chibios/usb_main.c **** #else
 182:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 183:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_in;
 184:tmk_core/protocol/chibios/usb_main.c ****     size_t              queue_capacity_out;
 185:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  in_ep_state;
 186:tmk_core/protocol/chibios/usb_main.c ****     USBOutEndpointState out_ep_state;
 187:tmk_core/protocol/chibios/usb_main.c ****     USBInEndpointState  int_ep_state;
 188:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   in_ep_config;
 189:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   out_ep_config;
 190:tmk_core/protocol/chibios/usb_main.c ****     USBEndpointConfig   int_ep_config;
 191:tmk_core/protocol/chibios/usb_main.c ****     const QMKUSBConfig  config;
 192:tmk_core/protocol/chibios/usb_main.c ****     QMKUSBDriver        driver;
 193:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_config_t;
 194:tmk_core/protocol/chibios/usb_main.c **** #endif
 195:tmk_core/protocol/chibios/usb_main.c **** 
 196:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 197:tmk_core/protocol/chibios/usb_main.c **** /* Reusable initialization structure - see USBEndpointConfig comment at top of file */
 198:tmk_core/protocol/chibios/usb_main.c **** #    define QMK_USB_DRIVER_CONFIG(stream, notification, fixedsize)                                 
 199:tmk_core/protocol/chibios/usb_main.c ****         {                                                                                          
 200:tmk_core/protocol/chibios/usb_main.c ****             .queue_capacity_in = stream##_IN_CAPACITY, .queue_capacity_out = stream##_OUT_CAPACITY,
 201:tmk_core/protocol/chibios/usb_main.c ****             .inout_ep_config =                                                                     
 202:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 203:tmk_core/protocol/chibios/usb_main.c ****                     stream##_IN_MODE,      /* Interrupt EP */                                      
 204:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* SETUP packet notification callback */                
 205:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataTransmitted, /* IN notification callback */                          
 206:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataReceived,    /* OUT notification callback */                         
 207:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,       /* IN maximum packet size */                            
 208:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,       /* OUT maximum packet size */                           
 209:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* IN Endpoint state */                                 
 210:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* OUT endpoint state */                                
 211:tmk_core/protocol/chibios/usb_main.c ****                     2,                     /* IN multiplier */                                     
 212:tmk_core/protocol/chibios/usb_main.c ****                     NULL                   /* SETUP buffer (not a SETUP endpoint) */               
 213:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 214:tmk_core/protocol/chibios/usb_main.c ****             .int_ep_config =                                                                       
 215:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 216:tmk_core/protocol/chibios/usb_main.c ****                     USB_EP_MODE_TYPE_INTR,      /* Interrupt EP */                                 
 217:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP packet notification callback */           
 218:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbInterruptTransmitted, /* IN notification callback */                     
 219:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT notification callback */                    
 220:tmk_core/protocol/chibios/usb_main.c ****                     CDC_NOTIFICATION_EPSIZE,    /* IN maximum packet size */                       
 221:tmk_core/protocol/chibios/usb_main.c ****                     0,                          /* OUT maximum packet size */                      
 222:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* IN Endpoint state */                            
 223:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT endpoint state */                           
 224:tmk_core/protocol/chibios/usb_main.c ****                     2,                          /* IN multiplier */                                
 225:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP buffer (not a SETUP endpoint) */          
 226:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 227:tmk_core/protocol/chibios/usb_main.c ****             .config = {                                                                            
 228:tmk_core/protocol/chibios/usb_main.c ****                 .usbp        = &USB_DRIVER,                                                        
 229:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_in     = stream##_IN_EPNUM,                                                  
 230:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_out    = stream##_OUT_EPNUM,                                                 
 231:tmk_core/protocol/chibios/usb_main.c ****                 .int_in      = notification,                                                       
 232:tmk_core/protocol/chibios/usb_main.c ****                 .in_buffers  = stream##_IN_CAPACITY,                                               
 233:tmk_core/protocol/chibios/usb_main.c ****                 .out_buffers = stream##_OUT_CAPACITY,                                              
 234:tmk_core/protocol/chibios/usb_main.c ****                 .in_size     = stream##_EPSIZE,                                                    
 235:tmk_core/protocol/chibios/usb_main.c ****                 .out_size    = stream##_EPSIZE,                                                    
 236:tmk_core/protocol/chibios/usb_main.c ****                 .fixed_size  = fixedsize,                                                          
 237:tmk_core/protocol/chibios/usb_main.c ****                 .ib          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_IN_CAPA
 238:tmk_core/protocol/chibios/usb_main.c ****                 .ob          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_OUT_CAP
 239:tmk_core/protocol/chibios/usb_main.c ****             }                                                                                      
 240:tmk_core/protocol/chibios/usb_main.c ****         }
 241:tmk_core/protocol/chibios/usb_main.c **** #else
 242:tmk_core/protocol/chibios/usb_main.c **** /* Reusable initialization structure - see USBEndpointConfig comment at top of file */
 243:tmk_core/protocol/chibios/usb_main.c **** #    define QMK_USB_DRIVER_CONFIG(stream, notification, fixedsize)                                 
 244:tmk_core/protocol/chibios/usb_main.c ****         {                                                                                          
 245:tmk_core/protocol/chibios/usb_main.c ****             .queue_capacity_in = stream##_IN_CAPACITY, .queue_capacity_out = stream##_OUT_CAPACITY,
 246:tmk_core/protocol/chibios/usb_main.c ****             .in_ep_config =                                                                        
 247:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 248:tmk_core/protocol/chibios/usb_main.c ****                     stream##_IN_MODE,      /* Interrupt EP */                                      
 249:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* SETUP packet notification callback */                
 250:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataTransmitted, /* IN notification callback */                          
 251:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* OUT notification callback */                         
 252:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,       /* IN maximum packet size */                            
 253:tmk_core/protocol/chibios/usb_main.c ****                     0,                     /* OUT maximum packet size */                           
 254:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* IN Endpoint state */                                 
 255:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                  /* OUT endpoint state */                                
 256:tmk_core/protocol/chibios/usb_main.c ****                     2,                     /* IN multiplier */                                     
 257:tmk_core/protocol/chibios/usb_main.c ****                     NULL                   /* SETUP buffer (not a SETUP endpoint) */               
 258:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 259:tmk_core/protocol/chibios/usb_main.c ****             .out_ep_config =                                                                       
 260:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 261:tmk_core/protocol/chibios/usb_main.c ****                     stream##_OUT_MODE,  /* Interrupt EP */                                         
 262:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* SETUP packet notification callback */                   
 263:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* IN notification callback */                             
 264:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbDataReceived, /* OUT notification callback */                            
 265:tmk_core/protocol/chibios/usb_main.c ****                     0,                  /* IN maximum packet size */                               
 266:tmk_core/protocol/chibios/usb_main.c ****                     stream##_EPSIZE,    /* OUT maximum packet size */                              
 267:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* IN Endpoint state */                                    
 268:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* OUT endpoint state */                                   
 269:tmk_core/protocol/chibios/usb_main.c ****                     2,                  /* IN multiplier */                                        
 270:tmk_core/protocol/chibios/usb_main.c ****                     NULL,               /* SETUP buffer (not a SETUP endpoint) */                  
 271:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 272:tmk_core/protocol/chibios/usb_main.c ****             .int_ep_config =                                                                       
 273:tmk_core/protocol/chibios/usb_main.c ****                 {                                                                                  
 274:tmk_core/protocol/chibios/usb_main.c ****                     USB_EP_MODE_TYPE_INTR,      /* Interrupt EP */                                 
 275:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP packet notification callback */           
 276:tmk_core/protocol/chibios/usb_main.c ****                     qmkusbInterruptTransmitted, /* IN notification callback */                     
 277:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT notification callback */                    
 278:tmk_core/protocol/chibios/usb_main.c ****                     CDC_NOTIFICATION_EPSIZE,    /* IN maximum packet size */                       
 279:tmk_core/protocol/chibios/usb_main.c ****                     0,                          /* OUT maximum packet size */                      
 280:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* IN Endpoint state */                            
 281:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* OUT endpoint state */                           
 282:tmk_core/protocol/chibios/usb_main.c ****                     2,                          /* IN multiplier */                                
 283:tmk_core/protocol/chibios/usb_main.c ****                     NULL,                       /* SETUP buffer (not a SETUP endpoint) */          
 284:tmk_core/protocol/chibios/usb_main.c ****                 },                                                                                 
 285:tmk_core/protocol/chibios/usb_main.c ****             .config = {                                                                            
 286:tmk_core/protocol/chibios/usb_main.c ****                 .usbp        = &USB_DRIVER,                                                        
 287:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_in     = stream##_IN_EPNUM,                                                  
 288:tmk_core/protocol/chibios/usb_main.c ****                 .bulk_out    = stream##_OUT_EPNUM,                                                 
 289:tmk_core/protocol/chibios/usb_main.c ****                 .int_in      = notification,                                                       
 290:tmk_core/protocol/chibios/usb_main.c ****                 .in_buffers  = stream##_IN_CAPACITY,                                               
 291:tmk_core/protocol/chibios/usb_main.c ****                 .out_buffers = stream##_OUT_CAPACITY,                                              
 292:tmk_core/protocol/chibios/usb_main.c ****                 .in_size     = stream##_EPSIZE,                                                    
 293:tmk_core/protocol/chibios/usb_main.c ****                 .out_size    = stream##_EPSIZE,                                                    
 294:tmk_core/protocol/chibios/usb_main.c ****                 .fixed_size  = fixedsize,                                                          
 295:tmk_core/protocol/chibios/usb_main.c ****                 .ib          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_IN_CAPA
 296:tmk_core/protocol/chibios/usb_main.c ****                 .ob          = (__attribute__((aligned(4))) uint8_t[BQ_BUFFER_SIZE(stream##_OUT_CAP
 297:tmk_core/protocol/chibios/usb_main.c ****             }                                                                                      
 298:tmk_core/protocol/chibios/usb_main.c ****         }
 299:tmk_core/protocol/chibios/usb_main.c **** #endif
 300:tmk_core/protocol/chibios/usb_main.c **** 
 301:tmk_core/protocol/chibios/usb_main.c **** typedef struct {
 302:tmk_core/protocol/chibios/usb_main.c ****     union {
 303:tmk_core/protocol/chibios/usb_main.c ****         struct {
 304:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 305:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t console_driver;
 306:tmk_core/protocol/chibios/usb_main.c **** #endif
 307:tmk_core/protocol/chibios/usb_main.c **** #ifdef RAW_ENABLE
 308:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t raw_driver;
 309:tmk_core/protocol/chibios/usb_main.c **** #endif
 310:tmk_core/protocol/chibios/usb_main.c **** #ifdef MIDI_ENABLE
 311:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t midi_driver;
 312:tmk_core/protocol/chibios/usb_main.c **** #endif
 313:tmk_core/protocol/chibios/usb_main.c **** #ifdef VIRTSER_ENABLE
 314:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t serial_driver;
 315:tmk_core/protocol/chibios/usb_main.c **** #endif
 316:tmk_core/protocol/chibios/usb_main.c **** #ifdef JOYSTICK_ENABLE
 317:tmk_core/protocol/chibios/usb_main.c ****             usb_driver_config_t joystick_driver;
 318:tmk_core/protocol/chibios/usb_main.c **** #endif
 319:tmk_core/protocol/chibios/usb_main.c ****         };
 320:tmk_core/protocol/chibios/usb_main.c ****         usb_driver_config_t array[0];
 321:tmk_core/protocol/chibios/usb_main.c ****     };
 322:tmk_core/protocol/chibios/usb_main.c **** } usb_driver_configs_t;
 323:tmk_core/protocol/chibios/usb_main.c **** 
 324:tmk_core/protocol/chibios/usb_main.c **** static usb_driver_configs_t drivers = {
 325:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 326:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_IN_CAPACITY 4
 327:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_OUT_CAPACITY 4
 328:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_IN_MODE USB_EP_MODE_TYPE_INTR
 329:tmk_core/protocol/chibios/usb_main.c **** #    define CONSOLE_OUT_MODE USB_EP_MODE_TYPE_INTR
 330:tmk_core/protocol/chibios/usb_main.c ****     .console_driver = QMK_USB_DRIVER_CONFIG(CONSOLE, 0, true),
 331:tmk_core/protocol/chibios/usb_main.c **** #endif
 332:tmk_core/protocol/chibios/usb_main.c **** #ifdef RAW_ENABLE
 333:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_IN_CAPACITY 4
 334:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_OUT_CAPACITY 4
 335:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_IN_MODE USB_EP_MODE_TYPE_INTR
 336:tmk_core/protocol/chibios/usb_main.c **** #    define RAW_OUT_MODE USB_EP_MODE_TYPE_INTR
 337:tmk_core/protocol/chibios/usb_main.c ****     .raw_driver = QMK_USB_DRIVER_CONFIG(RAW, 0, false),
 338:tmk_core/protocol/chibios/usb_main.c **** #endif
 339:tmk_core/protocol/chibios/usb_main.c **** 
 340:tmk_core/protocol/chibios/usb_main.c **** #ifdef MIDI_ENABLE
 341:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_IN_CAPACITY 4
 342:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_OUT_CAPACITY 4
 343:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_IN_MODE USB_EP_MODE_TYPE_BULK
 344:tmk_core/protocol/chibios/usb_main.c **** #    define MIDI_STREAM_OUT_MODE USB_EP_MODE_TYPE_BULK
 345:tmk_core/protocol/chibios/usb_main.c ****     .midi_driver = QMK_USB_DRIVER_CONFIG(MIDI_STREAM, 0, false),
 346:tmk_core/protocol/chibios/usb_main.c **** #endif
 347:tmk_core/protocol/chibios/usb_main.c **** 
 348:tmk_core/protocol/chibios/usb_main.c **** #ifdef VIRTSER_ENABLE
 349:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_IN_CAPACITY 4
 350:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_OUT_CAPACITY 4
 351:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_IN_MODE USB_EP_MODE_TYPE_BULK
 352:tmk_core/protocol/chibios/usb_main.c **** #    define CDC_OUT_MODE USB_EP_MODE_TYPE_BULK
 353:tmk_core/protocol/chibios/usb_main.c ****     .serial_driver = QMK_USB_DRIVER_CONFIG(CDC, CDC_NOTIFICATION_EPNUM, false),
 354:tmk_core/protocol/chibios/usb_main.c **** #endif
 355:tmk_core/protocol/chibios/usb_main.c **** 
 356:tmk_core/protocol/chibios/usb_main.c **** #ifdef JOYSTICK_ENABLE
 357:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_IN_CAPACITY 4
 358:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_OUT_CAPACITY 4
 359:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_IN_MODE USB_EP_MODE_TYPE_BULK
 360:tmk_core/protocol/chibios/usb_main.c **** #    define JOYSTICK_OUT_MODE USB_EP_MODE_TYPE_BULK
 361:tmk_core/protocol/chibios/usb_main.c ****     .joystick_driver = QMK_USB_DRIVER_CONFIG(JOYSTICK, 0, false),
 362:tmk_core/protocol/chibios/usb_main.c **** #endif
 363:tmk_core/protocol/chibios/usb_main.c **** };
 364:tmk_core/protocol/chibios/usb_main.c **** 
 365:tmk_core/protocol/chibios/usb_main.c **** #define NUM_USB_DRIVERS (sizeof(drivers) / sizeof(usb_driver_config_t))
 366:tmk_core/protocol/chibios/usb_main.c **** 
 367:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 368:tmk_core/protocol/chibios/usb_main.c ****  *                  USB driver functions
 369:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 370:tmk_core/protocol/chibios/usb_main.c ****  */
 371:tmk_core/protocol/chibios/usb_main.c **** 
 372:tmk_core/protocol/chibios/usb_main.c **** #define USB_EVENT_QUEUE_SIZE 16
 373:tmk_core/protocol/chibios/usb_main.c **** usbevent_t event_queue[USB_EVENT_QUEUE_SIZE];
 374:tmk_core/protocol/chibios/usb_main.c **** uint8_t    event_queue_head;
 375:tmk_core/protocol/chibios/usb_main.c **** uint8_t    event_queue_tail;
 376:tmk_core/protocol/chibios/usb_main.c **** 
 377:tmk_core/protocol/chibios/usb_main.c **** void usb_event_queue_init(void) {
 378:tmk_core/protocol/chibios/usb_main.c ****     // Initialise the event queue
 379:tmk_core/protocol/chibios/usb_main.c ****     memset(&event_queue, 0, sizeof(event_queue));
 380:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head = 0;
 381:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = 0;
 382:tmk_core/protocol/chibios/usb_main.c **** }
 383:tmk_core/protocol/chibios/usb_main.c **** 
 384:tmk_core/protocol/chibios/usb_main.c **** static inline bool usb_event_queue_enqueue(usbevent_t event) {
 385:tmk_core/protocol/chibios/usb_main.c ****     uint8_t next = (event_queue_head + 1) % USB_EVENT_QUEUE_SIZE;
 386:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 387:tmk_core/protocol/chibios/usb_main.c ****         return false;
 388:tmk_core/protocol/chibios/usb_main.c ****     }
 389:tmk_core/protocol/chibios/usb_main.c ****     event_queue[event_queue_head] = event;
 390:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 391:tmk_core/protocol/chibios/usb_main.c ****     return true;
 392:tmk_core/protocol/chibios/usb_main.c **** }
 393:tmk_core/protocol/chibios/usb_main.c **** 
 394:tmk_core/protocol/chibios/usb_main.c **** static inline bool usb_event_queue_dequeue(usbevent_t *event) {
 395:tmk_core/protocol/chibios/usb_main.c ****     if (event_queue_head == event_queue_tail) {
 396:tmk_core/protocol/chibios/usb_main.c ****         return false;
 397:tmk_core/protocol/chibios/usb_main.c ****     }
 398:tmk_core/protocol/chibios/usb_main.c ****     *event           = event_queue[event_queue_tail];
 399:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 400:tmk_core/protocol/chibios/usb_main.c ****     return true;
 401:tmk_core/protocol/chibios/usb_main.c **** }
 402:tmk_core/protocol/chibios/usb_main.c **** 
 403:tmk_core/protocol/chibios/usb_main.c **** static inline void usb_event_suspend_handler(void) {
 404:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 405:tmk_core/protocol/chibios/usb_main.c ****     sleep_led_enable();
 406:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 407:tmk_core/protocol/chibios/usb_main.c **** }
 408:tmk_core/protocol/chibios/usb_main.c **** 
 409:tmk_core/protocol/chibios/usb_main.c **** static inline void usb_event_wakeup_handler(void) {
 410:tmk_core/protocol/chibios/usb_main.c ****     suspend_wakeup_init();
 411:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 412:tmk_core/protocol/chibios/usb_main.c ****     sleep_led_disable();
 413:tmk_core/protocol/chibios/usb_main.c ****     // NOTE: converters may not accept this
 414:tmk_core/protocol/chibios/usb_main.c ****     led_set(host_keyboard_leds());
 415:tmk_core/protocol/chibios/usb_main.c **** #endif /* SLEEP_LED_ENABLE */
 416:tmk_core/protocol/chibios/usb_main.c **** }
 417:tmk_core/protocol/chibios/usb_main.c **** 
 418:tmk_core/protocol/chibios/usb_main.c **** bool last_suspend_state = false;
 419:tmk_core/protocol/chibios/usb_main.c **** 
 420:tmk_core/protocol/chibios/usb_main.c **** void usb_event_queue_task(void) {
 421:tmk_core/protocol/chibios/usb_main.c ****     usbevent_t event;
 422:tmk_core/protocol/chibios/usb_main.c ****     while (usb_event_queue_dequeue(&event)) {
 423:tmk_core/protocol/chibios/usb_main.c ****         switch (event) {
 424:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_SUSPEND:
 425:tmk_core/protocol/chibios/usb_main.c ****                 last_suspend_state = true;
 426:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_suspend_handler();
 427:tmk_core/protocol/chibios/usb_main.c ****                 break;
 428:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_WAKEUP:
 429:tmk_core/protocol/chibios/usb_main.c ****                 last_suspend_state = false;
 430:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_wakeup_handler();
 431:tmk_core/protocol/chibios/usb_main.c ****                 break;
 432:tmk_core/protocol/chibios/usb_main.c ****             default:
 433:tmk_core/protocol/chibios/usb_main.c ****                 // Nothing to do, we don't handle it.
 434:tmk_core/protocol/chibios/usb_main.c ****                 break;
 435:tmk_core/protocol/chibios/usb_main.c ****         }
 436:tmk_core/protocol/chibios/usb_main.c ****     }
 437:tmk_core/protocol/chibios/usb_main.c **** }
 438:tmk_core/protocol/chibios/usb_main.c **** 
 439:tmk_core/protocol/chibios/usb_main.c **** /* Handles the USB driver global events
 440:tmk_core/protocol/chibios/usb_main.c ****  * TODO: maybe disable some things when connection is lost? */
 441:tmk_core/protocol/chibios/usb_main.c **** static void usb_event_cb(USBDriver *usbp, usbevent_t event) {
 442:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 443:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 444:tmk_core/protocol/chibios/usb_main.c ****             return;
 445:tmk_core/protocol/chibios/usb_main.c **** 
 446:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_CONFIGURED:
 447:tmk_core/protocol/chibios/usb_main.c ****             osalSysLockFromISR();
 448:tmk_core/protocol/chibios/usb_main.c ****             /* Enable the endpoints specified into the configuration. */
 449:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 450:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, KEYBOARD_IN_EPNUM, &kbd_ep_config);
 451:tmk_core/protocol/chibios/usb_main.c **** #endif
 452:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 453:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, MOUSE_IN_EPNUM, &mouse_ep_config);
 454:tmk_core/protocol/chibios/usb_main.c **** #endif
 455:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 456:tmk_core/protocol/chibios/usb_main.c ****             usbInitEndpointI(usbp, SHARED_IN_EPNUM, &shared_ep_config);
 457:tmk_core/protocol/chibios/usb_main.c **** #endif
 458:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 459:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 460:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_in, &drivers.array[i].inout_ep_
 461:tmk_core/protocol/chibios/usb_main.c **** #else
 462:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_in, &drivers.array[i].in_ep_con
 463:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 464:tmk_core/protocol/chibios/usb_main.c **** #endif
 465:tmk_core/protocol/chibios/usb_main.c ****                 if (drivers.array[i].config.int_in) {
 466:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 467:tmk_core/protocol/chibios/usb_main.c ****                 }
 468:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbConfigureHookI(&drivers.array[i].driver);
 469:tmk_core/protocol/chibios/usb_main.c ****             }
 470:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlockFromISR();
 471:tmk_core/protocol/chibios/usb_main.c ****             if (last_suspend_state) {
 472:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 473:tmk_core/protocol/chibios/usb_main.c ****             }
 474:tmk_core/protocol/chibios/usb_main.c ****             return;
 475:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_SUSPEND:
 476:tmk_core/protocol/chibios/usb_main.c ****             usb_event_queue_enqueue(USB_EVENT_SUSPEND);
 477:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 478:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_UNCONFIGURED:
 479:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 480:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_RESET:
 481:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 482:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 483:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 484:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbSuspendHookI(&drivers.array[i].driver);
 485:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 486:tmk_core/protocol/chibios/usb_main.c ****             }
 487:tmk_core/protocol/chibios/usb_main.c ****             return;
 488:tmk_core/protocol/chibios/usb_main.c **** 
 489:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_WAKEUP:
 490:tmk_core/protocol/chibios/usb_main.c ****             // TODO: from ISR! print("[W]");
 491:tmk_core/protocol/chibios/usb_main.c ****             for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 492:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 493:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 494:tmk_core/protocol/chibios/usb_main.c ****                 qmkusbWakeupHookI(&drivers.array[i].driver);
 495:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 496:tmk_core/protocol/chibios/usb_main.c ****             }
 497:tmk_core/protocol/chibios/usb_main.c ****             usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 498:tmk_core/protocol/chibios/usb_main.c ****             return;
 499:tmk_core/protocol/chibios/usb_main.c **** 
 500:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_STALLED:
 501:tmk_core/protocol/chibios/usb_main.c ****             return;
 502:tmk_core/protocol/chibios/usb_main.c ****     }
 503:tmk_core/protocol/chibios/usb_main.c **** }
 504:tmk_core/protocol/chibios/usb_main.c **** 
 505:tmk_core/protocol/chibios/usb_main.c **** /* Function used locally in os/hal/src/usb.c for getting descriptors
 506:tmk_core/protocol/chibios/usb_main.c ****  * need it here for HID descriptor */
 507:tmk_core/protocol/chibios/usb_main.c **** static uint16_t get_hword(uint8_t *p) {
 508:tmk_core/protocol/chibios/usb_main.c ****     uint16_t hw;
 509:tmk_core/protocol/chibios/usb_main.c **** 
 510:tmk_core/protocol/chibios/usb_main.c ****     hw = (uint16_t)*p++;
 511:tmk_core/protocol/chibios/usb_main.c ****     hw |= (uint16_t)*p << 8U;
 512:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 513:tmk_core/protocol/chibios/usb_main.c **** }
 514:tmk_core/protocol/chibios/usb_main.c **** 
 515:tmk_core/protocol/chibios/usb_main.c **** /*
 516:tmk_core/protocol/chibios/usb_main.c ****  * Appendix G: HID Request Support Requirements
 517:tmk_core/protocol/chibios/usb_main.c ****  *
 518:tmk_core/protocol/chibios/usb_main.c ****  * The following table enumerates the requests that need to be supported by various types of HID cl
 519:tmk_core/protocol/chibios/usb_main.c ****  * Device type     GetReport   SetReport   GetIdle     SetIdle     GetProtocol SetProtocol
 520:tmk_core/protocol/chibios/usb_main.c ****  * ------------------------------------------------------------------------------------------
 521:tmk_core/protocol/chibios/usb_main.c ****  * Boot Mouse      Required    Optional    Optional    Optional    Required    Required
 522:tmk_core/protocol/chibios/usb_main.c ****  * Non-Boot Mouse  Required    Optional    Optional    Optional    Optional    Optional
 523:tmk_core/protocol/chibios/usb_main.c ****  * Boot Keyboard   Required    Optional    Required    Required    Required    Required
 524:tmk_core/protocol/chibios/usb_main.c ****  * Non-Boot Keybrd Required    Optional    Required    Required    Optional    Optional
 525:tmk_core/protocol/chibios/usb_main.c ****  * Other Device    Required    Optional    Optional    Optional    Optional    Optional
 526:tmk_core/protocol/chibios/usb_main.c ****  */
 527:tmk_core/protocol/chibios/usb_main.c **** 
 528:tmk_core/protocol/chibios/usb_main.c **** static uint8_t set_report_buf[2] __attribute__((aligned(4)));
 529:tmk_core/protocol/chibios/usb_main.c **** static void    set_led_transfer_cb(USBDriver *usbp) {
 530:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 531:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 532:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 533:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_state = set_report_buf[1];
 534:tmk_core/protocol/chibios/usb_main.c ****         }
 535:tmk_core/protocol/chibios/usb_main.c ****     } else {
 536:tmk_core/protocol/chibios/usb_main.c ****         keyboard_led_state = set_report_buf[0];
 537:tmk_core/protocol/chibios/usb_main.c ****     }
 538:tmk_core/protocol/chibios/usb_main.c **** }
 539:tmk_core/protocol/chibios/usb_main.c **** 
 540:tmk_core/protocol/chibios/usb_main.c **** /* Callback for SETUP request on the endpoint 0 (control) */
 541:tmk_core/protocol/chibios/usb_main.c **** static bool usb_request_hook_cb(USBDriver *usbp) {
 542:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 543:tmk_core/protocol/chibios/usb_main.c **** 
 544:tmk_core/protocol/chibios/usb_main.c ****     /* usbp->setup fields:
 545:tmk_core/protocol/chibios/usb_main.c ****      *  0:   bmRequestType (bitmask)
 546:tmk_core/protocol/chibios/usb_main.c ****      *  1:   bRequest
 547:tmk_core/protocol/chibios/usb_main.c ****      *  2,3: (LSB,MSB) wValue
 548:tmk_core/protocol/chibios/usb_main.c ****      *  4,5: (LSB,MSB) wIndex
 549:tmk_core/protocol/chibios/usb_main.c ****      *  6,7: (LSB,MSB) wLength (number of bytes to transfer if there is a data phase) */
 550:tmk_core/protocol/chibios/usb_main.c **** 
 551:tmk_core/protocol/chibios/usb_main.c ****     /* Handle HID class specific requests */
 552:tmk_core/protocol/chibios/usb_main.c ****     if (((usbp->setup[0] & USB_RTYPE_TYPE_MASK) == USB_RTYPE_TYPE_CLASS) && ((usbp->setup[0] & USB_
 553:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 554:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_DEV2HOST:
 555:tmk_core/protocol/chibios/usb_main.c ****                 switch (usbp->setup[1]) { /* bRequest */
 556:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_REPORT:
 557:tmk_core/protocol/chibios/usb_main.c ****                         switch (usbp->setup[4]) { /* LSB(wIndex) (check MSB==0?) */
 558:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 559:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, (uint8_t *)&keyboard_report_sent, sizeof(key
 560:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 561:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 562:tmk_core/protocol/chibios/usb_main.c **** 
 563:tmk_core/protocol/chibios/usb_main.c **** #if defined(MOUSE_ENABLE) && !defined(MOUSE_SHARED_EP)
 564:tmk_core/protocol/chibios/usb_main.c ****                             case MOUSE_INTERFACE:
 565:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, (uint8_t *)&mouse_report_blank, sizeof(mouse
 566:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 567:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 568:tmk_core/protocol/chibios/usb_main.c **** #endif
 569:tmk_core/protocol/chibios/usb_main.c **** 
 570:tmk_core/protocol/chibios/usb_main.c ****                             default:
 571:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, NULL, 0, NULL);
 572:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 573:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 574:tmk_core/protocol/chibios/usb_main.c ****                         }
 575:tmk_core/protocol/chibios/usb_main.c ****                         break;
 576:tmk_core/protocol/chibios/usb_main.c **** 
 577:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_PROTOCOL:
 578:tmk_core/protocol/chibios/usb_main.c ****                         if ((usbp->setup[4] == KEYBOARD_INTERFACE) && (usbp->setup[5] == 0)) { /* w
 579:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 580:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 581:tmk_core/protocol/chibios/usb_main.c ****                         }
 582:tmk_core/protocol/chibios/usb_main.c ****                         break;
 583:tmk_core/protocol/chibios/usb_main.c **** 
 584:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_IDLE:
 585:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, &keyboard_idle, 1, NULL);
 586:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 587:tmk_core/protocol/chibios/usb_main.c ****                         break;
 588:tmk_core/protocol/chibios/usb_main.c ****                 }
 589:tmk_core/protocol/chibios/usb_main.c ****                 break;
 590:tmk_core/protocol/chibios/usb_main.c **** 
 591:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_HOST2DEV:
 592:tmk_core/protocol/chibios/usb_main.c ****                 switch (usbp->setup[1]) { /* bRequest */
 593:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_REPORT:
 594:tmk_core/protocol/chibios/usb_main.c ****                         switch (usbp->setup[4]) { /* LSB(wIndex) (check MSB==0?) */
 595:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 596:tmk_core/protocol/chibios/usb_main.c **** #if defined(SHARED_EP_ENABLE) && !defined(KEYBOARD_SHARED_EP)
 597:tmk_core/protocol/chibios/usb_main.c ****                             case SHARED_INTERFACE:
 598:tmk_core/protocol/chibios/usb_main.c **** #endif
 599:tmk_core/protocol/chibios/usb_main.c ****                                 usbSetupTransfer(usbp, set_report_buf, sizeof(set_report_buf), set_
 600:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 601:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 602:tmk_core/protocol/chibios/usb_main.c ****                         }
 603:tmk_core/protocol/chibios/usb_main.c ****                         break;
 604:tmk_core/protocol/chibios/usb_main.c **** 
 605:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_PROTOCOL:
 606:tmk_core/protocol/chibios/usb_main.c ****                         if ((usbp->setup[4] == KEYBOARD_INTERFACE) && (usbp->setup[5] == 0)) { /* w
 607:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 608:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 609:tmk_core/protocol/chibios/usb_main.c ****                             keymap_config.nkro = !!keyboard_protocol;
 610:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 611:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 612:tmk_core/protocol/chibios/usb_main.c ****                             if (keyboard_idle) {
 613:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 614:tmk_core/protocol/chibios/usb_main.c ****                                 /* arm the idle timer if boot protocol & idle */
 615:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysLockFromISR();
 616:tmk_core/protocol/chibios/usb_main.c ****                                 chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboa
 617:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 618:tmk_core/protocol/chibios/usb_main.c ****                             }
 619:tmk_core/protocol/chibios/usb_main.c ****                         }
 620:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, NULL, 0, NULL);
 621:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 622:tmk_core/protocol/chibios/usb_main.c ****                         break;
 623:tmk_core/protocol/chibios/usb_main.c **** 
 624:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_IDLE:
 625:tmk_core/protocol/chibios/usb_main.c ****                         keyboard_idle = usbp->setup[3]; /* MSB(wValue) */
 626:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 627:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 628:tmk_core/protocol/chibios/usb_main.c ****                         if (!keymap_config.nkro && keyboard_idle) {
 629:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 630:tmk_core/protocol/chibios/usb_main.c ****                         if (keyboard_idle) {
 631:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 632:tmk_core/protocol/chibios/usb_main.c ****                             osalSysLockFromISR();
 633:tmk_core/protocol/chibios/usb_main.c ****                             chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboard_i
 634:tmk_core/protocol/chibios/usb_main.c ****                             osalSysUnlockFromISR();
 635:tmk_core/protocol/chibios/usb_main.c ****                         }
 636:tmk_core/protocol/chibios/usb_main.c ****                         usbSetupTransfer(usbp, NULL, 0, NULL);
 637:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 638:tmk_core/protocol/chibios/usb_main.c ****                         break;
 639:tmk_core/protocol/chibios/usb_main.c ****                 }
 640:tmk_core/protocol/chibios/usb_main.c ****                 break;
 641:tmk_core/protocol/chibios/usb_main.c ****         }
 642:tmk_core/protocol/chibios/usb_main.c ****     }
 643:tmk_core/protocol/chibios/usb_main.c **** 
 644:tmk_core/protocol/chibios/usb_main.c ****     /* Handle the Get_Descriptor Request for HID class (not handled by the default hook) */
 645:tmk_core/protocol/chibios/usb_main.c ****     if ((usbp->setup[0] == 0x81) && (usbp->setup[1] == USB_REQ_GET_DESCRIPTOR)) {
 646:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 647:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 648:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 649:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 650:tmk_core/protocol/chibios/usb_main.c ****     }
 651:tmk_core/protocol/chibios/usb_main.c **** 
 652:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 653:tmk_core/protocol/chibios/usb_main.c ****         if (drivers.array[i].config.int_in) {
 654:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 655:tmk_core/protocol/chibios/usb_main.c ****             return qmkusbRequestsHook(usbp);
 656:tmk_core/protocol/chibios/usb_main.c ****         }
 657:tmk_core/protocol/chibios/usb_main.c ****     }
 658:tmk_core/protocol/chibios/usb_main.c **** 
 659:tmk_core/protocol/chibios/usb_main.c ****     return FALSE;
 660:tmk_core/protocol/chibios/usb_main.c **** }
 661:tmk_core/protocol/chibios/usb_main.c **** 
 662:tmk_core/protocol/chibios/usb_main.c **** /* Start-of-frame callback */
 663:tmk_core/protocol/chibios/usb_main.c **** static void usb_sof_cb(USBDriver *usbp) {
 664:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
 665:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
 666:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 667:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 668:tmk_core/protocol/chibios/usb_main.c ****     }
 669:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlockFromISR();
 670:tmk_core/protocol/chibios/usb_main.c **** }
 671:tmk_core/protocol/chibios/usb_main.c **** 
 672:tmk_core/protocol/chibios/usb_main.c **** /* USB driver configuration */
 673:tmk_core/protocol/chibios/usb_main.c **** static const USBConfig usbcfg = {
 674:tmk_core/protocol/chibios/usb_main.c ****     usb_event_cb,          /* USB events callback */
 675:tmk_core/protocol/chibios/usb_main.c ****     usb_get_descriptor_cb, /* Device GET_DESCRIPTOR request callback */
 676:tmk_core/protocol/chibios/usb_main.c ****     usb_request_hook_cb,   /* Requests hook callback */
 677:tmk_core/protocol/chibios/usb_main.c ****     usb_sof_cb             /* Start Of Frame callback */
 678:tmk_core/protocol/chibios/usb_main.c **** };
 679:tmk_core/protocol/chibios/usb_main.c **** 
 680:tmk_core/protocol/chibios/usb_main.c **** /*
 681:tmk_core/protocol/chibios/usb_main.c ****  * Initialize the USB driver
 682:tmk_core/protocol/chibios/usb_main.c ****  */
 683:tmk_core/protocol/chibios/usb_main.c **** void init_usb_driver(USBDriver *usbp) {
 684:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 685:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 686:tmk_core/protocol/chibios/usb_main.c ****         QMKUSBDriver *driver                       = &drivers.array[i].driver;
 687:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].inout_ep_config.in_state  = &drivers.array[i].in_ep_state;
 688:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].inout_ep_config.out_state = &drivers.array[i].out_ep_state;
 689:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state    = &drivers.array[i].int_ep_state;
 690:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 691:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 692:tmk_core/protocol/chibios/usb_main.c **** #else
 693:tmk_core/protocol/chibios/usb_main.c ****         QMKUSBDriver *driver                     = &drivers.array[i].driver;
 694:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].in_ep_config.in_state   = &drivers.array[i].in_ep_state;
 695:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 696:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 697:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 698:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 699:tmk_core/protocol/chibios/usb_main.c **** #endif
 700:tmk_core/protocol/chibios/usb_main.c ****     }
 701:tmk_core/protocol/chibios/usb_main.c **** 
 702:tmk_core/protocol/chibios/usb_main.c ****     /*
 703:tmk_core/protocol/chibios/usb_main.c ****      * Activates the USB driver and then the USB bus pull-up on D+.
 704:tmk_core/protocol/chibios/usb_main.c ****      * Note, a delay is inserted in order to not have to disconnect the cable
 705:tmk_core/protocol/chibios/usb_main.c ****      * after a reset.
 706:tmk_core/protocol/chibios/usb_main.c ****      */
 707:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 708:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 709:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 710:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 711:tmk_core/protocol/chibios/usb_main.c **** 
 712:tmk_core/protocol/chibios/usb_main.c ****     chVTObjectInit(&keyboard_idle_timer);
 713:tmk_core/protocol/chibios/usb_main.c **** }
 714:tmk_core/protocol/chibios/usb_main.c **** 
 715:tmk_core/protocol/chibios/usb_main.c **** __attribute__((weak)) void restart_usb_driver(USBDriver *usbp) {
 716:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 717:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 718:tmk_core/protocol/chibios/usb_main.c **** 
 719:tmk_core/protocol/chibios/usb_main.c **** #if USB_SUSPEND_WAKEUP_DELAY > 0
 720:tmk_core/protocol/chibios/usb_main.c ****     // Some hubs, kvm switches, and monitors do
 721:tmk_core/protocol/chibios/usb_main.c ****     // weird things, with USB device state bouncing
 722:tmk_core/protocol/chibios/usb_main.c ****     // around wildly on wakeup, yielding race
 723:tmk_core/protocol/chibios/usb_main.c ****     // conditions that can corrupt the keyboard state.
 724:tmk_core/protocol/chibios/usb_main.c ****     //
 725:tmk_core/protocol/chibios/usb_main.c ****     // Pause for a while to let things settle...
 726:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(USB_SUSPEND_WAKEUP_DELAY);
 727:tmk_core/protocol/chibios/usb_main.c **** #endif
 728:tmk_core/protocol/chibios/usb_main.c **** 
 729:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 730:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 731:tmk_core/protocol/chibios/usb_main.c **** }
 732:tmk_core/protocol/chibios/usb_main.c **** 
 733:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 734:tmk_core/protocol/chibios/usb_main.c ****  *                  Keyboard functions
 735:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 736:tmk_core/protocol/chibios/usb_main.c ****  */
 737:tmk_core/protocol/chibios/usb_main.c **** /* keyboard IN callback hander (a kbd report has made it IN) */
 738:tmk_core/protocol/chibios/usb_main.c **** #ifndef KEYBOARD_SHARED_EP
 739:tmk_core/protocol/chibios/usb_main.c **** void kbd_in_cb(USBDriver *usbp, usbep_t ep) {
  30              		.loc 1 739 45 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 740:tmk_core/protocol/chibios/usb_main.c ****     /* STUB */
 741:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
  35              		.loc 1 741 5 view .LVU1
 742:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
  36              		.loc 1 742 5 view .LVU2
 743:tmk_core/protocol/chibios/usb_main.c **** }
  37              		.loc 1 743 1 is_stmt 0 view .LVU3
  38 0000 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE295:
  42              		.section	.text.usb_sof_cb,"ax",%progbits
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	usb_sof_cb:
  50              	.LVL1:
  51              	.LFB292:
 663:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
  52              		.loc 1 663 41 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
 664:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
  56              		.loc 1 664 5 view .LVU5
 744:tmk_core/protocol/chibios/usb_main.c **** #endif
 745:tmk_core/protocol/chibios/usb_main.c **** 
 746:tmk_core/protocol/chibios/usb_main.c **** /* start-of-frame handler
 747:tmk_core/protocol/chibios/usb_main.c ****  * TODO: i guess it would be better to re-implement using timers,
 748:tmk_core/protocol/chibios/usb_main.c ****  *  so that this is not going to have to be checked every 1ms */
 749:tmk_core/protocol/chibios/usb_main.c **** void kbd_sof_cb(USBDriver *usbp) { (void)usbp; }
  57              		.loc 1 749 36 view .LVU6
 665:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
  58              		.loc 1 665 5 view .LVU7
  59              	.LBB280:
  60              	.LBI280:
  61              		.file 2 "./lib/chibios/os/hal/osal/rt-nil/osal.h"
   1:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*
   2:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   4:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     you may not use this file except in compliance with the License.
   6:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     You may obtain a copy of the License at
   7:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
   8:./lib/chibios/os/hal/osal/rt-nil/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  10:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     See the License for the specific language governing permissions and
  14:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     limitations under the License.
  15:./lib/chibios/os/hal/osal/rt-nil/osal.h **** */
  16:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  17:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  18:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @file    osal.h
  19:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module header.
  20:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
  21:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @addtogroup OSAL
  22:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  23:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  24:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  25:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifndef OSAL_H
  26:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_H
  27:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  28:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stddef.h>
  29:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdint.h>
  30:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include <stdbool.h>
  31:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  32:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #include "ch.h"
  33:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  34:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  35:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module constants.                                                         */
  36:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
  37:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  38:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  39:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Common constants
  40:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  41:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  42:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define FALSE                               0
  44:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  45:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  46:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TRUE                                1
  48:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  49:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  50:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_SUCCESS                        false
  51:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_FAILED                         true
  52:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  53:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  54:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  55:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  56:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Messages
  57:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  58:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  59:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_OK                              (msg_t)0
  60:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  63:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  64:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  65:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
  66:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  67:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Special time constants
  68:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  69:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  70:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  73:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
  74:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  75:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  76:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick modes.
  77:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  78:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  79:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
  83:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  84:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  85:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Systick parameters.
  86:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
  87:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  88:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  89:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  91:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  93:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  94:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Required systick frequency or resolution.
  95:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
  96:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
  98:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
  99:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 101:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 104:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 106:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 107:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 108:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 109:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module pre-compile time settings.                                         */
 110:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 111:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 112:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 113:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Derived constants and error checks.                                       */
 114:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 115:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 116:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:./lib/chibios/os/hal/osal/rt-nil/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 121:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 122:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 125:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 126:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 127:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module data structures and types.                                         */
 128:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 129:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 130:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 131:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 132:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a system status word.
 133:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 134:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t syssts_t;
 135:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 136:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 137:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 138:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 139:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a message.
 140:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 141:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef int32_t msg_t;
 142:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 143:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 144:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 145:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 146:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time counter.
 147:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 148:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t systime_t;
 149:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 150:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 151:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 152:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 153:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of system time interval.
 154:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 155:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t sysinterval_t;
 156:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 157:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 158:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 159:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 160:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of realtime counter.
 161:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 162:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t rtcnt_t;
 163:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 164:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 165:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 166:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 167:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread reference.
 168:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 169:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef thread_t * thread_reference_t;
 170:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 171:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 172:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 173:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 174:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags mask.
 175:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 176:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t eventflags_t;
 177:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 178:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 179:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 181:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event flags object.
 182:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 185:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 187:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 188:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct event_source event_source_t;
 189:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 190:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 191:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of an event source callback.
 192:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          exclusively as an example and for convenience.
 194:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 195:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 197:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 198:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Events source object.
 199:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          an entirely different way.
 202:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          API and are implementation-dependent.
 204:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 205:./lib/chibios/os/hal/osal/rt-nil/osal.h **** struct event_source {
 206:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:./lib/chibios/os/hal/osal/rt-nil/osal.h **** };
 210:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 212:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 213:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a mutex.
 214:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          mechanism can be simulated.
 216:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 217:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef semaphore_t mutex_t;
 220:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #else
 221:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef uint32_t mutex_t;
 222:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 223:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 224:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if 0
 225:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 226:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Type of a thread queue.
 227:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          can be dequeued one at time or all together.
 229:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          because there are no real threads.
 231:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 232:./lib/chibios/os/hal/osal/rt-nil/osal.h **** typedef struct {
 233:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   thread_reference_t    tr;
 234:./lib/chibios/os/hal/osal/rt-nil/osal.h **** } threads_queue_t;
 235:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 236:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 237:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 238:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module macros.                                                            */
 239:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 240:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 241:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 242:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Debug related macros
 243:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 244:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 245:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 246:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Condition assertion.
 247:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          message and halts.
 249:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          switch is enabled.
 251:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          comment in the code about the assertion.
 253:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 254:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] remark    a remark string
 256:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 257:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 258:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 259:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 261:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 262:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Function parameters check.
 263:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is enabled.
 266:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 267:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 269:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 270:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 271:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 273:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 274:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   I-Class state check.
 275:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 277:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 279:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 280:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   S-Class state check.
 281:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 283:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 285:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 286:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 287:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    IRQ service routines wrappers
 288:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 289:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 290:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 291:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Priority level verification macro.
 292:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 293:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 295:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 296:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ prologue code.
 297:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 299:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 301:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 302:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ epilogue code.
 303:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 305:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 307:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 308:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   IRQ handler function declaration.
 309:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 311:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 313:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 315:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 316:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 317:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities
 318:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 319:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 320:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 321:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to system ticks.
 322:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to system ticks number.
 323:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 325:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      number of seconds
 326:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 327:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 328:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 329:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 330:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 332:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 333:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to system ticks.
 334:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 337:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     number of milliseconds
 338:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 339:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 340:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 341:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 342:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 344:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 345:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to system ticks.
 346:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 349:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     number of microseconds
 350:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of ticks.
 351:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 352:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 353:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 354:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 356:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 357:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 358:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 360:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 361:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 362:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Seconds to realtime counter.
 363:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 366:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sec       number of seconds
 368:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 369:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 370:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 371:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 372:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 374:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 375:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 380:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msec      number of milliseconds
 382:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 383:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 384:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 385:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 386:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 388:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 389:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Microseconds to realtime counter.
 390:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 394:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usec      number of microseconds
 396:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The number of cycles.
 397:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 398:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 399:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 400:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 402:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 403:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 404:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @name    Sleep macros using absolute time
 405:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @{
 406:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 407:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 408:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 411:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 413:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 415:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 416:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 417:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 419:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 420:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          milliseconds.
 422:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 424:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 426:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 428:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 429:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 430:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 432:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 433:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          microseconds.
 435:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          system tick clock.
 437:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 439:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 441:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 442:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 443:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /** @} */
 445:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 446:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 447:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* External declarations.                                                    */
 448:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 449:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 450:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 451:./lib/chibios/os/hal/osal/rt-nil/osal.h **** extern "C" {
 452:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 453:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 454:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #ifdef __cplusplus
 455:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 456:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 457:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 458:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 459:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /* Module inline functions.                                                  */
 460:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /*===========================================================================*/
 461:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 462:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 463:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   OSAL module initialization.
 464:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 465:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 466:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 467:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalInit(void) {
 468:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 469:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 470:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 471:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 472:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   System halt with error message.
 473:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 474:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] reason    the halt message pointer
 475:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 476:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 477:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 478:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 480:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysHalt(reason);
 481:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 482:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 483:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 484:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Disables interrupts globally.
 485:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 486:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 487:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 488:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysDisable(void) {
 489:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 490:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysDisable();
 491:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 492:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 493:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 494:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enables interrupts globally.
 495:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 496:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 497:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 498:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysEnable(void) {
 499:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 500:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysEnable();
 501:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 502:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 503:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 504:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 507:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 508:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLock(void) {
 510:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLock();
 512:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 513:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 514:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 515:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 518:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 519:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlock(void) {
 521:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlock();
 523:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 524:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 525:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 526:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 529:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 530:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysLockFromISR(void) {
  62              		.loc 2 531 20 view .LVU8
  63              	.LBE280:
 532:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysLockFromISR();
  64              		.loc 2 533 3 view .LVU9
  65              	.LBB297:
  66              	.LBB281:
  67              	.LBI281:
  68              		.file 3 "./lib/chibios/os/rt/include/chsys.h"
   1:./lib/chibios/os/rt/include/chsys.h **** /*
   2:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chsys.h **** 
   4:./lib/chibios/os/rt/include/chsys.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chsys.h **** 
   6:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chsys.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chsys.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chsys.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chsys.h **** 
  11:./lib/chibios/os/rt/include/chsys.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chsys.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chsys.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chsys.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chsys.h **** 
  16:./lib/chibios/os/rt/include/chsys.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chsys.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chsys.h **** */
  19:./lib/chibios/os/rt/include/chsys.h **** 
  20:./lib/chibios/os/rt/include/chsys.h **** /**
  21:./lib/chibios/os/rt/include/chsys.h ****  * @file    rt/include/chsys.h
  22:./lib/chibios/os/rt/include/chsys.h ****  * @brief   System related macros and structures.
  23:./lib/chibios/os/rt/include/chsys.h ****  *
  24:./lib/chibios/os/rt/include/chsys.h ****  * @addtogroup system
  25:./lib/chibios/os/rt/include/chsys.h ****  * @{
  26:./lib/chibios/os/rt/include/chsys.h ****  */
  27:./lib/chibios/os/rt/include/chsys.h **** 
  28:./lib/chibios/os/rt/include/chsys.h **** #ifndef CHSYS_H
  29:./lib/chibios/os/rt/include/chsys.h **** #define CHSYS_H
  30:./lib/chibios/os/rt/include/chsys.h **** 
  31:./lib/chibios/os/rt/include/chsys.h **** /*lint -sem(chSysHalt, r_no)*/
  32:./lib/chibios/os/rt/include/chsys.h **** 
  33:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chsys.h **** /* Module constants.                                                         */
  35:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chsys.h **** 
  37:./lib/chibios/os/rt/include/chsys.h **** /**
  38:./lib/chibios/os/rt/include/chsys.h ****  * @name    Masks of executable integrity checks.
  39:./lib/chibios/os/rt/include/chsys.h ****  * @{
  40:./lib/chibios/os/rt/include/chsys.h ****  */
  41:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_RLIST                  1U
  42:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_VTLIST                 2U
  43:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_REGISTRY               4U
  44:./lib/chibios/os/rt/include/chsys.h **** #define CH_INTEGRITY_PORT                   8U
  45:./lib/chibios/os/rt/include/chsys.h **** /** @} */
  46:./lib/chibios/os/rt/include/chsys.h **** 
  47:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  48:./lib/chibios/os/rt/include/chsys.h **** /* Module pre-compile time settings.                                         */
  49:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  50:./lib/chibios/os/rt/include/chsys.h **** 
  51:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  52:./lib/chibios/os/rt/include/chsys.h **** /* Derived constants and error checks.                                       */
  53:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  54:./lib/chibios/os/rt/include/chsys.h **** 
  55:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  56:./lib/chibios/os/rt/include/chsys.h **** /* Module data structures and types.                                         */
  57:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  58:./lib/chibios/os/rt/include/chsys.h **** 
  59:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  60:./lib/chibios/os/rt/include/chsys.h **** /* Module macros.                                                            */
  61:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
  62:./lib/chibios/os/rt/include/chsys.h **** 
  63:./lib/chibios/os/rt/include/chsys.h **** /**
  64:./lib/chibios/os/rt/include/chsys.h ****  * @name    ISRs abstraction macros
  65:./lib/chibios/os/rt/include/chsys.h ****  */
  66:./lib/chibios/os/rt/include/chsys.h **** /**
  67:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  68:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  69:./lib/chibios/os/rt/include/chsys.h ****  *          level for the underlying architecture.
  70:./lib/chibios/os/rt/include/chsys.h ****  *
  71:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  72:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  73:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  74:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  75:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  76:./lib/chibios/os/rt/include/chsys.h ****  */
  77:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_PRIORITY) || defined(__DOXYGEN__)
  78:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio)                                      \
  79:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_PRIORITY(prio)
  80:./lib/chibios/os/rt/include/chsys.h **** #else
  81:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_PRIORITY(prio) false
  82:./lib/chibios/os/rt/include/chsys.h **** #endif
  83:./lib/chibios/os/rt/include/chsys.h **** 
  84:./lib/chibios/os/rt/include/chsys.h **** /**
  85:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Priority level validation macro.
  86:./lib/chibios/os/rt/include/chsys.h ****  * @details This macro determines if the passed value is a valid priority
  87:./lib/chibios/os/rt/include/chsys.h ****  *          level that cannot preempt the kernel critical zone.
  88:./lib/chibios/os/rt/include/chsys.h ****  *
  89:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] prio      the priority level
  90:./lib/chibios/os/rt/include/chsys.h ****  * @return              Priority range result.
  91:./lib/chibios/os/rt/include/chsys.h ****  * @retval false        if the priority is invalid or if the architecture
  92:./lib/chibios/os/rt/include/chsys.h ****  *                      does not support priorities.
  93:./lib/chibios/os/rt/include/chsys.h ****  * @retval true         if the priority is valid.
  94:./lib/chibios/os/rt/include/chsys.h ****  */
  95:./lib/chibios/os/rt/include/chsys.h **** #if defined(PORT_IRQ_IS_VALID_KERNEL_PRIORITY) || defined(__DOXYGEN__)
  96:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio)                               \
  97:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_IS_VALID_KERNEL_PRIORITY(prio)
  98:./lib/chibios/os/rt/include/chsys.h **** #else
  99:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_IS_VALID_KERNEL_PRIORITY(prio) false
 100:./lib/chibios/os/rt/include/chsys.h **** #endif
 101:./lib/chibios/os/rt/include/chsys.h **** 
 102:./lib/chibios/os/rt/include/chsys.h **** /**
 103:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler enter code.
 104:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers functions are also declared naked.
 105:./lib/chibios/os/rt/include/chsys.h ****  * @note    On some architectures this macro can be empty.
 106:./lib/chibios/os/rt/include/chsys.h ****  *
 107:./lib/chibios/os/rt/include/chsys.h ****  * @special
 108:./lib/chibios/os/rt/include/chsys.h ****  */
 109:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_PROLOGUE()                                                   \
 110:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_PROLOGUE();                                                      \
 111:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_PROLOGUE_HOOK();                                               \
 112:./lib/chibios/os/rt/include/chsys.h ****   _stats_increase_irq();                                                    \
 113:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_enter(__func__);                                               \
 114:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enter_isr()
 115:./lib/chibios/os/rt/include/chsys.h **** 
 116:./lib/chibios/os/rt/include/chsys.h **** /**
 117:./lib/chibios/os/rt/include/chsys.h ****  * @brief   IRQ handler exit code.
 118:./lib/chibios/os/rt/include/chsys.h ****  * @note    Usually IRQ handlers function are also declared naked.
 119:./lib/chibios/os/rt/include/chsys.h ****  * @note    This macro usually performs the final reschedule by using
 120:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSchIsPreemptionRequired() and @p chSchDoReschedule().
 121:./lib/chibios/os/rt/include/chsys.h ****  *
 122:./lib/chibios/os/rt/include/chsys.h ****  * @special
 123:./lib/chibios/os/rt/include/chsys.h ****  */
 124:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_EPILOGUE()                                                   \
 125:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_leave_isr();                                                   \
 126:./lib/chibios/os/rt/include/chsys.h ****   _trace_isr_leave(__func__);                                               \
 127:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_IRQ_EPILOGUE_HOOK();                                               \
 128:./lib/chibios/os/rt/include/chsys.h ****   PORT_IRQ_EPILOGUE()
 129:./lib/chibios/os/rt/include/chsys.h **** 
 130:./lib/chibios/os/rt/include/chsys.h **** /**
 131:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard normal IRQ handler declaration.
 132:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 133:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 134:./lib/chibios/os/rt/include/chsys.h ****  *
 135:./lib/chibios/os/rt/include/chsys.h ****  * @special
 136:./lib/chibios/os/rt/include/chsys.h ****  */
 137:./lib/chibios/os/rt/include/chsys.h **** #define CH_IRQ_HANDLER(id) PORT_IRQ_HANDLER(id)
 138:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 139:./lib/chibios/os/rt/include/chsys.h **** 
 140:./lib/chibios/os/rt/include/chsys.h **** /**
 141:./lib/chibios/os/rt/include/chsys.h ****  * @name    Fast ISRs abstraction macros
 142:./lib/chibios/os/rt/include/chsys.h ****  */
 143:./lib/chibios/os/rt/include/chsys.h **** /**
 144:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Standard fast IRQ handler declaration.
 145:./lib/chibios/os/rt/include/chsys.h ****  * @note    @p id can be a function name or a vector number depending on the
 146:./lib/chibios/os/rt/include/chsys.h ****  *          port implementation.
 147:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not all architectures support fast interrupts.
 148:./lib/chibios/os/rt/include/chsys.h ****  *
 149:./lib/chibios/os/rt/include/chsys.h ****  * @special
 150:./lib/chibios/os/rt/include/chsys.h ****  */
 151:./lib/chibios/os/rt/include/chsys.h **** #define CH_FAST_IRQ_HANDLER(id) PORT_FAST_IRQ_HANDLER(id)
 152:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 153:./lib/chibios/os/rt/include/chsys.h **** 
 154:./lib/chibios/os/rt/include/chsys.h **** /**
 155:./lib/chibios/os/rt/include/chsys.h ****  * @name    Time conversion utilities for the realtime counter
 156:./lib/chibios/os/rt/include/chsys.h ****  * @{
 157:./lib/chibios/os/rt/include/chsys.h ****  */
 158:./lib/chibios/os/rt/include/chsys.h **** /**
 159:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Seconds to realtime counter.
 160:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from seconds to realtime counter cycles.
 161:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 162:./lib/chibios/os/rt/include/chsys.h ****  *
 163:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 164:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] sec       number of seconds
 165:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 166:./lib/chibios/os/rt/include/chsys.h ****  *
 167:./lib/chibios/os/rt/include/chsys.h ****  * @api
 168:./lib/chibios/os/rt/include/chsys.h ****  */
 169:./lib/chibios/os/rt/include/chsys.h **** #define S2RTC(freq, sec) ((freq) * (sec))
 170:./lib/chibios/os/rt/include/chsys.h **** 
 171:./lib/chibios/os/rt/include/chsys.h **** /**
 172:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Milliseconds to realtime counter.
 173:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from milliseconds to realtime counter cycles.
 174:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 175:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 176:./lib/chibios/os/rt/include/chsys.h ****  *
 177:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 178:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] msec      number of milliseconds
 179:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 180:./lib/chibios/os/rt/include/chsys.h ****  *
 181:./lib/chibios/os/rt/include/chsys.h ****  * @api
 182:./lib/chibios/os/rt/include/chsys.h ****  */
 183:./lib/chibios/os/rt/include/chsys.h **** #define MS2RTC(freq, msec) (rtcnt_t)((((freq) + 999UL) / 1000UL) * (msec))
 184:./lib/chibios/os/rt/include/chsys.h **** 
 185:./lib/chibios/os/rt/include/chsys.h **** /**
 186:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Microseconds to realtime counter.
 187:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from microseconds to realtime counter cycles.
 188:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 189:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 190:./lib/chibios/os/rt/include/chsys.h ****  *
 191:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 192:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] usec      number of microseconds
 193:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of cycles.
 194:./lib/chibios/os/rt/include/chsys.h ****  *
 195:./lib/chibios/os/rt/include/chsys.h ****  * @api
 196:./lib/chibios/os/rt/include/chsys.h ****  */
 197:./lib/chibios/os/rt/include/chsys.h **** #define US2RTC(freq, usec) (rtcnt_t)((((freq) + 999999UL) / 1000000UL) * (usec))
 198:./lib/chibios/os/rt/include/chsys.h **** 
 199:./lib/chibios/os/rt/include/chsys.h **** /**
 200:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to seconds.
 201:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to seconds.
 202:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next second boundary.
 203:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1.
 204:./lib/chibios/os/rt/include/chsys.h ****  *
 205:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 206:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 207:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of seconds.
 208:./lib/chibios/os/rt/include/chsys.h ****  *
 209:./lib/chibios/os/rt/include/chsys.h ****  * @api
 210:./lib/chibios/os/rt/include/chsys.h ****  */
 211:./lib/chibios/os/rt/include/chsys.h **** #define RTC2S(freq, n) ((((n) - 1UL) / (freq)) + 1UL)
 212:./lib/chibios/os/rt/include/chsys.h **** 
 213:./lib/chibios/os/rt/include/chsys.h **** /**
 214:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to milliseconds.
 215:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to milliseconds.
 216:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next millisecond boundary.
 217:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 218:./lib/chibios/os/rt/include/chsys.h ****  *
 219:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 220:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 221:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of milliseconds.
 222:./lib/chibios/os/rt/include/chsys.h ****  *
 223:./lib/chibios/os/rt/include/chsys.h ****  * @api
 224:./lib/chibios/os/rt/include/chsys.h ****  */
 225:./lib/chibios/os/rt/include/chsys.h **** #define RTC2MS(freq, n) ((((n) - 1UL) / ((freq) / 1000UL)) + 1UL)
 226:./lib/chibios/os/rt/include/chsys.h **** 
 227:./lib/chibios/os/rt/include/chsys.h **** /**
 228:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Realtime counter cycles to microseconds.
 229:./lib/chibios/os/rt/include/chsys.h ****  * @details Converts from realtime counter cycles number to microseconds.
 230:./lib/chibios/os/rt/include/chsys.h ****  * @note    The result is rounded up to the next microsecond boundary.
 231:./lib/chibios/os/rt/include/chsys.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 232:./lib/chibios/os/rt/include/chsys.h ****  *
 233:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 234:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] n         number of cycles
 235:./lib/chibios/os/rt/include/chsys.h ****  * @return              The number of microseconds.
 236:./lib/chibios/os/rt/include/chsys.h ****  *
 237:./lib/chibios/os/rt/include/chsys.h ****  * @api
 238:./lib/chibios/os/rt/include/chsys.h ****  */
 239:./lib/chibios/os/rt/include/chsys.h **** #define RTC2US(freq, n) ((((n) - 1UL) / ((freq) / 1000000UL)) + 1UL)
 240:./lib/chibios/os/rt/include/chsys.h **** /** @} */
 241:./lib/chibios/os/rt/include/chsys.h **** 
 242:./lib/chibios/os/rt/include/chsys.h **** /**
 243:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Returns the current value of the system real time counter.
 244:./lib/chibios/os/rt/include/chsys.h ****  * @note    This function is only available if the port layer supports the
 245:./lib/chibios/os/rt/include/chsys.h ****  *          option @p PORT_SUPPORTS_RT.
 246:./lib/chibios/os/rt/include/chsys.h ****  *
 247:./lib/chibios/os/rt/include/chsys.h ****  * @return              The value of the system realtime counter of
 248:./lib/chibios/os/rt/include/chsys.h ****  *                      type rtcnt_t.
 249:./lib/chibios/os/rt/include/chsys.h ****  *
 250:./lib/chibios/os/rt/include/chsys.h ****  * @xclass
 251:./lib/chibios/os/rt/include/chsys.h ****  */
 252:./lib/chibios/os/rt/include/chsys.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 253:./lib/chibios/os/rt/include/chsys.h **** #define chSysGetRealtimeCounterX() (rtcnt_t)port_rt_get_counter_value()
 254:./lib/chibios/os/rt/include/chsys.h **** #endif
 255:./lib/chibios/os/rt/include/chsys.h **** 
 256:./lib/chibios/os/rt/include/chsys.h **** /**
 257:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Performs a context switch.
 258:./lib/chibios/os/rt/include/chsys.h ****  * @note    Not a user function, it is meant to be invoked by the scheduler
 259:./lib/chibios/os/rt/include/chsys.h ****  *          itself or from within the port layer.
 260:./lib/chibios/os/rt/include/chsys.h ****  *
 261:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] ntp       the thread to be switched in
 262:./lib/chibios/os/rt/include/chsys.h ****  * @param[in] otp       the thread to be switched out
 263:./lib/chibios/os/rt/include/chsys.h ****  *
 264:./lib/chibios/os/rt/include/chsys.h ****  * @special
 265:./lib/chibios/os/rt/include/chsys.h ****  */
 266:./lib/chibios/os/rt/include/chsys.h **** #define chSysSwitch(ntp, otp) {                                             \
 267:./lib/chibios/os/rt/include/chsys.h ****                                                                             \
 268:./lib/chibios/os/rt/include/chsys.h ****   _trace_switch(ntp, otp);                                                  \
 269:./lib/chibios/os/rt/include/chsys.h ****   _stats_ctxswc(ntp, otp);                                                  \
 270:./lib/chibios/os/rt/include/chsys.h ****   CH_CFG_CONTEXT_SWITCH_HOOK(ntp, otp);                                     \
 271:./lib/chibios/os/rt/include/chsys.h ****   port_switch(ntp, otp);                                                    \
 272:./lib/chibios/os/rt/include/chsys.h **** }
 273:./lib/chibios/os/rt/include/chsys.h **** 
 274:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 275:./lib/chibios/os/rt/include/chsys.h **** /* External declarations.                                                    */
 276:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 277:./lib/chibios/os/rt/include/chsys.h **** 
 278:./lib/chibios/os/rt/include/chsys.h **** #if !defined(__DOXYGEN__)
 279:./lib/chibios/os/rt/include/chsys.h **** extern stkalign_t ch_idle_thread_wa[];
 280:./lib/chibios/os/rt/include/chsys.h **** #endif
 281:./lib/chibios/os/rt/include/chsys.h **** 
 282:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 283:./lib/chibios/os/rt/include/chsys.h **** extern "C" {
 284:./lib/chibios/os/rt/include/chsys.h **** #endif
 285:./lib/chibios/os/rt/include/chsys.h ****   void chSysInit(void);
 286:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIntegrityCheckI(unsigned testmask);
 287:./lib/chibios/os/rt/include/chsys.h ****   void chSysTimerHandlerI(void);
 288:./lib/chibios/os/rt/include/chsys.h ****   syssts_t chSysGetStatusAndLockX(void);
 289:./lib/chibios/os/rt/include/chsys.h ****   void chSysRestoreStatusX(syssts_t sts);
 290:./lib/chibios/os/rt/include/chsys.h **** #if PORT_SUPPORTS_RT == TRUE
 291:./lib/chibios/os/rt/include/chsys.h ****   bool chSysIsCounterWithinX(rtcnt_t cnt, rtcnt_t start, rtcnt_t end);
 292:./lib/chibios/os/rt/include/chsys.h ****   void chSysPolledDelayX(rtcnt_t cycles);
 293:./lib/chibios/os/rt/include/chsys.h **** #endif
 294:./lib/chibios/os/rt/include/chsys.h **** #ifdef __cplusplus
 295:./lib/chibios/os/rt/include/chsys.h **** }
 296:./lib/chibios/os/rt/include/chsys.h **** #endif
 297:./lib/chibios/os/rt/include/chsys.h **** 
 298:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 299:./lib/chibios/os/rt/include/chsys.h **** /* Module inline functions.                                                  */
 300:./lib/chibios/os/rt/include/chsys.h **** /*===========================================================================*/
 301:./lib/chibios/os/rt/include/chsys.h **** 
 302:./lib/chibios/os/rt/include/chsys.h **** /**
 303:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to the maximum level.
 304:./lib/chibios/os/rt/include/chsys.h ****  * @details All the maskable interrupt sources are disabled regardless their
 305:./lib/chibios/os/rt/include/chsys.h ****  *          hardware priority.
 306:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 307:./lib/chibios/os/rt/include/chsys.h ****  *
 308:./lib/chibios/os/rt/include/chsys.h ****  * @special
 309:./lib/chibios/os/rt/include/chsys.h ****  */
 310:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysDisable(void) {
 311:./lib/chibios/os/rt/include/chsys.h **** 
 312:./lib/chibios/os/rt/include/chsys.h ****   port_disable();
 313:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_disable();
 314:./lib/chibios/os/rt/include/chsys.h **** }
 315:./lib/chibios/os/rt/include/chsys.h **** 
 316:./lib/chibios/os/rt/include/chsys.h **** /**
 317:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Raises the system interrupt priority mask to system level.
 318:./lib/chibios/os/rt/include/chsys.h ****  * @details The interrupt sources that should not be able to preempt the kernel
 319:./lib/chibios/os/rt/include/chsys.h ****  *          are disabled, interrupt sources with higher priority are still
 320:./lib/chibios/os/rt/include/chsys.h ****  *          enabled.
 321:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 322:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysLock(), the @p chSysLock()
 323:./lib/chibios/os/rt/include/chsys.h ****  *          could do more than just disable the interrupts.
 324:./lib/chibios/os/rt/include/chsys.h ****  *
 325:./lib/chibios/os/rt/include/chsys.h ****  * @special
 326:./lib/chibios/os/rt/include/chsys.h ****  */
 327:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysSuspend(void) {
 328:./lib/chibios/os/rt/include/chsys.h **** 
 329:./lib/chibios/os/rt/include/chsys.h ****   port_suspend();
 330:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_suspend();
 331:./lib/chibios/os/rt/include/chsys.h **** }
 332:./lib/chibios/os/rt/include/chsys.h **** 
 333:./lib/chibios/os/rt/include/chsys.h **** /**
 334:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Lowers the system interrupt priority mask to user level.
 335:./lib/chibios/os/rt/include/chsys.h ****  * @details All the interrupt sources are enabled.
 336:./lib/chibios/os/rt/include/chsys.h ****  * @note    Do not invoke this API from within a kernel lock.
 337:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API is no replacement for @p chSysUnlock(), the
 338:./lib/chibios/os/rt/include/chsys.h ****  *          @p chSysUnlock() could do more than just enable the interrupts.
 339:./lib/chibios/os/rt/include/chsys.h ****  *
 340:./lib/chibios/os/rt/include/chsys.h ****  * @special
 341:./lib/chibios/os/rt/include/chsys.h ****  */
 342:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysEnable(void) {
 343:./lib/chibios/os/rt/include/chsys.h **** 
 344:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_enable();
 345:./lib/chibios/os/rt/include/chsys.h ****   port_enable();
 346:./lib/chibios/os/rt/include/chsys.h **** }
 347:./lib/chibios/os/rt/include/chsys.h **** 
 348:./lib/chibios/os/rt/include/chsys.h **** /**
 349:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state.
 350:./lib/chibios/os/rt/include/chsys.h ****  *
 351:./lib/chibios/os/rt/include/chsys.h ****  * @special
 352:./lib/chibios/os/rt/include/chsys.h ****  */
 353:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLock(void) {
 354:./lib/chibios/os/rt/include/chsys.h **** 
 355:./lib/chibios/os/rt/include/chsys.h ****   port_lock();
 356:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 357:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 358:./lib/chibios/os/rt/include/chsys.h **** }
 359:./lib/chibios/os/rt/include/chsys.h **** 
 360:./lib/chibios/os/rt/include/chsys.h **** /**
 361:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state.
 362:./lib/chibios/os/rt/include/chsys.h ****  *
 363:./lib/chibios/os/rt/include/chsys.h ****  * @special
 364:./lib/chibios/os/rt/include/chsys.h ****  */
 365:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlock(void) {
 366:./lib/chibios/os/rt/include/chsys.h **** 
 367:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock();
 368:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 369:./lib/chibios/os/rt/include/chsys.h **** 
 370:./lib/chibios/os/rt/include/chsys.h ****   /* The following condition can be triggered by the use of i-class functions
 371:./lib/chibios/os/rt/include/chsys.h ****      in a critical section not followed by a chSchRescheduleS(), this means
 372:./lib/chibios/os/rt/include/chsys.h ****      that the current thread has a lower priority than the next thread in
 373:./lib/chibios/os/rt/include/chsys.h ****      the ready list.*/
 374:./lib/chibios/os/rt/include/chsys.h ****   chDbgAssert((ch.rlist.queue.next == (thread_t *)&ch.rlist.queue) ||
 375:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 376:./lib/chibios/os/rt/include/chsys.h ****               "priority order violation");
 377:./lib/chibios/os/rt/include/chsys.h **** 
 378:./lib/chibios/os/rt/include/chsys.h ****   port_unlock();
 379:./lib/chibios/os/rt/include/chsys.h **** }
 380:./lib/chibios/os/rt/include/chsys.h **** 
 381:./lib/chibios/os/rt/include/chsys.h **** /**
 382:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Enters the kernel lock state from within an interrupt handler.
 383:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 384:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 385:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 386:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 387:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API before invoking any I-class
 388:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 389:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 390:./lib/chibios/os/rt/include/chsys.h ****  *
 391:./lib/chibios/os/rt/include/chsys.h ****  * @special
 392:./lib/chibios/os/rt/include/chsys.h ****  */
 393:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysLockFromISR(void) {
  69              		.loc 3 393 20 view .LVU10
  70              	.LBE281:
  71              	.LBE297:
 394:./lib/chibios/os/rt/include/chsys.h **** 
 395:./lib/chibios/os/rt/include/chsys.h ****   port_lock_from_isr();
  72              		.loc 3 395 3 view .LVU11
  73              	.LBB298:
  74              	.LBB293:
  75              	.LBB282:
  76              	.LBI282:
  77              		.file 4 "./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h"
   1:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*
   2:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   4:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
   6:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     (at your option) any later version.
  10:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  11:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  16:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** */
  19:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  20:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  21:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @file    chcore_v7m.h
  22:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   ARMv7-M architecture port macros and structures.
  23:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
  24:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @addtogroup ARMCMx_V7M_CORE
  25:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  26:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  27:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  28:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifndef CHCORE_V7M_H
  29:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CHCORE_V7M_H
  30:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  31:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  32:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  34:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  35:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  36:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Port Capabilities and Constants
  37:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
  38:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  39:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  40:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   This port supports a realtime counter.
  41:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  42:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SUPPORTS_RT                TRUE
  43:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  44:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  45:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Natural alignment constant.
  46:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the minimum alignment for pointer-size variables.
  47:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  48:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_NATURAL_ALIGN              sizeof (void *)
  49:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  50:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  51:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack alignment constant.
  52:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment required for the stack pointer.
  53:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  54:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_STACK_ALIGN                sizeof (stkalign_t)
  55:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  56:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  57:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Working Areas alignment constant.
  58:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    It is the alignment to be enforced for thread working areas.
  59:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  60:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA_ALIGN         ((PORT_ENABLE_GUARD_PAGES == TRUE) ?\
  61:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                          32U : PORT_STACK_ALIGN)
  62:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
  63:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  64:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  65:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Disabled value for BASEPRI register.
  66:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  67:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_DISABLED         0U
  68:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  69:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  70:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module pre-compile time settings.                                         */
  71:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
  72:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  73:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  74:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Implements a syscall interface on SVC.
  75:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  76:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_SYSCALL) || defined(__DOXYGEN__)
  77:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_SYSCALL                FALSE
  78:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  79:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  80:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  81:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Number of MPU regions to be saved/restored during context switch.
  82:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The first region is always region zero.
  83:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 8 bytes for each
  84:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          region for each thread.
  85:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Allowed values are 0..4, zero means none.
  86:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  87:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_SWITCHED_REGIONS_NUMBER) || defined(__DOXYGEN__)
  88:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SWITCHED_REGIONS_NUMBER    0
  89:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
  90:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  91:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
  92:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables stack overflow guard pages using MPU.
  93:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This option can only be enabled if also option
  94:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CH_DBG_ENABLE_STACK_CHECK is enabled.
  95:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The use of this option has an overhead of 32 bytes for each
  96:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          thread.
  97:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
  98:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_ENABLE_GUARD_PAGES) || defined(__DOXYGEN__)
  99:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ENABLE_GUARD_PAGES         FALSE
 100:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 101:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 102:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 103:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU region to be used to stack guards.
 104:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Make sure this region is not included in the
 105:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p PORT_SWITCHED_REGIONS_NUMBER regions range.
 106:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 107:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_USE_GUARD_MPU_REGION) || defined(__DOXYGEN__)
 108:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_USE_GUARD_MPU_REGION       MPU_REGION_7
 109:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 110:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 111:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 112:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Stack size for the system idle thread.
 113:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This size depends on the idle thread implementation, usually
 114:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          the idle thread should take no more space than those reserved
 115:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 116:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port it is set to 16 because the idle thread does have
 117:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          a stack frame when compiling without optimizations. You may
 118:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          reduce this value to zero when compiling with optimizations.
 119:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 120:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 121:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IDLE_THREAD_STACK_SIZE     16
 122:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 123:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 124:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 125:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 126:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This constant is used in the calculation of the correct working
 127:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          area size.
 128:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    In this port this value is conservatively set to 64 because the
 129:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          function @p chSchDoReschedule() can have a stack frame, especially
 130:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          with compiler optimizations disabled. The value can be reduced
 131:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          when compiler optimizations are enabled.
 132:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 133:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 134:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INT_REQUIRED_STACK         64
 135:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 136:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 137:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 138:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Enables the use of the WFI instruction in the idle thread loop.
 139:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 140:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_ENABLE_WFI_IDLE)
 141:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_ENABLE_WFI_IDLE          FALSE
 142:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 143:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 144:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 145:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   FPU support in context switch.
 146:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option activates the FPU support in the kernel.
 147:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 148:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_USE_FPU)
 149:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_USE_FPU                  CORTEX_HAS_FPU
 150:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_USE_FPU == TRUE) && (CORTEX_HAS_FPU == FALSE)
 151:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* This setting requires an FPU presence check in case it is externally
 152:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    redefined.*/
 153:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "the selected core does not have an FPU"
 154:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 155:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 156:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 157:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Simplified priority handling flag.
 158:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details Activating this option makes the Kernel work in compact mode.
 159:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          In compact mode interrupts are disabled globally instead of
 160:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          raising the priority mask to some intermediate level.
 161:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 162:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_SIMPLIFIED_PRIORITY)
 163:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_SIMPLIFIED_PRIORITY      FALSE
 164:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 165:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 166:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 167:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   SVCALL handler priority.
 168:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The default SVCALL handler priority is defaulted to
 169:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY+1, this reserves the
 170:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAXIMUM_PRIORITY priority level as fast interrupts
 171:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority level.
 172:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 173:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIORITY_SVCALL)
 174:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_SVCALL          (CORTEX_MAXIMUM_PRIORITY + 1U)
 175:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif !PORT_IRQ_IS_VALID_PRIORITY(CORTEX_PRIORITY_SVCALL)
 176:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* If it is externally redefined then better perform a validity check on it.*/
 177:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid priority level specified for CORTEX_PRIORITY_SVCALL"
 178:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 179:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 180:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 181:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   NVIC PRIGROUP initialization expression.
 182:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details The default assigns all available priority bits as preemption
 183:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          priority with no sub-priority.
 184:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 185:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(CORTEX_PRIGROUP_INIT) || defined(__DOXYGEN__)
 186:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIGROUP_INIT            (7 - CORTEX_PRIORITY_BITS)
 187:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 188:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 189:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 190:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Derived constants and error checks.                                       */
 191:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 192:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 193:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER < 0) || (PORT_SWITCHED_REGIONS_NUMBER > 4)
 194:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #error "invalid PORT_SWITCHED_REGIONS_NUMBER value"
 195:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 196:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 197:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 198:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 199:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   MPU guard page size.
 200:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 201:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == TRUE) || defined(__DOXYGEN__)
 202:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_DBG_ENABLE_STACK_CHECK == FALSE
 203:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "PORT_ENABLE_GUARD_PAGES requires CH_DBG_ENABLE_STACK_CHECK"
 204:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 205:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if __MPU_PRESENT == 0
 206:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "MPU not present in current device"
 207:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 208:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          32U
 209:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 210:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_GUARD_PAGE_SIZE          0U
 211:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 212:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(_FROM_ASM_) */
 213:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 214:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 215:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @name    Architecture and Compiler
 216:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @{
 217:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 218:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_MODEL == 3) || defined(__DOXYGEN__)
 219:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 220:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM3)
 221:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM3 not defined"
 222:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 223:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 224:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM3 == FALSE
 225:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M3 port not licensed"
 226:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 227:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 228:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 229:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Macro defining the specific ARM architecture.
 230:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 231:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7M
 232:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 233:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 234:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the implemented architecture.
 235:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 236:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_NAME          "ARMv7-M"
 237:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 238:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 239:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Name of the architecture variant.
 240:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 241:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 242:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3"
 243:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 244:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_CORE_VARIANT_NAME        "Cortex-M3 (MPU)"
 245:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 246:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 247:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 4)
 248:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 249:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM4)
 250:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM4 not defined"
 251:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 252:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 253:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM4 == FALSE
 254:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #error "ChibiOS Cortex-M4 port not licensed"
 255:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 256:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 257:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_ARM_v7ME
 258:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 259:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 260:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 261:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F"
 262:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 263:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4F (MPU)"
 264:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 265:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 266:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 267:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4"
 268:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 269:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M4 (MPU)"
 270:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 271:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 272:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 273:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (CORTEX_MODEL == 7)
 274:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 275:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if !defined(CH_CUSTOMER_LIC_PORT_CM7)
 276:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "CH_CUSTOMER_LIC_PORT_CM7 not defined"
 277:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 278:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 279:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CH_CUSTOMER_LIC_PORT_CM7 == FALSE
 280:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #error "ChibiOS Cortex-M7 port not licensed"
 281:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 282:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 283:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_ARCHITECTURE_ARM_v7ME
 284:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #define PORT_ARCHITECTURE_NAME        "ARMv7E-M"
 285:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #if CORTEX_USE_FPU
 286:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 287:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F"
 288:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 289:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7F (MPU)"
 290:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 291:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #else
 292:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #if PORT_ENABLE_GUARD_PAGES == FALSE
 293:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7"
 294:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #else
 295:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****       #define PORT_CORE_VARIANT_NAME    "Cortex-M7 (MPU)"
 296:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     #endif
 297:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   #endif
 298:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 299:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 300:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 301:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Port-specific information string.
 302:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 303:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 304:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Advanced kernel mode"
 305:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 306:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_INFO                       "Compact kernel mode"
 307:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 308:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /** @} */
 309:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 310:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CORTEX_SIMPLIFIED_PRIORITY == FALSE) || defined(__DOXYGEN__)
 311:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 312:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Maximum usable priority for normal ISRs.
 313:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 314:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      (CORTEX_PRIORITY_SVCALL + 1U)
 315:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 316:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 317:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   BASEPRI level within kernel lock.
 318:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 319:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_BASEPRI_KERNEL                                               \
 320:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   CORTEX_PRIO_MASK(CORTEX_MAX_KERNEL_PRIORITY)
 321:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 322:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 323:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_MAX_KERNEL_PRIORITY      0U
 324:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 325:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 326:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 327:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   PendSV priority level.
 328:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    This priority is enforced to be equal to
 329:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          @p CORTEX_MAX_KERNEL_PRIORITY, this handler always have the
 330:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          highest priority that cannot preempt the kernel.
 331:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 332:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define CORTEX_PRIORITY_PENDSV          CORTEX_MAX_KERNEL_PRIORITY
 333:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 334:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 335:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module data structures and types.                                         */
 336:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 337:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 338:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The following code is not processed when the file is included from an
 339:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    asm module.*/
 340:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(_FROM_ASM_)
 341:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 342:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* The documentation of the following declarations is in chconf.h in order
 343:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****    to not have duplicated structure names into the documentation.*/
 344:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if !defined(__DOXYGEN__)
 345:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_extctx {
 346:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r0;
 347:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r1;
 348:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r2;
 349:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r3;
 350:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r12;
 351:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr_thd;
 352:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      pc;
 353:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      xpsr;
 354:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 355:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s0;
 356:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s1;
 357:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s2;
 358:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s3;
 359:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s4;
 360:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s5;
 361:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s6;
 362:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s7;
 363:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s8;
 364:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s9;
 365:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s10;
 366:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s11;
 367:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s12;
 368:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s13;
 369:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s14;
 370:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s15;
 371:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      fpscr;
 372:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      reserved;
 373:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 374:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 375:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 376:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 377:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 378:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Link context structure.
 379:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This structure is used when there is the need to save extra
 380:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          context information that is not part of the registers stacked
 381:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          in HW.
 382:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 383:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_linkctx {
 384:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t              control;
 385:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_extctx    *ectxp;
 386:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 387:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 388:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 389:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_intctx {
 390:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER > 0) || defined(__DOXYGEN__)
 391:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 392:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rbar;
 393:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t    rasr;
 394:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } regions[PORT_SWITCHED_REGIONS_NUMBER];
 395:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 396:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_USE_FPU
 397:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s16;
 398:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s17;
 399:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s18;
 400:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s19;
 401:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s20;
 402:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s21;
 403:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s22;
 404:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s23;
 405:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s24;
 406:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s25;
 407:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s26;
 408:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s27;
 409:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s28;
 410:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s29;
 411:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s30;
 412:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      s31;
 413:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_USE_FPU */
 414:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r4;
 415:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r5;
 416:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r6;
 417:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r7;
 418:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r8;
 419:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r9;
 420:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r10;
 421:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      r11;
 422:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   uint32_t      lr;
 423:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 424:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 425:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** struct port_context {
 426:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx    *sp;
 427:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 428:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct {
 429:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     uint32_t            psp;
 430:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     const void          *p;
 431:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   } syscall;
 432:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 433:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** };
 434:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* !defined(__DOXYGEN__) */
 435:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 436:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 437:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module macros.                                                            */
 438:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 439:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 440:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have no syscall context information.*/
 441:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_USE_SYSCALL == TRUE) || defined(__DOXYGEN__)
 442:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)                              \
 443:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.psp = (uint32_t)(wtop);                                 \
 444:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.syscall.p   = NULL;
 445:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 446:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop)
 447:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 448:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 449:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* By default threads have all regions disabled.*/
 450:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_SWITCHED_REGIONS_NUMBER == 0) || defined(__DOXYGEN__)
 451:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)
 452:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 1) || defined(__DOXYGEN__)
 453:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 454:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 455:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U
 456:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 2) || defined(__DOXYGEN__)
 457:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 458:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 459:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 460:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 461:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U
 462:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 3) || defined(__DOXYGEN__)
 463:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 464:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 465:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 466:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 467:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 468:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 469:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U
 470:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #elif (PORT_SWITCHED_REGIONS_NUMBER == 4) || defined(__DOXYGEN__)
 471:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define __PORT_SETUP_CONTEXT_MPU(tp)                                        \
 472:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rbar  = 0U;                                      \
 473:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[0].rasr  = 0U;                                      \
 474:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rbar  = 0U;                                      \
 475:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[1].rasr  = 0U;                                      \
 476:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rbar  = 0U;                                      \
 477:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[2].rasr  = 0U;                                      \
 478:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rbar  = 0U;                                      \
 479:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->regions[3].rasr  = 0U
 480:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 481:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 482:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 483:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 484:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 485:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This code usually setup the context switching frame represented
 486:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          by an @p port_intctx structure.
 487:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 488:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 489:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                 \
 490:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                         sizeof (struct port_intctx));       \
 491:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r4 = (uint32_t)(pf);                                        \
 492:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->r5 = (uint32_t)(arg);                                       \
 493:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   (tp)->ctx.sp->lr = (uint32_t)_port_thread_start;                          \
 494:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_MPU(tp);                                             \
 495:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __PORT_SETUP_CONTEXT_SYSCALL(tp, wtop);                                   \
 496:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 497:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 498:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** //  __PORT_SETUP_CONTEXT_MPU(tp)
 499:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 500:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 501:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Computes the thread working area global size.
 502:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    There is no need to perform alignments in this macro.
 503:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 504:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WA_SIZE(n) ((size_t)PORT_GUARD_PAGE_SIZE +                     \
 505:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_intctx) +                      \
 506:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          sizeof (struct port_extctx) +                      \
 507:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)(n) +                                      \
 508:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                          (size_t)PORT_INT_REQUIRED_STACK)
 509:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 510:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 511:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Static working area allocation.
 512:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro is used to allocate a static thread working area
 513:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          aligned as both position and size.
 514:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 515:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] s         the name to be assigned to the stack array
 516:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] n         the stack size to be assigned to the thread
 517:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 518:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (PORT_ENABLE_GUARD_PAGES == FALSE) || defined(__DOXYGEN__)
 519:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 520:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 521:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 522:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_WORKING_AREA(s, n)                                             \
 523:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   ALIGNED_VAR(32) stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 524:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 525:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 526:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 527:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ prologue code.
 528:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 529:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 530:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 531:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_PROLOGUE()
 532:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 533:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 534:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ epilogue code.
 535:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 536:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          enabled to invoke system APIs.
 537:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 538:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_EPILOGUE() _port_irq_epilogue()
 539:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 540:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 541:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   IRQ handler function declaration.
 542:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 543:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 544:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 545:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 546:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) extern "C" void id(void)
 547:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 548:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_IRQ_HANDLER(id) void id(void)
 549:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 550:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 551:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 552:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Fast IRQ handler function declaration.
 553:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    @p id can be a function name or a vector number depending on the
 554:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          port implementation.
 555:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 556:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 557:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) extern "C" void id(void)
 558:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 559:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define PORT_FAST_IRQ_HANDLER(id) void id(void)
 560:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 561:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 562:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 563:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Performs a context switch between two threads.
 564:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details This is the most critical code in any port, this function
 565:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          is responsible for the context switch between 2 threads.
 566:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 567:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          switch performance so optimize here as much as you can.
 568:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 569:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] ntp       the thread to be switched in
 570:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] otp       the thread to be switched out
 571:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 572:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if (CH_DBG_ENABLE_STACK_CHECK == FALSE) || defined(__DOXYGEN__)
 573:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) _port_switch(ntp, otp)
 574:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 575:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_ENABLE_GUARD_PAGES == FALSE
 576:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 577:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   struct port_intctx *r13 = (struct port_intctx *)__get_PSP();              \
 578:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   if ((stkalign_t *)(r13 - 1) < (otp)->wabase) {                            \
 579:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****     chSysHalt("stack overflow");                                            \
 580:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   }                                                                         \
 581:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 582:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 583:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else
 584:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #define port_switch(ntp, otp) {                                             \
 585:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   _port_switch(ntp, otp);                                                   \
 586:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                                                                             \
 587:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   /* Setting up the guard page for the switched-in thread.*/                \
 588:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   mpuSetRegionAddress(PORT_USE_GUARD_MPU_REGION,                            \
 589:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****                       chThdGetSelfX()->wabase);                             \
 590:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 591:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 592:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 593:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 594:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 595:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* External declarations.                                                    */
 596:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 597:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 598:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 599:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** extern "C" {
 600:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 601:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_init(void);
 602:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_irq_epilogue(void);
 603:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 604:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_thread_start(void);
 605:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_switch_from_isr(void);
 606:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void _port_exit_from_isr(void);
 607:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if PORT_USE_SYSCALL == TRUE
 608:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   void port_unprivileged_jump(uint32_t pc, uint32_t psp);
 609:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 610:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #ifdef __cplusplus
 611:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 612:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 613:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 614:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 615:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /* Module inline functions.                                                  */
 616:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /*===========================================================================*/
 617:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 618:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 619:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Returns a word encoding the current interrupts status.
 620:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 621:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupts status.
 622:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 623:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE syssts_t port_get_irq_status(void) {
 624:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   syssts_t sts;
 625:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 626:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 627:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_BASEPRI();
 628:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 629:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   sts = (syssts_t)__get_PRIMASK();
 630:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 631:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts;
 632:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 633:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 634:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 635:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Checks the interrupt status.
 636:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 637:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @param[in] sts       the interrupt status word
 638:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 639:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The interrupt status.
 640:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        the word specified a disabled interrupts status.
 641:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         the word specified an enabled interrupts status.
 642:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 643:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_irq_enabled(syssts_t sts) {
 644:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 645:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 646:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return sts == (syssts_t)CORTEX_BASEPRI_DISABLED;
 647:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 648:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (sts & (syssts_t)1) == (syssts_t)0;
 649:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 650:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 651:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 652:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 653:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Determines the current execution context.
 654:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *
 655:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @return              The execution context.
 656:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval false        not running in ISR mode.
 657:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @retval true         running in ISR mode.
 658:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 659:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE bool port_is_isr_context(void) {
 660:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 661:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   return (bool)((__get_IPSR() & 0x1FFU) != 0U);
 662:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 663:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 664:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 665:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action.
 666:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 667:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 668:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock(void) {
 670:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 671:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 672:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 673:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 674:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 675:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 676:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_KERNEL);
 678:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 679:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if __CM7_REV <= 1
 680:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 681:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 682:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif
 683:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 684:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __disable_irq();
 685:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 686:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 687:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 688:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 689:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action.
 690:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 691:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 692:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock(void) {
 694:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 695:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if CORTEX_SIMPLIFIED_PRIORITY == FALSE
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __set_BASEPRI(CORTEX_BASEPRI_DISABLED);
 697:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 698:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   __enable_irq();
 699:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #endif /* CORTEX_SIMPLIFIED_PRIORITY */
 700:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 701:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 702:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 703:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-lock action from an interrupt handler.
 704:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function raises the base priority to kernel
 705:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 706:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_lock() in this port.
 707:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_lock_from_isr(void) {
  78              		.loc 4 708 27 view .LVU12
  79              	.LBE282:
  80              	.LBE293:
  81              	.LBE298:
 709:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_lock();
  82              		.loc 4 710 3 view .LVU13
  83              	.LBB299:
  84              	.LBB294:
  85              	.LBB290:
  86              	.LBB283:
  87              	.LBI283:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
  88              		.loc 4 669 27 view .LVU14
  89              	.LBE283:
  90              	.LBE290:
  91              	.LBE294:
  92              	.LBE299:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
  93              		.loc 4 677 3 view .LVU15
  94              	.LBB300:
  95              	.LBB295:
  96              	.LBB291:
  97              	.LBB288:
  98              	.LBB284:
  99              	.LBI284:
 100              		.file 5 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h"
   1:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
  52:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 166:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 223:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 337:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 101              		.loc 5 491 27 view .LVU16
 102              	.LBB285:
 492:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 103              		.loc 5 493 3 view .LVU17
 104              	.LBE285:
 105              	.LBE284:
 106              	.LBE288:
 107              	.LBE291:
 108              	.LBE295:
 109              	.LBE300:
 663:tmk_core/protocol/chibios/usb_main.c ****     kbd_sof_cb(usbp);
 110              		.loc 1 663 41 is_stmt 0 view .LVU18
 111 0000 10B5     		push	{r4, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 14, -4
 115              	.LBB301:
 116              	.LBB296:
 117              	.LBB292:
 118              	.LBB289:
 119              	.LBB287:
 120              	.LBB286:
 121              		.loc 5 493 3 view .LVU19
 122 0002 2023     		movs	r3, #32
 123              		.syntax unified
 124              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 125 0004 83F31188 		MSR basepri, r3
 126              	@ 0 "" 2
 127              	.LVL2:
 128              		.loc 5 493 3 view .LVU20
 129              		.thumb
 130              		.syntax unified
 131              	.LBE286:
 132              	.LBE287:
 133              	.LBE289:
 134              	.LBE292:
 135              	.LBE296:
 136              	.LBE301:
 396:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 137              		.loc 3 396 34 is_stmt 1 view .LVU21
 397:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 138              		.loc 3 397 29 view .LVU22
 666:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 139              		.loc 1 666 5 view .LVU23
 140              	.LBB302:
 666:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 141              		.loc 1 666 10 view .LVU24
 666:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 142              		.loc 1 666 21 view .LVU25
 667:tmk_core/protocol/chibios/usb_main.c ****     }
 143              		.loc 1 667 9 view .LVU26
 144 0008 064C     		ldr	r4, .L3
 145 000a 04F1D400 		add	r0, r4, #212
 146              	.LVL3:
 667:tmk_core/protocol/chibios/usb_main.c ****     }
 147              		.loc 1 667 9 is_stmt 0 view .LVU27
 148 000e FFF7FEFF 		bl	qmkusbSOFHookI
 149              	.LVL4:
 666:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 150              		.loc 1 666 42 is_stmt 1 view .LVU28
 666:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 151              		.loc 1 666 21 view .LVU29
 667:tmk_core/protocol/chibios/usb_main.c ****     }
 152              		.loc 1 667 9 view .LVU30
 153 0012 04F50A70 		add	r0, r4, #552
 154 0016 FFF7FEFF 		bl	qmkusbSOFHookI
 155              	.LVL5:
 666:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 156              		.loc 1 666 42 view .LVU31
 666:tmk_core/protocol/chibios/usb_main.c ****         qmkusbSOFHookI(&drivers.array[i].driver);
 157              		.loc 1 666 21 view .LVU32
 158              	.LBE302:
 669:tmk_core/protocol/chibios/usb_main.c **** }
 159              		.loc 1 669 5 view .LVU33
 160              	.LBB303:
 161              	.LBI303:
 534:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 535:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 536:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 537:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 540:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @special
 541:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysUnlockFromISR(void) {
 162              		.loc 2 542 20 view .LVU34
 163              	.LBE303:
 543:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 544:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysUnlockFromISR();
 164              		.loc 2 544 3 view .LVU35
 165              	.LBB315:
 166              	.LBB304:
 167              	.LBI304:
 398:./lib/chibios/os/rt/include/chsys.h **** }
 399:./lib/chibios/os/rt/include/chsys.h **** 
 400:./lib/chibios/os/rt/include/chsys.h **** /**
 401:./lib/chibios/os/rt/include/chsys.h ****  * @brief   Leaves the kernel lock state from within an interrupt handler.
 402:./lib/chibios/os/rt/include/chsys.h ****  *
 403:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API may do nothing on some architectures, it is required
 404:./lib/chibios/os/rt/include/chsys.h ****  *          because on ports that support preemptable interrupt handlers
 405:./lib/chibios/os/rt/include/chsys.h ****  *          it is required to raise the interrupt mask to the same level of
 406:./lib/chibios/os/rt/include/chsys.h ****  *          the system mutual exclusion zone.<br>
 407:./lib/chibios/os/rt/include/chsys.h ****  *          It is good practice to invoke this API after invoking any I-class
 408:./lib/chibios/os/rt/include/chsys.h ****  *          syscall from an interrupt handler.
 409:./lib/chibios/os/rt/include/chsys.h ****  * @note    This API must be invoked exclusively from interrupt handlers.
 410:./lib/chibios/os/rt/include/chsys.h ****  *
 411:./lib/chibios/os/rt/include/chsys.h ****  * @special
 412:./lib/chibios/os/rt/include/chsys.h ****  */
 413:./lib/chibios/os/rt/include/chsys.h **** static inline void chSysUnlockFromISR(void) {
 168              		.loc 3 413 20 view .LVU36
 169              	.LBE304:
 170              	.LBE315:
 414:./lib/chibios/os/rt/include/chsys.h **** 
 415:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_unlock_from_isr();
 171              		.loc 3 415 31 view .LVU37
 416:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 172              		.loc 3 416 33 view .LVU38
 417:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 173              		.loc 3 417 3 view .LVU39
 174              	.LBB316:
 175              	.LBB312:
 176              	.LBB305:
 177              	.LBI305:
 711:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 712:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 713:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** /**
 714:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @brief   Kernel-unlock action from an interrupt handler.
 715:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @details In this port this function lowers the base priority to user
 716:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  *          level.
 717:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  * @note    Same as @p port_unlock() in this port.
 718:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****  */
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** __STATIC_FORCEINLINE void port_unlock_from_isr(void) {
 178              		.loc 4 719 27 view .LVU40
 179              	.LBE305:
 180              	.LBE312:
 181              	.LBE316:
 720:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 721:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h ****   port_unlock();
 182              		.loc 4 721 3 view .LVU41
 183              	.LBB317:
 184              	.LBB313:
 185              	.LBB310:
 186              	.LBB306:
 187              	.LBI306:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 188              		.loc 4 693 27 view .LVU42
 189              	.LBE306:
 190              	.LBE310:
 191              	.LBE313:
 192              	.LBE317:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 193              		.loc 4 696 3 view .LVU43
 194              	.LBB318:
 195              	.LBB314:
 196              	.LBB311:
 197              	.LBB309:
 198              	.LBB307:
 199              	.LBI307:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 200              		.loc 5 491 27 view .LVU44
 201              	.LBB308:
 202              		.loc 5 493 3 view .LVU45
 203 001a 0023     		movs	r3, #0
 204              		.syntax unified
 205              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 206 001c 83F31188 		MSR basepri, r3
 207              	@ 0 "" 2
 208              	.LVL6:
 209              		.loc 5 493 3 is_stmt 0 view .LVU46
 210              		.thumb
 211              		.syntax unified
 212              	.LBE308:
 213              	.LBE307:
 214              	.LBE309:
 215              	.LBE311:
 216              	.LBE314:
 217              	.LBE318:
 670:tmk_core/protocol/chibios/usb_main.c **** 
 218              		.loc 1 670 1 view .LVU47
 219 0020 10BD     		pop	{r4, pc}
 220              	.L4:
 221 0022 00BF     		.align	2
 222              	.L3:
 223 0024 00000000 		.word	.LANCHOR0
 224              		.cfi_endproc
 225              	.LFE292:
 227              		.section	.text.usb_get_descriptor_cb,"ax",%progbits
 228              		.align	1
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	usb_get_descriptor_cb:
 235              	.LVL7:
 236              	.LFB281:
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 237              		.loc 1 101 116 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 102:tmk_core/protocol/chibios/usb_main.c ****     static USBDescriptor desc;
 241              		.loc 1 102 5 view .LVU49
 103:tmk_core/protocol/chibios/usb_main.c ****     uint16_t             wValue = ((uint16_t)dtype << 8) | dindex;
 242              		.loc 1 103 5 view .LVU50
 104:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_string              = NULL;
 243              		.loc 1 104 5 view .LVU51
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 244              		.loc 1 101 116 is_stmt 0 view .LVU52
 245 0000 38B5     		push	{r3, r4, r5, lr}
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 3, -16
 248              		.cfi_offset 4, -12
 249              		.cfi_offset 5, -8
 250              		.cfi_offset 14, -4
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 251              		.loc 1 105 33 view .LVU53
 252 0002 094C     		ldr	r4, .L9
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 253              		.loc 1 101 116 view .LVU54
 254 0004 1046     		mov	r0, r2
 255              	.LVL8:
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 256              		.loc 1 105 33 view .LVU55
 257 0006 2246     		mov	r2, r4
 258              	.LVL9:
 101:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 259              		.loc 1 101 116 view .LVU56
 260 0008 0D46     		mov	r5, r1
 261              	.LVL10:
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 262              		.loc 1 105 5 is_stmt 1 view .LVU57
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 263              		.loc 1 105 33 is_stmt 0 view .LVU58
 264 000a 0021     		movs	r1, #0
 265              	.LVL11:
 105:tmk_core/protocol/chibios/usb_main.c ****     desc.ud_size                = get_usb_descriptor(wValue, wIndex, (const void **const) & desc.ud
 266              		.loc 1 105 33 view .LVU59
 267 000c 42F8041F 		str	r1, [r2, #4]!
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 268              		.loc 1 106 5 is_stmt 1 view .LVU60
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 269              		.loc 1 106 35 is_stmt 0 view .LVU61
 270 0010 40EA0520 		orr	r0, r0, r5, lsl #8
 271              	.LVL12:
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 272              		.loc 1 106 35 view .LVU62
 273 0014 1946     		mov	r1, r3
 274 0016 FFF7FEFF 		bl	get_usb_descriptor
 275              	.LVL13:
 106:tmk_core/protocol/chibios/usb_main.c ****     if (desc.ud_string == NULL)
 276              		.loc 1 106 35 view .LVU63
 277 001a 2060     		str	r0, [r4]
 107:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
 278              		.loc 1 107 5 is_stmt 1 view .LVU64
 107:tmk_core/protocol/chibios/usb_main.c ****         return NULL;
 279              		.loc 1 107 13 is_stmt 0 view .LVU65
 280 001c 6068     		ldr	r0, [r4, #4]
 110:tmk_core/protocol/chibios/usb_main.c **** }
 281              		.loc 1 110 16 view .LVU66
 282 001e 0028     		cmp	r0, #0
 111:tmk_core/protocol/chibios/usb_main.c **** 
 283              		.loc 1 111 1 view .LVU67
 284 0020 18BF     		it	ne
 285 0022 2046     		movne	r0, r4
 286 0024 38BD     		pop	{r3, r4, r5, pc}
 287              	.L10:
 111:tmk_core/protocol/chibios/usb_main.c **** 
 288              		.loc 1 111 1 view .LVU68
 289 0026 00BF     		.align	2
 290              	.L9:
 291 0028 00000000 		.word	.LANCHOR1
 292              		.cfi_endproc
 293              	.LFE281:
 295              		.section	.text.set_led_transfer_cb,"ax",%progbits
 296              		.align	1
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	set_led_transfer_cb:
 303              	.LVL14:
 304              	.LFB290:
 529:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 305              		.loc 1 529 53 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 530:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 310              		.loc 1 530 5 view .LVU70
 530:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 311              		.loc 1 530 8 is_stmt 0 view .LVU71
 312 0000 90F87A10 		ldrb	r1, [r0, #122]	@ zero_extendqisi2
 313              	.LBB322:
 314              	.LBB323:
 531:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 315              		.loc 1 531 17 view .LVU72
 316 0004 074A     		ldr	r2, .L14
 317              	.LBE323:
 318              	.LBE322:
 530:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 319              		.loc 1 530 8 view .LVU73
 320 0006 0229     		cmp	r1, #2
 321              	.LBB326:
 322              	.LBB324:
 531:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 323              		.loc 1 531 17 view .LVU74
 324 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 325              	.LBE324:
 326              	.LBE326:
 530:tmk_core/protocol/chibios/usb_main.c ****         uint8_t report_id = set_report_buf[0];
 327              		.loc 1 530 8 view .LVU75
 328 000a 07D1     		bne	.L12
 329              	.LBB327:
 330              	.LBI322:
 529:tmk_core/protocol/chibios/usb_main.c ****     if (usbp->setup[6] == 2) { /* LSB(wLength) */
 331              		.loc 1 529 16 is_stmt 1 view .LVU76
 332              	.LVL15:
 333              	.LBB325:
 531:tmk_core/protocol/chibios/usb_main.c ****         if ((report_id == REPORT_ID_KEYBOARD) || (report_id == REPORT_ID_NKRO)) {
 334              		.loc 1 531 9 view .LVU77
 532:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_state = set_report_buf[1];
 335              		.loc 1 532 9 view .LVU78
 532:tmk_core/protocol/chibios/usb_main.c ****             keyboard_led_state = set_report_buf[1];
 336              		.loc 1 532 12 is_stmt 0 view .LVU79
 337 000c 03F0FB03 		and	r3, r3, #251
 338 0010 012B     		cmp	r3, #1
 339 0012 05D1     		bne	.L11
 533:tmk_core/protocol/chibios/usb_main.c ****         }
 340              		.loc 1 533 13 is_stmt 1 view .LVU80
 533:tmk_core/protocol/chibios/usb_main.c ****         }
 341              		.loc 1 533 32 is_stmt 0 view .LVU81
 342 0014 044B     		ldr	r3, .L14+4
 343 0016 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 344 0018 1A70     		strb	r2, [r3]
 345 001a 7047     		bx	lr
 346              	.LVL16:
 347              	.L12:
 533:tmk_core/protocol/chibios/usb_main.c ****         }
 348              		.loc 1 533 32 view .LVU82
 349              	.LBE325:
 350              	.LBE327:
 536:tmk_core/protocol/chibios/usb_main.c ****     }
 351              		.loc 1 536 9 is_stmt 1 view .LVU83
 536:tmk_core/protocol/chibios/usb_main.c ****     }
 352              		.loc 1 536 28 is_stmt 0 view .LVU84
 353 001c 024A     		ldr	r2, .L14+4
 354 001e 1370     		strb	r3, [r2]
 355              	.L11:
 538:tmk_core/protocol/chibios/usb_main.c **** 
 356              		.loc 1 538 1 view .LVU85
 357 0020 7047     		bx	lr
 358              	.L15:
 359 0022 00BF     		.align	2
 360              	.L14:
 361 0024 00000000 		.word	.LANCHOR2
 362 0028 00000000 		.word	.LANCHOR3
 363              		.cfi_endproc
 364              	.LFE290:
 366              		.section	.text.send_extra,"ax",%progbits
 367              		.align	1
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu fpv4-sp-d16
 373              	send_extra:
 374              	.LVL17:
 375              	.LFB302:
 750:tmk_core/protocol/chibios/usb_main.c **** 
 751:tmk_core/protocol/chibios/usb_main.c **** /* Idle requests timer code
 752:tmk_core/protocol/chibios/usb_main.c ****  * callback (called from ISR, unlocked state) */
 753:tmk_core/protocol/chibios/usb_main.c **** static void keyboard_idle_timer_cb(void *arg) {
 754:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 755:tmk_core/protocol/chibios/usb_main.c **** 
 756:tmk_core/protocol/chibios/usb_main.c ****     osalSysLockFromISR();
 757:tmk_core/protocol/chibios/usb_main.c **** 
 758:tmk_core/protocol/chibios/usb_main.c ****     /* check that the states of things are as they're supposed to */
 759:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(usbp) != USB_ACTIVE) {
 760:tmk_core/protocol/chibios/usb_main.c ****         /* do not rearm the timer, should be enabled on IDLE request */
 761:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlockFromISR();
 762:tmk_core/protocol/chibios/usb_main.c ****         return;
 763:tmk_core/protocol/chibios/usb_main.c ****     }
 764:tmk_core/protocol/chibios/usb_main.c **** 
 765:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 766:tmk_core/protocol/chibios/usb_main.c ****     if (!keymap_config.nkro && keyboard_idle && keyboard_protocol) {
 767:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 768:tmk_core/protocol/chibios/usb_main.c ****     if (keyboard_idle && keyboard_protocol) {
 769:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 770:tmk_core/protocol/chibios/usb_main.c ****         /* TODO: are we sure we want the KBD_ENDPOINT? */
 771:tmk_core/protocol/chibios/usb_main.c ****         if (!usbGetTransmitStatusI(usbp, KEYBOARD_IN_EPNUM)) {
 772:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 773:tmk_core/protocol/chibios/usb_main.c ****         }
 774:tmk_core/protocol/chibios/usb_main.c ****         /* rearm the timer */
 775:tmk_core/protocol/chibios/usb_main.c ****         chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboard_idle_timer_cb, (void 
 776:tmk_core/protocol/chibios/usb_main.c ****     }
 777:tmk_core/protocol/chibios/usb_main.c **** 
 778:tmk_core/protocol/chibios/usb_main.c ****     /* do not rearm the timer if the condition above fails
 779:tmk_core/protocol/chibios/usb_main.c ****      * it should be enabled again on either IDLE or SET_PROTOCOL requests */
 780:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlockFromISR();
 781:tmk_core/protocol/chibios/usb_main.c **** }
 782:tmk_core/protocol/chibios/usb_main.c **** 
 783:tmk_core/protocol/chibios/usb_main.c **** /* LED status */
 784:tmk_core/protocol/chibios/usb_main.c **** uint8_t keyboard_leds(void) { return keyboard_led_state; }
 785:tmk_core/protocol/chibios/usb_main.c **** 
 786:tmk_core/protocol/chibios/usb_main.c **** /* prepare and start sending a report IN
 787:tmk_core/protocol/chibios/usb_main.c ****  * not callable from ISR or locked state */
 788:tmk_core/protocol/chibios/usb_main.c **** void send_keyboard(report_keyboard_t *report) {
 789:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 790:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 791:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 792:tmk_core/protocol/chibios/usb_main.c ****     }
 793:tmk_core/protocol/chibios/usb_main.c **** 
 794:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 795:tmk_core/protocol/chibios/usb_main.c ****     if (keymap_config.nkro && keyboard_protocol) { /* NKRO protocol */
 796:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 797:tmk_core/protocol/chibios/usb_main.c ****         /* can rewrite this using the synchronous API, then would wait
 798:tmk_core/protocol/chibios/usb_main.c ****          * until *after* the packet has been transmitted. I think
 799:tmk_core/protocol/chibios/usb_main.c ****          * this is more efficient */
 800:tmk_core/protocol/chibios/usb_main.c ****         /* busy wait, should be short and not very common */
 801:tmk_core/protocol/chibios/usb_main.c ****         if (usbGetTransmitStatusI(&USB_DRIVER, SHARED_IN_EPNUM)) {
 802:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 803:tmk_core/protocol/chibios/usb_main.c ****              * every iteration - otherwise the system will remain locked,
 804:tmk_core/protocol/chibios/usb_main.c ****              * no interrupts served, so USB not going through as well.
 805:tmk_core/protocol/chibios/usb_main.c ****              * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 806:tmk_core/protocol/chibios/usb_main.c ****             osalThreadSuspendS(&(&USB_DRIVER)->epc[SHARED_IN_EPNUM]->in_state->thread);
 807:tmk_core/protocol/chibios/usb_main.c **** 
 808:tmk_core/protocol/chibios/usb_main.c ****             /* after osalThreadSuspendS returns USB status might have changed */
 809:tmk_core/protocol/chibios/usb_main.c ****             if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 810:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 811:tmk_core/protocol/chibios/usb_main.c ****             }
 812:tmk_core/protocol/chibios/usb_main.c ****         }
 813:tmk_core/protocol/chibios/usb_main.c ****         usbStartTransmitI(&USB_DRIVER, SHARED_IN_EPNUM, (uint8_t *)report, sizeof(struct nkro_repor
 814:tmk_core/protocol/chibios/usb_main.c ****     } else
 815:tmk_core/protocol/chibios/usb_main.c **** #endif /* NKRO_ENABLE */
 816:tmk_core/protocol/chibios/usb_main.c ****     {  /* regular protocol */
 817:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 818:tmk_core/protocol/chibios/usb_main.c ****         /* busy wait, should be short and not very common */
 819:tmk_core/protocol/chibios/usb_main.c ****         if (usbGetTransmitStatusI(&USB_DRIVER, KEYBOARD_IN_EPNUM)) {
 820:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 821:tmk_core/protocol/chibios/usb_main.c ****              * every iteration - otherwise the system will remain locked,
 822:tmk_core/protocol/chibios/usb_main.c ****              * no interrupts served, so USB not going through as well.
 823:tmk_core/protocol/chibios/usb_main.c ****              * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 824:tmk_core/protocol/chibios/usb_main.c ****             osalThreadSuspendS(&(&USB_DRIVER)->epc[KEYBOARD_IN_EPNUM]->in_state->thread);
 825:tmk_core/protocol/chibios/usb_main.c **** 
 826:tmk_core/protocol/chibios/usb_main.c ****             /* after osalThreadSuspendS returns USB status might have changed */
 827:tmk_core/protocol/chibios/usb_main.c ****             if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 828:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 829:tmk_core/protocol/chibios/usb_main.c ****             }
 830:tmk_core/protocol/chibios/usb_main.c ****         }
 831:tmk_core/protocol/chibios/usb_main.c ****         uint8_t *data, size;
 832:tmk_core/protocol/chibios/usb_main.c ****         if (keyboard_protocol) {
 833:tmk_core/protocol/chibios/usb_main.c ****             data = (uint8_t *)report;
 834:tmk_core/protocol/chibios/usb_main.c ****             size = KEYBOARD_REPORT_SIZE;
 835:tmk_core/protocol/chibios/usb_main.c ****         } else { /* boot protocol */
 836:tmk_core/protocol/chibios/usb_main.c ****             data = &report->mods;
 837:tmk_core/protocol/chibios/usb_main.c ****             size = 8;
 838:tmk_core/protocol/chibios/usb_main.c ****         }
 839:tmk_core/protocol/chibios/usb_main.c ****         usbStartTransmitI(&USB_DRIVER, KEYBOARD_IN_EPNUM, data, size);
 840:tmk_core/protocol/chibios/usb_main.c ****     }
 841:tmk_core/protocol/chibios/usb_main.c ****     keyboard_report_sent = *report;
 842:tmk_core/protocol/chibios/usb_main.c **** 
 843:tmk_core/protocol/chibios/usb_main.c **** unlock:
 844:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 845:tmk_core/protocol/chibios/usb_main.c **** }
 846:tmk_core/protocol/chibios/usb_main.c **** 
 847:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 848:tmk_core/protocol/chibios/usb_main.c ****  *                     Mouse functions
 849:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 850:tmk_core/protocol/chibios/usb_main.c ****  */
 851:tmk_core/protocol/chibios/usb_main.c **** 
 852:tmk_core/protocol/chibios/usb_main.c **** #ifdef MOUSE_ENABLE
 853:tmk_core/protocol/chibios/usb_main.c **** 
 854:tmk_core/protocol/chibios/usb_main.c **** #    ifndef MOUSE_SHARED_EP
 855:tmk_core/protocol/chibios/usb_main.c **** /* mouse IN callback hander (a mouse report has made it IN) */
 856:tmk_core/protocol/chibios/usb_main.c **** void mouse_in_cb(USBDriver *usbp, usbep_t ep) {
 857:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 858:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
 859:tmk_core/protocol/chibios/usb_main.c **** }
 860:tmk_core/protocol/chibios/usb_main.c **** #    endif
 861:tmk_core/protocol/chibios/usb_main.c **** 
 862:tmk_core/protocol/chibios/usb_main.c **** void send_mouse(report_mouse_t *report) {
 863:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 864:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 865:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 866:tmk_core/protocol/chibios/usb_main.c ****         return;
 867:tmk_core/protocol/chibios/usb_main.c ****     }
 868:tmk_core/protocol/chibios/usb_main.c **** 
 869:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetTransmitStatusI(&USB_DRIVER, MOUSE_IN_EPNUM)) {
 870:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 871:tmk_core/protocol/chibios/usb_main.c ****          * every iteration - otherwise the system will remain locked,
 872:tmk_core/protocol/chibios/usb_main.c ****          * no interrupts served, so USB not going through as well.
 873:tmk_core/protocol/chibios/usb_main.c ****          * Note: for suspend, need USB_USE_WAIT == TRUE in halconf.h */
 874:tmk_core/protocol/chibios/usb_main.c ****         if (osalThreadSuspendTimeoutS(&(&USB_DRIVER)->epc[MOUSE_IN_EPNUM]->in_state->thread, TIME_M
 875:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 876:tmk_core/protocol/chibios/usb_main.c ****             return;
 877:tmk_core/protocol/chibios/usb_main.c ****         }
 878:tmk_core/protocol/chibios/usb_main.c ****     }
 879:tmk_core/protocol/chibios/usb_main.c ****     usbStartTransmitI(&USB_DRIVER, MOUSE_IN_EPNUM, (uint8_t *)report, sizeof(report_mouse_t));
 880:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 881:tmk_core/protocol/chibios/usb_main.c **** }
 882:tmk_core/protocol/chibios/usb_main.c **** 
 883:tmk_core/protocol/chibios/usb_main.c **** #else  /* MOUSE_ENABLE */
 884:tmk_core/protocol/chibios/usb_main.c **** void send_mouse(report_mouse_t *report) { (void)report; }
 885:tmk_core/protocol/chibios/usb_main.c **** #endif /* MOUSE_ENABLE */
 886:tmk_core/protocol/chibios/usb_main.c **** 
 887:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 888:tmk_core/protocol/chibios/usb_main.c ****  *                   Shared EP functions
 889:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 890:tmk_core/protocol/chibios/usb_main.c ****  */
 891:tmk_core/protocol/chibios/usb_main.c **** #ifdef SHARED_EP_ENABLE
 892:tmk_core/protocol/chibios/usb_main.c **** /* shared IN callback hander */
 893:tmk_core/protocol/chibios/usb_main.c **** void shared_in_cb(USBDriver *usbp, usbep_t ep) {
 894:tmk_core/protocol/chibios/usb_main.c ****     /* STUB */
 895:tmk_core/protocol/chibios/usb_main.c ****     (void)usbp;
 896:tmk_core/protocol/chibios/usb_main.c ****     (void)ep;
 897:tmk_core/protocol/chibios/usb_main.c **** }
 898:tmk_core/protocol/chibios/usb_main.c **** #endif
 899:tmk_core/protocol/chibios/usb_main.c **** 
 900:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 901:tmk_core/protocol/chibios/usb_main.c ****  *                   Extrakey functions
 902:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 903:tmk_core/protocol/chibios/usb_main.c ****  */
 904:tmk_core/protocol/chibios/usb_main.c **** 
 905:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 906:tmk_core/protocol/chibios/usb_main.c **** static void send_extra(uint8_t report_id, uint16_t data) {
 376              		.loc 1 906 58 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 907:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 380              		.loc 1 907 5 view .LVU87
 381              	.LBB359:
 382              	.LBI359:
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 383              		.loc 2 509 20 view .LVU88
 384              	.LBE359:
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 385              		.loc 2 511 3 view .LVU89
 386              	.LBB371:
 387              	.LBB360:
 388              	.LBI360:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 389              		.loc 3 353 20 view .LVU90
 390              	.LBE360:
 391              	.LBE371:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 392              		.loc 3 355 3 view .LVU91
 393              	.LBB372:
 394              	.LBB368:
 395              	.LBB361:
 396              	.LBI361:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 397              		.loc 4 669 27 view .LVU92
 398              	.LBE361:
 399              	.LBE368:
 400              	.LBE372:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 401              		.loc 4 677 3 view .LVU93
 402              	.LBB373:
 403              	.LBB369:
 404              	.LBB366:
 405              	.LBB362:
 406              	.LBI362:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 407              		.loc 5 491 27 view .LVU94
 408              	.LBB363:
 409              		.loc 5 493 3 view .LVU95
 410              	.LBE363:
 411              	.LBE362:
 412              	.LBE366:
 413              	.LBE369:
 414              	.LBE373:
 906:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 415              		.loc 1 906 58 is_stmt 0 view .LVU96
 416 0000 38B5     		push	{r3, r4, r5, lr}
 417              		.cfi_def_cfa_offset 16
 418              		.cfi_offset 3, -16
 419              		.cfi_offset 4, -12
 420              		.cfi_offset 5, -8
 421              		.cfi_offset 14, -4
 422              	.LBB374:
 423              	.LBB370:
 424              	.LBB367:
 425              	.LBB365:
 426              	.LBB364:
 427              		.loc 5 493 3 view .LVU97
 428 0002 2023     		movs	r3, #32
 429              		.syntax unified
 430              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 431 0004 83F31188 		MSR basepri, r3
 432              	@ 0 "" 2
 433              	.LVL18:
 434              		.loc 5 493 3 view .LVU98
 435              		.thumb
 436              		.syntax unified
 437              	.LBE364:
 438              	.LBE365:
 439              	.LBE367:
 440              	.LBE370:
 441              	.LBE374:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 442              		.loc 3 356 34 is_stmt 1 view .LVU99
 357:./lib/chibios/os/rt/include/chsys.h **** }
 443              		.loc 3 357 20 view .LVU100
 908:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 444              		.loc 1 908 5 view .LVU101
 445              		.loc 1 908 9 is_stmt 0 view .LVU102
 446 0008 084C     		ldr	r4, .L20
 447              		.loc 1 908 8 view .LVU103
 448 000a 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 449 000c 042D     		cmp	r5, #4
 450 000e 03D0     		beq	.L17
 451              	.LVL19:
 452              	.L19:
 453              	.LBB375:
 454              	.LBB376:
 909:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 910:tmk_core/protocol/chibios/usb_main.c ****         return;
 911:tmk_core/protocol/chibios/usb_main.c ****     }
 912:tmk_core/protocol/chibios/usb_main.c **** 
 913:tmk_core/protocol/chibios/usb_main.c ****     static report_extra_t report;
 914:tmk_core/protocol/chibios/usb_main.c ****     report = (report_extra_t){.report_id = report_id, .usage = data};
 915:tmk_core/protocol/chibios/usb_main.c **** 
 916:tmk_core/protocol/chibios/usb_main.c ****     usbStartTransmitI(&USB_DRIVER, SHARED_IN_EPNUM, (uint8_t *)&report, sizeof(report_extra_t));
 917:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 455              		.loc 1 917 5 is_stmt 1 view .LVU104
 456              	.LBB377:
 457              	.LBI377:
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 458              		.loc 2 520 20 view .LVU105
 459              	.LBE377:
 460              	.LBE376:
 461              	.LBE375:
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 462              		.loc 2 522 3 view .LVU106
 463              	.LBB391:
 464              	.LBB388:
 465              	.LBB386:
 466              	.LBB378:
 467              	.LBI378:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 468              		.loc 3 365 20 view .LVU107
 469              	.LBB379:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 470              		.loc 3 367 22 view .LVU108
 368:./lib/chibios/os/rt/include/chsys.h **** 
 471              		.loc 3 368 33 view .LVU109
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 472              		.loc 3 374 3 view .LVU110
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 473              		.loc 3 374 3 view .LVU111
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 474              		.loc 3 374 3 view .LVU112
 378:./lib/chibios/os/rt/include/chsys.h **** }
 475              		.loc 3 378 3 view .LVU113
 476              	.LBB380:
 477              	.LBI380:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 478              		.loc 4 693 27 view .LVU114
 479              	.LBE380:
 480              	.LBE379:
 481              	.LBE378:
 482              	.LBE386:
 483              	.LBE388:
 484              	.LBE391:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 485              		.loc 4 696 3 view .LVU115
 486              	.LBB392:
 487              	.LBB389:
 488              	.LBB387:
 489              	.LBB385:
 490              	.LBB384:
 491              	.LBB383:
 492              	.LBB381:
 493              	.LBI381:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 494              		.loc 5 491 27 view .LVU116
 495              	.LBB382:
 496              		.loc 5 493 3 view .LVU117
 497 0010 0023     		movs	r3, #0
 498              		.syntax unified
 499              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 500 0012 83F31188 		MSR basepri, r3
 501              	@ 0 "" 2
 502              	.LVL20:
 503              		.loc 5 493 3 is_stmt 0 view .LVU118
 504              		.thumb
 505              		.syntax unified
 506              	.LBE382:
 507              	.LBE381:
 508              	.LBE383:
 509              	.LBE384:
 510              	.LBE385:
 511              	.LBE387:
 512              	.LBE389:
 513              	.LBE392:
 918:tmk_core/protocol/chibios/usb_main.c **** }
 514              		.loc 1 918 1 view .LVU119
 515 0016 38BD     		pop	{r3, r4, r5, pc}
 516              	.LVL21:
 517              	.L17:
 518              	.LBB393:
 519              	.LBI375:
 906:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 520              		.loc 1 906 13 is_stmt 1 view .LVU120
 521              	.LBB390:
 913:tmk_core/protocol/chibios/usb_main.c ****     report = (report_extra_t){.report_id = report_id, .usage = data};
 522              		.loc 1 913 5 view .LVU121
 914:tmk_core/protocol/chibios/usb_main.c **** 
 523              		.loc 1 914 5 view .LVU122
 914:tmk_core/protocol/chibios/usb_main.c **** 
 524              		.loc 1 914 12 is_stmt 0 view .LVU123
 525 0018 054A     		ldr	r2, .L20+4
 916:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 526              		.loc 1 916 5 view .LVU124
 527 001a 0323     		movs	r3, #3
 914:tmk_core/protocol/chibios/usb_main.c **** 
 528              		.loc 1 914 12 view .LVU125
 529 001c 1070     		strb	r0, [r2]
 530 001e A2F80110 		strh	r1, [r2, #1]	@ unaligned
 916:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 531              		.loc 1 916 5 is_stmt 1 view .LVU126
 532 0022 2046     		mov	r0, r4
 533              	.LVL22:
 916:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 534              		.loc 1 916 5 is_stmt 0 view .LVU127
 535 0024 2946     		mov	r1, r5
 536              	.LVL23:
 916:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 537              		.loc 1 916 5 view .LVU128
 538 0026 FFF7FEFF 		bl	usbStartTransmitI
 539              	.LVL24:
 916:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 540              		.loc 1 916 5 view .LVU129
 541 002a F1E7     		b	.L19
 542              	.L21:
 543              		.align	2
 544              	.L20:
 545 002c 00000000 		.word	USBD1
 546 0030 00000000 		.word	.LANCHOR4
 547              	.LBE390:
 548              	.LBE393:
 549              		.cfi_endproc
 550              	.LFE302:
 552              		.section	.text.chVTSetI.constprop.0,"ax",%progbits
 553              		.align	1
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu fpv4-sp-d16
 559              	chVTSetI.constprop.0:
 560              	.LVL25:
 561              	.LFB319:
 562              		.file 6 "./lib/chibios/os/rt/include/chvt.h"
   1:./lib/chibios/os/rt/include/chvt.h **** /*
   2:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:./lib/chibios/os/rt/include/chvt.h **** 
   4:./lib/chibios/os/rt/include/chvt.h ****     This file is part of ChibiOS.
   5:./lib/chibios/os/rt/include/chvt.h **** 
   6:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:./lib/chibios/os/rt/include/chvt.h ****     it under the terms of the GNU General Public License as published by
   8:./lib/chibios/os/rt/include/chvt.h ****     the Free Software Foundation; either version 3 of the License, or
   9:./lib/chibios/os/rt/include/chvt.h ****     (at your option) any later version.
  10:./lib/chibios/os/rt/include/chvt.h **** 
  11:./lib/chibios/os/rt/include/chvt.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:./lib/chibios/os/rt/include/chvt.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./lib/chibios/os/rt/include/chvt.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./lib/chibios/os/rt/include/chvt.h ****     GNU General Public License for more details.
  15:./lib/chibios/os/rt/include/chvt.h **** 
  16:./lib/chibios/os/rt/include/chvt.h ****     You should have received a copy of the GNU General Public License
  17:./lib/chibios/os/rt/include/chvt.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:./lib/chibios/os/rt/include/chvt.h **** */
  19:./lib/chibios/os/rt/include/chvt.h **** 
  20:./lib/chibios/os/rt/include/chvt.h **** /**
  21:./lib/chibios/os/rt/include/chvt.h ****  * @file    rt/include/chvt.h
  22:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Time and Virtual Timers module macros and structures.
  23:./lib/chibios/os/rt/include/chvt.h ****  *
  24:./lib/chibios/os/rt/include/chvt.h ****  * @addtogroup time
  25:./lib/chibios/os/rt/include/chvt.h ****  * @{
  26:./lib/chibios/os/rt/include/chvt.h ****  */
  27:./lib/chibios/os/rt/include/chvt.h **** 
  28:./lib/chibios/os/rt/include/chvt.h **** #ifndef CHVT_H
  29:./lib/chibios/os/rt/include/chvt.h **** #define CHVT_H
  30:./lib/chibios/os/rt/include/chvt.h **** 
  31:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  32:./lib/chibios/os/rt/include/chvt.h **** /* Module constants.                                                         */
  33:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  34:./lib/chibios/os/rt/include/chvt.h **** 
  35:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  36:./lib/chibios/os/rt/include/chvt.h **** /* Module pre-compile time settings.                                         */
  37:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  38:./lib/chibios/os/rt/include/chvt.h **** 
  39:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  40:./lib/chibios/os/rt/include/chvt.h **** /* Derived constants and error checks.                                       */
  41:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  42:./lib/chibios/os/rt/include/chvt.h **** 
  43:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA < 0) || (CH_CFG_ST_TIMEDELTA == 1)
  44:./lib/chibios/os/rt/include/chvt.h **** #error "invalid CH_CFG_ST_TIMEDELTA specified, must "                       \
  45:./lib/chibios/os/rt/include/chvt.h ****        "be zero or greater than one"
  46:./lib/chibios/os/rt/include/chvt.h **** #endif
  47:./lib/chibios/os/rt/include/chvt.h **** 
  48:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_CFG_TIME_QUANTUM > 0)
  49:./lib/chibios/os/rt/include/chvt.h **** #error "CH_CFG_TIME_QUANTUM not supported in tickless mode"
  50:./lib/chibios/os/rt/include/chvt.h **** #endif
  51:./lib/chibios/os/rt/include/chvt.h **** 
  52:./lib/chibios/os/rt/include/chvt.h **** #if (CH_CFG_ST_TIMEDELTA > 0) && (CH_DBG_THREADS_PROFILING == TRUE)
  53:./lib/chibios/os/rt/include/chvt.h **** #error "CH_DBG_THREADS_PROFILING not supported in tickless mode"
  54:./lib/chibios/os/rt/include/chvt.h **** #endif
  55:./lib/chibios/os/rt/include/chvt.h **** 
  56:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  57:./lib/chibios/os/rt/include/chvt.h **** /* Module data structures and types.                                         */
  58:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  59:./lib/chibios/os/rt/include/chvt.h **** 
  60:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  61:./lib/chibios/os/rt/include/chvt.h **** /* Module macros.                                                            */
  62:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  63:./lib/chibios/os/rt/include/chvt.h **** 
  64:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  65:./lib/chibios/os/rt/include/chvt.h **** /* External declarations.                                                    */
  66:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  67:./lib/chibios/os/rt/include/chvt.h **** 
  68:./lib/chibios/os/rt/include/chvt.h **** /*
  69:./lib/chibios/os/rt/include/chvt.h ****  * Virtual Timers APIs.
  70:./lib/chibios/os/rt/include/chvt.h ****  */
  71:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  72:./lib/chibios/os/rt/include/chvt.h **** extern "C" {
  73:./lib/chibios/os/rt/include/chvt.h **** #endif
  74:./lib/chibios/os/rt/include/chvt.h ****   void _vt_init(void);
  75:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoSetI(virtual_timer_t *vtp, sysinterval_t delay,
  76:./lib/chibios/os/rt/include/chvt.h ****                   vtfunc_t vtfunc, void *par);
  77:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoResetI(virtual_timer_t *vtp);
  78:./lib/chibios/os/rt/include/chvt.h ****   void chVTDoTickI(void);
  79:./lib/chibios/os/rt/include/chvt.h **** #ifdef __cplusplus
  80:./lib/chibios/os/rt/include/chvt.h **** }
  81:./lib/chibios/os/rt/include/chvt.h **** #endif
  82:./lib/chibios/os/rt/include/chvt.h **** 
  83:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  84:./lib/chibios/os/rt/include/chvt.h **** /* Module inline functions.                                                  */
  85:./lib/chibios/os/rt/include/chvt.h **** /*===========================================================================*/
  86:./lib/chibios/os/rt/include/chvt.h **** 
  87:./lib/chibios/os/rt/include/chvt.h **** /**
  88:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Initializes a @p virtual_timer_t object.
  89:./lib/chibios/os/rt/include/chvt.h ****  * @note    Initializing a timer object is not strictly required because
  90:./lib/chibios/os/rt/include/chvt.h ****  *          the function @p chVTSetI() initializes the object too. This
  91:./lib/chibios/os/rt/include/chvt.h ****  *          function is only useful if you need to perform a @p chVTIsArmed()
  92:./lib/chibios/os/rt/include/chvt.h ****  *          check before calling @p chVTSetI().
  93:./lib/chibios/os/rt/include/chvt.h ****  *
  94:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] vtp      the @p virtual_timer_t structure pointer
  95:./lib/chibios/os/rt/include/chvt.h ****  *
  96:./lib/chibios/os/rt/include/chvt.h ****  * @init
  97:./lib/chibios/os/rt/include/chvt.h ****  */
  98:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTObjectInit(virtual_timer_t *vtp) {
  99:./lib/chibios/os/rt/include/chvt.h **** 
 100:./lib/chibios/os/rt/include/chvt.h ****   vtp->func = NULL;
 101:./lib/chibios/os/rt/include/chvt.h **** }
 102:./lib/chibios/os/rt/include/chvt.h **** 
 103:./lib/chibios/os/rt/include/chvt.h **** /**
 104:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 105:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 106:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 107:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 108:./lib/chibios/os/rt/include/chvt.h ****  * @note    This function can be called from any context but its atomicity
 109:./lib/chibios/os/rt/include/chvt.h ****  *          is not guaranteed on architectures whose word size is less than
 110:./lib/chibios/os/rt/include/chvt.h ****  *          @p systime_t size.
 111:./lib/chibios/os/rt/include/chvt.h ****  *
 112:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 113:./lib/chibios/os/rt/include/chvt.h ****  *
 114:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 115:./lib/chibios/os/rt/include/chvt.h ****  */
 116:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTimeX(void) {
 117:./lib/chibios/os/rt/include/chvt.h **** 
 118:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 119:./lib/chibios/os/rt/include/chvt.h ****   return ch.vtlist.systime;
 120:./lib/chibios/os/rt/include/chvt.h **** #else /* CH_CFG_ST_TIMEDELTA > 0 */
 121:./lib/chibios/os/rt/include/chvt.h ****   return port_timer_get_time();
 122:./lib/chibios/os/rt/include/chvt.h **** #endif /* CH_CFG_ST_TIMEDELTA > 0 */
 123:./lib/chibios/os/rt/include/chvt.h **** }
 124:./lib/chibios/os/rt/include/chvt.h **** 
 125:./lib/chibios/os/rt/include/chvt.h **** /**
 126:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Current system time.
 127:./lib/chibios/os/rt/include/chvt.h ****  * @details Returns the number of system ticks since the @p chSysInit()
 128:./lib/chibios/os/rt/include/chvt.h ****  *          invocation.
 129:./lib/chibios/os/rt/include/chvt.h ****  * @note    The counter can reach its maximum and then restart from zero.
 130:./lib/chibios/os/rt/include/chvt.h ****  *
 131:./lib/chibios/os/rt/include/chvt.h ****  * @return              The system time in ticks.
 132:./lib/chibios/os/rt/include/chvt.h ****  *
 133:./lib/chibios/os/rt/include/chvt.h ****  * @api
 134:./lib/chibios/os/rt/include/chvt.h ****  */
 135:./lib/chibios/os/rt/include/chvt.h **** static inline systime_t chVTGetSystemTime(void) {
 136:./lib/chibios/os/rt/include/chvt.h ****   systime_t systime;
 137:./lib/chibios/os/rt/include/chvt.h **** 
 138:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 139:./lib/chibios/os/rt/include/chvt.h ****   systime = chVTGetSystemTimeX();
 140:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 141:./lib/chibios/os/rt/include/chvt.h **** 
 142:./lib/chibios/os/rt/include/chvt.h ****   return systime;
 143:./lib/chibios/os/rt/include/chvt.h **** }
 144:./lib/chibios/os/rt/include/chvt.h **** 
 145:./lib/chibios/os/rt/include/chvt.h **** /**
 146:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the elapsed time since the specified start time.
 147:./lib/chibios/os/rt/include/chvt.h ****  *
 148:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     start time
 149:./lib/chibios/os/rt/include/chvt.h ****  * @return              The elapsed time.
 150:./lib/chibios/os/rt/include/chvt.h ****  *
 151:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 152:./lib/chibios/os/rt/include/chvt.h ****  */
 153:./lib/chibios/os/rt/include/chvt.h **** static inline sysinterval_t chVTTimeElapsedSinceX(systime_t start) {
 154:./lib/chibios/os/rt/include/chvt.h **** 
 155:./lib/chibios/os/rt/include/chvt.h ****   return chTimeDiffX(start, chVTGetSystemTimeX());
 156:./lib/chibios/os/rt/include/chvt.h **** }
 157:./lib/chibios/os/rt/include/chvt.h **** 
 158:./lib/chibios/os/rt/include/chvt.h **** /**
 159:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 160:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 161:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always false because the
 162:./lib/chibios/os/rt/include/chvt.h ****  *          time window has zero size.
 163:./lib/chibios/os/rt/include/chvt.h ****  *
 164:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 165:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 166:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 167:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 168:./lib/chibios/os/rt/include/chvt.h ****  *
 169:./lib/chibios/os/rt/include/chvt.h ****  * @xclass
 170:./lib/chibios/os/rt/include/chvt.h ****  */
 171:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithinX(systime_t start, systime_t end) {
 172:./lib/chibios/os/rt/include/chvt.h **** 
 173:./lib/chibios/os/rt/include/chvt.h ****   return chTimeIsInRangeX(chVTGetSystemTimeX(), start, end);
 174:./lib/chibios/os/rt/include/chvt.h **** }
 175:./lib/chibios/os/rt/include/chvt.h **** 
 176:./lib/chibios/os/rt/include/chvt.h **** /**
 177:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Checks if the current system time is within the specified time
 178:./lib/chibios/os/rt/include/chvt.h ****  *          window.
 179:./lib/chibios/os/rt/include/chvt.h ****  * @note    When start==end then the function returns always false because the
 180:./lib/chibios/os/rt/include/chvt.h ****  *          time window has zero size.
 181:./lib/chibios/os/rt/include/chvt.h ****  *
 182:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] start     the start of the time window (inclusive)
 183:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] end       the end of the time window (non inclusive)
 184:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         current time within the specified time window.
 185:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        current time not within the specified time window.
 186:./lib/chibios/os/rt/include/chvt.h ****  *
 187:./lib/chibios/os/rt/include/chvt.h ****  * @api
 188:./lib/chibios/os/rt/include/chvt.h ****  */
 189:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsSystemTimeWithin(systime_t start, systime_t end) {
 190:./lib/chibios/os/rt/include/chvt.h **** 
 191:./lib/chibios/os/rt/include/chvt.h ****   return chTimeIsInRangeX(chVTGetSystemTime(), start, end);
 192:./lib/chibios/os/rt/include/chvt.h **** }
 193:./lib/chibios/os/rt/include/chvt.h **** 
 194:./lib/chibios/os/rt/include/chvt.h **** /**
 195:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns the time interval until the next timer event.
 196:./lib/chibios/os/rt/include/chvt.h ****  * @note    The return value is not perfectly accurate and can report values
 197:./lib/chibios/os/rt/include/chvt.h ****  *          in excess of @p CH_CFG_ST_TIMEDELTA ticks.
 198:./lib/chibios/os/rt/include/chvt.h ****  * @note    The interval returned by this function is only meaningful if
 199:./lib/chibios/os/rt/include/chvt.h ****  *          more timers are not added to the list until the returned time.
 200:./lib/chibios/os/rt/include/chvt.h ****  *
 201:./lib/chibios/os/rt/include/chvt.h ****  * @param[out] timep    pointer to a variable that will contain the time
 202:./lib/chibios/os/rt/include/chvt.h ****  *                      interval until the next timer elapses. This pointer
 203:./lib/chibios/os/rt/include/chvt.h ****  *                      can be @p NULL if the information is not required.
 204:./lib/chibios/os/rt/include/chvt.h ****  * @return              The time, in ticks, until next time event.
 205:./lib/chibios/os/rt/include/chvt.h ****  * @retval false        if the timers list is empty.
 206:./lib/chibios/os/rt/include/chvt.h ****  * @retval true         if the timers list contains at least one timer.
 207:./lib/chibios/os/rt/include/chvt.h ****  *
 208:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 209:./lib/chibios/os/rt/include/chvt.h ****  */
 210:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTGetTimersStateI(sysinterval_t *timep) {
 211:./lib/chibios/os/rt/include/chvt.h **** 
 212:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 213:./lib/chibios/os/rt/include/chvt.h **** 
 214:./lib/chibios/os/rt/include/chvt.h ****   if (&ch.vtlist == (virtual_timers_list_t *)ch.vtlist.next) {
 215:./lib/chibios/os/rt/include/chvt.h ****     return false;
 216:./lib/chibios/os/rt/include/chvt.h ****   }
 217:./lib/chibios/os/rt/include/chvt.h **** 
 218:./lib/chibios/os/rt/include/chvt.h ****   if (timep != NULL) {
 219:./lib/chibios/os/rt/include/chvt.h **** #if CH_CFG_ST_TIMEDELTA == 0
 220:./lib/chibios/os/rt/include/chvt.h ****     *timep = ch.vtlist.next->delta;
 221:./lib/chibios/os/rt/include/chvt.h **** #else
 222:./lib/chibios/os/rt/include/chvt.h ****     *timep = (ch.vtlist.next->delta + (sysinterval_t)CH_CFG_ST_TIMEDELTA) -
 223:./lib/chibios/os/rt/include/chvt.h ****              chTimeDiffX(ch.vtlist.lasttime, chVTGetSystemTimeX());
 224:./lib/chibios/os/rt/include/chvt.h **** #endif
 225:./lib/chibios/os/rt/include/chvt.h ****   }
 226:./lib/chibios/os/rt/include/chvt.h **** 
 227:./lib/chibios/os/rt/include/chvt.h ****   return true;
 228:./lib/chibios/os/rt/include/chvt.h **** }
 229:./lib/chibios/os/rt/include/chvt.h **** 
 230:./lib/chibios/os/rt/include/chvt.h **** /**
 231:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 232:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 233:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 234:./lib/chibios/os/rt/include/chvt.h ****  *
 235:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 236:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 237:./lib/chibios/os/rt/include/chvt.h ****  *
 238:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 239:./lib/chibios/os/rt/include/chvt.h ****  */
 240:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmedI(const virtual_timer_t *vtp) {
 241:./lib/chibios/os/rt/include/chvt.h **** 
 242:./lib/chibios/os/rt/include/chvt.h ****   chDbgCheckClassI();
 243:./lib/chibios/os/rt/include/chvt.h **** 
 244:./lib/chibios/os/rt/include/chvt.h ****   return (bool)(vtp->func != NULL);
 245:./lib/chibios/os/rt/include/chvt.h **** }
 246:./lib/chibios/os/rt/include/chvt.h **** 
 247:./lib/chibios/os/rt/include/chvt.h **** /**
 248:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Returns @p true if the specified timer is armed.
 249:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 250:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 251:./lib/chibios/os/rt/include/chvt.h ****  *
 252:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 253:./lib/chibios/os/rt/include/chvt.h ****  * @return              true if the timer is armed.
 254:./lib/chibios/os/rt/include/chvt.h ****  *
 255:./lib/chibios/os/rt/include/chvt.h ****  * @api
 256:./lib/chibios/os/rt/include/chvt.h ****  */
 257:./lib/chibios/os/rt/include/chvt.h **** static inline bool chVTIsArmed(const virtual_timer_t *vtp) {
 258:./lib/chibios/os/rt/include/chvt.h ****   bool b;
 259:./lib/chibios/os/rt/include/chvt.h **** 
 260:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 261:./lib/chibios/os/rt/include/chvt.h ****   b = chVTIsArmedI(vtp);
 262:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 263:./lib/chibios/os/rt/include/chvt.h **** 
 264:./lib/chibios/os/rt/include/chvt.h ****   return b;
 265:./lib/chibios/os/rt/include/chvt.h **** }
 266:./lib/chibios/os/rt/include/chvt.h **** 
 267:./lib/chibios/os/rt/include/chvt.h **** /**
 268:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 269:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 270:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 271:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 272:./lib/chibios/os/rt/include/chvt.h ****  *
 273:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 274:./lib/chibios/os/rt/include/chvt.h ****  *
 275:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 276:./lib/chibios/os/rt/include/chvt.h ****  */
 277:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTResetI(virtual_timer_t *vtp) {
 278:./lib/chibios/os/rt/include/chvt.h **** 
 279:./lib/chibios/os/rt/include/chvt.h ****   if (chVTIsArmedI(vtp)) {
 280:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 281:./lib/chibios/os/rt/include/chvt.h ****   }
 282:./lib/chibios/os/rt/include/chvt.h **** }
 283:./lib/chibios/os/rt/include/chvt.h **** 
 284:./lib/chibios/os/rt/include/chvt.h **** /**
 285:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Disables a Virtual Timer.
 286:./lib/chibios/os/rt/include/chvt.h ****  * @note    The timer is first checked and disabled only if armed.
 287:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 288:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 289:./lib/chibios/os/rt/include/chvt.h ****  *
 290:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 291:./lib/chibios/os/rt/include/chvt.h ****  *
 292:./lib/chibios/os/rt/include/chvt.h ****  * @api
 293:./lib/chibios/os/rt/include/chvt.h ****  */
 294:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTReset(virtual_timer_t *vtp) {
 295:./lib/chibios/os/rt/include/chvt.h **** 
 296:./lib/chibios/os/rt/include/chvt.h ****   chSysLock();
 297:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 298:./lib/chibios/os/rt/include/chvt.h ****   chSysUnlock();
 299:./lib/chibios/os/rt/include/chvt.h **** }
 300:./lib/chibios/os/rt/include/chvt.h **** 
 301:./lib/chibios/os/rt/include/chvt.h **** /**
 302:./lib/chibios/os/rt/include/chvt.h ****  * @brief   Enables a virtual timer.
 303:./lib/chibios/os/rt/include/chvt.h ****  * @details If the virtual timer was already enabled then it is re-enabled
 304:./lib/chibios/os/rt/include/chvt.h ****  *          using the new parameters.
 305:./lib/chibios/os/rt/include/chvt.h ****  * @pre     The timer must have been initialized using @p chVTObjectInit()
 306:./lib/chibios/os/rt/include/chvt.h ****  *          or @p chVTDoSetI().
 307:./lib/chibios/os/rt/include/chvt.h ****  *
 308:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtp       the @p virtual_timer_t structure pointer
 309:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] delay     the number of ticks before the operation timeouts, the
 310:./lib/chibios/os/rt/include/chvt.h ****  *                      special values are handled as follow:
 311:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 312:./lib/chibios/os/rt/include/chvt.h ****  *                        normal time specification.
 313:./lib/chibios/os/rt/include/chvt.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 314:./lib/chibios/os/rt/include/chvt.h ****  *                      .
 315:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] vtfunc    the timer callback function. After invoking the
 316:./lib/chibios/os/rt/include/chvt.h ****  *                      callback the timer is disabled and the structure can
 317:./lib/chibios/os/rt/include/chvt.h ****  *                      be disposed or reused.
 318:./lib/chibios/os/rt/include/chvt.h ****  * @param[in] par       a parameter that will be passed to the callback
 319:./lib/chibios/os/rt/include/chvt.h ****  *                      function
 320:./lib/chibios/os/rt/include/chvt.h ****  *
 321:./lib/chibios/os/rt/include/chvt.h ****  * @iclass
 322:./lib/chibios/os/rt/include/chvt.h ****  */
 323:./lib/chibios/os/rt/include/chvt.h **** static inline void chVTSetI(virtual_timer_t *vtp, sysinterval_t delay,
 563              		.loc 6 323 20 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 324:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 325:./lib/chibios/os/rt/include/chvt.h **** 
 326:./lib/chibios/os/rt/include/chvt.h ****   chVTResetI(vtp);
 567              		.loc 6 326 3 view .LVU131
 568              	.LBB398:
 569              	.LBI398:
 277:./lib/chibios/os/rt/include/chvt.h **** 
 570              		.loc 6 277 20 view .LVU132
 571              	.LBB399:
 279:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 572              		.loc 6 279 3 view .LVU133
 573              	.LBB400:
 574              	.LBI400:
 240:./lib/chibios/os/rt/include/chvt.h **** 
 575              		.loc 6 240 20 view .LVU134
 576              	.LBB401:
 242:./lib/chibios/os/rt/include/chvt.h **** 
 577              		.loc 6 242 21 view .LVU135
 244:./lib/chibios/os/rt/include/chvt.h **** }
 578              		.loc 6 244 3 view .LVU136
 244:./lib/chibios/os/rt/include/chvt.h **** }
 579              		.loc 6 244 3 is_stmt 0 view .LVU137
 580              	.LBE401:
 581              	.LBE400:
 582              	.LBE399:
 583              	.LBE398:
 323:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 584              		.loc 6 323 20 view .LVU138
 585 0000 13B5     		push	{r0, r1, r4, lr}
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -8
 588              		.cfi_offset 14, -4
 323:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 589              		.loc 6 323 20 view .LVU139
 590 0002 0446     		mov	r4, r0
 591              	.LBB406:
 592              	.LBB404:
 593              	.LBB403:
 594              	.LBB402:
 244:./lib/chibios/os/rt/include/chvt.h **** }
 595              		.loc 6 244 20 view .LVU140
 596 0004 0748     		ldr	r0, .L27
 597              	.LVL26:
 244:./lib/chibios/os/rt/include/chvt.h **** }
 598              		.loc 6 244 20 view .LVU141
 599              	.LBE402:
 600              	.LBE403:
 279:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 601              		.loc 6 279 6 view .LVU142
 602 0006 C268     		ldr	r2, [r0, #12]
 603              	.LBE404:
 604              	.LBE406:
 323:./lib/chibios/os/rt/include/chvt.h ****                             vtfunc_t vtfunc, void *par) {
 605              		.loc 6 323 20 view .LVU143
 606 0008 0B46     		mov	r3, r1
 607              	.LBB407:
 608              	.LBB405:
 279:./lib/chibios/os/rt/include/chvt.h ****     chVTDoResetI(vtp);
 609              		.loc 6 279 6 view .LVU144
 610 000a 1AB1     		cbz	r2, .L23
 611 000c 0191     		str	r1, [sp, #4]
 280:./lib/chibios/os/rt/include/chvt.h ****   }
 612              		.loc 6 280 5 is_stmt 1 view .LVU145
 613 000e FFF7FEFF 		bl	chVTDoResetI
 614              	.LVL27:
 280:./lib/chibios/os/rt/include/chvt.h ****   }
 615              		.loc 6 280 5 is_stmt 0 view .LVU146
 616 0012 019B     		ldr	r3, [sp, #4]
 617              	.LVL28:
 618              	.L23:
 280:./lib/chibios/os/rt/include/chvt.h ****   }
 619              		.loc 6 280 5 view .LVU147
 620              	.LBE405:
 621              	.LBE407:
 327:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 622              		.loc 6 327 3 is_stmt 1 view .LVU148
 623 0014 044A     		ldr	r2, .L27+4
 624 0016 0348     		ldr	r0, .L27
 625 0018 2146     		mov	r1, r4
 328:./lib/chibios/os/rt/include/chvt.h **** }
 626              		.loc 6 328 1 is_stmt 0 view .LVU149
 627 001a 02B0     		add	sp, sp, #8
 628              		.cfi_def_cfa_offset 8
 629              		@ sp needed
 630 001c BDE81040 		pop	{r4, lr}
 631              		.cfi_restore 14
 632              		.cfi_restore 4
 633              		.cfi_def_cfa_offset 0
 634              	.LVL29:
 327:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 635              		.loc 6 327 3 view .LVU150
 636 0020 FFF7FEBF 		b	chVTDoSetI
 637              	.LVL30:
 638              	.L28:
 327:./lib/chibios/os/rt/include/chvt.h ****   chVTDoSetI(vtp, delay, vtfunc, par);
 639              		.loc 6 327 3 view .LVU151
 640              		.align	2
 641              	.L27:
 642 0024 00000000 		.word	.LANCHOR5
 643 0028 00000000 		.word	keyboard_idle_timer_cb
 644              		.cfi_endproc
 645              	.LFE319:
 647              		.global	__aeabi_uldivmod
 648              		.global	__aeabi_ldivmod
 649              		.section	.text.keyboard_idle_timer_cb,"ax",%progbits
 650              		.align	1
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	keyboard_idle_timer_cb:
 657              	.LVL31:
 658              	.LFB297:
 753:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 659              		.loc 1 753 47 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 754:tmk_core/protocol/chibios/usb_main.c **** 
 663              		.loc 1 754 5 view .LVU153
 756:tmk_core/protocol/chibios/usb_main.c **** 
 664              		.loc 1 756 5 view .LVU154
 665              	.LBB441:
 666              	.LBI441:
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 667              		.loc 2 531 20 view .LVU155
 668              	.LBE441:
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 669              		.loc 2 533 3 view .LVU156
 670              	.LBB458:
 671              	.LBB442:
 672              	.LBI442:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 673              		.loc 3 393 20 view .LVU157
 674              	.LBE442:
 675              	.LBE458:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 676              		.loc 3 395 3 view .LVU158
 677              	.LBB459:
 678              	.LBB454:
 679              	.LBB443:
 680              	.LBI443:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 681              		.loc 4 708 27 view .LVU159
 682              	.LBE443:
 683              	.LBE454:
 684              	.LBE459:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 685              		.loc 4 710 3 view .LVU160
 686              	.LBB460:
 687              	.LBB455:
 688              	.LBB451:
 689              	.LBB444:
 690              	.LBI444:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 691              		.loc 4 669 27 view .LVU161
 692              	.LBE444:
 693              	.LBE451:
 694              	.LBE455:
 695              	.LBE460:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 696              		.loc 4 677 3 view .LVU162
 697              	.LBB461:
 698              	.LBB456:
 699              	.LBB452:
 700              	.LBB449:
 701              	.LBB445:
 702              	.LBI445:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 703              		.loc 5 491 27 view .LVU163
 704              	.LBB446:
 705              		.loc 5 493 3 view .LVU164
 706              	.LBE446:
 707              	.LBE445:
 708              	.LBE449:
 709              	.LBE452:
 710              	.LBE456:
 711              	.LBE461:
 753:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 712              		.loc 1 753 47 is_stmt 0 view .LVU165
 713 0000 38B5     		push	{r3, r4, r5, lr}
 714              		.cfi_def_cfa_offset 16
 715              		.cfi_offset 3, -16
 716              		.cfi_offset 4, -12
 717              		.cfi_offset 5, -8
 718              		.cfi_offset 14, -4
 753:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 719              		.loc 1 753 47 view .LVU166
 720 0002 0446     		mov	r4, r0
 721              	.LBB462:
 722              	.LBB457:
 723              	.LBB453:
 724              	.LBB450:
 725              	.LBB448:
 726              	.LBB447:
 727              		.loc 5 493 3 view .LVU167
 728 0004 2023     		movs	r3, #32
 729              		.syntax unified
 730              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 731 0006 83F31188 		MSR basepri, r3
 732              	@ 0 "" 2
 733              	.LVL32:
 734              		.loc 5 493 3 view .LVU168
 735              		.thumb
 736              		.syntax unified
 737              	.LBE447:
 738              	.LBE448:
 739              	.LBE450:
 740              	.LBE453:
 741              	.LBE457:
 742              	.LBE462:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 743              		.loc 3 396 34 is_stmt 1 view .LVU169
 397:./lib/chibios/os/rt/include/chsys.h **** }
 744              		.loc 3 397 29 view .LVU170
 759:tmk_core/protocol/chibios/usb_main.c ****         /* do not rearm the timer, should be enabled on IDLE request */
 745              		.loc 1 759 5 view .LVU171
 759:tmk_core/protocol/chibios/usb_main.c ****         /* do not rearm the timer, should be enabled on IDLE request */
 746              		.loc 1 759 8 is_stmt 0 view .LVU172
 747 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 748 000c 042B     		cmp	r3, #4
 749 000e 03D0     		beq	.L30
 750              	.LVL33:
 751              	.L32:
 752              	.LBB463:
 753              	.LBB464:
 780:tmk_core/protocol/chibios/usb_main.c **** }
 754              		.loc 1 780 5 is_stmt 1 view .LVU173
 755              	.LBB465:
 756              	.LBI465:
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 757              		.loc 2 542 20 view .LVU174
 758              	.LBE465:
 759              	.LBE464:
 760              	.LBE463:
 761              		.loc 2 544 3 view .LVU175
 762              	.LBB486:
 763              	.LBB481:
 764              	.LBB477:
 765              	.LBB466:
 766              	.LBI466:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 767              		.loc 3 413 20 view .LVU176
 768              	.LBE466:
 769              	.LBE477:
 770              	.LBE481:
 771              	.LBE486:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 772              		.loc 3 415 31 view .LVU177
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 773              		.loc 3 416 33 view .LVU178
 774              		.loc 3 417 3 view .LVU179
 775              	.LBB487:
 776              	.LBB482:
 777              	.LBB478:
 778              	.LBB474:
 779              	.LBB467:
 780              	.LBI467:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 781              		.loc 4 719 27 view .LVU180
 782              	.LBE467:
 783              	.LBE474:
 784              	.LBE478:
 785              	.LBE482:
 786              	.LBE487:
 787              		.loc 4 721 3 view .LVU181
 788              	.LBB488:
 789              	.LBB483:
 790              	.LBB479:
 791              	.LBB475:
 792              	.LBB472:
 793              	.LBB468:
 794              	.LBI468:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 795              		.loc 4 693 27 view .LVU182
 796              	.LBE468:
 797              	.LBE472:
 798              	.LBE475:
 799              	.LBE479:
 800              	.LBE483:
 801              	.LBE488:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 802              		.loc 4 696 3 view .LVU183
 803              	.LBB489:
 804              	.LBB484:
 805              	.LBB480:
 806              	.LBB476:
 807              	.LBB473:
 808              	.LBB471:
 809              	.LBB469:
 810              	.LBI469:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 811              		.loc 5 491 27 view .LVU184
 812              	.LBB470:
 813              		.loc 5 493 3 view .LVU185
 814 0010 0023     		movs	r3, #0
 815              		.syntax unified
 816              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 817 0012 83F31188 		MSR basepri, r3
 818              	@ 0 "" 2
 819              	.LVL34:
 820              		.loc 5 493 3 is_stmt 0 view .LVU186
 821              		.thumb
 822              		.syntax unified
 823              	.LBE470:
 824              	.LBE469:
 825              	.LBE471:
 826              	.LBE473:
 827              	.LBE476:
 828              	.LBE480:
 829              	.LBE484:
 830              	.LBE489:
 781:tmk_core/protocol/chibios/usb_main.c **** 
 831              		.loc 1 781 1 view .LVU187
 832 0016 38BD     		pop	{r3, r4, r5, pc}
 833              	.LVL35:
 834              	.L30:
 835              	.LBB490:
 836              	.LBI463:
 753:tmk_core/protocol/chibios/usb_main.c ****     USBDriver *usbp = (USBDriver *)arg;
 837              		.loc 1 753 13 is_stmt 1 view .LVU188
 838              	.LBB485:
 766:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 839              		.loc 1 766 5 view .LVU189
 766:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 840              		.loc 1 766 23 is_stmt 0 view .LVU190
 841 0018 124B     		ldr	r3, .L40
 842 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 766:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 843              		.loc 1 766 8 view .LVU191
 844 001c DB09     		lsrs	r3, r3, #7
 845 001e F7D1     		bne	.L32
 766:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 846              		.loc 1 766 29 view .LVU192
 847 0020 114D     		ldr	r5, .L40+4
 848 0022 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 849 0024 002B     		cmp	r3, #0
 850 0026 F3D0     		beq	.L32
 766:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 851              		.loc 1 766 46 view .LVU193
 852 0028 104B     		ldr	r3, .L40+8
 853 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 854 002c 002B     		cmp	r3, #0
 855 002e EFD0     		beq	.L32
 771:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 856              		.loc 1 771 9 is_stmt 1 view .LVU194
 771:tmk_core/protocol/chibios/usb_main.c ****             usbStartTransmitI(usbp, KEYBOARD_IN_EPNUM, (uint8_t *)&keyboard_report_sent, KEYBOARD_E
 857              		.loc 1 771 12 is_stmt 0 view .LVU195
 858 0030 0389     		ldrh	r3, [r0, #8]
 859 0032 9B07     		lsls	r3, r3, #30
 860 0034 04D4     		bmi	.L33
 772:tmk_core/protocol/chibios/usb_main.c ****         }
 861              		.loc 1 772 13 is_stmt 1 view .LVU196
 862 0036 0E4A     		ldr	r2, .L40+12
 863 0038 0823     		movs	r3, #8
 864 003a 0121     		movs	r1, #1
 865 003c FFF7FEFF 		bl	usbStartTransmitI
 866              	.LVL36:
 867              	.L33:
 775:tmk_core/protocol/chibios/usb_main.c ****     }
 868              		.loc 1 775 9 view .LVU197
 775:tmk_core/protocol/chibios/usb_main.c ****     }
 869              		.loc 1 775 44 is_stmt 0 view .LVU198
 870 0040 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 871 0042 0C4B     		ldr	r3, .L40+16
 872 0044 A0FB0303 		umull	r0, r3, r0, r3
 873 0048 4FF47A72 		mov	r2, #1000
 874 004c 0023     		movs	r3, #0
 875 004e 00F2E730 		addw	r0, r0, #999
 876 0052 0021     		movs	r1, #0
 877 0054 FFF7FEFF 		bl	__aeabi_uldivmod
 878              	.LVL37:
 775:tmk_core/protocol/chibios/usb_main.c ****     }
 879              		.loc 1 775 9 view .LVU199
 880 0058 2146     		mov	r1, r4
 881 005a 8000     		lsls	r0, r0, #2
 882 005c FFF7FEFF 		bl	chVTSetI.constprop.0
 883              	.LVL38:
 884 0060 D6E7     		b	.L32
 885              	.L41:
 886 0062 00BF     		.align	2
 887              	.L40:
 888 0064 00000000 		.word	keymap_config
 889 0068 00000000 		.word	.LANCHOR6
 890 006c 00000000 		.word	.LANCHOR7
 891 0070 00000000 		.word	.LANCHOR8
 892 0074 A0860100 		.word	100000
 893              	.LBE485:
 894              	.LBE490:
 895              		.cfi_endproc
 896              	.LFE297:
 898              		.section	.text.usb_request_hook_cb,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	usb_request_hook_cb:
 906              	.LVL39:
 907              	.LFB291:
 541:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 908              		.loc 1 541 50 is_stmt 1 view -0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 542:tmk_core/protocol/chibios/usb_main.c **** 
 912              		.loc 1 542 5 view .LVU201
 552:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 913              		.loc 1 552 5 view .LVU202
 541:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 914              		.loc 1 541 50 is_stmt 0 view .LVU203
 915 0000 38B5     		push	{r3, r4, r5, lr}
 916              		.cfi_def_cfa_offset 16
 917              		.cfi_offset 3, -16
 918              		.cfi_offset 4, -12
 919              		.cfi_offset 5, -8
 920              		.cfi_offset 14, -4
 552:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 921              		.loc 1 552 22 view .LVU204
 922 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 552:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 923              		.loc 1 552 8 view .LVU205
 924 0006 03F07F02 		and	r2, r3, #127
 925 000a 212A     		cmp	r2, #33
 541:tmk_core/protocol/chibios/usb_main.c ****     const USBDescriptor *dp;
 926              		.loc 1 541 50 view .LVU206
 927 000c 0446     		mov	r4, r0
 552:tmk_core/protocol/chibios/usb_main.c ****         switch (usbp->setup[0] & USB_RTYPE_DIR_MASK) {
 928              		.loc 1 552 8 view .LVU207
 929 000e 6FD1     		bne	.L43
 553:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_DEV2HOST:
 930              		.loc 1 553 9 is_stmt 1 view .LVU208
 931 0010 13F0800F 		tst	r3, #128
 932 0014 90F87500 		ldrb	r0, [r0, #117]	@ zero_extendqisi2
 933              	.LVL40:
 553:tmk_core/protocol/chibios/usb_main.c ****             case USB_RTYPE_DIR_DEV2HOST:
 934              		.loc 1 553 9 is_stmt 0 view .LVU209
 935 0018 21D0     		beq	.L44
 555:tmk_core/protocol/chibios/usb_main.c ****                     case HID_GET_REPORT:
 936              		.loc 1 555 17 is_stmt 1 view .LVU210
 937 001a 0228     		cmp	r0, #2
 938 001c 19D0     		beq	.L45
 939 001e 0328     		cmp	r0, #3
 940 0020 0ED0     		beq	.L46
 941 0022 0128     		cmp	r0, #1
 942 0024 64D1     		bne	.L43
 557:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 943              		.loc 1 557 25 view .LVU211
 944 0026 94F87830 		ldrb	r3, [r4, #120]	@ zero_extendqisi2
 945 002a 2BB9     		cbnz	r3, .L47
 559:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 946              		.loc 1 559 33 view .LVU212
 947 002c 434A     		ldr	r2, .L71
 948 002e A266     		str	r2, [r4, #104]
 559:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 949              		.loc 1 559 33 view .LVU213
 950 0030 2022     		movs	r2, #32
 951 0032 E266     		str	r2, [r4, #108]
 559:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 952              		.loc 1 559 33 view .LVU214
 953              	.L68:
 571:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 954              		.loc 1 571 33 view .LVU215
 955 0034 2367     		str	r3, [r4, #112]
 571:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 956              		.loc 1 571 70 view .LVU216
 572:tmk_core/protocol/chibios/usb_main.c ****                                 break;
 957              		.loc 1 572 33 view .LVU217
 958              	.L48:
 660:tmk_core/protocol/chibios/usb_main.c **** 
 959              		.loc 1 660 1 is_stmt 0 view .LVU218
 960 0036 38BD     		pop	{r3, r4, r5, pc}
 961              	.LVL41:
 962              	.L47:
 561:tmk_core/protocol/chibios/usb_main.c **** 
 963              		.loc 1 561 33 is_stmt 1 view .LVU219
 571:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 964              		.loc 1 571 33 view .LVU220
 965 0038 0023     		movs	r3, #0
 966 003a C4E91A33 		strd	r3, r3, [r4, #104]
 967 003e F9E7     		b	.L68
 968              	.L46:
 573:tmk_core/protocol/chibios/usb_main.c ****                         }
 969              		.loc 1 573 33 view .LVU221
 575:tmk_core/protocol/chibios/usb_main.c **** 
 970              		.loc 1 575 25 view .LVU222
 578:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 971              		.loc 1 578 25 view .LVU223
 578:tmk_core/protocol/chibios/usb_main.c ****                             usbSetupTransfer(usbp, &keyboard_protocol, 1, NULL);
 972              		.loc 1 578 28 is_stmt 0 view .LVU224
 973 0040 B4F87830 		ldrh	r3, [r4, #120]
 974 0044 002B     		cmp	r3, #0
 975 0046 53D1     		bne	.L43
 579:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 976              		.loc 1 579 29 is_stmt 1 view .LVU225
 977 0048 3D4A     		ldr	r2, .L71+4
 978 004a A266     		str	r2, [r4, #104]
 579:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 979              		.loc 1 579 29 view .LVU226
 980 004c 0120     		movs	r0, #1
 981 004e E066     		str	r0, [r4, #108]
 579:tmk_core/protocol/chibios/usb_main.c ****                             return TRUE;
 982              		.loc 1 579 29 view .LVU227
 983 0050 F0E7     		b	.L68
 984              	.L45:
 585:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 985              		.loc 1 585 25 view .LVU228
 986 0052 3C4B     		ldr	r3, .L71+8
 987 0054 A366     		str	r3, [r4, #104]
 585:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 988              		.loc 1 585 25 view .LVU229
 989 0056 0120     		movs	r0, #1
 990 0058 E066     		str	r0, [r4, #108]
 585:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 991              		.loc 1 585 25 view .LVU230
 992 005a 0023     		movs	r3, #0
 993 005c EAE7     		b	.L68
 994              	.L44:
 592:tmk_core/protocol/chibios/usb_main.c ****                     case HID_SET_REPORT:
 995              		.loc 1 592 17 view .LVU231
 996 005e 0A28     		cmp	r0, #10
 997 0060 3DD0     		beq	.L49
 998 0062 0B28     		cmp	r0, #11
 999 0064 0ED0     		beq	.L50
 1000 0066 0928     		cmp	r0, #9
 1001 0068 42D1     		bne	.L43
 594:tmk_core/protocol/chibios/usb_main.c ****                             case KEYBOARD_INTERFACE:
 1002              		.loc 1 594 25 discriminator 1 view .LVU232
 1003 006a 94F87830 		ldrb	r3, [r4, #120]	@ zero_extendqisi2
 1004 006e 13F0FD0F 		tst	r3, #253
 1005 0072 3DD1     		bne	.L43
 599:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1006              		.loc 1 599 33 view .LVU233
 1007 0074 344B     		ldr	r3, .L71+12
 1008 0076 A366     		str	r3, [r4, #104]
 599:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1009              		.loc 1 599 33 view .LVU234
 1010 0078 0223     		movs	r3, #2
 1011 007a E366     		str	r3, [r4, #108]
 599:tmk_core/protocol/chibios/usb_main.c ****                                 return TRUE;
 1012              		.loc 1 599 33 view .LVU235
 1013 007c 334B     		ldr	r3, .L71+16
 1014              	.L67:
 648:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1015              		.loc 1 648 9 is_stmt 0 view .LVU236
 1016 007e 2367     		str	r3, [r4, #112]
 648:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1017              		.loc 1 648 76 is_stmt 1 view .LVU237
 649:tmk_core/protocol/chibios/usb_main.c ****     }
 1018              		.loc 1 649 9 view .LVU238
 649:tmk_core/protocol/chibios/usb_main.c ****     }
 1019              		.loc 1 649 16 is_stmt 0 view .LVU239
 1020 0080 0120     		movs	r0, #1
 1021 0082 D8E7     		b	.L48
 1022              	.L50:
 606:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 1023              		.loc 1 606 25 is_stmt 1 view .LVU240
 606:tmk_core/protocol/chibios/usb_main.c ****                             keyboard_protocol = ((usbp->setup[2]) != 0x00);                    /* L
 1024              		.loc 1 606 28 is_stmt 0 view .LVU241
 1025 0084 B4F87830 		ldrh	r3, [r4, #120]
 1026 0088 2BBB     		cbnz	r3, .L52
 607:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1027              		.loc 1 607 29 is_stmt 1 view .LVU242
 607:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1028              		.loc 1 607 62 is_stmt 0 view .LVU243
 1029 008a 94F87650 		ldrb	r5, [r4, #118]	@ zero_extendqisi2
 607:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1030              		.loc 1 607 47 view .LVU244
 1031 008e 2C4B     		ldr	r3, .L71+4
 607:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1032              		.loc 1 607 67 view .LVU245
 1033 0090 002D     		cmp	r5, #0
 1034 0092 14BF     		ite	ne
 1035 0094 0121     		movne	r1, #1
 1036 0096 0021     		moveq	r1, #0
 607:tmk_core/protocol/chibios/usb_main.c **** #ifdef NKRO_ENABLE
 1037              		.loc 1 607 47 view .LVU246
 1038 0098 1970     		strb	r1, [r3]
 609:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 1039              		.loc 1 609 29 is_stmt 1 view .LVU247
 609:tmk_core/protocol/chibios/usb_main.c ****                             if (!keymap_config.nkro && keyboard_idle) {
 1040              		.loc 1 609 48 is_stmt 0 view .LVU248
 1041 009a 2D4B     		ldr	r3, .L71+20
 1042 009c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1043 009e 61F3C712 		bfi	r2, r1, #7, #1
 1044 00a2 1A70     		strb	r2, [r3]
 610:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1045              		.loc 1 610 29 is_stmt 1 view .LVU249
 610:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1046              		.loc 1 610 32 is_stmt 0 view .LVU250
 1047 00a4 17D1     		bne	.L52
 610:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1048              		.loc 1 610 53 discriminator 1 view .LVU251
 1049 00a6 274B     		ldr	r3, .L71+8
 1050 00a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1051              	.L70:
 610:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1052              		.loc 1 610 53 discriminator 1 view .LVU252
 1053 00aa A2B1     		cbz	r2, .L52
 615:tmk_core/protocol/chibios/usb_main.c ****                                 chVTSetI(&keyboard_idle_timer, 4 * TIME_MS2I(keyboard_idle), keyboa
 1054              		.loc 1 615 33 is_stmt 1 view .LVU253
 1055              	.LBB491:
 1056              	.LBI491:
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1057              		.loc 2 531 20 view .LVU254
 1058              	.LBE491:
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1059              		.loc 2 533 3 view .LVU255
 1060              	.LBB503:
 1061              	.LBB492:
 1062              	.LBI492:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1063              		.loc 3 393 20 view .LVU256
 1064              	.LBE492:
 1065              	.LBE503:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1066              		.loc 3 395 3 view .LVU257
 1067              	.LBB504:
 1068              	.LBB500:
 1069              	.LBB493:
 1070              	.LBI493:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1071              		.loc 4 708 27 view .LVU258
 1072              	.LBE493:
 1073              	.LBE500:
 1074              	.LBE504:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1075              		.loc 4 710 3 view .LVU259
 1076              	.LBB505:
 1077              	.LBB501:
 1078              	.LBB498:
 1079              	.LBB494:
 1080              	.LBI494:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1081              		.loc 4 669 27 view .LVU260
 1082              	.LBE494:
 1083              	.LBE498:
 1084              	.LBE501:
 1085              	.LBE505:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1086              		.loc 4 677 3 view .LVU261
 1087              	.LVL42:
 1088              	.LBB506:
 1089              	.LBB502:
 1090              	.LBB499:
 1091              	.LBB497:
 1092              	.LBB495:
 1093              	.LBI495:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1094              		.loc 5 491 27 view .LVU262
 1095              	.LBB496:
 1096              		.loc 5 493 3 view .LVU263
 1097 00ac 2022     		movs	r2, #32
 1098              		.syntax unified
 1099              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1100 00ae 82F31188 		MSR basepri, r2
 1101              	@ 0 "" 2
 1102              	.LVL43:
 1103              		.loc 5 493 3 is_stmt 0 view .LVU264
 1104              		.thumb
 1105              		.syntax unified
 1106              	.LBE496:
 1107              	.LBE495:
 1108              	.LBE497:
 1109              	.LBE499:
 1110              	.LBE502:
 1111              	.LBE506:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1112              		.loc 3 396 34 is_stmt 1 view .LVU265
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1113              		.loc 3 397 29 view .LVU266
 616:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 1114              		.loc 1 616 33 view .LVU267
 616:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 1115              		.loc 1 616 68 is_stmt 0 view .LVU268
 1116 00b2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1117 00b4 274B     		ldr	r3, .L71+24
 1118 00b6 A0FB0303 		umull	r0, r3, r0, r3
 1119 00ba 4FF47A72 		mov	r2, #1000
 1120 00be 0023     		movs	r3, #0
 1121 00c0 00F2E730 		addw	r0, r0, #999
 1122 00c4 0021     		movs	r1, #0
 1123 00c6 FFF7FEFF 		bl	__aeabi_uldivmod
 1124              	.LVL44:
 616:tmk_core/protocol/chibios/usb_main.c ****                                 osalSysUnlockFromISR();
 1125              		.loc 1 616 33 view .LVU269
 1126 00ca 2146     		mov	r1, r4
 1127 00cc 8000     		lsls	r0, r0, #2
 1128 00ce FFF7FEFF 		bl	chVTSetI.constprop.0
 1129              	.LVL45:
 617:tmk_core/protocol/chibios/usb_main.c ****                             }
 1130              		.loc 1 617 33 is_stmt 1 view .LVU270
 1131              	.LBB507:
 1132              	.LBI507:
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1133              		.loc 2 542 20 view .LVU271
 1134              	.LBB508:
 1135              		.loc 2 544 3 view .LVU272
 1136              	.LBB509:
 1137              	.LBI509:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1138              		.loc 3 413 20 view .LVU273
 1139              	.LBE509:
 1140              	.LBE508:
 1141              	.LBE507:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1142              		.loc 3 415 31 view .LVU274
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1143              		.loc 3 416 33 view .LVU275
 1144              		.loc 3 417 3 view .LVU276
 1145              	.LBB523:
 1146              	.LBB520:
 1147              	.LBB517:
 1148              	.LBB510:
 1149              	.LBI510:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1150              		.loc 4 719 27 view .LVU277
 1151              	.LBE510:
 1152              	.LBE517:
 1153              	.LBE520:
 1154              	.LBE523:
 1155              		.loc 4 721 3 view .LVU278
 1156              	.LBB524:
 1157              	.LBB521:
 1158              	.LBB518:
 1159              	.LBB515:
 1160              	.LBB511:
 1161              	.LBI511:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1162              		.loc 4 693 27 view .LVU279
 1163              	.LBE511:
 1164              	.LBE515:
 1165              	.LBE518:
 1166              	.LBE521:
 1167              	.LBE524:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1168              		.loc 4 696 3 view .LVU280
 1169              	.LBB525:
 1170              	.LBB522:
 1171              	.LBB519:
 1172              	.LBB516:
 1173              	.LBB514:
 1174              	.LBB512:
 1175              	.LBI512:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1176              		.loc 5 491 27 view .LVU281
 1177              	.LBB513:
 1178              		.loc 5 493 3 view .LVU282
 1179              		.syntax unified
 1180              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1181 00d2 85F31188 		MSR basepri, r5
 1182              	@ 0 "" 2
 1183              	.LVL46:
 1184              		.thumb
 1185              		.syntax unified
 1186              	.L52:
 1187              		.loc 5 493 3 is_stmt 0 view .LVU283
 1188              	.LBE513:
 1189              	.LBE512:
 1190              	.LBE514:
 1191              	.LBE516:
 1192              	.LBE519:
 1193              	.LBE522:
 1194              	.LBE525:
 620:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1195              		.loc 1 620 25 is_stmt 1 view .LVU284
 1196 00d6 0023     		movs	r3, #0
 1197 00d8 C4E91A33 		strd	r3, r3, [r4, #104]
 620:tmk_core/protocol/chibios/usb_main.c ****                         return TRUE;
 1198              		.loc 1 620 25 view .LVU285
 1199 00dc CFE7     		b	.L67
 1200              	.L49:
 622:tmk_core/protocol/chibios/usb_main.c **** 
 1201              		.loc 1 622 25 view .LVU286
 625:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1202              		.loc 1 625 25 view .LVU287
 628:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1203              		.loc 1 628 43 is_stmt 0 view .LVU288
 1204 00de 1C49     		ldr	r1, .L71+20
 625:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1205              		.loc 1 625 39 view .LVU289
 1206 00e0 184B     		ldr	r3, .L71+8
 628:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1207              		.loc 1 628 43 view .LVU290
 1208 00e2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 625:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1209              		.loc 1 625 52 view .LVU291
 1210 00e4 94F87720 		ldrb	r2, [r4, #119]	@ zero_extendqisi2
 625:tmk_core/protocol/chibios/usb_main.c ****                                                         /* arm the timer */
 1211              		.loc 1 625 39 view .LVU292
 1212 00e8 1A70     		strb	r2, [r3]
 628:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1213              		.loc 1 628 25 is_stmt 1 view .LVU293
 628:tmk_core/protocol/chibios/usb_main.c **** #else  /* NKRO_ENABLE */
 1214              		.loc 1 628 28 is_stmt 0 view .LVU294
 1215 00ea CD09     		lsrs	r5, r1, #7
 1216 00ec F3D1     		bne	.L52
 1217 00ee DCE7     		b	.L70
 1218              	.L43:
 645:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 1219              		.loc 1 645 5 is_stmt 1 view .LVU295
 645:tmk_core/protocol/chibios/usb_main.c ****         dp = usbp->config->get_descriptor_cb(usbp, usbp->setup[3], usbp->setup[2], get_hword(&usbp-
 1220              		.loc 1 645 8 is_stmt 0 view .LVU296
 1221 00f0 B4F87420 		ldrh	r2, [r4, #116]
 1222 00f4 40F28163 		movw	r3, #1665
 1223 00f8 9A42     		cmp	r2, r3
 1224 00fa 08D0     		beq	.L54
 1225              	.LVL47:
 1226              	.LBB526:
 652:tmk_core/protocol/chibios/usb_main.c ****         if (drivers.array[i].config.int_in) {
 1227              		.loc 1 652 21 is_stmt 1 view .LVU297
 653:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1228              		.loc 1 653 9 view .LVU298
 653:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1229              		.loc 1 653 36 is_stmt 0 view .LVU299
 1230 00fc 164B     		ldr	r3, .L71+28
 653:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1231              		.loc 1 653 12 view .LVU300
 1232 00fe 93F8B620 		ldrb	r2, [r3, #182]	@ zero_extendqisi2
 1233 0102 B2B9     		cbnz	r2, .L55
 652:tmk_core/protocol/chibios/usb_main.c ****         if (drivers.array[i].config.int_in) {
 1234              		.loc 1 652 42 is_stmt 1 view .LVU301
 1235              	.LVL48:
 652:tmk_core/protocol/chibios/usb_main.c ****         if (drivers.array[i].config.int_in) {
 1236              		.loc 1 652 21 view .LVU302
 653:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1237              		.loc 1 653 9 view .LVU303
 653:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1238              		.loc 1 653 12 is_stmt 0 view .LVU304
 1239 0104 93F80A32 		ldrb	r3, [r3, #522]	@ zero_extendqisi2
 1240 0108 9BB9     		cbnz	r3, .L55
 1241              	.LVL49:
 1242              	.L56:
 653:tmk_core/protocol/chibios/usb_main.c ****             // NOTE: Assumes that we only have one serial driver
 1243              		.loc 1 653 12 view .LVU305
 1244              	.LBE526:
 659:tmk_core/protocol/chibios/usb_main.c **** }
 1245              		.loc 1 659 12 view .LVU306
 1246 010a 0020     		movs	r0, #0
 1247 010c 93E7     		b	.L48
 1248              	.L54:
 646:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1249              		.loc 1 646 9 is_stmt 1 view .LVU307
 1250              	.LVL50:
 508:tmk_core/protocol/chibios/usb_main.c **** 
 1251              		.loc 1 508 5 view .LVU308
 510:tmk_core/protocol/chibios/usb_main.c ****     hw |= (uint16_t)*p << 8U;
 1252              		.loc 1 510 5 view .LVU309
 511:tmk_core/protocol/chibios/usb_main.c ****     return hw;
 1253              		.loc 1 511 5 view .LVU310
 512:tmk_core/protocol/chibios/usb_main.c **** }
 1254              		.loc 1 512 5 view .LVU311
 646:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1255              		.loc 1 646 26 is_stmt 0 view .LVU312
 1256 010e 6368     		ldr	r3, [r4, #4]
 646:tmk_core/protocol/chibios/usb_main.c ****         if (dp == NULL) return FALSE;
 1257              		.loc 1 646 14 view .LVU313
 1258 0110 94F87620 		ldrb	r2, [r4, #118]	@ zero_extendqisi2
 1259 0114 5D68     		ldr	r5, [r3, #4]
 1260 0116 94F87710 		ldrb	r1, [r4, #119]	@ zero_extendqisi2
 1261 011a B4F87830 		ldrh	r3, [r4, #120]	@ unaligned
 1262 011e 2046     		mov	r0, r4
 1263 0120 A847     		blx	r5
 1264              	.LVL51:
 647:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1265              		.loc 1 647 9 is_stmt 1 view .LVU314
 647:tmk_core/protocol/chibios/usb_main.c ****         usbSetupTransfer(usbp, (uint8_t *)dp->ud_string, dp->ud_size, NULL);
 1266              		.loc 1 647 12 is_stmt 0 view .LVU315
 1267 0122 0028     		cmp	r0, #0
 1268 0124 F1D0     		beq	.L56
 648:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1269              		.loc 1 648 9 is_stmt 1 view .LVU316
 1270 0126 4368     		ldr	r3, [r0, #4]
 1271 0128 A366     		str	r3, [r4, #104]
 648:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1272              		.loc 1 648 9 view .LVU317
 1273 012a 0368     		ldr	r3, [r0]
 1274 012c E366     		str	r3, [r4, #108]
 648:tmk_core/protocol/chibios/usb_main.c ****         return TRUE;
 1275              		.loc 1 648 9 view .LVU318
 1276 012e 0023     		movs	r3, #0
 1277 0130 A5E7     		b	.L67
 1278              	.LVL52:
 1279              	.L55:
 1280              	.LBB527:
 655:tmk_core/protocol/chibios/usb_main.c ****         }
 1281              		.loc 1 655 13 view .LVU319
 655:tmk_core/protocol/chibios/usb_main.c ****         }
 1282              		.loc 1 655 20 is_stmt 0 view .LVU320
 1283 0132 2046     		mov	r0, r4
 1284              	.LBE527:
 660:tmk_core/protocol/chibios/usb_main.c **** 
 1285              		.loc 1 660 1 view .LVU321
 1286 0134 BDE83840 		pop	{r3, r4, r5, lr}
 1287              		.cfi_restore 14
 1288              		.cfi_restore 5
 1289              		.cfi_restore 4
 1290              		.cfi_restore 3
 1291              		.cfi_def_cfa_offset 0
 1292              	.LVL53:
 1293              	.LBB528:
 655:tmk_core/protocol/chibios/usb_main.c ****         }
 1294              		.loc 1 655 20 view .LVU322
 1295 0138 FFF7FEBF 		b	qmkusbRequestsHook
 1296              	.LVL54:
 1297              	.L72:
 655:tmk_core/protocol/chibios/usb_main.c ****         }
 1298              		.loc 1 655 20 view .LVU323
 1299              		.align	2
 1300              	.L71:
 1301 013c 00000000 		.word	.LANCHOR8
 1302 0140 00000000 		.word	.LANCHOR7
 1303 0144 00000000 		.word	.LANCHOR6
 1304 0148 00000000 		.word	.LANCHOR2
 1305 014c 00000000 		.word	set_led_transfer_cb
 1306 0150 00000000 		.word	keymap_config
 1307 0154 A0860100 		.word	100000
 1308 0158 00000000 		.word	.LANCHOR0
 1309              	.LBE528:
 1310              		.cfi_endproc
 1311              	.LFE291:
 1313              		.section	.text.usb_event_queue_enqueue.isra.0,"ax",%progbits
 1314              		.align	1
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	usb_event_queue_enqueue.isra.0:
 1321              	.LVL55:
 1322              	.LFB317:
 384:tmk_core/protocol/chibios/usb_main.c ****     uint8_t next = (event_queue_head + 1) % USB_EVENT_QUEUE_SIZE;
 1323              		.loc 1 384 20 is_stmt 1 view -0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 385:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1327              		.loc 1 385 5 view .LVU325
 384:tmk_core/protocol/chibios/usb_main.c ****     uint8_t next = (event_queue_head + 1) % USB_EVENT_QUEUE_SIZE;
 1328              		.loc 1 384 20 is_stmt 0 view .LVU326
 1329 0000 10B5     		push	{r4, lr}
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 4, -8
 1332              		.cfi_offset 14, -4
 385:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1333              		.loc 1 385 38 view .LVU327
 1334 0002 064A     		ldr	r2, .L75
 386:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1335              		.loc 1 386 14 view .LVU328
 1336 0004 064C     		ldr	r4, .L75+4
 385:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1337              		.loc 1 385 38 view .LVU329
 1338 0006 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 386:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1339              		.loc 1 386 8 view .LVU330
 1340 0008 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 385:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1341              		.loc 1 385 38 view .LVU331
 1342 000a 4B1C     		adds	r3, r1, #1
 385:tmk_core/protocol/chibios/usb_main.c ****     if (next == event_queue_tail) {
 1343              		.loc 1 385 13 view .LVU332
 1344 000c 03F00F03 		and	r3, r3, #15
 1345              	.LVL56:
 386:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1346              		.loc 1 386 5 is_stmt 1 view .LVU333
 386:tmk_core/protocol/chibios/usb_main.c ****         return false;
 1347              		.loc 1 386 8 is_stmt 0 view .LVU334
 1348 0010 9C42     		cmp	r4, r3
 389:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 1349              		.loc 1 389 5 is_stmt 1 view .LVU335
 389:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 1350              		.loc 1 389 35 is_stmt 0 view .LVU336
 1351 0012 1EBF     		ittt	ne
 1352 0014 034C     		ldrne	r4, .L75+8
 390:tmk_core/protocol/chibios/usb_main.c ****     return true;
 1353              		.loc 1 390 35 view .LVU337
 1354 0016 1370     		strbne	r3, [r2]
 389:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head              = next;
 1355              		.loc 1 389 35 view .LVU338
 1356 0018 6054     		strbne	r0, [r4, r1]
 390:tmk_core/protocol/chibios/usb_main.c ****     return true;
 1357              		.loc 1 390 5 is_stmt 1 view .LVU339
 391:tmk_core/protocol/chibios/usb_main.c **** }
 1358              		.loc 1 391 5 view .LVU340
 392:tmk_core/protocol/chibios/usb_main.c **** 
 1359              		.loc 1 392 1 is_stmt 0 view .LVU341
 1360 001a 10BD     		pop	{r4, pc}
 1361              	.L76:
 1362              		.align	2
 1363              	.L75:
 1364 001c 00000000 		.word	event_queue_head
 1365 0020 00000000 		.word	event_queue_tail
 1366 0024 00000000 		.word	event_queue
 1367              		.cfi_endproc
 1368              	.LFE317:
 1370              		.section	.text.usb_event_cb,"ax",%progbits
 1371              		.align	1
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu fpv4-sp-d16
 1377              	usb_event_cb:
 1378              	.LVL57:
 1379              	.LFB288:
 441:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 1380              		.loc 1 441 61 is_stmt 1 view -0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 442:tmk_core/protocol/chibios/usb_main.c ****         case USB_EVENT_ADDRESS:
 1384              		.loc 1 442 5 view .LVU343
 441:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 1385              		.loc 1 441 61 is_stmt 0 view .LVU344
 1386 0000 38B5     		push	{r3, r4, r5, lr}
 1387              		.cfi_def_cfa_offset 16
 1388              		.cfi_offset 3, -16
 1389              		.cfi_offset 4, -12
 1390              		.cfi_offset 5, -8
 1391              		.cfi_offset 14, -4
 441:tmk_core/protocol/chibios/usb_main.c ****     switch (event) {
 1392              		.loc 1 441 61 view .LVU345
 1393 0002 0446     		mov	r4, r0
 1394 0004 0529     		cmp	r1, #5
 1395 0006 5CD8     		bhi	.L77
 1396 0008 DFE801F0 		tbb	[pc, r1]
 1397              	.L80:
 1398 000c 5F       		.byte	(.L82-.L80)/2
 1399 000d 5B       		.byte	(.L77-.L80)/2
 1400 000e 18       		.byte	(.L83-.L80)/2
 1401 000f 5F       		.byte	(.L82-.L80)/2
 1402 0010 5C       		.byte	(.L81-.L80)/2
 1403 0011 03       		.byte	(.L79-.L80)/2
 1404              		.p2align 1
 1405              	.L79:
 1406              	.LVL58:
 1407              	.LBB529:
 491:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1408              		.loc 1 491 29 is_stmt 1 view .LVU346
 492:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 1409              		.loc 1 492 17 view .LVU347
 1410              	.LBB530:
 1411              	.LBI530:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1412              		.loc 3 393 20 view .LVU348
 1413              	.LBE530:
 1414              	.LBE529:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1415              		.loc 3 395 3 view .LVU349
 1416              	.LBB574:
 1417              	.LBB545:
 1418              	.LBB531:
 1419              	.LBI531:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1420              		.loc 4 708 27 view .LVU350
 1421              	.LBE531:
 1422              	.LBE545:
 1423              	.LBE574:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1424              		.loc 4 710 3 view .LVU351
 1425              	.LBB575:
 1426              	.LBB546:
 1427              	.LBB540:
 1428              	.LBB532:
 1429              	.LBI532:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1430              		.loc 4 669 27 view .LVU352
 1431              	.LBE532:
 1432              	.LBE540:
 1433              	.LBE546:
 1434              	.LBE575:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1435              		.loc 4 677 3 view .LVU353
 1436              	.LBB576:
 1437              	.LBB547:
 1438              	.LBB541:
 1439              	.LBB537:
 1440              	.LBB533:
 1441              	.LBI533:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1442              		.loc 5 491 27 view .LVU354
 1443              	.LBB534:
 1444              		.loc 5 493 3 view .LVU355
 1445 0012 2025     		movs	r5, #32
 1446              		.syntax unified
 1447              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1448 0014 85F31188 		MSR basepri, r5
 1449              	@ 0 "" 2
 1450              	.LVL59:
 1451              		.loc 5 493 3 is_stmt 0 view .LVU356
 1452              		.thumb
 1453              		.syntax unified
 1454              	.LBE534:
 1455              	.LBE533:
 1456              	.LBE537:
 1457              	.LBE541:
 1458              	.LBE547:
 1459              	.LBE576:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1460              		.loc 3 396 34 is_stmt 1 view .LVU357
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1461              		.loc 3 397 29 view .LVU358
 1462              	.LBB577:
 494:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 1463              		.loc 1 494 17 view .LVU359
 1464 0018 3448     		ldr	r0, .L96
 1465              	.LVL60:
 494:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 1466              		.loc 1 494 17 is_stmt 0 view .LVU360
 1467 001a FFF7FEFF 		bl	qmkusbWakeupHookI
 1468              	.LVL61:
 495:tmk_core/protocol/chibios/usb_main.c ****             }
 1469              		.loc 1 495 17 is_stmt 1 view .LVU361
 1470              	.LBB548:
 1471              	.LBI548:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1472              		.loc 3 413 20 view .LVU362
 1473              	.LBE548:
 1474              	.LBE577:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1475              		.loc 3 415 31 view .LVU363
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1476              		.loc 3 416 33 view .LVU364
 1477              		.loc 3 417 3 view .LVU365
 1478              	.LBB578:
 1479              	.LBB563:
 1480              	.LBB549:
 1481              	.LBI549:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1482              		.loc 4 719 27 view .LVU366
 1483              	.LBE549:
 1484              	.LBE563:
 1485              	.LBE578:
 1486              		.loc 4 721 3 view .LVU367
 1487              	.LBB579:
 1488              	.LBB564:
 1489              	.LBB558:
 1490              	.LBB550:
 1491              	.LBI550:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1492              		.loc 4 693 27 view .LVU368
 1493              	.LBE550:
 1494              	.LBE558:
 1495              	.LBE564:
 1496              	.LBE579:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1497              		.loc 4 696 3 view .LVU369
 1498              	.LBB580:
 1499              	.LBB565:
 1500              	.LBB559:
 1501              	.LBB555:
 1502              	.LBB551:
 1503              	.LBI551:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1504              		.loc 5 491 27 view .LVU370
 1505              	.LBB552:
 1506              		.loc 5 493 3 view .LVU371
 1507 001e 0024     		movs	r4, #0
 1508              	.LVL62:
 1509              		.loc 5 493 3 is_stmt 0 view .LVU372
 1510              		.syntax unified
 1511              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1512 0020 84F31188 		MSR basepri, r4
 1513              	@ 0 "" 2
 1514              	.LVL63:
 1515              		.loc 5 493 3 view .LVU373
 1516              		.thumb
 1517              		.syntax unified
 1518              	.LBE552:
 1519              	.LBE551:
 1520              	.LBE555:
 1521              	.LBE559:
 1522              	.LBE565:
 491:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1523              		.loc 1 491 50 is_stmt 1 view .LVU374
 491:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1524              		.loc 1 491 29 view .LVU375
 492:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 1525              		.loc 1 492 17 view .LVU376
 1526              	.LBB566:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1527              		.loc 3 393 20 view .LVU377
 1528              	.LBE566:
 1529              	.LBE580:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1530              		.loc 3 395 3 view .LVU378
 1531              	.LBB581:
 1532              	.LBB567:
 1533              	.LBB542:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1534              		.loc 4 708 27 view .LVU379
 1535              	.LBE542:
 1536              	.LBE567:
 1537              	.LBE581:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1538              		.loc 4 710 3 view .LVU380
 1539              	.LBB582:
 1540              	.LBB568:
 1541              	.LBB543:
 1542              	.LBB538:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1543              		.loc 4 669 27 view .LVU381
 1544              	.LBE538:
 1545              	.LBE543:
 1546              	.LBE568:
 1547              	.LBE582:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1548              		.loc 4 677 3 view .LVU382
 1549              	.LBB583:
 1550              	.LBB569:
 1551              	.LBB544:
 1552              	.LBB539:
 1553              	.LBB536:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1554              		.loc 5 491 27 view .LVU383
 1555              	.LBB535:
 1556              		.loc 5 493 3 view .LVU384
 1557              		.syntax unified
 1558              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1559 0024 85F31188 		MSR basepri, r5
 1560              	@ 0 "" 2
 1561              	.LVL64:
 1562              		.loc 5 493 3 is_stmt 0 view .LVU385
 1563              		.thumb
 1564              		.syntax unified
 1565              	.LBE535:
 1566              	.LBE536:
 1567              	.LBE539:
 1568              	.LBE544:
 1569              	.LBE569:
 1570              	.LBE583:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1571              		.loc 3 396 34 is_stmt 1 view .LVU386
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1572              		.loc 3 397 29 view .LVU387
 1573              	.LBB584:
 494:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 1574              		.loc 1 494 17 view .LVU388
 1575 0028 3148     		ldr	r0, .L96+4
 1576 002a FFF7FEFF 		bl	qmkusbWakeupHookI
 1577              	.LVL65:
 495:tmk_core/protocol/chibios/usb_main.c ****             }
 1578              		.loc 1 495 17 view .LVU389
 1579              	.LBB570:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1580              		.loc 3 413 20 view .LVU390
 1581              	.LBE570:
 1582              	.LBE584:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1583              		.loc 3 415 31 view .LVU391
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1584              		.loc 3 416 33 view .LVU392
 1585              		.loc 3 417 3 view .LVU393
 1586              	.LBB585:
 1587              	.LBB571:
 1588              	.LBB560:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1589              		.loc 4 719 27 view .LVU394
 1590              	.LBE560:
 1591              	.LBE571:
 1592              	.LBE585:
 1593              		.loc 4 721 3 view .LVU395
 1594              	.LBB586:
 1595              	.LBB572:
 1596              	.LBB561:
 1597              	.LBB556:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1598              		.loc 4 693 27 view .LVU396
 1599              	.LBE556:
 1600              	.LBE561:
 1601              	.LBE572:
 1602              	.LBE586:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1603              		.loc 4 696 3 view .LVU397
 1604              	.LBB587:
 1605              	.LBB573:
 1606              	.LBB562:
 1607              	.LBB557:
 1608              	.LBB554:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1609              		.loc 5 491 27 view .LVU398
 1610              	.LBB553:
 1611              		.loc 5 493 3 view .LVU399
 1612              		.syntax unified
 1613              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1614 002e 84F31188 		MSR basepri, r4
 1615              	@ 0 "" 2
 1616              	.LVL66:
 1617              		.loc 5 493 3 is_stmt 0 view .LVU400
 1618              		.thumb
 1619              		.syntax unified
 1620              	.LBE553:
 1621              	.LBE554:
 1622              	.LBE557:
 1623              	.LBE562:
 1624              	.LBE573:
 491:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1625              		.loc 1 491 50 is_stmt 1 view .LVU401
 491:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1626              		.loc 1 491 29 view .LVU402
 1627              	.LBE587:
 497:tmk_core/protocol/chibios/usb_main.c ****             return;
 1628              		.loc 1 497 13 view .LVU403
 1629              	.L95:
 472:tmk_core/protocol/chibios/usb_main.c ****             }
 1630              		.loc 1 472 17 view .LVU404
 503:tmk_core/protocol/chibios/usb_main.c **** 
 1631              		.loc 1 503 1 is_stmt 0 view .LVU405
 1632 0032 BDE83840 		pop	{r3, r4, r5, lr}
 1633              		.cfi_remember_state
 1634              		.cfi_restore 14
 1635              		.cfi_restore 5
 1636              		.cfi_restore 4
 1637              		.cfi_restore 3
 1638              		.cfi_def_cfa_offset 0
 472:tmk_core/protocol/chibios/usb_main.c ****             }
 1639              		.loc 1 472 17 view .LVU406
 1640 0036 0520     		movs	r0, #5
 1641 0038 FFF7FEBF 		b	usb_event_queue_enqueue.isra.0
 1642              	.LVL67:
 1643              	.L83:
 1644              		.cfi_restore_state
 447:tmk_core/protocol/chibios/usb_main.c ****             /* Enable the endpoints specified into the configuration. */
 1645              		.loc 1 447 13 is_stmt 1 view .LVU407
 1646              	.LBB588:
 1647              	.LBI588:
 531:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1648              		.loc 2 531 20 view .LVU408
 1649              	.LBE588:
 533:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 1650              		.loc 2 533 3 view .LVU409
 1651              	.LBB600:
 1652              	.LBB589:
 1653              	.LBI589:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1654              		.loc 3 393 20 view .LVU410
 1655              	.LBE589:
 1656              	.LBE600:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1657              		.loc 3 395 3 view .LVU411
 1658              	.LBB601:
 1659              	.LBB597:
 1660              	.LBB590:
 1661              	.LBI590:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1662              		.loc 4 708 27 view .LVU412
 1663              	.LBE590:
 1664              	.LBE597:
 1665              	.LBE601:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1666              		.loc 4 710 3 view .LVU413
 1667              	.LBB602:
 1668              	.LBB598:
 1669              	.LBB595:
 1670              	.LBB591:
 1671              	.LBI591:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1672              		.loc 4 669 27 view .LVU414
 1673              	.LBE591:
 1674              	.LBE595:
 1675              	.LBE598:
 1676              	.LBE602:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1677              		.loc 4 677 3 view .LVU415
 1678              	.LBB603:
 1679              	.LBB599:
 1680              	.LBB596:
 1681              	.LBB594:
 1682              	.LBB592:
 1683              	.LBI592:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1684              		.loc 5 491 27 view .LVU416
 1685              	.LBB593:
 1686              		.loc 5 493 3 view .LVU417
 1687 003c 2023     		movs	r3, #32
 1688              		.syntax unified
 1689              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1690 003e 83F31188 		MSR basepri, r3
 1691              	@ 0 "" 2
 1692              	.LVL68:
 1693              		.loc 5 493 3 is_stmt 0 view .LVU418
 1694              		.thumb
 1695              		.syntax unified
 1696              	.LBE593:
 1697              	.LBE592:
 1698              	.LBE594:
 1699              	.LBE596:
 1700              	.LBE599:
 1701              	.LBE603:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1702              		.loc 3 396 34 is_stmt 1 view .LVU419
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1703              		.loc 3 397 29 view .LVU420
 450:tmk_core/protocol/chibios/usb_main.c **** #endif
 1704              		.loc 1 450 13 view .LVU421
 1705              	.LBB604:
 462:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 1706              		.loc 1 462 17 is_stmt 0 view .LVU422
 1707 0042 2C4D     		ldr	r5, .L96+8
 1708              	.LBE604:
 450:tmk_core/protocol/chibios/usb_main.c **** #endif
 1709              		.loc 1 450 13 view .LVU423
 1710 0044 2C4A     		ldr	r2, .L96+12
 1711 0046 0121     		movs	r1, #1
 1712              	.LVL69:
 450:tmk_core/protocol/chibios/usb_main.c **** #endif
 1713              		.loc 1 450 13 view .LVU424
 1714 0048 FFF7FEFF 		bl	usbInitEndpointI
 1715              	.LVL70:
 456:tmk_core/protocol/chibios/usb_main.c **** #endif
 1716              		.loc 1 456 13 is_stmt 1 view .LVU425
 1717 004c 2B4A     		ldr	r2, .L96+16
 1718 004e 0421     		movs	r1, #4
 1719 0050 2046     		mov	r0, r4
 1720 0052 FFF7FEFF 		bl	usbInitEndpointI
 1721              	.LVL71:
 458:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1722              		.loc 1 458 13 view .LVU426
 1723              	.LBB605:
 458:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1724              		.loc 1 458 18 view .LVU427
 458:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1725              		.loc 1 458 29 view .LVU428
 462:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 1726              		.loc 1 462 17 view .LVU429
 1727 0056 95F8B410 		ldrb	r1, [r5, #180]	@ zero_extendqisi2
 1728 005a 05F14402 		add	r2, r5, #68
 1729 005e 2046     		mov	r0, r4
 1730 0060 FFF7FEFF 		bl	usbInitEndpointI
 1731              	.LVL72:
 463:tmk_core/protocol/chibios/usb_main.c **** #endif
 1732              		.loc 1 463 17 view .LVU430
 1733 0064 95F8B510 		ldrb	r1, [r5, #181]	@ zero_extendqisi2
 1734 0068 05F16802 		add	r2, r5, #104
 1735 006c 2046     		mov	r0, r4
 1736 006e FFF7FEFF 		bl	usbInitEndpointI
 1737              	.LVL73:
 465:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1738              		.loc 1 465 17 view .LVU431
 465:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1739              		.loc 1 465 44 is_stmt 0 view .LVU432
 1740 0072 95F8B610 		ldrb	r1, [r5, #182]	@ zero_extendqisi2
 465:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1741              		.loc 1 465 20 view .LVU433
 1742 0076 21B1     		cbz	r1, .L84
 466:tmk_core/protocol/chibios/usb_main.c ****                 }
 1743              		.loc 1 466 21 is_stmt 1 view .LVU434
 1744 0078 05F18C02 		add	r2, r5, #140
 1745 007c 2046     		mov	r0, r4
 1746 007e FFF7FEFF 		bl	usbInitEndpointI
 1747              	.LVL74:
 1748              	.L84:
 468:tmk_core/protocol/chibios/usb_main.c ****             }
 1749              		.loc 1 468 17 view .LVU435
 1750 0082 1A48     		ldr	r0, .L96
 1751 0084 FFF7FEFF 		bl	qmkusbConfigureHookI
 1752              	.LVL75:
 458:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1753              		.loc 1 458 50 view .LVU436
 458:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1754              		.loc 1 458 29 view .LVU437
 462:tmk_core/protocol/chibios/usb_main.c ****                 usbInitEndpointI(usbp, drivers.array[i].config.bulk_out, &drivers.array[i].out_ep_c
 1755              		.loc 1 462 17 view .LVU438
 1756 0088 1D4A     		ldr	r2, .L96+20
 1757 008a 95F80812 		ldrb	r1, [r5, #520]	@ zero_extendqisi2
 1758 008e 2046     		mov	r0, r4
 1759 0090 FFF7FEFF 		bl	usbInitEndpointI
 1760              	.LVL76:
 463:tmk_core/protocol/chibios/usb_main.c **** #endif
 1761              		.loc 1 463 17 view .LVU439
 1762 0094 95F80912 		ldrb	r1, [r5, #521]	@ zero_extendqisi2
 1763 0098 1A4A     		ldr	r2, .L96+24
 1764 009a 2046     		mov	r0, r4
 1765 009c FFF7FEFF 		bl	usbInitEndpointI
 1766              	.LVL77:
 465:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1767              		.loc 1 465 17 view .LVU440
 465:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1768              		.loc 1 465 44 is_stmt 0 view .LVU441
 1769 00a0 95F80A12 		ldrb	r1, [r5, #522]	@ zero_extendqisi2
 465:tmk_core/protocol/chibios/usb_main.c ****                     usbInitEndpointI(usbp, drivers.array[i].config.int_in, &drivers.array[i].int_ep
 1770              		.loc 1 465 20 view .LVU442
 1771 00a4 19B1     		cbz	r1, .L85
 466:tmk_core/protocol/chibios/usb_main.c ****                 }
 1772              		.loc 1 466 21 is_stmt 1 view .LVU443
 1773 00a6 184A     		ldr	r2, .L96+28
 1774 00a8 2046     		mov	r0, r4
 1775 00aa FFF7FEFF 		bl	usbInitEndpointI
 1776              	.LVL78:
 1777              	.L85:
 468:tmk_core/protocol/chibios/usb_main.c ****             }
 1778              		.loc 1 468 17 discriminator 2 view .LVU444
 1779 00ae 1048     		ldr	r0, .L96+4
 1780 00b0 FFF7FEFF 		bl	qmkusbConfigureHookI
 1781              	.LVL79:
 458:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1782              		.loc 1 458 50 discriminator 2 view .LVU445
 458:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 1783              		.loc 1 458 29 discriminator 2 view .LVU446
 1784              	.LBE605:
 470:tmk_core/protocol/chibios/usb_main.c ****             if (last_suspend_state) {
 1785              		.loc 1 470 13 discriminator 2 view .LVU447
 1786              	.LBB606:
 1787              	.LBI606:
 542:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 1788              		.loc 2 542 20 discriminator 2 view .LVU448
 1789              	.LBE606:
 1790              		.loc 2 544 3 discriminator 2 view .LVU449
 1791              	.LBB618:
 1792              	.LBB607:
 1793              	.LBI607:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1794              		.loc 3 413 20 discriminator 2 view .LVU450
 1795              	.LBE607:
 1796              	.LBE618:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1797              		.loc 3 415 31 discriminator 2 view .LVU451
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1798              		.loc 3 416 33 discriminator 2 view .LVU452
 1799              		.loc 3 417 3 discriminator 2 view .LVU453
 1800              	.LBB619:
 1801              	.LBB615:
 1802              	.LBB608:
 1803              	.LBI608:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1804              		.loc 4 719 27 discriminator 2 view .LVU454
 1805              	.LBE608:
 1806              	.LBE615:
 1807              	.LBE619:
 1808              		.loc 4 721 3 discriminator 2 view .LVU455
 1809              	.LBB620:
 1810              	.LBB616:
 1811              	.LBB613:
 1812              	.LBB609:
 1813              	.LBI609:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1814              		.loc 4 693 27 discriminator 2 view .LVU456
 1815              	.LBE609:
 1816              	.LBE613:
 1817              	.LBE616:
 1818              	.LBE620:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1819              		.loc 4 696 3 discriminator 2 view .LVU457
 1820              	.LBB621:
 1821              	.LBB617:
 1822              	.LBB614:
 1823              	.LBB612:
 1824              	.LBB610:
 1825              	.LBI610:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1826              		.loc 5 491 27 discriminator 2 view .LVU458
 1827              	.LBB611:
 1828              		.loc 5 493 3 discriminator 2 view .LVU459
 1829 00b4 0023     		movs	r3, #0
 1830              		.syntax unified
 1831              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1832 00b6 83F31188 		MSR basepri, r3
 1833              	@ 0 "" 2
 1834              	.LVL80:
 1835              		.loc 5 493 3 is_stmt 0 discriminator 2 view .LVU460
 1836              		.thumb
 1837              		.syntax unified
 1838              	.LBE611:
 1839              	.LBE610:
 1840              	.LBE612:
 1841              	.LBE614:
 1842              	.LBE617:
 1843              	.LBE621:
 471:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 1844              		.loc 1 471 13 is_stmt 1 discriminator 2 view .LVU461
 471:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 1845              		.loc 1 471 17 is_stmt 0 discriminator 2 view .LVU462
 1846 00ba 144B     		ldr	r3, .L96+32
 471:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_queue_enqueue(USB_EVENT_WAKEUP);
 1847              		.loc 1 471 16 discriminator 2 view .LVU463
 1848 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1849 00be 002B     		cmp	r3, #0
 1850 00c0 B7D1     		bne	.L95
 1851              	.LVL81:
 1852              	.L77:
 503:tmk_core/protocol/chibios/usb_main.c **** 
 1853              		.loc 1 503 1 view .LVU464
 1854 00c2 38BD     		pop	{r3, r4, r5, pc}
 1855              	.LVL82:
 1856              	.L81:
 476:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 1857              		.loc 1 476 13 is_stmt 1 view .LVU465
 1858 00c4 0420     		movs	r0, #4
 1859              	.LVL83:
 476:tmk_core/protocol/chibios/usb_main.c ****             /* Falls into.*/
 1860              		.loc 1 476 13 is_stmt 0 view .LVU466
 1861 00c6 FFF7FEFF 		bl	usb_event_queue_enqueue.isra.0
 1862              	.LVL84:
 1863              	.L82:
 1864              	.LBB622:
 481:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1865              		.loc 1 481 29 is_stmt 1 discriminator 1 view .LVU467
 482:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 1866              		.loc 1 482 17 discriminator 1 view .LVU468
 1867              	.LBB623:
 1868              	.LBI623:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1869              		.loc 3 393 20 discriminator 1 view .LVU469
 1870              	.LBE623:
 1871              	.LBE622:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1872              		.loc 3 395 3 discriminator 1 view .LVU470
 1873              	.LBB667:
 1874              	.LBB638:
 1875              	.LBB624:
 1876              	.LBI624:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1877              		.loc 4 708 27 discriminator 1 view .LVU471
 1878              	.LBE624:
 1879              	.LBE638:
 1880              	.LBE667:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1881              		.loc 4 710 3 discriminator 1 view .LVU472
 1882              	.LBB668:
 1883              	.LBB639:
 1884              	.LBB633:
 1885              	.LBB625:
 1886              	.LBI625:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1887              		.loc 4 669 27 discriminator 1 view .LVU473
 1888              	.LBE625:
 1889              	.LBE633:
 1890              	.LBE639:
 1891              	.LBE668:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 1892              		.loc 4 677 3 discriminator 1 view .LVU474
 1893              	.LBB669:
 1894              	.LBB640:
 1895              	.LBB634:
 1896              	.LBB630:
 1897              	.LBB626:
 1898              	.LBI626:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1899              		.loc 5 491 27 discriminator 1 view .LVU475
 1900              	.LBB627:
 1901              		.loc 5 493 3 discriminator 1 view .LVU476
 1902 00ca 2025     		movs	r5, #32
 1903              		.syntax unified
 1904              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1905 00cc 85F31188 		MSR basepri, r5
 1906              	@ 0 "" 2
 1907              	.LVL85:
 1908              		.loc 5 493 3 is_stmt 0 discriminator 1 view .LVU477
 1909              		.thumb
 1910              		.syntax unified
 1911              	.LBE627:
 1912              	.LBE626:
 1913              	.LBE630:
 1914              	.LBE634:
 1915              	.LBE640:
 1916              	.LBE669:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 1917              		.loc 3 396 34 is_stmt 1 discriminator 1 view .LVU478
 397:./lib/chibios/os/rt/include/chsys.h **** }
 1918              		.loc 3 397 29 discriminator 1 view .LVU479
 1919              	.LBB670:
 484:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 1920              		.loc 1 484 17 discriminator 1 view .LVU480
 1921 00d0 0648     		ldr	r0, .L96
 1922 00d2 FFF7FEFF 		bl	qmkusbSuspendHookI
 1923              	.LVL86:
 485:tmk_core/protocol/chibios/usb_main.c ****             }
 1924              		.loc 1 485 17 discriminator 1 view .LVU481
 1925              	.LBB641:
 1926              	.LBI641:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 1927              		.loc 3 413 20 discriminator 1 view .LVU482
 1928              	.LBE641:
 1929              	.LBE670:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 1930              		.loc 3 415 31 discriminator 1 view .LVU483
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 1931              		.loc 3 416 33 discriminator 1 view .LVU484
 1932              		.loc 3 417 3 discriminator 1 view .LVU485
 1933              	.LBB671:
 1934              	.LBB656:
 1935              	.LBB642:
 1936              	.LBI642:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1937              		.loc 4 719 27 discriminator 1 view .LVU486
 1938              	.LBE642:
 1939              	.LBE656:
 1940              	.LBE671:
 1941              		.loc 4 721 3 discriminator 1 view .LVU487
 1942              	.LBB672:
 1943              	.LBB657:
 1944              	.LBB651:
 1945              	.LBB643:
 1946              	.LBI643:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1947              		.loc 4 693 27 discriminator 1 view .LVU488
 1948              	.LBE643:
 1949              	.LBE651:
 1950              	.LBE657:
 1951              	.LBE672:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 1952              		.loc 4 696 3 discriminator 1 view .LVU489
 1953              	.LBB673:
 1954              	.LBB658:
 1955              	.LBB652:
 1956              	.LBB648:
 1957              	.LBB644:
 1958              	.LBI644:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 1959              		.loc 5 491 27 discriminator 1 view .LVU490
 1960              	.LBB645:
 1961              		.loc 5 493 3 discriminator 1 view .LVU491
 1962 00d6 0024     		movs	r4, #0
 1963              	.LVL87:
 1964              		.loc 5 493 3 is_stmt 0 discriminator 1 view .LVU492
 1965              		.syntax unified
 1966              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 1967 00d8 84F31188 		MSR basepri, r4
 1968              	@ 0 "" 2
 1969              	.LVL88:
 1970              		.loc 5 493 3 discriminator 1 view .LVU493
 1971              		.thumb
 1972              		.syntax unified
 1973              	.LBE645:
 1974              	.LBE644:
 1975              	.LBE648:
 1976              	.LBE652:
 1977              	.LBE658:
 481:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1978              		.loc 1 481 50 is_stmt 1 discriminator 1 view .LVU494
 481:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 1979              		.loc 1 481 29 discriminator 1 view .LVU495
 482:tmk_core/protocol/chibios/usb_main.c ****                 /* Disconnection event on suspend.*/
 1980              		.loc 1 482 17 discriminator 1 view .LVU496
 1981              	.LBB659:
 393:./lib/chibios/os/rt/include/chsys.h **** 
 1982              		.loc 3 393 20 discriminator 1 view .LVU497
 1983              	.LBE659:
 1984              	.LBE673:
 395:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_isr();
 1985              		.loc 3 395 3 discriminator 1 view .LVU498
 1986              	.LBB674:
 1987              	.LBB660:
 1988              	.LBB635:
 708:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1989              		.loc 4 708 27 discriminator 1 view .LVU499
 1990              	.LBE635:
 1991              	.LBE660:
 1992              	.LBE674:
 710:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** }
 1993              		.loc 4 710 3 discriminator 1 view .LVU500
 1994              	.LBB675:
 1995              	.LBB661:
 1996              	.LBB636:
 1997              	.LBB631:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 1998              		.loc 4 669 27 discriminator 1 view .LVU501
 1999              	.LBE631:
 2000              	.LBE636:
 2001              	.LBE661:
 2002              	.LBE675:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2003              		.loc 4 677 3 discriminator 1 view .LVU502
 2004              	.LBB676:
 2005              	.LBB662:
 2006              	.LBB637:
 2007              	.LBB632:
 2008              	.LBB629:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2009              		.loc 5 491 27 discriminator 1 view .LVU503
 2010              	.LBB628:
 2011              		.loc 5 493 3 discriminator 1 view .LVU504
 2012              		.syntax unified
 2013              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2014 00dc 85F31188 		MSR basepri, r5
 2015              	@ 0 "" 2
 2016              	.LVL89:
 2017              		.loc 5 493 3 is_stmt 0 discriminator 1 view .LVU505
 2018              		.thumb
 2019              		.syntax unified
 2020              	.LBE628:
 2021              	.LBE629:
 2022              	.LBE632:
 2023              	.LBE637:
 2024              	.LBE662:
 2025              	.LBE676:
 396:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock_from_isr();
 2026              		.loc 3 396 34 is_stmt 1 discriminator 1 view .LVU506
 397:./lib/chibios/os/rt/include/chsys.h **** }
 2027              		.loc 3 397 29 discriminator 1 view .LVU507
 2028              	.LBB677:
 484:tmk_core/protocol/chibios/usb_main.c ****                 chSysUnlockFromISR();
 2029              		.loc 1 484 17 discriminator 1 view .LVU508
 2030 00e0 0348     		ldr	r0, .L96+4
 2031 00e2 FFF7FEFF 		bl	qmkusbSuspendHookI
 2032              	.LVL90:
 485:tmk_core/protocol/chibios/usb_main.c ****             }
 2033              		.loc 1 485 17 discriminator 1 view .LVU509
 2034              	.LBB663:
 413:./lib/chibios/os/rt/include/chsys.h **** 
 2035              		.loc 3 413 20 discriminator 1 view .LVU510
 2036              	.LBE663:
 2037              	.LBE677:
 415:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_isr();
 2038              		.loc 3 415 31 discriminator 1 view .LVU511
 416:./lib/chibios/os/rt/include/chsys.h ****   port_unlock_from_isr();
 2039              		.loc 3 416 33 discriminator 1 view .LVU512
 2040              		.loc 3 417 3 discriminator 1 view .LVU513
 2041              	.LBB678:
 2042              	.LBB664:
 2043              	.LBB653:
 719:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2044              		.loc 4 719 27 discriminator 1 view .LVU514
 2045              	.LBE653:
 2046              	.LBE664:
 2047              	.LBE678:
 2048              		.loc 4 721 3 discriminator 1 view .LVU515
 2049              	.LBB679:
 2050              	.LBB665:
 2051              	.LBB654:
 2052              	.LBB649:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2053              		.loc 4 693 27 discriminator 1 view .LVU516
 2054              	.LBE649:
 2055              	.LBE654:
 2056              	.LBE665:
 2057              	.LBE679:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 2058              		.loc 4 696 3 discriminator 1 view .LVU517
 2059              	.LBB680:
 2060              	.LBB666:
 2061              	.LBB655:
 2062              	.LBB650:
 2063              	.LBB647:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2064              		.loc 5 491 27 discriminator 1 view .LVU518
 2065              	.LBB646:
 2066              		.loc 5 493 3 discriminator 1 view .LVU519
 2067              		.syntax unified
 2068              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2069 00e6 84F31188 		MSR basepri, r4
 2070              	@ 0 "" 2
 2071              	.LVL91:
 2072              		.loc 5 493 3 is_stmt 0 discriminator 1 view .LVU520
 2073              		.thumb
 2074              		.syntax unified
 2075              	.LBE646:
 2076              	.LBE647:
 2077              	.LBE650:
 2078              	.LBE655:
 2079              	.LBE666:
 481:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 2080              		.loc 1 481 50 is_stmt 1 discriminator 1 view .LVU521
 481:tmk_core/protocol/chibios/usb_main.c ****                 chSysLockFromISR();
 2081              		.loc 1 481 29 discriminator 1 view .LVU522
 2082 00ea EAE7     		b	.L77
 2083              	.L97:
 2084              		.align	2
 2085              	.L96:
 2086 00ec D4000000 		.word	.LANCHOR0+212
 2087 00f0 28020000 		.word	.LANCHOR0+552
 2088 00f4 00000000 		.word	.LANCHOR0
 2089 00f8 00000000 		.word	.LANCHOR9
 2090 00fc 00000000 		.word	.LANCHOR10
 2091 0100 98010000 		.word	.LANCHOR0+408
 2092 0104 BC010000 		.word	.LANCHOR0+444
 2093 0108 E0010000 		.word	.LANCHOR0+480
 2094 010c 00000000 		.word	.LANCHOR11
 2095              	.LBE680:
 2096              		.cfi_endproc
 2097              	.LFE288:
 2099              		.section	.text.shared_in_cb,"ax",%progbits
 2100              		.align	1
 2101              		.global	shared_in_cb
 2102              		.syntax unified
 2103              		.thumb
 2104              		.thumb_func
 2105              		.fpu fpv4-sp-d16
 2107              	shared_in_cb:
 2108              	.LFB315:
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 0
 2111              		@ frame_needed = 0, uses_anonymous_args = 0
 2112              		@ link register save eliminated.
 2113 0000 7047     		bx	lr
 2114              		.cfi_endproc
 2115              	.LFE315:
 2117              		.section	.text.usb_event_queue_init,"ax",%progbits
 2118              		.align	1
 2119              		.global	usb_event_queue_init
 2120              		.syntax unified
 2121              		.thumb
 2122              		.thumb_func
 2123              		.fpu fpv4-sp-d16
 2125              	usb_event_queue_init:
 2126              	.LFB282:
 377:tmk_core/protocol/chibios/usb_main.c ****     // Initialise the event queue
 2127              		.loc 1 377 33 view -0
 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 0
 2130              		@ frame_needed = 0, uses_anonymous_args = 0
 379:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head = 0;
 2131              		.loc 1 379 5 view .LVU524
 377:tmk_core/protocol/chibios/usb_main.c ****     // Initialise the event queue
 2132              		.loc 1 377 33 is_stmt 0 view .LVU525
 2133 0000 08B5     		push	{r3, lr}
 2134              		.cfi_def_cfa_offset 8
 2135              		.cfi_offset 3, -8
 2136              		.cfi_offset 14, -4
 379:tmk_core/protocol/chibios/usb_main.c ****     event_queue_head = 0;
 2137              		.loc 1 379 5 view .LVU526
 2138 0002 1022     		movs	r2, #16
 2139 0004 0448     		ldr	r0, .L100
 2140 0006 0021     		movs	r1, #0
 2141 0008 FFF7FEFF 		bl	memset
 2142              	.LVL92:
 380:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = 0;
 2143              		.loc 1 380 5 is_stmt 1 view .LVU527
 380:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = 0;
 2144              		.loc 1 380 22 is_stmt 0 view .LVU528
 2145 000c 034A     		ldr	r2, .L100+4
 2146 000e 0023     		movs	r3, #0
 2147 0010 1370     		strb	r3, [r2]
 381:tmk_core/protocol/chibios/usb_main.c **** }
 2148              		.loc 1 381 5 is_stmt 1 view .LVU529
 381:tmk_core/protocol/chibios/usb_main.c **** }
 2149              		.loc 1 381 22 is_stmt 0 view .LVU530
 2150 0012 034A     		ldr	r2, .L100+8
 2151 0014 1370     		strb	r3, [r2]
 382:tmk_core/protocol/chibios/usb_main.c **** 
 2152              		.loc 1 382 1 view .LVU531
 2153 0016 08BD     		pop	{r3, pc}
 2154              	.L101:
 2155              		.align	2
 2156              	.L100:
 2157 0018 00000000 		.word	event_queue
 2158 001c 00000000 		.word	event_queue_head
 2159 0020 00000000 		.word	event_queue_tail
 2160              		.cfi_endproc
 2161              	.LFE282:
 2163              		.section	.text.usb_event_queue_task,"ax",%progbits
 2164              		.align	1
 2165              		.global	usb_event_queue_task
 2166              		.syntax unified
 2167              		.thumb
 2168              		.thumb_func
 2169              		.fpu fpv4-sp-d16
 2171              	usb_event_queue_task:
 2172              	.LFB287:
 420:tmk_core/protocol/chibios/usb_main.c ****     usbevent_t event;
 2173              		.loc 1 420 33 is_stmt 1 view -0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 0, uses_anonymous_args = 0
 421:tmk_core/protocol/chibios/usb_main.c ****     while (usb_event_queue_dequeue(&event)) {
 2177              		.loc 1 421 5 view .LVU533
 422:tmk_core/protocol/chibios/usb_main.c ****         switch (event) {
 2178              		.loc 1 422 5 view .LVU534
 420:tmk_core/protocol/chibios/usb_main.c ****     usbevent_t event;
 2179              		.loc 1 420 33 is_stmt 0 view .LVU535
 2180 0000 70B5     		push	{r4, r5, r6, lr}
 2181              		.cfi_def_cfa_offset 16
 2182              		.cfi_offset 4, -16
 2183              		.cfi_offset 5, -12
 2184              		.cfi_offset 6, -8
 2185              		.cfi_offset 14, -4
 2186              	.LBB687:
 2187              	.LBB688:
 395:tmk_core/protocol/chibios/usb_main.c ****         return false;
 2188              		.loc 1 395 26 view .LVU536
 2189 0002 104D     		ldr	r5, .L113
 2190 0004 104C     		ldr	r4, .L113+4
 2191              	.L103:
 2192 0006 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2193 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 398:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 2194              		.loc 1 398 35 view .LVU537
 2195 000a 104E     		ldr	r6, .L113+8
 395:tmk_core/protocol/chibios/usb_main.c ****         return false;
 2196              		.loc 1 395 26 view .LVU538
 2197 000c 0021     		movs	r1, #0
 2198              	.L109:
 2199              	.LBE688:
 2200              	.LBE687:
 422:tmk_core/protocol/chibios/usb_main.c ****         switch (event) {
 2201              		.loc 1 422 11 is_stmt 1 view .LVU539
 2202              	.LVL93:
 2203              	.LBB692:
 2204              	.LBI687:
 394:tmk_core/protocol/chibios/usb_main.c ****     if (event_queue_head == event_queue_tail) {
 2205              		.loc 1 394 20 view .LVU540
 2206              	.LBB689:
 395:tmk_core/protocol/chibios/usb_main.c ****         return false;
 2207              		.loc 1 395 5 view .LVU541
 395:tmk_core/protocol/chibios/usb_main.c ****         return false;
 2208              		.loc 1 395 8 is_stmt 0 view .LVU542
 2209 000e 9A42     		cmp	r2, r3
 2210 0010 07D1     		bne	.L105
 2211 0012 01B1     		cbz	r1, .L102
 2212 0014 2270     		strb	r2, [r4]
 2213              	.LVL94:
 2214              	.L102:
 395:tmk_core/protocol/chibios/usb_main.c ****         return false;
 2215              		.loc 1 395 8 view .LVU543
 2216              	.LBE689:
 2217              	.LBE692:
 437:tmk_core/protocol/chibios/usb_main.c **** 
 2218              		.loc 1 437 1 view .LVU544
 2219 0016 70BD     		pop	{r4, r5, r6, pc}
 2220              	.LVL95:
 2221              	.L107:
 437:tmk_core/protocol/chibios/usb_main.c **** 
 2222              		.loc 1 437 1 view .LVU545
 2223 0018 2370     		strb	r3, [r4]
 425:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_suspend_handler();
 2224              		.loc 1 425 17 is_stmt 1 view .LVU546
 425:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_suspend_handler();
 2225              		.loc 1 425 36 is_stmt 0 view .LVU547
 2226 001a 0D4B     		ldr	r3, .L113+12
 2227 001c 0122     		movs	r2, #1
 2228 001e 1A70     		strb	r2, [r3]
 426:tmk_core/protocol/chibios/usb_main.c ****                 break;
 2229              		.loc 1 426 17 is_stmt 1 view .LVU548
 2230              	.LBB693:
 2231              	.LBI693:
 403:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 2232              		.loc 1 403 20 view .LVU549
 2233              	.LBB694:
 407:tmk_core/protocol/chibios/usb_main.c **** 
 2234              		.loc 1 407 1 view .LVU550
 2235 0020 F1E7     		b	.L103
 2236              	.LVL96:
 2237              	.L105:
 407:tmk_core/protocol/chibios/usb_main.c **** 
 2238              		.loc 1 407 1 is_stmt 0 view .LVU551
 2239              	.LBE694:
 2240              	.LBE693:
 2241              	.LBB695:
 2242              	.LBB690:
 398:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 2243              		.loc 1 398 5 is_stmt 1 view .LVU552
 398:tmk_core/protocol/chibios/usb_main.c ****     event_queue_tail = (event_queue_tail + 1) % USB_EVENT_QUEUE_SIZE;
 2244              		.loc 1 398 35 is_stmt 0 view .LVU553
 2245 0022 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 2246              	.LVL97:
 399:tmk_core/protocol/chibios/usb_main.c ****     return true;
 2247              		.loc 1 399 5 is_stmt 1 view .LVU554
 399:tmk_core/protocol/chibios/usb_main.c ****     return true;
 2248              		.loc 1 399 42 is_stmt 0 view .LVU555
 2249 0024 0133     		adds	r3, r3, #1
 2250              	.LBE690:
 2251              	.LBE695:
 423:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_SUSPEND:
 2252              		.loc 1 423 9 view .LVU556
 2253 0026 0428     		cmp	r0, #4
 2254              	.LBB696:
 2255              	.LBB691:
 399:tmk_core/protocol/chibios/usb_main.c ****     return true;
 2256              		.loc 1 399 22 view .LVU557
 2257 0028 03F00F03 		and	r3, r3, #15
 400:tmk_core/protocol/chibios/usb_main.c **** }
 2258              		.loc 1 400 5 is_stmt 1 view .LVU558
 2259              	.LVL98:
 400:tmk_core/protocol/chibios/usb_main.c **** }
 2260              		.loc 1 400 5 is_stmt 0 view .LVU559
 2261              	.LBE691:
 2262              	.LBE696:
 423:tmk_core/protocol/chibios/usb_main.c ****             case USB_EVENT_SUSPEND:
 2263              		.loc 1 423 9 is_stmt 1 view .LVU560
 2264 002c F4D0     		beq	.L107
 2265 002e 0528     		cmp	r0, #5
 2266 0030 4FF00101 		mov	r1, #1
 2267 0034 EBD1     		bne	.L109
 2268 0036 2370     		strb	r3, [r4]
 429:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_wakeup_handler();
 2269              		.loc 1 429 17 view .LVU561
 429:tmk_core/protocol/chibios/usb_main.c ****                 usb_event_wakeup_handler();
 2270              		.loc 1 429 36 is_stmt 0 view .LVU562
 2271 0038 054B     		ldr	r3, .L113+12
 2272 003a 0022     		movs	r2, #0
 2273 003c 1A70     		strb	r2, [r3]
 430:tmk_core/protocol/chibios/usb_main.c ****                 break;
 2274              		.loc 1 430 17 is_stmt 1 view .LVU563
 2275              	.LBB697:
 2276              	.LBI697:
 409:tmk_core/protocol/chibios/usb_main.c ****     suspend_wakeup_init();
 2277              		.loc 1 409 20 view .LVU564
 2278              	.LBB698:
 410:tmk_core/protocol/chibios/usb_main.c **** #ifdef SLEEP_LED_ENABLE
 2279              		.loc 1 410 5 view .LVU565
 2280 003e FFF7FEFF 		bl	suspend_wakeup_init
 2281              	.LVL99:
 416:tmk_core/protocol/chibios/usb_main.c **** 
 2282              		.loc 1 416 1 is_stmt 0 view .LVU566
 2283 0042 E0E7     		b	.L103
 2284              	.L114:
 2285              		.align	2
 2286              	.L113:
 2287 0044 00000000 		.word	event_queue_head
 2288 0048 00000000 		.word	event_queue_tail
 2289 004c 00000000 		.word	event_queue
 2290 0050 00000000 		.word	.LANCHOR11
 2291              	.LBE698:
 2292              	.LBE697:
 2293              		.cfi_endproc
 2294              	.LFE287:
 2296              		.section	.text.init_usb_driver,"ax",%progbits
 2297              		.align	1
 2298              		.global	init_usb_driver
 2299              		.syntax unified
 2300              		.thumb
 2301              		.thumb_func
 2302              		.fpu fpv4-sp-d16
 2304              	init_usb_driver:
 2305              	.LVL100:
 2306              	.LFB293:
 683:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 2307              		.loc 1 683 39 is_stmt 1 view -0
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 0
 2310              		@ frame_needed = 0, uses_anonymous_args = 0
 684:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 2311              		.loc 1 684 5 view .LVU568
 2312              	.LBB699:
 684:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 2313              		.loc 1 684 10 view .LVU569
 684:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 2314              		.loc 1 684 21 view .LVU570
 2315              	.LBB700:
 693:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].in_ep_config.in_state   = &drivers.array[i].in_ep_state;
 2316              		.loc 1 693 9 view .LVU571
 694:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 2317              		.loc 1 694 9 view .LVU572
 2318              	.LBE700:
 2319              	.LBE699:
 683:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 2320              		.loc 1 683 39 is_stmt 0 view .LVU573
 2321 0000 70B5     		push	{r4, r5, r6, lr}
 2322              		.cfi_def_cfa_offset 16
 2323              		.cfi_offset 4, -16
 2324              		.cfi_offset 5, -12
 2325              		.cfi_offset 6, -8
 2326              		.cfi_offset 14, -4
 2327              	.LBB705:
 2328              	.LBB701:
 694:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 2329              		.loc 1 694 50 view .LVU574
 2330 0002 274C     		ldr	r4, .L116
 2331 0004 04F10803 		add	r3, r4, #8
 2332 0008 A365     		str	r3, [r4, #88]
 695:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 2333              		.loc 1 695 9 is_stmt 1 view .LVU575
 695:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 2334              		.loc 1 695 50 is_stmt 0 view .LVU576
 2335 000a 04F11C03 		add	r3, r4, #28
 2336 000e C4F88030 		str	r3, [r4, #128]
 696:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 2337              		.loc 1 696 9 is_stmt 1 view .LVU577
 696:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 2338              		.loc 1 696 50 is_stmt 0 view .LVU578
 2339 0012 04F13003 		add	r3, r4, #48
 2340 0016 C4F8A030 		str	r3, [r4, #160]
 697:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 2341              		.loc 1 697 9 is_stmt 1 view .LVU579
 2342 001a 04F1B001 		add	r1, r4, #176
 2343              	.LBE701:
 2344              	.LBE705:
 683:tmk_core/protocol/chibios/usb_main.c ****     for (int i = 0; i < NUM_USB_DRIVERS; i++) {
 2345              		.loc 1 683 39 is_stmt 0 view .LVU580
 2346 001e 0546     		mov	r5, r0
 2347              	.LBB706:
 2348              	.LBB702:
 697:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 2349              		.loc 1 697 9 view .LVU581
 2350 0020 04F1D400 		add	r0, r4, #212
 2351              	.LVL101:
 697:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 2352              		.loc 1 697 9 view .LVU582
 2353 0024 FFF7FEFF 		bl	qmkusbObjectInit
 2354              	.LVL102:
 698:tmk_core/protocol/chibios/usb_main.c **** #endif
 2355              		.loc 1 698 9 is_stmt 1 view .LVU583
 2356 0028 04F1B001 		add	r1, r4, #176
 2357 002c 01F12400 		add	r0, r1, #36
 2358 0030 FFF7FEFF 		bl	qmkusbStart
 2359              	.LVL103:
 2360              	.LBE702:
 684:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 2361              		.loc 1 684 42 view .LVU584
 684:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 2362              		.loc 1 684 21 view .LVU585
 2363              	.LBB703:
 693:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].in_ep_config.in_state   = &drivers.array[i].in_ep_state;
 2364              		.loc 1 693 9 view .LVU586
 694:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 2365              		.loc 1 694 9 view .LVU587
 694:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].out_ep_config.out_state = &drivers.array[i].out_ep_state;
 2366              		.loc 1 694 50 is_stmt 0 view .LVU588
 2367 0034 04F5AE73 		add	r3, r4, #348
 2368 0038 C4F8AC31 		str	r3, [r4, #428]
 695:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 2369              		.loc 1 695 9 is_stmt 1 view .LVU589
 695:tmk_core/protocol/chibios/usb_main.c ****         drivers.array[i].int_ep_config.in_state  = &drivers.array[i].int_ep_state;
 2370              		.loc 1 695 50 is_stmt 0 view .LVU590
 2371 003c 04F5B873 		add	r3, r4, #368
 2372 0040 C4F8D431 		str	r3, [r4, #468]
 696:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 2373              		.loc 1 696 9 is_stmt 1 view .LVU591
 696:tmk_core/protocol/chibios/usb_main.c ****         qmkusbObjectInit(driver, &drivers.array[i].config);
 2374              		.loc 1 696 50 is_stmt 0 view .LVU592
 2375 0044 04F5C273 		add	r3, r4, #388
 2376 0048 C4F8F431 		str	r3, [r4, #500]
 697:tmk_core/protocol/chibios/usb_main.c ****         qmkusbStart(driver, &drivers.array[i].config);
 2377              		.loc 1 697 9 is_stmt 1 view .LVU593
 2378 004c 04F50171 		add	r1, r4, #516
 2379 0050 04F50A70 		add	r0, r4, #552
 2380 0054 FFF7FEFF 		bl	qmkusbObjectInit
 2381              	.LVL104:
 698:tmk_core/protocol/chibios/usb_main.c **** #endif
 2382              		.loc 1 698 9 view .LVU594
 2383 0058 04F50171 		add	r1, r4, #516
 2384 005c 01F12400 		add	r0, r1, #36
 2385              	.LBE703:
 2386              	.LBE706:
 707:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 2387              		.loc 1 707 5 is_stmt 0 view .LVU595
 2388 0060 4FF09044 		mov	r4, #1207959552
 2389              	.LBB707:
 2390              	.LBB704:
 698:tmk_core/protocol/chibios/usb_main.c **** #endif
 2391              		.loc 1 698 9 view .LVU596
 2392 0064 FFF7FEFF 		bl	qmkusbStart
 2393              	.LVL105:
 2394              	.LBE704:
 684:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 2395              		.loc 1 684 42 is_stmt 1 view .LVU597
 684:tmk_core/protocol/chibios/usb_main.c **** #if STM32_USB_USE_OTG1
 2396              		.loc 1 684 21 view .LVU598
 2397              	.LBE707:
 707:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 2398              		.loc 1 707 5 view .LVU599
 707:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 2399              		.loc 1 707 5 view .LVU600
 2400 0068 4FF48056 		mov	r6, #4096
 2401 006c 0122     		movs	r2, #1
 2402 006e 4FF48051 		mov	r1, #4096
 2403 0072 4FF09040 		mov	r0, #1207959552
 2404 0076 FFF7FEFF 		bl	_pal_lld_setgroupmode
 2405              	.LVL106:
 707:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 2406              		.loc 1 707 5 view .LVU601
 708:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 2407              		.loc 1 708 5 is_stmt 0 view .LVU602
 2408 007a 0A48     		ldr	r0, .L116+4
 707:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 2409              		.loc 1 707 5 view .LVU603
 2410 007c 6683     		strh	r6, [r4, #26]	@ movhi
 707:tmk_core/protocol/chibios/usb_main.c ****     wait_ms(1500);
 2411              		.loc 1 707 5 is_stmt 1 view .LVU604
 708:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 2412              		.loc 1 708 5 view .LVU605
 708:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 2413              		.loc 1 708 5 view .LVU606
 708:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 2414              		.loc 1 708 5 view .LVU607
 2415 007e FFF7FEFF 		bl	chThdSleep
 2416              	.LVL107:
 708:tmk_core/protocol/chibios/usb_main.c ****     usbStart(usbp, &usbcfg);
 2417              		.loc 1 708 5 view .LVU608
 709:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 2418              		.loc 1 709 5 view .LVU609
 2419 0082 0949     		ldr	r1, .L116+8
 2420 0084 2846     		mov	r0, r5
 2421 0086 FFF7FEFF 		bl	usbStart
 2422              	.LVL108:
 710:tmk_core/protocol/chibios/usb_main.c **** 
 2423              		.loc 1 710 5 view .LVU610
 710:tmk_core/protocol/chibios/usb_main.c **** 
 2424              		.loc 1 710 5 view .LVU611
 2425 008a 40F20272 		movw	r2, #1794
 2426 008e 3146     		mov	r1, r6
 2427 0090 2046     		mov	r0, r4
 2428 0092 FFF7FEFF 		bl	_pal_lld_setgroupmode
 2429              	.LVL109:
 710:tmk_core/protocol/chibios/usb_main.c **** 
 2430              		.loc 1 710 5 view .LVU612
 712:tmk_core/protocol/chibios/usb_main.c **** }
 2431              		.loc 1 712 5 view .LVU613
 2432              	.LBB708:
 2433              	.LBI708:
  98:./lib/chibios/os/rt/include/chvt.h **** 
 2434              		.loc 6 98 20 view .LVU614
 2435              	.LBB709:
 100:./lib/chibios/os/rt/include/chvt.h **** }
 2436              		.loc 6 100 3 view .LVU615
 100:./lib/chibios/os/rt/include/chvt.h **** }
 2437              		.loc 6 100 13 is_stmt 0 view .LVU616
 2438 0096 054B     		ldr	r3, .L116+12
 2439 0098 0022     		movs	r2, #0
 2440 009a DA60     		str	r2, [r3, #12]
 2441              	.LVL110:
 100:./lib/chibios/os/rt/include/chvt.h **** }
 2442              		.loc 6 100 13 view .LVU617
 2443              	.LBE709:
 2444              	.LBE708:
 713:tmk_core/protocol/chibios/usb_main.c **** 
 2445              		.loc 1 713 1 view .LVU618
 2446 009c 70BD     		pop	{r4, r5, r6, pc}
 2447              	.LVL111:
 2448              	.L117:
 713:tmk_core/protocol/chibios/usb_main.c **** 
 2449              		.loc 1 713 1 view .LVU619
 2450 009e 00BF     		.align	2
 2451              	.L116:
 2452 00a0 00000000 		.word	.LANCHOR0
 2453 00a4 F0490200 		.word	150000
 2454 00a8 00000000 		.word	.LANCHOR12
 2455 00ac 00000000 		.word	.LANCHOR5
 2456              		.cfi_endproc
 2457              	.LFE293:
 2459              		.section	.text.restart_usb_driver,"ax",%progbits
 2460              		.align	1
 2461              		.weak	restart_usb_driver
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu fpv4-sp-d16
 2467              	restart_usb_driver:
 2468              	.LVL112:
 2469              	.LFB294:
 715:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 2470              		.loc 1 715 64 is_stmt 1 view -0
 2471              		.cfi_startproc
 2472              		@ args = 0, pretend = 0, frame = 0
 2473              		@ frame_needed = 0, uses_anonymous_args = 0
 716:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 2474              		.loc 1 716 5 view .LVU621
 715:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 2475              		.loc 1 715 64 is_stmt 0 view .LVU622
 2476 0000 70B5     		push	{r4, r5, r6, lr}
 2477              		.cfi_def_cfa_offset 16
 2478              		.cfi_offset 4, -16
 2479              		.cfi_offset 5, -12
 2480              		.cfi_offset 6, -8
 2481              		.cfi_offset 14, -4
 717:tmk_core/protocol/chibios/usb_main.c **** 
 2482              		.loc 1 717 5 view .LVU623
 2483 0002 4FF09045 		mov	r5, #1207959552
 715:tmk_core/protocol/chibios/usb_main.c ****     usbStop(usbp);
 2484              		.loc 1 715 64 view .LVU624
 2485 0006 0446     		mov	r4, r0
 717:tmk_core/protocol/chibios/usb_main.c **** 
 2486              		.loc 1 717 5 view .LVU625
 2487 0008 4FF48056 		mov	r6, #4096
 716:tmk_core/protocol/chibios/usb_main.c ****     usbDisconnectBus(usbp);
 2488              		.loc 1 716 5 view .LVU626
 2489 000c FFF7FEFF 		bl	usbStop
 2490              	.LVL113:
 717:tmk_core/protocol/chibios/usb_main.c **** 
 2491              		.loc 1 717 5 is_stmt 1 view .LVU627
 717:tmk_core/protocol/chibios/usb_main.c **** 
 2492              		.loc 1 717 5 view .LVU628
 2493 0010 0122     		movs	r2, #1
 2494 0012 4FF48051 		mov	r1, #4096
 2495 0016 4FF09040 		mov	r0, #1207959552
 2496 001a FFF7FEFF 		bl	_pal_lld_setgroupmode
 2497              	.LVL114:
 717:tmk_core/protocol/chibios/usb_main.c **** 
 2498              		.loc 1 717 5 view .LVU629
 729:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 2499              		.loc 1 729 5 is_stmt 0 view .LVU630
 2500 001e 2046     		mov	r0, r4
 2501 0020 0549     		ldr	r1, .L119
 717:tmk_core/protocol/chibios/usb_main.c **** 
 2502              		.loc 1 717 5 view .LVU631
 2503 0022 6E83     		strh	r6, [r5, #26]	@ movhi
 717:tmk_core/protocol/chibios/usb_main.c **** 
 2504              		.loc 1 717 5 is_stmt 1 view .LVU632
 729:tmk_core/protocol/chibios/usb_main.c ****     usbConnectBus(usbp);
 2505              		.loc 1 729 5 view .LVU633
 2506 0024 FFF7FEFF 		bl	usbStart
 2507              	.LVL115:
 730:tmk_core/protocol/chibios/usb_main.c **** }
 2508              		.loc 1 730 5 view .LVU634
 730:tmk_core/protocol/chibios/usb_main.c **** }
 2509              		.loc 1 730 5 view .LVU635
 2510 0028 3146     		mov	r1, r6
 2511 002a 2846     		mov	r0, r5
 2512 002c 40F20272 		movw	r2, #1794
 731:tmk_core/protocol/chibios/usb_main.c **** 
 2513              		.loc 1 731 1 is_stmt 0 view .LVU636
 2514 0030 BDE87040 		pop	{r4, r5, r6, lr}
 2515              		.cfi_restore 14
 2516              		.cfi_restore 6
 2517              		.cfi_restore 5
 2518              		.cfi_restore 4
 2519              		.cfi_def_cfa_offset 0
 2520              	.LVL116:
 730:tmk_core/protocol/chibios/usb_main.c **** }
 2521              		.loc 1 730 5 view .LVU637
 2522 0034 FFF7FEBF 		b	_pal_lld_setgroupmode
 2523              	.LVL117:
 2524              	.L120:
 2525              		.align	2
 2526              	.L119:
 2527 0038 00000000 		.word	.LANCHOR12
 2528              		.cfi_endproc
 2529              	.LFE294:
 2531              		.section	.text.kbd_sof_cb,"ax",%progbits
 2532              		.align	1
 2533              		.global	kbd_sof_cb
 2534              		.syntax unified
 2535              		.thumb
 2536              		.thumb_func
 2537              		.fpu fpv4-sp-d16
 2539              	kbd_sof_cb:
 2540              	.LVL118:
 2541              	.LFB296:
 749:tmk_core/protocol/chibios/usb_main.c **** 
 2542              		.loc 1 749 34 is_stmt 1 view -0
 2543              		.cfi_startproc
 2544              		@ args = 0, pretend = 0, frame = 0
 2545              		@ frame_needed = 0, uses_anonymous_args = 0
 2546              		@ link register save eliminated.
 749:tmk_core/protocol/chibios/usb_main.c **** 
 2547              		.loc 1 749 36 view .LVU639
 749:tmk_core/protocol/chibios/usb_main.c **** 
 2548              		.loc 1 749 48 is_stmt 0 view .LVU640
 2549 0000 7047     		bx	lr
 2550              		.cfi_endproc
 2551              	.LFE296:
 2553              		.section	.text.keyboard_leds,"ax",%progbits
 2554              		.align	1
 2555              		.global	keyboard_leds
 2556              		.syntax unified
 2557              		.thumb
 2558              		.thumb_func
 2559              		.fpu fpv4-sp-d16
 2561              	keyboard_leds:
 2562              	.LFB298:
 784:tmk_core/protocol/chibios/usb_main.c **** 
 2563              		.loc 1 784 29 is_stmt 1 view -0
 2564              		.cfi_startproc
 2565              		@ args = 0, pretend = 0, frame = 0
 2566              		@ frame_needed = 0, uses_anonymous_args = 0
 2567              		@ link register save eliminated.
 784:tmk_core/protocol/chibios/usb_main.c **** 
 2568              		.loc 1 784 31 view .LVU642
 784:tmk_core/protocol/chibios/usb_main.c **** 
 2569              		.loc 1 784 58 is_stmt 0 view .LVU643
 2570 0000 014B     		ldr	r3, .L123
 2571 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2572 0004 7047     		bx	lr
 2573              	.L124:
 2574 0006 00BF     		.align	2
 2575              	.L123:
 2576 0008 00000000 		.word	.LANCHOR3
 2577              		.cfi_endproc
 2578              	.LFE298:
 2580              		.section	.text.send_keyboard,"ax",%progbits
 2581              		.align	1
 2582              		.global	send_keyboard
 2583              		.syntax unified
 2584              		.thumb
 2585              		.thumb_func
 2586              		.fpu fpv4-sp-d16
 2588              	send_keyboard:
 2589              	.LVL119:
 2590              	.LFB299:
 788:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2591              		.loc 1 788 47 is_stmt 1 view -0
 2592              		.cfi_startproc
 2593              		@ args = 0, pretend = 0, frame = 0
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
 789:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 2595              		.loc 1 789 5 view .LVU645
 2596              	.LBB726:
 2597              	.LBI726:
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2598              		.loc 2 509 20 view .LVU646
 2599              	.LBE726:
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2600              		.loc 2 511 3 view .LVU647
 2601              	.LBB738:
 2602              	.LBB727:
 2603              	.LBI727:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2604              		.loc 3 353 20 view .LVU648
 2605              	.LBE727:
 2606              	.LBE738:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2607              		.loc 3 355 3 view .LVU649
 2608              	.LBB739:
 2609              	.LBB735:
 2610              	.LBB728:
 2611              	.LBI728:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2612              		.loc 4 669 27 view .LVU650
 2613              	.LBE728:
 2614              	.LBE735:
 2615              	.LBE739:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2616              		.loc 4 677 3 view .LVU651
 2617              	.LBB740:
 2618              	.LBB736:
 2619              	.LBB733:
 2620              	.LBB729:
 2621              	.LBI729:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2622              		.loc 5 491 27 view .LVU652
 2623              	.LBB730:
 2624              		.loc 5 493 3 view .LVU653
 2625              	.LBE730:
 2626              	.LBE729:
 2627              	.LBE733:
 2628              	.LBE736:
 2629              	.LBE740:
 788:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2630              		.loc 1 788 47 is_stmt 0 view .LVU654
 2631 0000 38B5     		push	{r3, r4, r5, lr}
 2632              		.cfi_def_cfa_offset 16
 2633              		.cfi_offset 3, -16
 2634              		.cfi_offset 4, -12
 2635              		.cfi_offset 5, -8
 2636              		.cfi_offset 14, -4
 788:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2637              		.loc 1 788 47 view .LVU655
 2638 0002 0446     		mov	r4, r0
 2639              	.LBB741:
 2640              	.LBB737:
 2641              	.LBB734:
 2642              	.LBB732:
 2643              	.LBB731:
 2644              		.loc 5 493 3 view .LVU656
 2645 0004 2023     		movs	r3, #32
 2646              		.syntax unified
 2647              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2648 0006 83F31188 		MSR basepri, r3
 2649              	@ 0 "" 2
 2650              	.LVL120:
 2651              		.loc 5 493 3 view .LVU657
 2652              		.thumb
 2653              		.syntax unified
 2654              	.LBE731:
 2655              	.LBE732:
 2656              	.LBE734:
 2657              	.LBE737:
 2658              	.LBE741:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2659              		.loc 3 356 34 is_stmt 1 view .LVU658
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2660              		.loc 3 357 20 view .LVU659
 790:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 2661              		.loc 1 790 5 view .LVU660
 790:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 2662              		.loc 1 790 9 is_stmt 0 view .LVU661
 2663 000a 1F4D     		ldr	r5, .L144
 790:tmk_core/protocol/chibios/usb_main.c ****         goto unlock;
 2664              		.loc 1 790 8 view .LVU662
 2665 000c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2666 000e 042B     		cmp	r3, #4
 2667 0010 25D1     		bne	.L127
 795:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2668              		.loc 1 795 5 is_stmt 1 view .LVU663
 795:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2669              		.loc 1 795 9 is_stmt 0 view .LVU664
 2670 0012 1E4A     		ldr	r2, .L144+4
 801:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2671              		.loc 1 801 13 view .LVU665
 2672 0014 2B89     		ldrh	r3, [r5, #8]
 795:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2673              		.loc 1 795 8 view .LVU666
 2674 0016 92F90020 		ldrsb	r2, [r2]
 2675 001a 002A     		cmp	r2, #0
 2676 001c 23DA     		bge	.L128
 795:tmk_core/protocol/chibios/usb_main.c ****         /* need to wait until the previous packet has made it through */
 2677              		.loc 1 795 28 discriminator 1 view .LVU667
 2678 001e 1C4A     		ldr	r2, .L144+8
 2679 0020 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2680 0022 02B3     		cbz	r2, .L128
 801:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2681              		.loc 1 801 9 is_stmt 1 view .LVU668
 801:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2682              		.loc 1 801 12 is_stmt 0 view .LVU669
 2683 0024 DA06     		lsls	r2, r3, #27
 2684 0026 10D4     		bmi	.L129
 2685              	.LVL121:
 2686              	.L132:
 813:tmk_core/protocol/chibios/usb_main.c ****     } else
 2687              		.loc 1 813 9 is_stmt 1 view .LVU670
 2688 0028 2023     		movs	r3, #32
 2689 002a 2246     		mov	r2, r4
 2690 002c 0421     		movs	r1, #4
 2691              	.LVL122:
 2692              	.L143:
 2693              	.LBB742:
 839:tmk_core/protocol/chibios/usb_main.c ****     }
 2694              		.loc 1 839 9 is_stmt 0 view .LVU671
 2695 002e 1648     		ldr	r0, .L144
 2696 0030 FFF7FEFF 		bl	usbStartTransmitI
 2697              	.LVL123:
 839:tmk_core/protocol/chibios/usb_main.c ****     }
 2698              		.loc 1 839 9 view .LVU672
 2699              	.LBE742:
 841:tmk_core/protocol/chibios/usb_main.c **** 
 2700              		.loc 1 841 5 is_stmt 1 view .LVU673
 841:tmk_core/protocol/chibios/usb_main.c **** 
 2701              		.loc 1 841 26 is_stmt 0 view .LVU674
 2702 0034 174B     		ldr	r3, .L144+12
 2703 0036 2246     		mov	r2, r4
 2704 0038 04F12001 		add	r1, r4, #32
 2705              	.L137:
 2706 003c 52F8040B 		ldr	r0, [r2], #4	@ unaligned
 2707 0040 43F8040B 		str	r0, [r3], #4	@ unaligned
 2708 0044 8A42     		cmp	r2, r1
 2709 0046 F9D1     		bne	.L137
 2710 0048 09E0     		b	.L127
 2711              	.LVL124:
 2712              	.L129:
 806:tmk_core/protocol/chibios/usb_main.c **** 
 2713              		.loc 1 806 13 is_stmt 1 view .LVU675
 2714              	.LBB747:
 2715              	.LBI747:
 545:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 546:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 547:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 548:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is known.
 553:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @post    The system is in a critical zone.
 554:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 555:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The previous system status, the encoding of this
 556:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 558:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 559:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 560:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 562:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chSysGetStatusAndLockX();
 563:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 564:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 565:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 566:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 570:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] sts       the system status to be restored.
 571:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 572:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 573:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 574:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 576:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysRestoreStatusX(sts);
 577:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 578:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 579:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 580:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Polled delay.
 581:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          value.
 583:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 584:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] cycles    number of cycles
 585:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 586:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 587:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 588:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 591:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysPolledDelayX(cycles);
 592:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 593:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 594:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 595:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 596:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          service from the HAL.
 599:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 600:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 603:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSysTimerHandlerI();
 604:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 605:./lib/chibios/os/hal/osal/rt-nil/osal.h **** #endif
 606:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 607:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 608:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          required in this scenario.
 612:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 614:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 615:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 616:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalOsRescheduleS(void) {
 617:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 618:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chSchRescheduleS();
 619:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 620:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 621:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 622:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Current system time.
 623:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          invocation.
 625:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          @p systime_t size.
 629:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 630:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The system time in ticks.
 631:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 632:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 633:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 634:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 636:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chVTGetSystemTimeX();
 637:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 638:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 639:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 640:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 642:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] systime   base system time
 643:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] interval  interval to be added
 644:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The new system time.
 645:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 646:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 647:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 648:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                      sysinterval_t interval) {
 650:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 651:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeAddX(systime, interval);
 652:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 653:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 654:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 655:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 657:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     first system time
 658:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       second system time
 659:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The interval representing the time difference.
 660:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 661:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 662:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 663:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 665:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeDiffX(start, end);
 666:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 667:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 668:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 669:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    When start==end then the function returns always true because the
 671:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          whole time range is specified.
 672:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function can be called from any context.
 673:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 674:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] time      the time to be verified
 675:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval true         current time within the specified time window.
 678:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval false        current time not within the specified time window.
 679:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 680:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @xclass
 681:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 682:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t start,
 684:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                       systime_t end) {
 685:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 686:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 688:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 689:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 690:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 692:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 694:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 696:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 698:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 699:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 700:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 701:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 703:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleepS(delay);
 704:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 705:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 706:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 707:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 709:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 711:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        normal time specification.
 713:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 715:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 716:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @api
 717:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 718:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 720:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   chThdSleep(delay);
 721:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 722:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 723:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 724:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 727:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 728:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 730:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 731:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 732:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 2716              		.loc 2 733 21 view .LVU676
 2717              	.LBB748:
 734:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 735:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 2718              		.loc 2 735 3 view .LVU677
 2719              	.LBE748:
 2720              	.LBE747:
 806:tmk_core/protocol/chibios/usb_main.c **** 
 2721              		.loc 1 806 68 is_stmt 0 view .LVU678
 2722 004a EB69     		ldr	r3, [r5, #28]
 806:tmk_core/protocol/chibios/usb_main.c **** 
 2723              		.loc 1 806 13 view .LVU679
 2724 004c 5869     		ldr	r0, [r3, #20]
 2725              	.LVL125:
 2726              	.LBB750:
 2727              	.LBB749:
 2728              		.loc 2 735 10 view .LVU680
 2729 004e 4FF0FF31 		mov	r1, #-1
 2730 0052 0C30     		adds	r0, r0, #12
 2731 0054 FFF7FEFF 		bl	chThdSuspendTimeoutS
 2732              	.LVL126:
 2733              		.loc 2 735 10 view .LVU681
 2734              	.LBE749:
 2735              	.LBE750:
 809:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2736              		.loc 1 809 13 is_stmt 1 view .LVU682
 809:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2737              		.loc 1 809 16 is_stmt 0 view .LVU683
 2738 0058 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2739 005a 042B     		cmp	r3, #4
 2740 005c E4D0     		beq	.L132
 2741              	.L127:
 844:tmk_core/protocol/chibios/usb_main.c **** }
 2742              		.loc 1 844 5 is_stmt 1 view .LVU684
 2743              	.LBB751:
 2744              	.LBI751:
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2745              		.loc 2 520 20 view .LVU685
 2746              	.LBE751:
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2747              		.loc 2 522 3 view .LVU686
 2748              	.LBB760:
 2749              	.LBB752:
 2750              	.LBI752:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2751              		.loc 3 365 20 view .LVU687
 2752              	.LBB753:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2753              		.loc 3 367 22 view .LVU688
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2754              		.loc 3 368 33 view .LVU689
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2755              		.loc 3 374 3 view .LVU690
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2756              		.loc 3 374 3 view .LVU691
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2757              		.loc 3 374 3 view .LVU692
 378:./lib/chibios/os/rt/include/chsys.h **** }
 2758              		.loc 3 378 3 view .LVU693
 2759              	.LBB754:
 2760              	.LBI754:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2761              		.loc 4 693 27 view .LVU694
 2762              	.LBE754:
 2763              	.LBE753:
 2764              	.LBE752:
 2765              	.LBE760:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 2766              		.loc 4 696 3 view .LVU695
 2767              	.LVL127:
 2768              	.LBB761:
 2769              	.LBB759:
 2770              	.LBB758:
 2771              	.LBB757:
 2772              	.LBB755:
 2773              	.LBI755:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2774              		.loc 5 491 27 view .LVU696
 2775              	.LBB756:
 2776              		.loc 5 493 3 view .LVU697
 2777 005e 0023     		movs	r3, #0
 2778              		.syntax unified
 2779              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2780 0060 83F31188 		MSR basepri, r3
 2781              	@ 0 "" 2
 2782              	.LVL128:
 2783              		.loc 5 493 3 is_stmt 0 view .LVU698
 2784              		.thumb
 2785              		.syntax unified
 2786              	.LBE756:
 2787              	.LBE755:
 2788              	.LBE757:
 2789              	.LBE758:
 2790              	.LBE759:
 2791              	.LBE761:
 845:tmk_core/protocol/chibios/usb_main.c **** 
 2792              		.loc 1 845 1 view .LVU699
 2793 0064 38BD     		pop	{r3, r4, r5, pc}
 2794              	.LVL129:
 2795              	.L128:
 2796              	.LBB762:
 819:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2797              		.loc 1 819 9 is_stmt 1 view .LVU700
 819:tmk_core/protocol/chibios/usb_main.c ****             /* Need to either suspend, or loop and call unlock/lock during
 2798              		.loc 1 819 12 is_stmt 0 view .LVU701
 2799 0066 9B07     		lsls	r3, r3, #30
 2800 0068 03D4     		bmi	.L133
 2801              	.LVL130:
 2802              	.L136:
 831:tmk_core/protocol/chibios/usb_main.c ****         if (keyboard_protocol) {
 2803              		.loc 1 831 9 is_stmt 1 view .LVU702
 832:tmk_core/protocol/chibios/usb_main.c ****             data = (uint8_t *)report;
 2804              		.loc 1 832 9 view .LVU703
 839:tmk_core/protocol/chibios/usb_main.c ****     }
 2805              		.loc 1 839 9 view .LVU704
 2806 006a 0823     		movs	r3, #8
 2807 006c 2246     		mov	r2, r4
 2808 006e 0121     		movs	r1, #1
 2809 0070 DDE7     		b	.L143
 2810              	.LVL131:
 2811              	.L133:
 824:tmk_core/protocol/chibios/usb_main.c **** 
 2812              		.loc 1 824 13 view .LVU705
 2813              	.LBB743:
 2814              	.LBI743:
 733:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2815              		.loc 2 733 21 view .LVU706
 2816              	.LBB744:
 2817              		.loc 2 735 3 view .LVU707
 2818              	.LBE744:
 2819              	.LBE743:
 824:tmk_core/protocol/chibios/usb_main.c **** 
 2820              		.loc 1 824 70 is_stmt 0 view .LVU708
 2821 0072 2B69     		ldr	r3, [r5, #16]
 824:tmk_core/protocol/chibios/usb_main.c **** 
 2822              		.loc 1 824 13 view .LVU709
 2823 0074 5869     		ldr	r0, [r3, #20]
 2824              	.LVL132:
 2825              	.LBB746:
 2826              	.LBB745:
 2827              		.loc 2 735 10 view .LVU710
 2828 0076 4FF0FF31 		mov	r1, #-1
 2829 007a 0C30     		adds	r0, r0, #12
 2830 007c FFF7FEFF 		bl	chThdSuspendTimeoutS
 2831              	.LVL133:
 2832              		.loc 2 735 10 view .LVU711
 2833              	.LBE745:
 2834              	.LBE746:
 827:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2835              		.loc 1 827 13 is_stmt 1 view .LVU712
 827:tmk_core/protocol/chibios/usb_main.c ****                 goto unlock;
 2836              		.loc 1 827 16 is_stmt 0 view .LVU713
 2837 0080 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2838 0082 042B     		cmp	r3, #4
 2839 0084 EBD1     		bne	.L127
 2840 0086 F0E7     		b	.L136
 2841              	.L145:
 2842              		.align	2
 2843              	.L144:
 2844 0088 00000000 		.word	USBD1
 2845 008c 00000000 		.word	keymap_config
 2846 0090 00000000 		.word	.LANCHOR7
 2847 0094 00000000 		.word	.LANCHOR8
 2848              	.LBE762:
 2849              		.cfi_endproc
 2850              	.LFE299:
 2852              		.section	.text.send_mouse,"ax",%progbits
 2853              		.align	1
 2854              		.global	send_mouse
 2855              		.syntax unified
 2856              		.thumb
 2857              		.thumb_func
 2858              		.fpu fpv4-sp-d16
 2860              	send_mouse:
 2861              	.LVL134:
 2862              	.LFB300:
 862:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2863              		.loc 1 862 41 is_stmt 1 view -0
 2864              		.cfi_startproc
 2865              		@ args = 0, pretend = 0, frame = 8
 2866              		@ frame_needed = 0, uses_anonymous_args = 0
 863:tmk_core/protocol/chibios/usb_main.c ****     if (usbGetDriverStateI(&USB_DRIVER) != USB_ACTIVE) {
 2867              		.loc 1 863 5 view .LVU715
 2868              	.LBB763:
 2869              	.LBI763:
 509:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2870              		.loc 2 509 20 view .LVU716
 2871              	.LBE763:
 511:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2872              		.loc 2 511 3 view .LVU717
 2873              	.LBB779:
 2874              	.LBB764:
 2875              	.LBI764:
 353:./lib/chibios/os/rt/include/chsys.h **** 
 2876              		.loc 3 353 20 view .LVU718
 2877              	.LBE764:
 2878              	.LBE779:
 355:./lib/chibios/os/rt/include/chsys.h ****   _stats_start_measure_crit_thd();
 2879              		.loc 3 355 3 view .LVU719
 2880              	.LBB780:
 2881              	.LBB775:
 2882              	.LBB765:
 2883              	.LBI765:
 669:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2884              		.loc 4 669 27 view .LVU720
 2885              	.LBE765:
 2886              	.LBE775:
 2887              	.LBE780:
 677:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #if defined(__CM7_REV)
 2888              		.loc 4 677 3 view .LVU721
 2889              	.LBB781:
 2890              	.LBB776:
 2891              	.LBB772:
 2892              	.LBB766:
 2893              	.LBI766:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2894              		.loc 5 491 27 view .LVU722
 2895              	.LBB767:
 2896              		.loc 5 493 3 view .LVU723
 2897              	.LBE767:
 2898              	.LBE766:
 2899              	.LBE772:
 2900              	.LBE776:
 2901              	.LBE781:
 862:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2902              		.loc 1 862 41 is_stmt 0 view .LVU724
 2903 0000 07B5     		push	{r0, r1, r2, lr}
 2904              		.cfi_def_cfa_offset 16
 2905              		.cfi_offset 14, -4
 2906              	.LBB782:
 2907              	.LBB777:
 2908              	.LBB773:
 2909              	.LBB770:
 2910              	.LBB768:
 2911              		.loc 5 493 3 view .LVU725
 2912 0002 2023     		movs	r3, #32
 2913              	.LBE768:
 2914              	.LBE770:
 2915              	.LBE773:
 2916              	.LBE777:
 2917              	.LBE782:
 862:tmk_core/protocol/chibios/usb_main.c ****     osalSysLock();
 2918              		.loc 1 862 41 view .LVU726
 2919 0004 0246     		mov	r2, r0
 2920              	.LBB783:
 2921              	.LBB778:
 2922              	.LBB774:
 2923              	.LBB771:
 2924              	.LBB769:
 2925              		.loc 5 493 3 view .LVU727
 2926              		.syntax unified
 2927              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2928 0006 83F31188 		MSR basepri, r3
 2929              	@ 0 "" 2
 2930              	.LVL135:
 2931              		.loc 5 493 3 view .LVU728
 2932              		.thumb
 2933              		.syntax unified
 2934              	.LBE769:
 2935              	.LBE771:
 2936              	.LBE774:
 2937              	.LBE778:
 2938              	.LBE783:
 356:./lib/chibios/os/rt/include/chsys.h ****   _dbg_check_lock();
 2939              		.loc 3 356 34 is_stmt 1 view .LVU729
 357:./lib/chibios/os/rt/include/chsys.h **** }
 2940              		.loc 3 357 20 view .LVU730
 864:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2941              		.loc 1 864 5 view .LVU731
 864:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2942              		.loc 1 864 9 is_stmt 0 view .LVU732
 2943 000a 0F4B     		ldr	r3, .L154
 864:tmk_core/protocol/chibios/usb_main.c ****         osalSysUnlock();
 2944              		.loc 1 864 8 view .LVU733
 2945 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2946 000e 0429     		cmp	r1, #4
 2947 0010 05D0     		beq	.L147
 2948              	.LVL136:
 2949              	.L153:
 880:tmk_core/protocol/chibios/usb_main.c **** }
 2950              		.loc 1 880 5 is_stmt 1 view .LVU734
 2951              	.LBB784:
 2952              	.LBI784:
 520:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 2953              		.loc 2 520 20 view .LVU735
 2954              	.LBB785:
 522:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 2955              		.loc 2 522 3 view .LVU736
 2956              	.LBB786:
 2957              	.LBI786:
 365:./lib/chibios/os/rt/include/chsys.h **** 
 2958              		.loc 3 365 20 view .LVU737
 2959              	.LBB787:
 367:./lib/chibios/os/rt/include/chsys.h ****   _stats_stop_measure_crit_thd();
 2960              		.loc 3 367 22 view .LVU738
 368:./lib/chibios/os/rt/include/chsys.h **** 
 2961              		.loc 3 368 33 view .LVU739
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2962              		.loc 3 374 3 view .LVU740
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2963              		.loc 3 374 3 view .LVU741
 374:./lib/chibios/os/rt/include/chsys.h ****               (ch.rlist.current->prio >= ch.rlist.queue.next->prio),
 2964              		.loc 3 374 3 view .LVU742
 378:./lib/chibios/os/rt/include/chsys.h **** }
 2965              		.loc 3 378 3 view .LVU743
 2966              	.LBB788:
 2967              	.LBI788:
 693:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** 
 2968              		.loc 4 693 27 view .LVU744
 2969              	.LBE788:
 2970              	.LBE787:
 2971              	.LBE786:
 2972              	.LBE785:
 2973              	.LBE784:
 696:./lib/chibios/os/common/ports/ARMCMx/chcore_v7m.h **** #else /* CORTEX_SIMPLIFIED_PRIORITY */
 2974              		.loc 4 696 3 view .LVU745
 2975              	.LBB795:
 2976              	.LBB794:
 2977              	.LBB793:
 2978              	.LBB792:
 2979              	.LBB791:
 2980              	.LBB789:
 2981              	.LBI789:
 491:./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h **** {
 2982              		.loc 5 491 27 view .LVU746
 2983              	.LBB790:
 2984              		.loc 5 493 3 view .LVU747
 2985 0012 0023     		movs	r3, #0
 2986              		.syntax unified
 2987              	@ 493 "./lib/chibios/os/common/ext/ARM/CMSIS/Core/Include/cmsis_gcc.h" 1
 2988 0014 83F31188 		MSR basepri, r3
 2989              	@ 0 "" 2
 2990              	.LVL137:
 2991              		.loc 5 493 3 is_stmt 0 view .LVU748
 2992              		.thumb
 2993              		.syntax unified
 2994              	.LBE790:
 2995              	.LBE789:
 2996              	.LBE791:
 2997              	.LBE792:
 2998              	.LBE793:
 2999              	.LBE794:
 3000              	.LBE795:
 881:tmk_core/protocol/chibios/usb_main.c **** 
 3001              		.loc 1 881 1 view .LVU749
 3002 0018 03B0     		add	sp, sp, #12
 3003              		.cfi_remember_state
 3004              		.cfi_def_cfa_offset 4
 3005              		@ sp needed
 3006 001a 5DF804FB 		ldr	pc, [sp], #4
 3007              	.LVL138:
 3008              	.L147:
 3009              		.cfi_restore_state
 869:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 3010              		.loc 1 869 5 is_stmt 1 view .LVU750
 869:tmk_core/protocol/chibios/usb_main.c ****         /* Need to either suspend, or loop and call unlock/lock during
 3011              		.loc 1 869 8 is_stmt 0 view .LVU751
 3012 001e 1989     		ldrh	r1, [r3, #8]
 3013 0020 C906     		lsls	r1, r1, #27
 3014 0022 0AD5     		bpl	.L149
 874:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 3015              		.loc 1 874 74 view .LVU752
 3016 0024 DB69     		ldr	r3, [r3, #28]
 3017 0026 0190     		str	r0, [sp, #4]
 874:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 3018              		.loc 1 874 9 is_stmt 1 view .LVU753
 3019              	.LVL139:
 3020              	.LBB796:
 3021              	.LBI796:
 736:./lib/chibios/os/hal/osal/rt-nil/osal.h **** }
 737:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 738:./lib/chibios/os/hal/osal/rt-nil/osal.h **** /**
 739:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *          context.
 742:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 743:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      handled as follow:
 746:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        state.
 748:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                        occurred.
 751:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *                      .
 752:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @return              The wake up message.
 753:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  *
 755:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  * @sclass
 756:./lib/chibios/os/hal/osal/rt-nil/osal.h ****  */
 757:./lib/chibios/os/hal/osal/rt-nil/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 3022              		.loc 2 757 21 view .LVU754
 3023              	.LBB797:
 758:./lib/chibios/os/hal/osal/rt-nil/osal.h ****                                               sysinterval_t timeout) {
 759:./lib/chibios/os/hal/osal/rt-nil/osal.h **** 
 760:./lib/chibios/os/hal/osal/rt-nil/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 3024              		.loc 2 760 3 view .LVU755
 3025              	.LBE797:
 3026              	.LBE796:
 874:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 3027              		.loc 1 874 13 is_stmt 0 view .LVU756
 3028 0028 5869     		ldr	r0, [r3, #20]
 3029              	.LVL140:
 3030              	.LBB799:
 3031              	.LBB798:
 3032              		.loc 2 760 10 view .LVU757
 3033 002a 4FF47A71 		mov	r1, #1000
 3034 002e 0C30     		adds	r0, r0, #12
 3035 0030 FFF7FEFF 		bl	chThdSuspendTimeoutS
 3036              	.LVL141:
 3037              		.loc 2 760 10 view .LVU758
 3038              	.LBE798:
 3039              	.LBE799:
 874:tmk_core/protocol/chibios/usb_main.c ****             osalSysUnlock();
 3040              		.loc 1 874 12 view .LVU759
 3041 0034 0130     		adds	r0, r0, #1
 3042 0036 019A     		ldr	r2, [sp, #4]
 3043 0038 EBD0     		beq	.L153
 3044              	.LVL142:
 3045              	.L149:
 879:tmk_core/protocol/chibios/usb_main.c ****     osalSysUnlock();
 3046              		.loc 1 879 5 is_stmt 1 view .LVU760
 3047 003a 0348     		ldr	r0, .L154
 3048 003c 0623     		movs	r3, #6
 3049 003e 0421     		movs	r1, #4
 3050 0040 FFF7FEFF 		bl	usbStartTransmitI
 3051              	.LVL143:
 3052 0044 E5E7     		b	.L153
 3053              	.L155:
 3054 0046 00BF     		.align	2
 3055              	.L154:
 3056 0048 00000000 		.word	USBD1
 3057              		.cfi_endproc
 3058              	.LFE300:
 3060              		.section	.text.send_system,"ax",%progbits
 3061              		.align	1
 3062              		.global	send_system
 3063              		.syntax unified
 3064              		.thumb
 3065              		.thumb_func
 3066              		.fpu fpv4-sp-d16
 3068              	send_system:
 3069              	.LVL144:
 3070              	.LFB303:
 919:tmk_core/protocol/chibios/usb_main.c **** #endif
 920:tmk_core/protocol/chibios/usb_main.c **** 
 921:tmk_core/protocol/chibios/usb_main.c **** void send_system(uint16_t data) {
 3071              		.loc 1 921 33 view -0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 0
 3074              		@ frame_needed = 0, uses_anonymous_args = 0
 3075              		@ link register save eliminated.
 922:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 923:tmk_core/protocol/chibios/usb_main.c ****     send_extra(REPORT_ID_SYSTEM, data);
 3076              		.loc 1 923 5 view .LVU762
 921:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 3077              		.loc 1 921 33 is_stmt 0 view .LVU763
 3078 0000 0146     		mov	r1, r0
 3079              		.loc 1 923 5 view .LVU764
 3080 0002 0320     		movs	r0, #3
 3081              	.LVL145:
 3082              		.loc 1 923 5 view .LVU765
 3083 0004 FFF7FEBF 		b	send_extra
 3084              	.LVL146:
 3085              		.cfi_endproc
 3086              	.LFE303:
 3088              		.section	.text.send_consumer,"ax",%progbits
 3089              		.align	1
 3090              		.global	send_consumer
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu fpv4-sp-d16
 3096              	send_consumer:
 3097              	.LVL147:
 3098              	.LFB304:
 924:tmk_core/protocol/chibios/usb_main.c **** #endif
 925:tmk_core/protocol/chibios/usb_main.c **** }
 926:tmk_core/protocol/chibios/usb_main.c **** 
 927:tmk_core/protocol/chibios/usb_main.c **** void send_consumer(uint16_t data) {
 3099              		.loc 1 927 35 is_stmt 1 view -0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 0
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103              		@ link register save eliminated.
 928:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 929:tmk_core/protocol/chibios/usb_main.c ****     send_extra(REPORT_ID_CONSUMER, data);
 3104              		.loc 1 929 5 view .LVU767
 927:tmk_core/protocol/chibios/usb_main.c **** #ifdef EXTRAKEY_ENABLE
 3105              		.loc 1 927 35 is_stmt 0 view .LVU768
 3106 0000 0146     		mov	r1, r0
 3107              		.loc 1 929 5 view .LVU769
 3108 0002 0420     		movs	r0, #4
 3109              	.LVL148:
 3110              		.loc 1 929 5 view .LVU770
 3111 0004 FFF7FEBF 		b	send_extra
 3112              	.LVL149:
 3113              		.cfi_endproc
 3114              	.LFE304:
 3116              		.section	.text.sendchar,"ax",%progbits
 3117              		.align	1
 3118              		.global	sendchar
 3119              		.syntax unified
 3120              		.thumb
 3121              		.thumb_func
 3122              		.fpu fpv4-sp-d16
 3124              	sendchar:
 3125              	.LVL150:
 3126              	.LFB305:
 930:tmk_core/protocol/chibios/usb_main.c **** #endif
 931:tmk_core/protocol/chibios/usb_main.c **** }
 932:tmk_core/protocol/chibios/usb_main.c **** 
 933:tmk_core/protocol/chibios/usb_main.c **** /* ---------------------------------------------------------
 934:tmk_core/protocol/chibios/usb_main.c ****  *                   Console functions
 935:tmk_core/protocol/chibios/usb_main.c ****  * ---------------------------------------------------------
 936:tmk_core/protocol/chibios/usb_main.c ****  */
 937:tmk_core/protocol/chibios/usb_main.c **** 
 938:tmk_core/protocol/chibios/usb_main.c **** #ifdef CONSOLE_ENABLE
 939:tmk_core/protocol/chibios/usb_main.c **** 
 940:tmk_core/protocol/chibios/usb_main.c **** int8_t sendchar(uint8_t c) {
 3127              		.loc 1 940 28 is_stmt 1 view -0
 3128              		.cfi_startproc
 3129              		@ args = 0, pretend = 0, frame = 8
 3130              		@ frame_needed = 0, uses_anonymous_args = 0
 941:tmk_core/protocol/chibios/usb_main.c ****     static bool timed_out = false;
 3131              		.loc 1 941 5 view .LVU772
 942:tmk_core/protocol/chibios/usb_main.c ****     /* The `timed_out` state is an approximation of the ideal `is_listener_disconnected?` state.
 943:tmk_core/protocol/chibios/usb_main.c ****      *
 944:tmk_core/protocol/chibios/usb_main.c ****      * When a 5ms timeout write has timed out, hid_listen is most likely not running, or not
 945:tmk_core/protocol/chibios/usb_main.c ****      * listening to this keyboard, so we go into the timed_out state. In this state we assume
 946:tmk_core/protocol/chibios/usb_main.c ****      * that hid_listen is most likely not gonna be connected to us any time soon, so it would
 947:tmk_core/protocol/chibios/usb_main.c ****      * be wasteful to write follow-up characters with a 5ms timeout, it would all add up and
 948:tmk_core/protocol/chibios/usb_main.c ****      * unncecessarily slow down the firmware. However instead of just dropping the characters,
 949:tmk_core/protocol/chibios/usb_main.c ****      * we write them with a TIME_IMMEDIATE timeout, which is a zero timeout,
 950:tmk_core/protocol/chibios/usb_main.c ****      * and this will succeed only if hid_listen gets connected again. When a write with
 951:tmk_core/protocol/chibios/usb_main.c ****      * TIME_IMMEDIATE timeout succeeds, we know that hid_listen is listening to us again, and
 952:tmk_core/protocol/chibios/usb_main.c ****      * we can go back to the timed_out = false state, and following writes will be executed
 953:tmk_core/protocol/chibios/usb_main.c ****      * with a 5ms timeout. The reason we don't just send all characters with the TIME_IMMEDIATE
 954:tmk_core/protocol/chibios/usb_main.c ****      * timeout is that this could cause bytes to be lost even if hid_listen is running, if there
 955:tmk_core/protocol/chibios/usb_main.c ****      * is a lot of data being sent over the console.
 956:tmk_core/protocol/chibios/usb_main.c ****      *
 957:tmk_core/protocol/chibios/usb_main.c ****      * This logic will work correctly as long as hid_listen is able to receive at least 200
 958:tmk_core/protocol/chibios/usb_main.c ****      * bytes per second. On a heavily overloaded machine that's so overloaded that it's
 959:tmk_core/protocol/chibios/usb_main.c ****      * unusable, and constantly swapping, hid_listen might have trouble receiving 200 bytes per
 960:tmk_core/protocol/chibios/usb_main.c ****      * second, so some bytes might be lost on the console.
 961:tmk_core/protocol/chibios/usb_main.c ****      */
 962:tmk_core/protocol/chibios/usb_main.c **** 
 963:tmk_core/protocol/chibios/usb_main.c ****     const sysinterval_t timeout = timed_out ? TIME_IMMEDIATE : TIME_MS2I(5);
 3132              		.loc 1 963 5 view .LVU773
 940:tmk_core/protocol/chibios/usb_main.c ****     static bool timed_out = false;
 3133              		.loc 1 940 28 is_stmt 0 view .LVU774
 3134 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 3135              		.cfi_def_cfa_offset 24
 3136              		.cfi_offset 4, -12
 3137              		.cfi_offset 5, -8
 3138              		.cfi_offset 14, -4
 3139              		.loc 1 963 45 view .LVU775
 3140 0002 0C4C     		ldr	r4, .L161
 940:tmk_core/protocol/chibios/usb_main.c ****     static bool timed_out = false;
 3141              		.loc 1 940 28 view .LVU776
 3142 0004 8DF80700 		strb	r0, [sp, #7]
 3143              		.loc 1 963 62 view .LVU777
 3144 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 964:tmk_core/protocol/chibios/usb_main.c ****     const size_t        result  = chnWriteTimeout(&drivers.console_driver.driver, &c, 1, timeout);
 3145              		.loc 1 964 35 view .LVU778
 3146 000a 0B48     		ldr	r0, .L161+4
 3147              	.LVL151:
 963:tmk_core/protocol/chibios/usb_main.c ****     const size_t        result  = chnWriteTimeout(&drivers.console_driver.driver, &c, 1, timeout);
 3148              		.loc 1 963 62 view .LVU779
 3149 000c 002B     		cmp	r3, #0
 3150              	.LVL152:
 3151              		.loc 1 964 5 is_stmt 1 view .LVU780
 3152              		.loc 1 964 35 is_stmt 0 view .LVU781
 3153 000e 50F8D43F 		ldr	r3, [r0, #212]!
 3154 0012 4FF00102 		mov	r2, #1
 3155 0016 DD69     		ldr	r5, [r3, #28]
 3156 0018 0DF10701 		add	r1, sp, #7
 3157              	.LVL153:
 3158              		.loc 1 964 35 view .LVU782
 3159 001c 0CBF     		ite	eq
 3160 001e 4FF4FA73 		moveq	r3, #500
 3161 0022 0023     		movne	r3, #0
 3162 0024 A847     		blx	r5
 3163              	.LVL154:
 965:tmk_core/protocol/chibios/usb_main.c ****     timed_out                   = (result == 0);
 3164              		.loc 1 965 5 is_stmt 1 view .LVU783
 3165              		.loc 1 965 43 is_stmt 0 view .LVU784
 3166 0026 B0FA80F3 		clz	r3, r0
 3167 002a 5B09     		lsrs	r3, r3, #5
 966:tmk_core/protocol/chibios/usb_main.c ****     return result;
 967:tmk_core/protocol/chibios/usb_main.c **** }
 3168              		.loc 1 967 1 view .LVU785
 3169 002c 40B2     		sxtb	r0, r0
 3170              	.LVL155:
 965:tmk_core/protocol/chibios/usb_main.c ****     timed_out                   = (result == 0);
 3171              		.loc 1 965 43 view .LVU786
 3172 002e 2370     		strb	r3, [r4]
 966:tmk_core/protocol/chibios/usb_main.c ****     return result;
 3173              		.loc 1 966 5 is_stmt 1 view .LVU787
 3174              		.loc 1 967 1 is_stmt 0 view .LVU788
 3175 0030 03B0     		add	sp, sp, #12
 3176              		.cfi_def_cfa_offset 12
 3177              		@ sp needed
 3178 0032 30BD     		pop	{r4, r5, pc}
 3179              	.L162:
 3180              		.align	2
 3181              	.L161:
 3182 0034 00000000 		.word	.LANCHOR13
 3183 0038 00000000 		.word	.LANCHOR0
 3184              		.cfi_endproc
 3185              	.LFE305:
 3187              		.section	.text.console_task,"ax",%progbits
 3188              		.align	1
 3189              		.global	console_task
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3193              		.fpu fpv4-sp-d16
 3195              	console_task:
 3196              	.LFB307:
 968:tmk_core/protocol/chibios/usb_main.c **** 
 969:tmk_core/protocol/chibios/usb_main.c **** // Just a dummy function for now, this could be exposed as a weak function
 970:tmk_core/protocol/chibios/usb_main.c **** // Or connected to the actual QMK console
 971:tmk_core/protocol/chibios/usb_main.c **** static void console_receive(uint8_t *data, uint8_t length) {
 972:tmk_core/protocol/chibios/usb_main.c ****     (void)data;
 973:tmk_core/protocol/chibios/usb_main.c ****     (void)length;
 974:tmk_core/protocol/chibios/usb_main.c **** }
 975:tmk_core/protocol/chibios/usb_main.c **** 
 976:tmk_core/protocol/chibios/usb_main.c **** void console_task(void) {
 3197              		.loc 1 976 25 is_stmt 1 view -0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 32
 3200              		@ frame_needed = 0, uses_anonymous_args = 0
 977:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 3201              		.loc 1 977 5 view .LVU790
 978:tmk_core/protocol/chibios/usb_main.c ****     size_t  size = 0;
 3202              		.loc 1 978 5 view .LVU791
 3203              	.LVL156:
 979:tmk_core/protocol/chibios/usb_main.c ****     do {
 3204              		.loc 1 979 5 view .LVU792
 3205              	.LBB800:
 980:tmk_core/protocol/chibios/usb_main.c ****         size_t size = chnReadTimeout(&drivers.console_driver.driver, buffer, sizeof(buffer), TIME_I
 3206              		.loc 1 980 9 view .LVU793
 3207              	.LBE800:
 976:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 3208              		.loc 1 976 25 is_stmt 0 view .LVU794
 3209 0000 10B5     		push	{r4, lr}
 3210              		.cfi_def_cfa_offset 8
 3211              		.cfi_offset 4, -8
 3212              		.cfi_offset 14, -4
 3213              	.LBB801:
 3214              		.loc 1 980 23 view .LVU795
 3215 0002 0648     		ldr	r0, .L164
 3216 0004 D0F8D430 		ldr	r3, [r0, #212]
 3217              	.LBE801:
 976:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[CONSOLE_EPSIZE];
 3218              		.loc 1 976 25 view .LVU796
 3219 0008 88B0     		sub	sp, sp, #32
 3220              		.cfi_def_cfa_offset 40
 3221              	.LBB802:
 3222              		.loc 1 980 23 view .LVU797
 3223 000a 1C6A     		ldr	r4, [r3, #32]
 3224 000c 2022     		movs	r2, #32
 3225 000e 0023     		movs	r3, #0
 3226 0010 6946     		mov	r1, sp
 3227 0012 D430     		adds	r0, r0, #212
 3228 0014 A047     		blx	r4
 3229              	.LVL157:
 981:tmk_core/protocol/chibios/usb_main.c ****         if (size > 0) {
 3230              		.loc 1 981 9 is_stmt 1 view .LVU798
 3231              	.LBE802:
 982:tmk_core/protocol/chibios/usb_main.c ****             console_receive(buffer, size);
 983:tmk_core/protocol/chibios/usb_main.c ****         }
 984:tmk_core/protocol/chibios/usb_main.c ****     } while (size > 0);
 3232              		.loc 1 984 13 view .LVU799
 985:tmk_core/protocol/chibios/usb_main.c **** }
 3233              		.loc 1 985 1 is_stmt 0 view .LVU800
 3234 0016 08B0     		add	sp, sp, #32
 3235              		.cfi_def_cfa_offset 8
 3236              		@ sp needed
 3237 0018 10BD     		pop	{r4, pc}
 3238              	.L165:
 3239 001a 00BF     		.align	2
 3240              	.L164:
 3241 001c 00000000 		.word	.LANCHOR0
 3242              		.cfi_endproc
 3243              	.LFE307:
 3245              		.section	.text.raw_hid_send,"ax",%progbits
 3246              		.align	1
 3247              		.global	raw_hid_send
 3248              		.syntax unified
 3249              		.thumb
 3250              		.thumb_func
 3251              		.fpu fpv4-sp-d16
 3253              	raw_hid_send:
 3254              	.LVL158:
 3255              	.LFB308:
 986:tmk_core/protocol/chibios/usb_main.c **** 
 987:tmk_core/protocol/chibios/usb_main.c **** #endif /* CONSOLE_ENABLE */
 988:tmk_core/protocol/chibios/usb_main.c **** 
 989:tmk_core/protocol/chibios/usb_main.c **** #ifdef RAW_ENABLE
 990:tmk_core/protocol/chibios/usb_main.c **** void raw_hid_send(uint8_t *data, uint8_t length) {
 3256              		.loc 1 990 50 is_stmt 1 view -0
 3257              		.cfi_startproc
 3258              		@ args = 0, pretend = 0, frame = 0
 3259              		@ frame_needed = 0, uses_anonymous_args = 0
 3260              		@ link register save eliminated.
 991:tmk_core/protocol/chibios/usb_main.c ****     // TODO: implement variable size packet
 992:tmk_core/protocol/chibios/usb_main.c ****     if (length != RAW_EPSIZE) {
 3261              		.loc 1 992 5 view .LVU802
 3262              		.loc 1 992 8 is_stmt 0 view .LVU803
 3263 0000 2029     		cmp	r1, #32
 990:tmk_core/protocol/chibios/usb_main.c ****     // TODO: implement variable size packet
 3264              		.loc 1 990 50 view .LVU804
 3265 0002 10B4     		push	{r4}
 3266              		.cfi_def_cfa_offset 4
 3267              		.cfi_offset 4, -4
 990:tmk_core/protocol/chibios/usb_main.c ****     // TODO: implement variable size packet
 3268              		.loc 1 990 50 view .LVU805
 3269 0004 0A46     		mov	r2, r1
 3270              		.loc 1 992 8 view .LVU806
 3271 0006 0AD1     		bne	.L166
 993:tmk_core/protocol/chibios/usb_main.c ****         return;
 994:tmk_core/protocol/chibios/usb_main.c ****     }
 995:tmk_core/protocol/chibios/usb_main.c ****     chnWrite(&drivers.raw_driver.driver, data, length);
 3272              		.loc 1 995 5 is_stmt 1 view .LVU807
 3273 0008 064B     		ldr	r3, .L168
 3274 000a D3F82812 		ldr	r1, [r3, #552]
 3275              	.LVL159:
 3276              		.loc 1 995 5 is_stmt 0 view .LVU808
 3277 000e 4C68     		ldr	r4, [r1, #4]
 3278 0010 0146     		mov	r1, r0
 3279 0012 03F50A70 		add	r0, r3, #552
 3280              	.LVL160:
 3281              		.loc 1 995 5 view .LVU809
 3282 0016 2346     		mov	r3, r4
 996:tmk_core/protocol/chibios/usb_main.c **** }
 3283              		.loc 1 996 1 view .LVU810
 3284 0018 5DF8044B 		ldr	r4, [sp], #4
 3285              		.cfi_remember_state
 3286              		.cfi_restore 4
 3287              		.cfi_def_cfa_offset 0
 995:tmk_core/protocol/chibios/usb_main.c **** }
 3288              		.loc 1 995 5 view .LVU811
 3289 001c 1847     		bx	r3
 3290              	.LVL161:
 3291              	.L166:
 3292              		.cfi_restore_state
 3293              		.loc 1 996 1 view .LVU812
 3294 001e 5DF8044B 		ldr	r4, [sp], #4
 3295              		.cfi_restore 4
 3296              		.cfi_def_cfa_offset 0
 3297 0022 7047     		bx	lr
 3298              	.L169:
 3299              		.align	2
 3300              	.L168:
 3301 0024 00000000 		.word	.LANCHOR0
 3302              		.cfi_endproc
 3303              	.LFE308:
 3305              		.section	.text.raw_hid_receive,"ax",%progbits
 3306              		.align	1
 3307              		.weak	raw_hid_receive
 3308              		.syntax unified
 3309              		.thumb
 3310              		.thumb_func
 3311              		.fpu fpv4-sp-d16
 3313              	raw_hid_receive:
 3314              	.LVL162:
 3315              	.LFB309:
 997:tmk_core/protocol/chibios/usb_main.c **** 
 998:tmk_core/protocol/chibios/usb_main.c **** __attribute__((weak)) void raw_hid_receive(uint8_t *data, uint8_t length) {
 3316              		.loc 1 998 75 is_stmt 1 view -0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 0
 3319              		@ frame_needed = 0, uses_anonymous_args = 0
 3320              		@ link register save eliminated.
 999:tmk_core/protocol/chibios/usb_main.c ****     // Users should #include "raw_hid.h" in their own code
1000:tmk_core/protocol/chibios/usb_main.c ****     // and implement this function there. Leave this as weak linkage
1001:tmk_core/protocol/chibios/usb_main.c ****     // so users can opt to not handle data coming in.
1002:tmk_core/protocol/chibios/usb_main.c **** }
 3321              		.loc 1 1002 1 view .LVU814
 3322 0000 7047     		bx	lr
 3323              		.cfi_endproc
 3324              	.LFE309:
 3326              		.section	.text.raw_hid_task,"ax",%progbits
 3327              		.align	1
 3328              		.global	raw_hid_task
 3329              		.syntax unified
 3330              		.thumb
 3331              		.thumb_func
 3332              		.fpu fpv4-sp-d16
 3334              	raw_hid_task:
 3335              	.LFB310:
1003:tmk_core/protocol/chibios/usb_main.c **** 
1004:tmk_core/protocol/chibios/usb_main.c **** void raw_hid_task(void) {
 3336              		.loc 1 1004 25 view -0
 3337              		.cfi_startproc
 3338              		@ args = 0, pretend = 0, frame = 32
 3339              		@ frame_needed = 0, uses_anonymous_args = 0
1005:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[RAW_EPSIZE];
 3340              		.loc 1 1005 5 view .LVU816
1006:tmk_core/protocol/chibios/usb_main.c ****     size_t  size = 0;
 3341              		.loc 1 1006 5 view .LVU817
 3342              	.LVL163:
1007:tmk_core/protocol/chibios/usb_main.c ****     do {
 3343              		.loc 1 1007 5 view .LVU818
 3344              	.LBB803:
1008:tmk_core/protocol/chibios/usb_main.c ****         size_t size = chnReadTimeout(&drivers.raw_driver.driver, buffer, sizeof(buffer), TIME_IMMED
 3345              		.loc 1 1008 9 view .LVU819
 3346              	.LBE803:
1004:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[RAW_EPSIZE];
 3347              		.loc 1 1004 25 is_stmt 0 view .LVU820
 3348 0000 10B5     		push	{r4, lr}
 3349              		.cfi_def_cfa_offset 8
 3350              		.cfi_offset 4, -8
 3351              		.cfi_offset 14, -4
 3352              	.LBB804:
 3353              		.loc 1 1008 23 view .LVU821
 3354 0002 0948     		ldr	r0, .L176
 3355 0004 D0F82832 		ldr	r3, [r0, #552]
 3356              	.LBE804:
1004:tmk_core/protocol/chibios/usb_main.c ****     uint8_t buffer[RAW_EPSIZE];
 3357              		.loc 1 1004 25 view .LVU822
 3358 0008 88B0     		sub	sp, sp, #32
 3359              		.cfi_def_cfa_offset 40
 3360              	.LBB805:
 3361              		.loc 1 1008 23 view .LVU823
 3362 000a 1C6A     		ldr	r4, [r3, #32]
 3363 000c 2022     		movs	r2, #32
 3364 000e 0023     		movs	r3, #0
 3365 0010 6946     		mov	r1, sp
 3366 0012 00F50A70 		add	r0, r0, #552
 3367 0016 A047     		blx	r4
 3368              	.LVL164:
1009:tmk_core/protocol/chibios/usb_main.c ****         if (size > 0) {
 3369              		.loc 1 1009 9 is_stmt 1 view .LVU824
 3370              		.loc 1 1009 12 is_stmt 0 view .LVU825
 3371 0018 18B1     		cbz	r0, .L171
1010:tmk_core/protocol/chibios/usb_main.c ****             raw_hid_receive(buffer, size);
 3372              		.loc 1 1010 13 is_stmt 1 view .LVU826
 3373 001a C1B2     		uxtb	r1, r0
 3374 001c 6846     		mov	r0, sp
 3375              	.LVL165:
 3376              		.loc 1 1010 13 is_stmt 0 view .LVU827
 3377 001e FFF7FEFF 		bl	raw_hid_receive
 3378              	.LVL166:
 3379              	.LBE805:
1011:tmk_core/protocol/chibios/usb_main.c ****         }
1012:tmk_core/protocol/chibios/usb_main.c ****     } while (size > 0);
 3380              		.loc 1 1012 13 is_stmt 1 view .LVU828
 3381              	.L171:
1013:tmk_core/protocol/chibios/usb_main.c **** }
 3382              		.loc 1 1013 1 is_stmt 0 view .LVU829
 3383 0022 08B0     		add	sp, sp, #32
 3384              		.cfi_def_cfa_offset 8
 3385              		@ sp needed
 3386 0024 10BD     		pop	{r4, pc}
 3387              	.L177:
 3388 0026 00BF     		.align	2
 3389              	.L176:
 3390 0028 00000000 		.word	.LANCHOR0
 3391              		.cfi_endproc
 3392              	.LFE310:
 3394              		.global	last_suspend_state
 3395              		.comm	event_queue_tail,1,1
 3396              		.comm	event_queue_head,1,1
 3397              		.comm	event_queue,16,1
 3398              		.global	extra_report_blank
 3399              		.global	mouse_report_blank
 3400              		.global	keyboard_report_sent
 3401              		.global	keyboard_idle_count
 3402              		.global	keyboard_led_state
 3403              		.global	keyboard_protocol
 3404              		.global	keyboard_idle
 3405              		.section	.bss.__compound_literal.0,"aw",%nobits
 3406              		.align	2
 3409              	__compound_literal.0:
 3410 0000 00000000 		.space	144
 3410      00000000 
 3410      00000000 
 3410      00000000 
 3410      00000000 
 3411              		.section	.bss.__compound_literal.1,"aw",%nobits
 3412              		.align	2
 3415              	__compound_literal.1:
 3416 0000 00000000 		.space	144
 3416      00000000 
 3416      00000000 
 3416      00000000 
 3416      00000000 
 3417              		.section	.bss.__compound_literal.2,"aw",%nobits
 3418              		.align	2
 3421              	__compound_literal.2:
 3422 0000 00000000 		.space	144
 3422      00000000 
 3422      00000000 
 3422      00000000 
 3422      00000000 
 3423              		.section	.bss.__compound_literal.3,"aw",%nobits
 3424              		.align	2
 3427              	__compound_literal.3:
 3428 0000 00000000 		.space	144
 3428      00000000 
 3428      00000000 
 3428      00000000 
 3428      00000000 
 3429              		.section	.bss.desc.2,"aw",%nobits
 3430              		.align	2
 3431              		.set	.LANCHOR1,. + 0
 3434              	desc.2:
 3435 0000 00000000 		.space	8
 3435      00000000 
 3436              		.section	.bss.extra_report_blank,"aw",%nobits
 3439              	extra_report_blank:
 3440 0000 000000   		.space	3
 3441              		.section	.bss.kbd_ep_state,"aw",%nobits
 3442              		.align	2
 3445              	kbd_ep_state:
 3446 0000 00000000 		.space	20
 3446      00000000 
 3446      00000000 
 3446      00000000 
 3446      00000000 
 3447              		.section	.bss.keyboard_idle,"aw",%nobits
 3448              		.align	1
 3449              		.set	.LANCHOR6,. + 0
 3452              	keyboard_idle:
 3453 0000 00       		.space	1
 3454              		.section	.bss.keyboard_idle_count,"aw",%nobits
 3455              		.align	1
 3458              	keyboard_idle_count:
 3459 0000 0000     		.space	2
 3460              		.section	.bss.keyboard_idle_timer,"aw",%nobits
 3461              		.align	2
 3462              		.set	.LANCHOR5,. + 0
 3465              	keyboard_idle_timer:
 3466 0000 00000000 		.space	20
 3466      00000000 
 3466      00000000 
 3466      00000000 
 3466      00000000 
 3467              		.section	.bss.keyboard_led_state,"aw",%nobits
 3468              		.set	.LANCHOR3,. + 0
 3471              	keyboard_led_state:
 3472 0000 00       		.space	1
 3473              		.section	.bss.keyboard_report_sent,"aw",%nobits
 3474              		.set	.LANCHOR8,. + 0
 3477              	keyboard_report_sent:
 3478 0000 00000000 		.space	32
 3478      00000000 
 3478      00000000 
 3478      00000000 
 3478      00000000 
 3479              		.section	.bss.last_suspend_state,"aw",%nobits
 3480              		.set	.LANCHOR11,. + 0
 3483              	last_suspend_state:
 3484 0000 00       		.space	1
 3485              		.section	.bss.mouse_report_blank,"aw",%nobits
 3488              	mouse_report_blank:
 3489 0000 00000000 		.space	6
 3489      0000
 3490              		.section	.bss.report.1,"aw",%nobits
 3491              		.set	.LANCHOR4,. + 0
 3494              	report.1:
 3495 0000 000000   		.space	3
 3496              		.section	.bss.set_report_buf,"aw",%nobits
 3497              		.align	2
 3498              		.set	.LANCHOR2,. + 0
 3501              	set_report_buf:
 3502 0000 0000     		.space	2
 3503              		.section	.bss.shared_ep_state,"aw",%nobits
 3504              		.align	2
 3507              	shared_ep_state:
 3508 0000 00000000 		.space	20
 3508      00000000 
 3508      00000000 
 3508      00000000 
 3508      00000000 
 3509              		.section	.bss.timed_out.0,"aw",%nobits
 3510              		.set	.LANCHOR13,. + 0
 3513              	timed_out.0:
 3514 0000 00       		.space	1
 3515              		.section	.data.drivers,"aw"
 3516              		.align	2
 3517              		.set	.LANCHOR0,. + 0
 3520              	drivers:
 3521 0000 04000000 		.word	4
 3522 0004 04000000 		.word	4
 3523 0008 00000000 		.space	60
 3523      00000000 
 3523      00000000 
 3523      00000000 
 3523      00000000 
 3524 0044 03000000 		.word	3
 3525 0048 00000000 		.word	0
 3526 004c 00000000 		.word	qmkusbDataTransmitted
 3527 0050 00000000 		.word	0
 3528 0054 2000     		.short	32
 3529 0056 0000     		.short	0
 3530 0058 00000000 		.word	0
 3531 005c 00000000 		.word	0
 3532 0060 0200     		.short	2
 3533 0062 0000     		.space	2
 3534 0064 00000000 		.word	0
 3535 0068 03000000 		.word	3
 3536 006c 00000000 		.word	0
 3537 0070 00000000 		.word	0
 3538 0074 00000000 		.word	qmkusbDataReceived
 3539 0078 0000     		.short	0
 3540 007a 2000     		.short	32
 3541 007c 00000000 		.word	0
 3542 0080 00000000 		.word	0
 3543 0084 0200     		.short	2
 3544 0086 0000     		.space	2
 3545 0088 00000000 		.word	0
 3546 008c 03000000 		.word	3
 3547 0090 00000000 		.word	0
 3548 0094 00000000 		.word	qmkusbInterruptTransmitted
 3549 0098 00000000 		.word	0
 3550 009c 0800     		.short	8
 3551 009e 0000     		.short	0
 3552 00a0 00000000 		.word	0
 3553 00a4 00000000 		.word	0
 3554 00a8 0200     		.short	2
 3555 00aa 0000     		.space	2
 3556 00ac 00000000 		.word	0
 3557 00b0 00000000 		.word	USBD1
 3558 00b4 05       		.byte	5
 3559 00b5 06       		.byte	6
 3560 00b6 00       		.byte	0
 3561 00b7 00       		.space	1
 3562 00b8 04000000 		.word	4
 3563 00bc 04000000 		.word	4
 3564 00c0 20000000 		.word	32
 3565 00c4 20000000 		.word	32
 3566 00c8 01       		.byte	1
 3567 00c9 000000   		.space	3
 3568 00cc 00000000 		.word	__compound_literal.0
 3569 00d0 00000000 		.word	__compound_literal.1
 3570 00d4 00000000 		.space	128
 3570      00000000 
 3570      00000000 
 3570      00000000 
 3570      00000000 
 3571 0154 04000000 		.word	4
 3572 0158 04000000 		.word	4
 3573 015c 00000000 		.space	60
 3573      00000000 
 3573      00000000 
 3573      00000000 
 3573      00000000 
 3574 0198 03000000 		.word	3
 3575 019c 00000000 		.word	0
 3576 01a0 00000000 		.word	qmkusbDataTransmitted
 3577 01a4 00000000 		.word	0
 3578 01a8 2000     		.short	32
 3579 01aa 0000     		.short	0
 3580 01ac 00000000 		.word	0
 3581 01b0 00000000 		.word	0
 3582 01b4 0200     		.short	2
 3583 01b6 0000     		.space	2
 3584 01b8 00000000 		.word	0
 3585 01bc 03000000 		.word	3
 3586 01c0 00000000 		.word	0
 3587 01c4 00000000 		.word	0
 3588 01c8 00000000 		.word	qmkusbDataReceived
 3589 01cc 0000     		.short	0
 3590 01ce 2000     		.short	32
 3591 01d0 00000000 		.word	0
 3592 01d4 00000000 		.word	0
 3593 01d8 0200     		.short	2
 3594 01da 0000     		.space	2
 3595 01dc 00000000 		.word	0
 3596 01e0 03000000 		.word	3
 3597 01e4 00000000 		.word	0
 3598 01e8 00000000 		.word	qmkusbInterruptTransmitted
 3599 01ec 00000000 		.word	0
 3600 01f0 0800     		.short	8
 3601 01f2 0000     		.short	0
 3602 01f4 00000000 		.word	0
 3603 01f8 00000000 		.word	0
 3604 01fc 0200     		.short	2
 3605 01fe 0000     		.space	2
 3606 0200 00000000 		.word	0
 3607 0204 00000000 		.word	USBD1
 3608 0208 02       		.byte	2
 3609 0209 03       		.byte	3
 3610 020a 00       		.byte	0
 3611 020b 00       		.space	1
 3612 020c 04000000 		.word	4
 3613 0210 04000000 		.word	4
 3614 0214 20000000 		.word	32
 3615 0218 20000000 		.word	32
 3616 021c 00       		.byte	0
 3617 021d 000000   		.space	3
 3618 0220 00000000 		.word	__compound_literal.2
 3619 0224 00000000 		.word	__compound_literal.3
 3620 0228 00000000 		.space	128
 3620      00000000 
 3620      00000000 
 3620      00000000 
 3620      00000000 
 3621              		.section	.data.keyboard_protocol,"aw"
 3622              		.align	1
 3623              		.set	.LANCHOR7,. + 0
 3626              	keyboard_protocol:
 3627 0000 01       		.byte	1
 3628              		.section	.rodata.kbd_ep_config,"a"
 3629              		.align	2
 3630              		.set	.LANCHOR9,. + 0
 3633              	kbd_ep_config:
 3634 0000 03000000 		.word	3
 3635 0004 00000000 		.word	0
 3636 0008 00000000 		.word	kbd_in_cb
 3637 000c 00000000 		.word	0
 3638 0010 0800     		.short	8
 3639 0012 0000     		.short	0
 3640 0014 00000000 		.word	kbd_ep_state
 3641 0018 00000000 		.word	0
 3642 001c 0200     		.short	2
 3643 001e 0000     		.space	2
 3644 0020 00000000 		.word	0
 3645              		.section	.rodata.shared_ep_config,"a"
 3646              		.align	2
 3647              		.set	.LANCHOR10,. + 0
 3650              	shared_ep_config:
 3651 0000 03000000 		.word	3
 3652 0004 00000000 		.word	0
 3653 0008 00000000 		.word	shared_in_cb
 3654 000c 00000000 		.word	0
 3655 0010 2000     		.short	32
 3656 0012 0000     		.short	0
 3657 0014 00000000 		.word	shared_ep_state
 3658 0018 00000000 		.word	0
 3659 001c 0200     		.short	2
 3660 001e 0000     		.space	2
 3661 0020 00000000 		.word	0
 3662              		.section	.rodata.usbcfg,"a"
 3663              		.align	2
 3664              		.set	.LANCHOR12,. + 0
 3667              	usbcfg:
 3668 0000 00000000 		.word	usb_event_cb
 3669 0004 00000000 		.word	usb_get_descriptor_cb
 3670 0008 00000000 		.word	usb_request_hook_cb
 3671 000c 00000000 		.word	usb_sof_cb
 3672              		.text
 3673              	.Letext0:
 3674              		.file 7 "c:\\qmk_msys\\mingw64\\lib\\gcc\\arm-none-eabi\\10.1.0\\include\\stddef.h"
 3675              		.file 8 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 3676              		.file 9 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 3677              		.file 10 "./lib/chibios/os/common/ports/ARMCMx/compilers/GCC/chtypes.h"
 3678              		.file 11 "./lib/chibios/os/rt/include/chsystypes.h"
 3679              		.file 12 "./lib/chibios/os/rt/include/chschd.h"
 3680              		.file 13 "./lib/chibios/os/rt/include/chtime.h"
 3681              		.file 14 "./lib/chibios/os/rt/include/chsem.h"
 3682              		.file 15 "./lib/chibios/os/rt/include/chmtx.h"
 3683              		.file 16 "./lib/chibios/os/rt/include/chevents.h"
 3684              		.file 17 "./lib/chibios/os/hal/include/hal_buffers.h"
 3685              		.file 18 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/stm32_gpio.h"
 3686              		.file 19 "./lib/chibios/os/hal/ports/STM32/LLD/GPIOv2/hal_pal_lld.h"
 3687              		.file 20 "./lib/chibios/os/hal/include/hal_usb.h"
 3688              		.file 21 "./lib/chibios/os/hal/ports/STM32/LLD/USBv1/hal_usb_lld.h"
 3689              		.file 22 "tmk_core/common/report.h"
 3690              		.file 23 "tmk_core/protocol/usb_descriptor.h"
 3691              		.file 24 "tmk_core/common/host.h"
 3692              		.file 25 "tmk_core/protocol/chibios/usb_driver.h"
 3693              		.file 26 "quantum/keycode_config.h"
 3694              		.file 27 "./lib/chibios/os/rt/include/chthreads.h"
 3695              		.file 28 "tmk_core/common/suspend.h"
 3696              		.file 29 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_main.c
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:18     .text.kbd_in_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:26     .text.kbd_in_cb:0000000000000000 kbd_in_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:43     .text.usb_sof_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:49     .text.usb_sof_cb:0000000000000000 usb_sof_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:223    .text.usb_sof_cb:0000000000000024 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:228    .text.usb_get_descriptor_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:234    .text.usb_get_descriptor_cb:0000000000000000 usb_get_descriptor_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:291    .text.usb_get_descriptor_cb:0000000000000028 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:296    .text.set_led_transfer_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:302    .text.set_led_transfer_cb:0000000000000000 set_led_transfer_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:361    .text.set_led_transfer_cb:0000000000000024 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:367    .text.send_extra:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:373    .text.send_extra:0000000000000000 send_extra
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:545    .text.send_extra:000000000000002c $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:553    .text.chVTSetI.constprop.0:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:559    .text.chVTSetI.constprop.0:0000000000000000 chVTSetI.constprop.0
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:642    .text.chVTSetI.constprop.0:0000000000000024 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:656    .text.keyboard_idle_timer_cb:0000000000000000 keyboard_idle_timer_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:650    .text.keyboard_idle_timer_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:888    .text.keyboard_idle_timer_cb:0000000000000064 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:899    .text.usb_request_hook_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:905    .text.usb_request_hook_cb:0000000000000000 usb_request_hook_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1301   .text.usb_request_hook_cb:000000000000013c $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1314   .text.usb_event_queue_enqueue.isra.0:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1320   .text.usb_event_queue_enqueue.isra.0:0000000000000000 usb_event_queue_enqueue.isra.0
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1364   .text.usb_event_queue_enqueue.isra.0:000000000000001c $d
                            *COM*:0000000000000001 event_queue_head
                            *COM*:0000000000000001 event_queue_tail
                            *COM*:0000000000000010 event_queue
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1371   .text.usb_event_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1377   .text.usb_event_cb:0000000000000000 usb_event_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1398   .text.usb_event_cb:000000000000000c $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:1404   .text.usb_event_cb:0000000000000012 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2086   .text.usb_event_cb:00000000000000ec $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2100   .text.shared_in_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2107   .text.shared_in_cb:0000000000000000 shared_in_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2118   .text.usb_event_queue_init:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2125   .text.usb_event_queue_init:0000000000000000 usb_event_queue_init
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2157   .text.usb_event_queue_init:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2164   .text.usb_event_queue_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2171   .text.usb_event_queue_task:0000000000000000 usb_event_queue_task
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2287   .text.usb_event_queue_task:0000000000000044 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2297   .text.init_usb_driver:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2304   .text.init_usb_driver:0000000000000000 init_usb_driver
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2452   .text.init_usb_driver:00000000000000a0 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2460   .text.restart_usb_driver:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2467   .text.restart_usb_driver:0000000000000000 restart_usb_driver
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2527   .text.restart_usb_driver:0000000000000038 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2532   .text.kbd_sof_cb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2539   .text.kbd_sof_cb:0000000000000000 kbd_sof_cb
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2554   .text.keyboard_leds:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2561   .text.keyboard_leds:0000000000000000 keyboard_leds
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2576   .text.keyboard_leds:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2581   .text.send_keyboard:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2588   .text.send_keyboard:0000000000000000 send_keyboard
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2844   .text.send_keyboard:0000000000000088 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2853   .text.send_mouse:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:2860   .text.send_mouse:0000000000000000 send_mouse
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3056   .text.send_mouse:0000000000000048 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3061   .text.send_system:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3068   .text.send_system:0000000000000000 send_system
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3089   .text.send_consumer:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3096   .text.send_consumer:0000000000000000 send_consumer
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3117   .text.sendchar:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3124   .text.sendchar:0000000000000000 sendchar
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3182   .text.sendchar:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3188   .text.console_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3195   .text.console_task:0000000000000000 console_task
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3241   .text.console_task:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3246   .text.raw_hid_send:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3253   .text.raw_hid_send:0000000000000000 raw_hid_send
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3301   .text.raw_hid_send:0000000000000024 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3306   .text.raw_hid_receive:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3313   .text.raw_hid_receive:0000000000000000 raw_hid_receive
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3327   .text.raw_hid_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3334   .text.raw_hid_task:0000000000000000 raw_hid_task
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3390   .text.raw_hid_task:0000000000000028 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3483   .bss.last_suspend_state:0000000000000000 last_suspend_state
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3439   .bss.extra_report_blank:0000000000000000 extra_report_blank
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3488   .bss.mouse_report_blank:0000000000000000 mouse_report_blank
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3477   .bss.keyboard_report_sent:0000000000000000 keyboard_report_sent
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3458   .bss.keyboard_idle_count:0000000000000000 keyboard_idle_count
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3471   .bss.keyboard_led_state:0000000000000000 keyboard_led_state
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3626   .data.keyboard_protocol:0000000000000000 keyboard_protocol
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3452   .bss.keyboard_idle:0000000000000000 keyboard_idle
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3406   .bss.__compound_literal.0:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3409   .bss.__compound_literal.0:0000000000000000 __compound_literal.0
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3412   .bss.__compound_literal.1:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3415   .bss.__compound_literal.1:0000000000000000 __compound_literal.1
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3418   .bss.__compound_literal.2:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3421   .bss.__compound_literal.2:0000000000000000 __compound_literal.2
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3424   .bss.__compound_literal.3:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3427   .bss.__compound_literal.3:0000000000000000 __compound_literal.3
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3430   .bss.desc.2:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3434   .bss.desc.2:0000000000000000 desc.2
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3440   .bss.extra_report_blank:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3442   .bss.kbd_ep_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3445   .bss.kbd_ep_state:0000000000000000 kbd_ep_state
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3448   .bss.keyboard_idle:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3455   .bss.keyboard_idle_count:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3461   .bss.keyboard_idle_timer:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3465   .bss.keyboard_idle_timer:0000000000000000 keyboard_idle_timer
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3472   .bss.keyboard_led_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3478   .bss.keyboard_report_sent:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3484   .bss.last_suspend_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3489   .bss.mouse_report_blank:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3494   .bss.report.1:0000000000000000 report.1
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3495   .bss.report.1:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3497   .bss.set_report_buf:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3501   .bss.set_report_buf:0000000000000000 set_report_buf
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3504   .bss.shared_ep_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3507   .bss.shared_ep_state:0000000000000000 shared_ep_state
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3513   .bss.timed_out.0:0000000000000000 timed_out.0
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3514   .bss.timed_out.0:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3516   .data.drivers:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3520   .data.drivers:0000000000000000 drivers
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3622   .data.keyboard_protocol:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3629   .rodata.kbd_ep_config:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3633   .rodata.kbd_ep_config:0000000000000000 kbd_ep_config
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3646   .rodata.shared_ep_config:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3650   .rodata.shared_ep_config:0000000000000000 shared_ep_config
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3663   .rodata.usbcfg:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\cczx0nja.s:3667   .rodata.usbcfg:0000000000000000 usbcfg

UNDEFINED SYMBOLS
qmkusbSOFHookI
get_usb_descriptor
usbStartTransmitI
USBD1
chVTDoResetI
chVTDoSetI
__aeabi_uldivmod
__aeabi_ldivmod
keymap_config
qmkusbRequestsHook
qmkusbWakeupHookI
usbInitEndpointI
qmkusbConfigureHookI
qmkusbSuspendHookI
memset
suspend_wakeup_init
qmkusbObjectInit
qmkusbStart
_pal_lld_setgroupmode
chThdSleep
usbStart
usbStop
chThdSuspendTimeoutS
qmkusbDataTransmitted
qmkusbDataReceived
qmkusbInterruptTransmitted
