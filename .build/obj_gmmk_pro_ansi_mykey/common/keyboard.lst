   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"keyboard.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.last_input_activity_time,"ax",%progbits
  18              		.align	1
  19              		.global	last_input_activity_time
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	last_input_activity_time:
  27              	.LFB291:
  28              		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "sync_timer.h"
  27:tmk_core/common/keyboard.c **** #include "print.h"
  28:tmk_core/common/keyboard.c **** #include "debug.h"
  29:tmk_core/common/keyboard.c **** #include "command.h"
  30:tmk_core/common/keyboard.c **** #include "util.h"
  31:tmk_core/common/keyboard.c **** #include "sendchar.h"
  32:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  33:tmk_core/common/keyboard.c **** #include "action_layer.h"
  34:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  35:tmk_core/common/keyboard.c **** #    include "backlight.h"
  36:tmk_core/common/keyboard.c **** #endif
  37:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  38:tmk_core/common/keyboard.c **** #    include "mousekey.h"
  39:tmk_core/common/keyboard.c **** #endif
  40:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  41:tmk_core/common/keyboard.c **** #    include "ps2_mouse.h"
  42:tmk_core/common/keyboard.c **** #endif
  43:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  44:tmk_core/common/keyboard.c **** #    include "serial_mouse.h"
  45:tmk_core/common/keyboard.c **** #endif
  46:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  47:tmk_core/common/keyboard.c **** #    include "adb.h"
  48:tmk_core/common/keyboard.c **** #endif
  49:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  50:tmk_core/common/keyboard.c **** #    include "rgblight.h"
  51:tmk_core/common/keyboard.c **** #endif
  52:tmk_core/common/keyboard.c **** #ifdef LED_MATRIX_ENABLE
  53:tmk_core/common/keyboard.c **** #    include "led_matrix.h"
  54:tmk_core/common/keyboard.c **** #endif
  55:tmk_core/common/keyboard.c **** #ifdef RGB_MATRIX_ENABLE
  56:tmk_core/common/keyboard.c **** #    include "rgb_matrix.h"
  57:tmk_core/common/keyboard.c **** #endif
  58:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
  59:tmk_core/common/keyboard.c **** #    include "encoder.h"
  60:tmk_core/common/keyboard.c **** #endif
  61:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  62:tmk_core/common/keyboard.c **** #    include "process_steno.h"
  63:tmk_core/common/keyboard.c **** #endif
  64:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  65:tmk_core/common/keyboard.c **** #    include "serial_link/system/serial_link.h"
  66:tmk_core/common/keyboard.c **** #endif
  67:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  68:tmk_core/common/keyboard.c **** #    include "visualizer/visualizer.h"
  69:tmk_core/common/keyboard.c **** #endif
  70:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  71:tmk_core/common/keyboard.c **** #    include "pointing_device.h"
  72:tmk_core/common/keyboard.c **** #endif
  73:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  74:tmk_core/common/keyboard.c **** #    include "process_midi.h"
  75:tmk_core/common/keyboard.c **** #endif
  76:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
  77:tmk_core/common/keyboard.c **** #    include "process_joystick.h"
  78:tmk_core/common/keyboard.c **** #endif
  79:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  80:tmk_core/common/keyboard.c **** #    include "hd44780.h"
  81:tmk_core/common/keyboard.c **** #endif
  82:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  83:tmk_core/common/keyboard.c **** #    include "qwiic.h"
  84:tmk_core/common/keyboard.c **** #endif
  85:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  86:tmk_core/common/keyboard.c **** #    include "oled_driver.h"
  87:tmk_core/common/keyboard.c **** #endif
  88:tmk_core/common/keyboard.c **** #ifdef ST7565_ENABLE
  89:tmk_core/common/keyboard.c **** #    include "st7565.h"
  90:tmk_core/common/keyboard.c **** #endif
  91:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  92:tmk_core/common/keyboard.c **** #    include "velocikey.h"
  93:tmk_core/common/keyboard.c **** #endif
  94:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
  95:tmk_core/common/keyboard.c **** #    include "via.h"
  96:tmk_core/common/keyboard.c **** #endif
  97:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
  98:tmk_core/common/keyboard.c **** #    include "dip_switch.h"
  99:tmk_core/common/keyboard.c **** #endif
 100:tmk_core/common/keyboard.c **** #ifdef STM32_EEPROM_ENABLE
 101:tmk_core/common/keyboard.c **** #    include "eeprom_stm32.h"
 102:tmk_core/common/keyboard.c **** #endif
 103:tmk_core/common/keyboard.c **** #ifdef EEPROM_DRIVER
 104:tmk_core/common/keyboard.c **** #    include "eeprom_driver.h"
 105:tmk_core/common/keyboard.c **** #endif
 106:tmk_core/common/keyboard.c **** #if defined(CRC_ENABLE)
 107:tmk_core/common/keyboard.c **** #    include "crc.h"
 108:tmk_core/common/keyboard.c **** #endif
 109:tmk_core/common/keyboard.c **** 
 110:tmk_core/common/keyboard.c **** static uint32_t last_input_modification_time = 0;
 111:tmk_core/common/keyboard.c **** uint32_t        last_input_activity_time(void) { return last_input_modification_time; }
  29              		.loc 1 111 48 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 111 50 view .LVU1
  35              		.loc 1 111 87 is_stmt 0 view .LVU2
  36 0000 014B     		ldr	r3, .L2
  37 0002 1868     		ldr	r0, [r3]
  38 0004 7047     		bx	lr
  39              	.L3:
  40 0006 00BF     		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE291:
  46              		.section	.text.last_input_activity_elapsed,"ax",%progbits
  47              		.align	1
  48              		.global	last_input_activity_elapsed
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	last_input_activity_elapsed:
  55              	.LFB292:
 112:tmk_core/common/keyboard.c **** uint32_t        last_input_activity_elapsed(void) { return timer_elapsed32(last_input_modification_
  56              		.loc 1 112 51 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              		.loc 1 112 53 view .LVU4
  62              		.loc 1 112 60 is_stmt 0 view .LVU5
  63 0000 014B     		ldr	r3, .L5
  64 0002 1868     		ldr	r0, [r3]
  65 0004 FFF7FEBF 		b	timer_elapsed32
  66              	.LVL0:
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 0008 00000000 		.word	.LANCHOR0
  71              		.cfi_endproc
  72              	.LFE292:
  74              		.section	.text.last_matrix_activity_time,"ax",%progbits
  75              		.align	1
  76              		.global	last_matrix_activity_time
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  80              		.fpu fpv4-sp-d16
  82              	last_matrix_activity_time:
  83              	.LFB293:
 113:tmk_core/common/keyboard.c **** 
 114:tmk_core/common/keyboard.c **** static uint32_t last_matrix_modification_time = 0;
 115:tmk_core/common/keyboard.c **** uint32_t        last_matrix_activity_time(void) { return last_matrix_modification_time; }
  84              		.loc 1 115 49 is_stmt 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              		.loc 1 115 51 view .LVU7
  90              		.loc 1 115 89 is_stmt 0 view .LVU8
  91 0000 014B     		ldr	r3, .L8
  92 0002 1868     		ldr	r0, [r3]
  93 0004 7047     		bx	lr
  94              	.L9:
  95 0006 00BF     		.align	2
  96              	.L8:
  97 0008 00000000 		.word	.LANCHOR1
  98              		.cfi_endproc
  99              	.LFE293:
 101              		.section	.text.last_matrix_activity_elapsed,"ax",%progbits
 102              		.align	1
 103              		.global	last_matrix_activity_elapsed
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	last_matrix_activity_elapsed:
 110              	.LFB294:
 116:tmk_core/common/keyboard.c **** uint32_t        last_matrix_activity_elapsed(void) { return timer_elapsed32(last_matrix_modificatio
 111              		.loc 1 116 52 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              		.loc 1 116 54 view .LVU10
 117              		.loc 1 116 61 is_stmt 0 view .LVU11
 118 0000 014B     		ldr	r3, .L11
 119 0002 1868     		ldr	r0, [r3]
 120 0004 FFF7FEBF 		b	timer_elapsed32
 121              	.LVL1:
 122              	.L12:
 123              		.align	2
 124              	.L11:
 125 0008 00000000 		.word	.LANCHOR1
 126              		.cfi_endproc
 127              	.LFE294:
 129              		.section	.text.last_matrix_activity_trigger,"ax",%progbits
 130              		.align	1
 131              		.global	last_matrix_activity_trigger
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	last_matrix_activity_trigger:
 138              	.LFB295:
 117:tmk_core/common/keyboard.c **** void            last_matrix_activity_trigger(void) { last_matrix_modification_time = last_input_mod
 139              		.loc 1 117 52 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		.loc 1 117 54 view .LVU13
 144              		.loc 1 117 52 is_stmt 0 view .LVU14
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 149              		.loc 1 117 117 view .LVU15
 150 0002 FFF7FEFF 		bl	timer_read32
 151              	.LVL2:
 152              		.loc 1 117 115 view .LVU16
 153 0006 024B     		ldr	r3, .L14
 154 0008 1860     		str	r0, [r3]
 155              		.loc 1 117 84 view .LVU17
 156 000a 024B     		ldr	r3, .L14+4
 157 000c 1860     		str	r0, [r3]
 158              		.loc 1 117 133 view .LVU18
 159 000e 08BD     		pop	{r3, pc}
 160              	.L15:
 161              		.align	2
 162              	.L14:
 163 0010 00000000 		.word	.LANCHOR0
 164 0014 00000000 		.word	.LANCHOR1
 165              		.cfi_endproc
 166              	.LFE295:
 168              		.section	.text.last_encoder_activity_time,"ax",%progbits
 169              		.align	1
 170              		.global	last_encoder_activity_time
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	last_encoder_activity_time:
 177              	.LFB296:
 118:tmk_core/common/keyboard.c **** 
 119:tmk_core/common/keyboard.c **** static uint32_t last_encoder_modification_time = 0;
 120:tmk_core/common/keyboard.c **** uint32_t        last_encoder_activity_time(void) { return last_encoder_modification_time; }
 178              		.loc 1 120 50 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              		.loc 1 120 52 view .LVU20
 184              		.loc 1 120 91 is_stmt 0 view .LVU21
 185 0000 014B     		ldr	r3, .L17
 186 0002 1868     		ldr	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L18:
 189 0006 00BF     		.align	2
 190              	.L17:
 191 0008 00000000 		.word	.LANCHOR2
 192              		.cfi_endproc
 193              	.LFE296:
 195              		.section	.text.last_encoder_activity_elapsed,"ax",%progbits
 196              		.align	1
 197              		.global	last_encoder_activity_elapsed
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	last_encoder_activity_elapsed:
 204              	.LFB297:
 121:tmk_core/common/keyboard.c **** uint32_t        last_encoder_activity_elapsed(void) { return timer_elapsed32(last_encoder_modificat
 205              		.loc 1 121 53 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              		.loc 1 121 55 view .LVU23
 211              		.loc 1 121 62 is_stmt 0 view .LVU24
 212 0000 014B     		ldr	r3, .L20
 213 0002 1868     		ldr	r0, [r3]
 214 0004 FFF7FEBF 		b	timer_elapsed32
 215              	.LVL3:
 216              	.L21:
 217              		.align	2
 218              	.L20:
 219 0008 00000000 		.word	.LANCHOR2
 220              		.cfi_endproc
 221              	.LFE297:
 223              		.section	.text.last_encoder_activity_trigger,"ax",%progbits
 224              		.align	1
 225              		.global	last_encoder_activity_trigger
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	last_encoder_activity_trigger:
 232              	.LFB298:
 122:tmk_core/common/keyboard.c **** void            last_encoder_activity_trigger(void) { last_encoder_modification_time = last_input_m
 233              		.loc 1 122 53 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		.loc 1 122 55 view .LVU26
 238              		.loc 1 122 53 is_stmt 0 view .LVU27
 239 0000 08B5     		push	{r3, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
 243              		.loc 1 122 119 view .LVU28
 244 0002 FFF7FEFF 		bl	timer_read32
 245              	.LVL4:
 246              		.loc 1 122 117 view .LVU29
 247 0006 024B     		ldr	r3, .L23
 248 0008 1860     		str	r0, [r3]
 249              		.loc 1 122 86 view .LVU30
 250 000a 024B     		ldr	r3, .L23+4
 251 000c 1860     		str	r0, [r3]
 252              		.loc 1 122 135 view .LVU31
 253 000e 08BD     		pop	{r3, pc}
 254              	.L24:
 255              		.align	2
 256              	.L23:
 257 0010 00000000 		.word	.LANCHOR0
 258 0014 00000000 		.word	.LANCHOR2
 259              		.cfi_endproc
 260              	.LFE298:
 262              		.section	.text.disable_jtag,"ax",%progbits
 263              		.align	1
 264              		.global	disable_jtag
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	disable_jtag:
 271              	.LFB299:
 123:tmk_core/common/keyboard.c **** 
 124:tmk_core/common/keyboard.c **** // Only enable this if console is enabled to print to
 125:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE)
 126:tmk_core/common/keyboard.c **** static uint32_t matrix_timer           = 0;
 127:tmk_core/common/keyboard.c **** static uint32_t matrix_scan_count      = 0;
 128:tmk_core/common/keyboard.c **** static uint32_t last_matrix_scan_count = 0;
 129:tmk_core/common/keyboard.c **** 
 130:tmk_core/common/keyboard.c **** void matrix_scan_perf_task(void) {
 131:tmk_core/common/keyboard.c ****     matrix_scan_count++;
 132:tmk_core/common/keyboard.c **** 
 133:tmk_core/common/keyboard.c ****     uint32_t timer_now = timer_read32();
 134:tmk_core/common/keyboard.c ****     if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
 135:tmk_core/common/keyboard.c **** #    if defined(CONSOLE_ENABLE)
 136:tmk_core/common/keyboard.c ****         dprintf("matrix scan frequency: %lu\n", matrix_scan_count);
 137:tmk_core/common/keyboard.c **** #    endif
 138:tmk_core/common/keyboard.c ****         last_matrix_scan_count = matrix_scan_count;
 139:tmk_core/common/keyboard.c ****         matrix_timer           = timer_now;
 140:tmk_core/common/keyboard.c ****         matrix_scan_count      = 0;
 141:tmk_core/common/keyboard.c ****     }
 142:tmk_core/common/keyboard.c **** }
 143:tmk_core/common/keyboard.c **** 
 144:tmk_core/common/keyboard.c **** uint32_t get_matrix_scan_rate(void) { return last_matrix_scan_count; }
 145:tmk_core/common/keyboard.c **** #else
 146:tmk_core/common/keyboard.c **** #    define matrix_scan_perf_task()
 147:tmk_core/common/keyboard.c **** #endif
 148:tmk_core/common/keyboard.c **** 
 149:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 150:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 151:tmk_core/common/keyboard.c **** static matrix_row_t   get_real_keys(uint8_t row, matrix_row_t rowdata) {
 152:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
 153:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
 154:tmk_core/common/keyboard.c ****         // read each key in the row data and check if the keymap defines it as a real key
 155:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1 << col))) {
 156:tmk_core/common/keyboard.c ****             // this creates new row data, if a key is defined in the keymap, it will be set here
 157:tmk_core/common/keyboard.c ****             out |= 1 << col;
 158:tmk_core/common/keyboard.c ****         }
 159:tmk_core/common/keyboard.c ****     }
 160:tmk_core/common/keyboard.c ****     return out;
 161:tmk_core/common/keyboard.c **** }
 162:tmk_core/common/keyboard.c **** 
 163:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata) {
 164:tmk_core/common/keyboard.c ****     rowdata &= rowdata - 1;  // if there are less than two bits (keys) set, rowdata will become zer
 165:tmk_core/common/keyboard.c ****     return rowdata;
 166:tmk_core/common/keyboard.c **** }
 167:tmk_core/common/keyboard.c **** 
 168:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata) {
 169:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 170:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 171:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 172:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 173:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 174:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0) {
 175:tmk_core/common/keyboard.c ****         return false;
 176:tmk_core/common/keyboard.c ****     }
 177:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 178:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 179:tmk_core/common/keyboard.c ****     so they are filtered out.
 180:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 181:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 182:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 183:tmk_core/common/keyboard.c ****     */
 184:tmk_core/common/keyboard.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 185:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)) {
 186:tmk_core/common/keyboard.c ****             return true;
 187:tmk_core/common/keyboard.c ****         }
 188:tmk_core/common/keyboard.c ****     }
 189:tmk_core/common/keyboard.c ****     return false;
 190:tmk_core/common/keyboard.c **** }
 191:tmk_core/common/keyboard.c **** 
 192:tmk_core/common/keyboard.c **** #endif
 193:tmk_core/common/keyboard.c **** 
 194:tmk_core/common/keyboard.c **** void disable_jtag(void) {
 272              		.loc 1 194 25 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 195:tmk_core/common/keyboard.c **** // To use PF4-7 (PC2-5 on ATmega32A), disable JTAG by writing JTD bit twice within four cycles.
 196:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_AT90USB1286__) || 
 197:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
 198:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
 199:tmk_core/common/keyboard.c **** #elif defined(__AVR_ATmega32A__)
 200:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 201:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 202:tmk_core/common/keyboard.c **** #endif
 203:tmk_core/common/keyboard.c **** }
 277              		.loc 1 203 1 view .LVU33
 278 0000 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE299:
 282              		.section	.text.matrix_setup,"ax",%progbits
 283              		.align	1
 284              		.weak	matrix_setup
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	matrix_setup:
 291              	.LFB325:
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE325:
 300              		.section	.text.keyboard_pre_init_user,"ax",%progbits
 301              		.align	1
 302              		.weak	keyboard_pre_init_user
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	keyboard_pre_init_user:
 309              	.LFB301:
 204:tmk_core/common/keyboard.c **** 
 205:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 206:tmk_core/common/keyboard.c ****  *
 207:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 208:tmk_core/common/keyboard.c ****  */
 209:tmk_core/common/keyboard.c **** __attribute__((weak)) void matrix_setup(void) {}
 210:tmk_core/common/keyboard.c **** 
 211:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 212:tmk_core/common/keyboard.c ****  *
 213:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 214:tmk_core/common/keyboard.c ****  */
 215:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_user(void) {}
 310              		.loc 1 215 57 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              		.loc 1 215 58 view .LVU35
 316 0000 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE301:
 320              		.section	.text.keyboard_pre_init_kb,"ax",%progbits
 321              		.align	1
 322              		.weak	keyboard_pre_init_kb
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	keyboard_pre_init_kb:
 329              	.LFB302:
 216:tmk_core/common/keyboard.c **** 
 217:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 218:tmk_core/common/keyboard.c ****  *
 219:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 220:tmk_core/common/keyboard.c ****  */
 221:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_kb(void) { keyboard_pre_init_user(); }
 330              		.loc 1 221 55 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		.loc 1 221 57 view .LVU37
 335              		.loc 1 221 55 is_stmt 0 view .LVU38
 336 0000 08B5     		push	{r3, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 340              		.loc 1 221 57 view .LVU39
 341 0002 FFF7FEFF 		bl	keyboard_pre_init_user
 342              	.LVL5:
 343              		.loc 1 221 83 view .LVU40
 344 0006 08BD     		pop	{r3, pc}
 345              		.cfi_endproc
 346              	.LFE302:
 348              		.section	.text.keyboard_post_init_user,"ax",%progbits
 349              		.align	1
 350              		.weak	keyboard_post_init_user
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	keyboard_post_init_user:
 357              	.LFB319:
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE319:
 366              		.section	.text.keyboard_post_init_kb,"ax",%progbits
 367              		.align	1
 368              		.weak	keyboard_post_init_kb
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 372              		.fpu fpv4-sp-d16
 374              	keyboard_post_init_kb:
 375              	.LFB304:
 222:tmk_core/common/keyboard.c **** 
 223:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 224:tmk_core/common/keyboard.c ****  *
 225:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 226:tmk_core/common/keyboard.c ****  */
 227:tmk_core/common/keyboard.c **** 
 228:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_user() {}
 229:tmk_core/common/keyboard.c **** 
 230:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 231:tmk_core/common/keyboard.c ****  *
 232:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 233:tmk_core/common/keyboard.c ****  */
 234:tmk_core/common/keyboard.c **** 
 235:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_kb(void) { keyboard_post_init_user(); }
 376              		.loc 1 235 56 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		.loc 1 235 58 view .LVU42
 381              		.loc 1 235 56 is_stmt 0 view .LVU43
 382 0000 08B5     		push	{r3, lr}
 383              		.cfi_def_cfa_offset 8
 384              		.cfi_offset 3, -8
 385              		.cfi_offset 14, -4
 386              		.loc 1 235 58 view .LVU44
 387 0002 FFF7FEFF 		bl	keyboard_post_init_user
 388              	.LVL6:
 389              		.loc 1 235 85 view .LVU45
 390 0006 08BD     		pop	{r3, pc}
 391              		.cfi_endproc
 392              	.LFE304:
 394              		.section	.text.keyboard_setup,"ax",%progbits
 395              		.align	1
 396              		.global	keyboard_setup
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	keyboard_setup:
 403              	.LFB305:
 236:tmk_core/common/keyboard.c **** 
 237:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 238:tmk_core/common/keyboard.c ****  *
 239:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 240:tmk_core/common/keyboard.c ****  */
 241:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 404              		.loc 1 241 27 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 242:tmk_core/common/keyboard.c **** #ifndef NO_JTAG_DISABLE
 243:tmk_core/common/keyboard.c ****     disable_jtag();
 408              		.loc 1 243 5 view .LVU47
 203:tmk_core/common/keyboard.c **** 
 409              		.loc 1 203 1 view .LVU48
 244:tmk_core/common/keyboard.c **** #endif
 245:tmk_core/common/keyboard.c ****     print_set_sendchar(sendchar);
 410              		.loc 1 245 5 view .LVU49
 241:tmk_core/common/keyboard.c **** #ifndef NO_JTAG_DISABLE
 411              		.loc 1 241 27 is_stmt 0 view .LVU50
 412 0000 08B5     		push	{r3, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 3, -8
 415              		.cfi_offset 14, -4
 416              		.loc 1 245 5 view .LVU51
 417 0002 0548     		ldr	r0, .L32
 418 0004 FFF7FEFF 		bl	print_set_sendchar
 419              	.LVL7:
 246:tmk_core/common/keyboard.c **** #ifdef STM32_EEPROM_ENABLE
 247:tmk_core/common/keyboard.c ****     EEPROM_Init();
 420              		.loc 1 247 5 is_stmt 1 view .LVU52
 421 0008 FFF7FEFF 		bl	EEPROM_Init
 422              	.LVL8:
 248:tmk_core/common/keyboard.c **** #endif
 249:tmk_core/common/keyboard.c **** #ifdef EEPROM_DRIVER
 250:tmk_core/common/keyboard.c ****     eeprom_driver_init();
 251:tmk_core/common/keyboard.c **** #endif
 252:tmk_core/common/keyboard.c ****     matrix_setup();
 423              		.loc 1 252 5 view .LVU53
 424 000c FFF7FEFF 		bl	matrix_setup
 425              	.LVL9:
 253:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 426              		.loc 1 253 5 view .LVU54
 427 0010 FFF7FEFF 		bl	keyboard_pre_init_kb
 428              	.LVL10:
 254:tmk_core/common/keyboard.c **** }
 429              		.loc 1 254 1 is_stmt 0 view .LVU55
 430 0014 08BD     		pop	{r3, pc}
 431              	.L33:
 432 0016 00BF     		.align	2
 433              	.L32:
 434 0018 00000000 		.word	sendchar
 435              		.cfi_endproc
 436              	.LFE305:
 438              		.section	.text.is_keyboard_master,"ax",%progbits
 439              		.align	1
 440              		.weak	is_keyboard_master
 441              		.syntax unified
 442              		.thumb
 443              		.thumb_func
 444              		.fpu fpv4-sp-d16
 446              	is_keyboard_master:
 447              	.LFB306:
 255:tmk_core/common/keyboard.c **** 
 256:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 257:tmk_core/common/keyboard.c ****  *
 258:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 259:tmk_core/common/keyboard.c ****  */
 260:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_master(void) { return true; }
 448              		.loc 1 260 53 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              		.loc 1 260 55 view .LVU57
 454              		.loc 1 260 68 is_stmt 0 view .LVU58
 455 0000 0120     		movs	r0, #1
 456 0002 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE306:
 460              		.section	.text.is_keyboard_left,"ax",%progbits
 461              		.align	1
 462              		.weak	is_keyboard_left
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	is_keyboard_left:
 469              	.LFB317:
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 474 0000 0120     		movs	r0, #1
 475 0002 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE317:
 479              		.section	.text.should_process_keypress,"ax",%progbits
 480              		.align	1
 481              		.weak	should_process_keypress
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv4-sp-d16
 487              	should_process_keypress:
 488              	.LFB308:
 261:tmk_core/common/keyboard.c **** 
 262:tmk_core/common/keyboard.c **** /** \brief is_keyboard_left
 263:tmk_core/common/keyboard.c ****  *
 264:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 265:tmk_core/common/keyboard.c ****  */
 266:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_left(void) { return true; }
 267:tmk_core/common/keyboard.c **** 
 268:tmk_core/common/keyboard.c **** /** \brief should_process_keypress
 269:tmk_core/common/keyboard.c ****  *
 270:tmk_core/common/keyboard.c ****  * Override this function if you have a condition where keypresses processing should change:
 271:tmk_core/common/keyboard.c ****  *   - splits where the slave side needs to process for rgb/oled functionality
 272:tmk_core/common/keyboard.c ****  */
 273:tmk_core/common/keyboard.c **** __attribute__((weak)) bool should_process_keypress(void) { return is_keyboard_master(); }
 489              		.loc 1 273 58 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		.loc 1 273 60 view .LVU60
 494              		.loc 1 273 58 is_stmt 0 view .LVU61
 495 0000 08B5     		push	{r3, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 3, -8
 498              		.cfi_offset 14, -4
 499              		.loc 1 273 67 view .LVU62
 500 0002 FFF7FEFF 		bl	is_keyboard_master
 501              	.LVL11:
 502              		.loc 1 273 89 view .LVU63
 503 0006 08BD     		pop	{r3, pc}
 504              		.cfi_endproc
 505              	.LFE308:
 507              		.section	.text.housekeeping_task_kb,"ax",%progbits
 508              		.align	1
 509              		.weak	housekeeping_task_kb
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
 515              	housekeeping_task_kb:
 516              	.LFB321:
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 0000 7047     		bx	lr
 522              		.cfi_endproc
 523              	.LFE321:
 525              		.section	.text.housekeeping_task_user,"ax",%progbits
 526              		.align	1
 527              		.weak	housekeeping_task_user
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 531              		.fpu fpv4-sp-d16
 533              	housekeeping_task_user:
 534              	.LFB323:
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539 0000 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE323:
 543              		.section	.text.housekeeping_task,"ax",%progbits
 544              		.align	1
 545              		.global	housekeeping_task
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 549              		.fpu fpv4-sp-d16
 551              	housekeeping_task:
 552              	.LFB311:
 274:tmk_core/common/keyboard.c **** 
 275:tmk_core/common/keyboard.c **** /** \brief housekeeping_task_kb
 276:tmk_core/common/keyboard.c ****  *
 277:tmk_core/common/keyboard.c ****  * Override this function if you have a need to execute code for every keyboard main loop iteration
 278:tmk_core/common/keyboard.c ****  * This is specific to keyboard-level functionality.
 279:tmk_core/common/keyboard.c ****  */
 280:tmk_core/common/keyboard.c **** __attribute__((weak)) void housekeeping_task_kb(void) {}
 281:tmk_core/common/keyboard.c **** 
 282:tmk_core/common/keyboard.c **** /** \brief housekeeping_task_user
 283:tmk_core/common/keyboard.c ****  *
 284:tmk_core/common/keyboard.c ****  * Override this function if you have a need to execute code for every keyboard main loop iteration
 285:tmk_core/common/keyboard.c ****  * This is specific to user/keymap-level functionality.
 286:tmk_core/common/keyboard.c ****  */
 287:tmk_core/common/keyboard.c **** __attribute__((weak)) void housekeeping_task_user(void) {}
 288:tmk_core/common/keyboard.c **** 
 289:tmk_core/common/keyboard.c **** /** \brief housekeeping_task
 290:tmk_core/common/keyboard.c ****  *
 291:tmk_core/common/keyboard.c ****  * Invokes hooks for executing code after QMK is done after each loop iteration.
 292:tmk_core/common/keyboard.c ****  */
 293:tmk_core/common/keyboard.c **** void housekeeping_task(void) {
 553              		.loc 1 293 30 is_stmt 1 view -0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 294:tmk_core/common/keyboard.c ****     housekeeping_task_kb();
 557              		.loc 1 294 5 view .LVU65
 293:tmk_core/common/keyboard.c ****     housekeeping_task_kb();
 558              		.loc 1 293 30 is_stmt 0 view .LVU66
 559 0000 08B5     		push	{r3, lr}
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 3, -8
 562              		.cfi_offset 14, -4
 563              		.loc 1 294 5 view .LVU67
 564 0002 FFF7FEFF 		bl	housekeeping_task_kb
 565              	.LVL12:
 295:tmk_core/common/keyboard.c ****     housekeeping_task_user();
 566              		.loc 1 295 5 is_stmt 1 view .LVU68
 567 0006 FFF7FEFF 		bl	housekeeping_task_user
 568              	.LVL13:
 296:tmk_core/common/keyboard.c **** }
 569              		.loc 1 296 1 is_stmt 0 view .LVU69
 570 000a 08BD     		pop	{r3, pc}
 571              		.cfi_endproc
 572              	.LFE311:
 574              		.section	.text.keyboard_init,"ax",%progbits
 575              		.align	1
 576              		.global	keyboard_init
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu fpv4-sp-d16
 582              	keyboard_init:
 583              	.LFB312:
 297:tmk_core/common/keyboard.c **** 
 298:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 299:tmk_core/common/keyboard.c ****  *
 300:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 301:tmk_core/common/keyboard.c ****  */
 302:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 584              		.loc 1 302 26 is_stmt 1 view -0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 303:tmk_core/common/keyboard.c ****     timer_init();
 588              		.loc 1 303 5 view .LVU71
 302:tmk_core/common/keyboard.c ****     timer_init();
 589              		.loc 1 302 26 is_stmt 0 view .LVU72
 590 0000 08B5     		push	{r3, lr}
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 3, -8
 593              		.cfi_offset 14, -4
 594              		.loc 1 303 5 view .LVU73
 595 0002 FFF7FEFF 		bl	timer_init
 596              	.LVL14:
 304:tmk_core/common/keyboard.c ****     sync_timer_init();
 597              		.loc 1 304 22 is_stmt 1 view .LVU74
 305:tmk_core/common/keyboard.c ****     matrix_init();
 598              		.loc 1 305 5 view .LVU75
 599 0006 FFF7FEFF 		bl	matrix_init
 600              	.LVL15:
 306:tmk_core/common/keyboard.c **** #if defined(CRC_ENABLE)
 307:tmk_core/common/keyboard.c ****     crc_init();
 308:tmk_core/common/keyboard.c **** #endif
 309:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
 310:tmk_core/common/keyboard.c ****     via_init();
 311:tmk_core/common/keyboard.c **** #endif
 312:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 313:tmk_core/common/keyboard.c ****     qwiic_init();
 314:tmk_core/common/keyboard.c **** #endif
 315:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 316:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 317:tmk_core/common/keyboard.c **** #endif
 318:tmk_core/common/keyboard.c **** #ifdef ST7565_ENABLE
 319:tmk_core/common/keyboard.c ****     st7565_init(DISPLAY_ROTATION_0);
 320:tmk_core/common/keyboard.c **** #endif
 321:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 322:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 323:tmk_core/common/keyboard.c **** #endif
 324:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 325:tmk_core/common/keyboard.c ****     serial_mouse_init();
 326:tmk_core/common/keyboard.c **** #endif
 327:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 328:tmk_core/common/keyboard.c ****     adb_mouse_init();
 329:tmk_core/common/keyboard.c **** #endif
 330:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 331:tmk_core/common/keyboard.c ****     backlight_init();
 332:tmk_core/common/keyboard.c **** #endif
 333:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 334:tmk_core/common/keyboard.c ****     rgblight_init();
 335:tmk_core/common/keyboard.c **** #endif
 336:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 337:tmk_core/common/keyboard.c ****     encoder_init();
 601              		.loc 1 337 5 view .LVU76
 602 000a FFF7FEFF 		bl	encoder_init
 603              	.LVL16:
 338:tmk_core/common/keyboard.c **** #endif
 339:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 340:tmk_core/common/keyboard.c ****     steno_init();
 341:tmk_core/common/keyboard.c **** #endif
 342:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 343:tmk_core/common/keyboard.c ****     pointing_device_init();
 344:tmk_core/common/keyboard.c **** #endif
 345:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 346:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 347:tmk_core/common/keyboard.c ****     eeconfig_update_keymap(keymap_config.raw);
 348:tmk_core/common/keyboard.c **** #endif
 349:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
 350:tmk_core/common/keyboard.c ****     dip_switch_init();
 351:tmk_core/common/keyboard.c **** #endif
 352:tmk_core/common/keyboard.c **** 
 353:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
 354:tmk_core/common/keyboard.c ****     debug_enable = true;
 355:tmk_core/common/keyboard.c **** #endif
 356:tmk_core/common/keyboard.c **** 
 357:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 604              		.loc 1 357 5 view .LVU77
 605 000e FFF7FEFF 		bl	keyboard_post_init_kb
 606              	.LVL17:
 358:tmk_core/common/keyboard.c **** }
 607              		.loc 1 358 1 is_stmt 0 view .LVU78
 608 0012 08BD     		pop	{r3, pc}
 609              		.cfi_endproc
 610              	.LFE312:
 612              		.section	.text.switch_events,"ax",%progbits
 613              		.align	1
 614              		.global	switch_events
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu fpv4-sp-d16
 620              	switch_events:
 621              	.LVL18:
 622              	.LFB313:
 359:tmk_core/common/keyboard.c **** 
 360:tmk_core/common/keyboard.c **** /** \brief key_event_task
 361:tmk_core/common/keyboard.c ****  *
 362:tmk_core/common/keyboard.c ****  * This function is responsible for calling into other systems when they need to respond to electri
 363:tmk_core/common/keyboard.c ****  * This is differnet than keycode events as no layer processing, or filtering occurs.
 364:tmk_core/common/keyboard.c ****  */
 365:tmk_core/common/keyboard.c **** void switch_events(uint8_t row, uint8_t col, bool pressed) {
 623              		.loc 1 365 60 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 366:tmk_core/common/keyboard.c **** #if defined(LED_MATRIX_ENABLE)
 367:tmk_core/common/keyboard.c ****     process_led_matrix(row, col, pressed);
 368:tmk_core/common/keyboard.c **** #endif
 369:tmk_core/common/keyboard.c **** #if defined(RGB_MATRIX_ENABLE)
 370:tmk_core/common/keyboard.c ****     process_rgb_matrix(row, col, pressed);
 628              		.loc 1 370 5 view .LVU80
 629 0000 FFF7FEBF 		b	process_rgb_matrix
 630              	.LVL19:
 631              		.loc 1 370 5 is_stmt 0 view .LVU81
 632              		.cfi_endproc
 633              	.LFE313:
 635              		.section	.rodata.keyboard_set_leds.str1.1,"aMS",%progbits,1
 636              	.LC0:
 637 0000 6B657962 		.ascii	"keyboard_set_led: \000"
 637      6F617264 
 637      5F736574 
 637      5F6C6564 
 637      3A2000
 638              	.LC1:
 639 0013 25303258 		.ascii	"%02X\000"
 639      00
 640              	.LC2:
 641 0018 0A00     		.ascii	"\012\000"
 642              		.section	.text.keyboard_set_leds,"ax",%progbits
 643              		.align	1
 644              		.global	keyboard_set_leds
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv4-sp-d16
 650              	keyboard_set_leds:
 651              	.LVL20:
 652              	.LFB315:
 371:tmk_core/common/keyboard.c **** #endif
 372:tmk_core/common/keyboard.c **** }
 373:tmk_core/common/keyboard.c **** 
 374:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 375:tmk_core/common/keyboard.c ****  *
 376:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 377:tmk_core/common/keyboard.c ****  *
 378:tmk_core/common/keyboard.c ****  * * scan matrix
 379:tmk_core/common/keyboard.c ****  * * handle mouse movements
 380:tmk_core/common/keyboard.c ****  * * run visualizer code
 381:tmk_core/common/keyboard.c ****  * * handle midi commands
 382:tmk_core/common/keyboard.c ****  * * light LEDs
 383:tmk_core/common/keyboard.c ****  *
 384:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 385:tmk_core/common/keyboard.c ****  */
 386:tmk_core/common/keyboard.c **** void keyboard_task(void) {
 387:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 388:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 389:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 390:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 391:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 392:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 393:tmk_core/common/keyboard.c **** #endif
 394:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 395:tmk_core/common/keyboard.c ****     bool encoders_changed = false;
 396:tmk_core/common/keyboard.c **** #endif
 397:tmk_core/common/keyboard.c **** 
 398:tmk_core/common/keyboard.c ****     uint8_t matrix_changed = matrix_scan();
 399:tmk_core/common/keyboard.c ****     if (matrix_changed) last_matrix_activity_trigger();
 400:tmk_core/common/keyboard.c **** 
 401:tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 402:tmk_core/common/keyboard.c ****         matrix_row    = matrix_get_row(r);
 403:tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 404:tmk_core/common/keyboard.c ****         if (matrix_change) {
 405:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 406:tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r, matrix_row)) {
 407:tmk_core/common/keyboard.c ****                 continue;
 408:tmk_core/common/keyboard.c ****             }
 409:tmk_core/common/keyboard.c **** #endif
 410:tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 411:tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 412:tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 413:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 414:tmk_core/common/keyboard.c ****                     if (should_process_keypress()) {
 415:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 416:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 417:tmk_core/common/keyboard.c ****                         });
 418:tmk_core/common/keyboard.c ****                     }
 419:tmk_core/common/keyboard.c ****                     // record a processed key
 420:tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= col_mask;
 421:tmk_core/common/keyboard.c **** 
 422:tmk_core/common/keyboard.c ****                     switch_events(r, c, (matrix_row & col_mask));
 423:tmk_core/common/keyboard.c **** 
 424:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 425:tmk_core/common/keyboard.c ****                     // only jump out if we have processed "enough" keys.
 426:tmk_core/common/keyboard.c ****                     if (++keys_processed >= QMK_KEYS_PER_SCAN)
 427:tmk_core/common/keyboard.c **** #endif
 428:tmk_core/common/keyboard.c ****                         // process a key per task call
 429:tmk_core/common/keyboard.c ****                         goto MATRIX_LOOP_END;
 430:tmk_core/common/keyboard.c ****                 }
 431:tmk_core/common/keyboard.c ****             }
 432:tmk_core/common/keyboard.c ****         }
 433:tmk_core/common/keyboard.c ****     }
 434:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 435:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 436:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 437:tmk_core/common/keyboard.c ****     if (!keys_processed)
 438:tmk_core/common/keyboard.c **** #endif
 439:tmk_core/common/keyboard.c ****         action_exec(TICK);
 440:tmk_core/common/keyboard.c **** 
 441:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 442:tmk_core/common/keyboard.c **** 
 443:tmk_core/common/keyboard.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 444:tmk_core/common/keyboard.c ****     matrix_scan_perf_task();
 445:tmk_core/common/keyboard.c **** #endif
 446:tmk_core/common/keyboard.c **** 
 447:tmk_core/common/keyboard.c **** #if defined(RGBLIGHT_ENABLE)
 448:tmk_core/common/keyboard.c ****     rgblight_task();
 449:tmk_core/common/keyboard.c **** #endif
 450:tmk_core/common/keyboard.c **** 
 451:tmk_core/common/keyboard.c **** #ifdef LED_MATRIX_ENABLE
 452:tmk_core/common/keyboard.c ****     led_matrix_task();
 453:tmk_core/common/keyboard.c **** #endif
 454:tmk_core/common/keyboard.c **** #ifdef RGB_MATRIX_ENABLE
 455:tmk_core/common/keyboard.c ****     rgb_matrix_task();
 456:tmk_core/common/keyboard.c **** #endif
 457:tmk_core/common/keyboard.c **** 
 458:tmk_core/common/keyboard.c **** #if defined(BACKLIGHT_ENABLE)
 459:tmk_core/common/keyboard.c **** #    if defined(BACKLIGHT_PIN) || defined(BACKLIGHT_PINS)
 460:tmk_core/common/keyboard.c ****     backlight_task();
 461:tmk_core/common/keyboard.c **** #    endif
 462:tmk_core/common/keyboard.c **** #endif
 463:tmk_core/common/keyboard.c **** 
 464:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 465:tmk_core/common/keyboard.c ****     encoders_changed = encoder_read();
 466:tmk_core/common/keyboard.c ****     if (encoders_changed) last_encoder_activity_trigger();
 467:tmk_core/common/keyboard.c **** #endif
 468:tmk_core/common/keyboard.c **** 
 469:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 470:tmk_core/common/keyboard.c ****     qwiic_task();
 471:tmk_core/common/keyboard.c **** #endif
 472:tmk_core/common/keyboard.c **** 
 473:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 474:tmk_core/common/keyboard.c ****     oled_task();
 475:tmk_core/common/keyboard.c **** #    ifndef OLED_DISABLE_TIMEOUT
 476:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys or spinning those encoders!
 477:tmk_core/common/keyboard.c **** #        ifdef ENCODER_ENABLE
 478:tmk_core/common/keyboard.c ****     if (matrix_changed || encoders_changed) oled_on();
 479:tmk_core/common/keyboard.c **** #        else
 480:tmk_core/common/keyboard.c ****     if (matrix_changed) oled_on();
 481:tmk_core/common/keyboard.c **** #        endif
 482:tmk_core/common/keyboard.c **** #    endif
 483:tmk_core/common/keyboard.c **** #endif
 484:tmk_core/common/keyboard.c **** 
 485:tmk_core/common/keyboard.c **** #ifdef ST7565_ENABLE
 486:tmk_core/common/keyboard.c ****     st7565_task();
 487:tmk_core/common/keyboard.c **** #    ifndef ST7565_DISABLE_TIMEOUT
 488:tmk_core/common/keyboard.c ****     // Wake up display if user is using those fabulous keys or spinning those encoders!
 489:tmk_core/common/keyboard.c **** #        ifdef ENCODER_ENABLE
 490:tmk_core/common/keyboard.c ****     if (matrix_changed || encoders_changed) st7565_on();
 491:tmk_core/common/keyboard.c **** #        else
 492:tmk_core/common/keyboard.c ****     if (matrix_changed) st7565_on();
 493:tmk_core/common/keyboard.c **** #        endif
 494:tmk_core/common/keyboard.c **** #    endif
 495:tmk_core/common/keyboard.c **** #endif
 496:tmk_core/common/keyboard.c **** 
 497:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 498:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 499:tmk_core/common/keyboard.c ****     mousekey_task();
 500:tmk_core/common/keyboard.c **** #endif
 501:tmk_core/common/keyboard.c **** 
 502:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 503:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 504:tmk_core/common/keyboard.c **** #endif
 505:tmk_core/common/keyboard.c **** 
 506:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 507:tmk_core/common/keyboard.c ****     serial_mouse_task();
 508:tmk_core/common/keyboard.c **** #endif
 509:tmk_core/common/keyboard.c **** 
 510:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 511:tmk_core/common/keyboard.c ****     adb_mouse_task();
 512:tmk_core/common/keyboard.c **** #endif
 513:tmk_core/common/keyboard.c **** 
 514:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 515:tmk_core/common/keyboard.c ****     serial_link_update();
 516:tmk_core/common/keyboard.c **** #endif
 517:tmk_core/common/keyboard.c **** 
 518:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 519:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 520:tmk_core/common/keyboard.c **** #endif
 521:tmk_core/common/keyboard.c **** 
 522:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 523:tmk_core/common/keyboard.c ****     pointing_device_task();
 524:tmk_core/common/keyboard.c **** #endif
 525:tmk_core/common/keyboard.c **** 
 526:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 527:tmk_core/common/keyboard.c ****     midi_task();
 528:tmk_core/common/keyboard.c **** #endif
 529:tmk_core/common/keyboard.c **** 
 530:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 531:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) {
 532:tmk_core/common/keyboard.c ****         velocikey_decelerate();
 533:tmk_core/common/keyboard.c ****     }
 534:tmk_core/common/keyboard.c **** #endif
 535:tmk_core/common/keyboard.c **** 
 536:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
 537:tmk_core/common/keyboard.c ****     joystick_task();
 538:tmk_core/common/keyboard.c **** #endif
 539:tmk_core/common/keyboard.c **** 
 540:tmk_core/common/keyboard.c ****     // update LED
 541:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 542:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 543:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 544:tmk_core/common/keyboard.c ****     }
 545:tmk_core/common/keyboard.c **** }
 546:tmk_core/common/keyboard.c **** 
 547:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 548:tmk_core/common/keyboard.c ****  *
 549:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 550:tmk_core/common/keyboard.c ****  */
 551:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds) {
 653              		.loc 1 551 38 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 552:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 657              		.loc 1 552 5 view .LVU83
 551:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 658              		.loc 1 551 38 is_stmt 0 view .LVU84
 659 0000 38B5     		push	{r3, r4, r5, lr}
 660              		.cfi_def_cfa_offset 16
 661              		.cfi_offset 3, -16
 662              		.cfi_offset 4, -12
 663              		.cfi_offset 5, -8
 664              		.cfi_offset 14, -4
 665              		.loc 1 552 9 view .LVU85
 666 0002 0E4D     		ldr	r5, .L58
 667 0004 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 551:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 668              		.loc 1 551 38 view .LVU86
 669 0006 0446     		mov	r4, r0
 670              		.loc 1 552 8 view .LVU87
 671 0008 5807     		lsls	r0, r3, #29
 672              	.LVL21:
 673              		.loc 1 552 8 view .LVU88
 674 000a 11D5     		bpl	.L45
 553:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 675              		.loc 1 553 9 is_stmt 1 view .LVU89
 676              		.loc 1 553 9 view .LVU90
 677 000c D907     		lsls	r1, r3, #31
 678 000e 0FD5     		bpl	.L45
 679              		.loc 1 553 9 discriminator 1 view .LVU91
 680 0010 0B48     		ldr	r0, .L58+4
 681 0012 FFF7FEFF 		bl	printf_
 682              	.LVL22:
 683              		.loc 1 553 9 discriminator 1 view .LVU92
 554:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 684              		.loc 1 554 9 discriminator 1 view .LVU93
 685              		.loc 1 554 9 discriminator 1 view .LVU94
 686 0016 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 687 0018 DA07     		lsls	r2, r3, #31
 688 001a 09D5     		bpl	.L45
 689              		.loc 1 554 9 discriminator 1 view .LVU95
 690 001c 0948     		ldr	r0, .L58+8
 691 001e 2146     		mov	r1, r4
 692 0020 FFF7FEFF 		bl	printf_
 693              	.LVL23:
 694              		.loc 1 554 9 discriminator 1 view .LVU96
 555:tmk_core/common/keyboard.c ****         debug("\n");
 695              		.loc 1 555 9 discriminator 1 view .LVU97
 696              		.loc 1 555 9 discriminator 1 view .LVU98
 697 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 698 0026 DB07     		lsls	r3, r3, #31
 699 0028 02D5     		bpl	.L45
 700              		.loc 1 555 9 discriminator 1 view .LVU99
 701 002a 0748     		ldr	r0, .L58+12
 702 002c FFF7FEFF 		bl	printf_
 703              	.LVL24:
 704              	.L45:
 705              		.loc 1 555 9 discriminator 3 view .LVU100
 556:tmk_core/common/keyboard.c ****     }
 557:tmk_core/common/keyboard.c ****     led_set(leds);
 706              		.loc 1 557 5 discriminator 3 view .LVU101
 707 0030 2046     		mov	r0, r4
 558:tmk_core/common/keyboard.c **** }
 708              		.loc 1 558 1 is_stmt 0 discriminator 3 view .LVU102
 709 0032 BDE83840 		pop	{r3, r4, r5, lr}
 710              		.cfi_restore 14
 711              		.cfi_restore 5
 712              		.cfi_restore 4
 713              		.cfi_restore 3
 714              		.cfi_def_cfa_offset 0
 557:tmk_core/common/keyboard.c **** }
 715              		.loc 1 557 5 discriminator 3 view .LVU103
 716 0036 FFF7FEBF 		b	led_set
 717              	.LVL25:
 718              	.L59:
 719 003a 00BF     		.align	2
 720              	.L58:
 721 003c 00000000 		.word	debug_config
 722 0040 00000000 		.word	.LC0
 723 0044 13000000 		.word	.LC1
 724 0048 18000000 		.word	.LC2
 725              		.cfi_endproc
 726              	.LFE315:
 728              		.section	.text.keyboard_task,"ax",%progbits
 729              		.align	1
 730              		.global	keyboard_task
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 734              		.fpu fpv4-sp-d16
 736              	keyboard_task:
 737              	.LFB314:
 386:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 738              		.loc 1 386 26 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 16
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 387:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 742              		.loc 1 387 5 view .LVU105
 388:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 743              		.loc 1 388 5 view .LVU106
 389:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 744              		.loc 1 389 5 view .LVU107
 745              	.LVL26:
 390:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 746              		.loc 1 390 5 view .LVU108
 392:tmk_core/common/keyboard.c **** #endif
 747              		.loc 1 392 5 view .LVU109
 395:tmk_core/common/keyboard.c **** #endif
 748              		.loc 1 395 5 view .LVU110
 398:tmk_core/common/keyboard.c ****     if (matrix_changed) last_matrix_activity_trigger();
 749              		.loc 1 398 5 view .LVU111
 386:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 750              		.loc 1 386 26 is_stmt 0 view .LVU112
 751 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 752              		.cfi_def_cfa_offset 36
 753              		.cfi_offset 4, -36
 754              		.cfi_offset 5, -32
 755              		.cfi_offset 6, -28
 756              		.cfi_offset 7, -24
 757              		.cfi_offset 8, -20
 758              		.cfi_offset 9, -16
 759              		.cfi_offset 10, -12
 760              		.cfi_offset 11, -8
 761              		.cfi_offset 14, -4
 762 0004 85B0     		sub	sp, sp, #20
 763              		.cfi_def_cfa_offset 56
 398:tmk_core/common/keyboard.c ****     if (matrix_changed) last_matrix_activity_trigger();
 764              		.loc 1 398 30 view .LVU113
 765 0006 FFF7FEFF 		bl	matrix_scan
 766              	.LVL27:
 399:tmk_core/common/keyboard.c **** 
 767              		.loc 1 399 5 is_stmt 1 view .LVU114
 399:tmk_core/common/keyboard.c **** 
 768              		.loc 1 399 8 is_stmt 0 view .LVU115
 769 000a 08B1     		cbz	r0, .L61
 399:tmk_core/common/keyboard.c **** 
 770              		.loc 1 399 25 is_stmt 1 discriminator 1 view .LVU116
 771 000c FFF7FEFF 		bl	last_matrix_activity_trigger
 772              	.LVL28:
 773              	.L61:
 386:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 774              		.loc 1 386 26 is_stmt 0 view .LVU117
 775 0010 0027     		movs	r7, #0
 776 0012 DFF80091 		ldr	r9, .L89+8
 777 0016 3C46     		mov	r4, r7
 778              	.LVL29:
 779              	.L68:
 386:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 780              		.loc 1 386 26 view .LVU118
 781 0018 5FFA87FA 		uxtb	r10, r7
 782              	.LVL30:
 783              	.LBB11:
 402:tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 784              		.loc 1 402 9 is_stmt 1 view .LVU119
 402:tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 785              		.loc 1 402 25 is_stmt 0 view .LVU120
 786 001c 5046     		mov	r0, r10
 787 001e FFF7FEFF 		bl	matrix_get_row
 788              	.LVL31:
 403:tmk_core/common/keyboard.c ****         if (matrix_change) {
 789              		.loc 1 403 49 view .LVU121
 790 0022 19F8016B 		ldrb	r6, [r9], #1	@ zero_extendqisi2
 404:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 791              		.loc 1 404 12 view .LVU122
 792 0026 8642     		cmp	r6, r0
 402:tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 793              		.loc 1 402 25 view .LVU123
 794 0028 8046     		mov	r8, r0
 795              	.LVL32:
 403:tmk_core/common/keyboard.c ****         if (matrix_change) {
 796              		.loc 1 403 9 is_stmt 1 view .LVU124
 404:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 797              		.loc 1 404 9 view .LVU125
 404:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 798              		.loc 1 404 12 is_stmt 0 view .LVU126
 799 002a 3FD0     		beq	.L62
 800              	.LBB12:
 410:tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 801              		.loc 1 410 13 is_stmt 1 view .LVU127
 410:tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 802              		.loc 1 410 17 is_stmt 0 view .LVU128
 803 002c 374B     		ldr	r3, .L89
 804 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 410:tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 805              		.loc 1 410 16 view .LVU129
 806 0030 9B07     		lsls	r3, r3, #30
 807 0032 01D5     		bpl	.L63
 410:tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 808              		.loc 1 410 31 is_stmt 1 discriminator 1 view .LVU130
 809 0034 FFF7FEFF 		bl	matrix_print
 810              	.LVL33:
 811              	.L63:
 410:tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 812              		.loc 1 410 31 is_stmt 0 discriminator 1 view .LVU131
 813              	.LBE12:
 403:tmk_core/common/keyboard.c ****         if (matrix_change) {
 814              		.loc 1 403 23 view .LVU132
 815 0038 86EA0806 		eor	r6, r6, r8
 403:tmk_core/common/keyboard.c ****         if (matrix_change) {
 816              		.loc 1 403 23 view .LVU133
 817 003c F6B2     		uxtb	r6, r6
 818 003e 0025     		movs	r5, #0
 819 0040 4FF0010B 		mov	fp, #1
 820              	.L67:
 821              	.LVL34:
 822              	.LBB20:
 823              	.LBB13:
 413:tmk_core/common/keyboard.c ****                     if (should_process_keypress()) {
 824              		.loc 1 413 17 is_stmt 1 view .LVU134
 413:tmk_core/common/keyboard.c ****                     if (should_process_keypress()) {
 825              		.loc 1 413 20 is_stmt 0 view .LVU135
 826 0044 16EA0B0F 		tst	r6, fp
 827 0048 28D0     		beq	.L64
 414:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 828              		.loc 1 414 21 is_stmt 1 view .LVU136
 414:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 829              		.loc 1 414 25 is_stmt 0 view .LVU137
 830 004a FFF7FEFF 		bl	should_process_keypress
 831              	.LVL35:
 832              	.LBB14:
 416:tmk_core/common/keyboard.c ****                         });
 833              		.loc 1 416 91 view .LVU138
 834 004e 18EA0B0F 		tst	r8, fp
 835 0052 14BF     		ite	ne
 836 0054 0122     		movne	r2, #1
 837 0056 0022     		moveq	r2, #0
 838              	.LBE14:
 414:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 839              		.loc 1 414 24 view .LVU139
 840 0058 90B1     		cbz	r0, .L65
 841              	.LBB15:
 415:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 842              		.loc 1 415 25 is_stmt 1 view .LVU140
 415:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 843              		.loc 1 415 49 is_stmt 0 view .LVU141
 844 005a 8DF80A20 		strb	r2, [sp, #10]
 845 005e 0192     		str	r2, [sp, #4]
 846 0060 8DF80850 		strb	r5, [sp, #8]
 847 0064 8DF809A0 		strb	r10, [sp, #9]
 416:tmk_core/common/keyboard.c ****                         });
 848              		.loc 1 416 113 view .LVU142
 849 0068 FFF7FEFF 		bl	timer_read
 850              	.LVL36:
 415:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 851              		.loc 1 415 49 view .LVU143
 852 006c 40F00100 		orr	r0, r0, #1
 853 0070 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 415:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 854              		.loc 1 415 25 view .LVU144
 855 0074 02AB     		add	r3, sp, #8
 856 0076 93E80300 		ldm	r3, {r0, r1}
 857 007a FFF7FEFF 		bl	action_exec
 858              	.LVL37:
 859 007e 019A     		ldr	r2, [sp, #4]
 860              	.L65:
 415:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 861              		.loc 1 415 25 view .LVU145
 862              	.LBE15:
 420:tmk_core/common/keyboard.c **** 
 863              		.loc 1 420 21 is_stmt 1 view .LVU146
 420:tmk_core/common/keyboard.c **** 
 864              		.loc 1 420 36 is_stmt 0 view .LVU147
 865 0080 19F8011C 		ldrb	r1, [r9, #-1]	@ zero_extendqisi2
 426:tmk_core/common/keyboard.c **** #endif
 866              		.loc 1 426 24 view .LVU148
 867 0084 0134     		adds	r4, r4, #1
 868              	.LVL38:
 420:tmk_core/common/keyboard.c **** 
 869              		.loc 1 420 36 view .LVU149
 870 0086 8BEA0101 		eor	r1, fp, r1
 871 008a 09F8011C 		strb	r1, [r9, #-1]
 422:tmk_core/common/keyboard.c **** 
 872              		.loc 1 422 21 is_stmt 1 view .LVU150
 873              	.LVL39:
 874              	.LBB16:
 875              	.LBI16:
 365:tmk_core/common/keyboard.c **** #if defined(LED_MATRIX_ENABLE)
 876              		.loc 1 365 6 view .LVU151
 877              	.LBB17:
 370:tmk_core/common/keyboard.c **** #endif
 878              		.loc 1 370 5 view .LVU152
 879 008e 5046     		mov	r0, r10
 880 0090 2946     		mov	r1, r5
 881              	.LBE17:
 882              	.LBE16:
 426:tmk_core/common/keyboard.c **** #endif
 883              		.loc 1 426 24 is_stmt 0 view .LVU153
 884 0092 E4B2     		uxtb	r4, r4
 885              	.LBB19:
 886              	.LBB18:
 370:tmk_core/common/keyboard.c **** #endif
 887              		.loc 1 370 5 view .LVU154
 888 0094 FFF7FEFF 		bl	process_rgb_matrix
 889              	.LVL40:
 370:tmk_core/common/keyboard.c **** #endif
 890              		.loc 1 370 5 view .LVU155
 891              	.LBE18:
 892              	.LBE19:
 426:tmk_core/common/keyboard.c **** #endif
 893              		.loc 1 426 21 is_stmt 1 view .LVU156
 426:tmk_core/common/keyboard.c **** #endif
 894              		.loc 1 426 24 is_stmt 0 view .LVU157
 895 0098 032C     		cmp	r4, #3
 896 009a 1CD8     		bhi	.L66
 897              	.L64:
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 898              		.loc 1 412 50 is_stmt 1 discriminator 2 view .LVU158
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 899              		.loc 1 412 51 is_stmt 0 discriminator 2 view .LVU159
 900 009c 0135     		adds	r5, r5, #1
 901              	.LVL41:
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 902              		.loc 1 412 51 discriminator 2 view .LVU160
 903 009e EDB2     		uxtb	r5, r5
 904              	.LVL42:
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 905              		.loc 1 412 64 discriminator 2 view .LVU161
 906 00a0 4FEA4B03 		lsl	r3, fp, #1
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 907              		.loc 1 412 13 discriminator 2 view .LVU162
 908 00a4 082D     		cmp	r5, #8
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 909              		.loc 1 412 64 discriminator 2 view .LVU163
 910 00a6 5FFA83FB 		uxtb	fp, r3
 911              	.LVL43:
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 912              		.loc 1 412 33 is_stmt 1 discriminator 2 view .LVU164
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 913              		.loc 1 412 13 is_stmt 0 discriminator 2 view .LVU165
 914 00aa CBD1     		bne	.L67
 915              	.LVL44:
 916              	.L62:
 412:tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 917              		.loc 1 412 13 discriminator 2 view .LVU166
 918              	.LBE13:
 919              	.LBE20:
 401:tmk_core/common/keyboard.c ****         matrix_row    = matrix_get_row(r);
 920              		.loc 1 401 42 is_stmt 1 discriminator 2 view .LVU167
 401:tmk_core/common/keyboard.c ****         matrix_row    = matrix_get_row(r);
 921              		.loc 1 401 25 discriminator 2 view .LVU168
 401:tmk_core/common/keyboard.c ****         matrix_row    = matrix_get_row(r);
 922              		.loc 1 401 5 is_stmt 0 discriminator 2 view .LVU169
 923 00ac 0137     		adds	r7, r7, #1
 924              	.LVL45:
 401:tmk_core/common/keyboard.c ****         matrix_row    = matrix_get_row(r);
 925              		.loc 1 401 5 discriminator 2 view .LVU170
 926 00ae 0B2F     		cmp	r7, #11
 927 00b0 B2D1     		bne	.L68
 401:tmk_core/common/keyboard.c ****         matrix_row    = matrix_get_row(r);
 928              		.loc 1 401 5 discriminator 2 view .LVU171
 929              	.LBE11:
 437:tmk_core/common/keyboard.c **** #endif
 930              		.loc 1 437 5 is_stmt 1 view .LVU172
 437:tmk_core/common/keyboard.c **** #endif
 931              		.loc 1 437 8 is_stmt 0 view .LVU173
 932 00b2 84B9     		cbnz	r4, .L66
 933              	.LBB21:
 439:tmk_core/common/keyboard.c **** 
 934              		.loc 1 439 9 is_stmt 1 view .LVU174
 439:tmk_core/common/keyboard.c **** 
 935              		.loc 1 439 21 is_stmt 0 view .LVU175
 936 00b4 4FF6FF73 		movw	r3, #65535
 937 00b8 ADF80830 		strh	r3, [sp, #8]	@ movhi
 938 00bc 8DF80A40 		strb	r4, [sp, #10]
 939 00c0 FFF7FEFF 		bl	timer_read
 940              	.LVL46:
 941 00c4 40F00100 		orr	r0, r0, #1
 942 00c8 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 439:tmk_core/common/keyboard.c **** 
 943              		.loc 1 439 9 view .LVU176
 944 00cc 04AB     		add	r3, sp, #16
 945 00ce 13E90300 		ldmdb	r3, {r0, r1}
 946 00d2 FFF7FEFF 		bl	action_exec
 947              	.LVL47:
 948              	.L66:
 439:tmk_core/common/keyboard.c **** 
 949              		.loc 1 439 9 view .LVU177
 950              	.LBE21:
 455:tmk_core/common/keyboard.c **** #endif
 951              		.loc 1 455 5 is_stmt 1 view .LVU178
 952 00d6 FFF7FEFF 		bl	rgb_matrix_task
 953              	.LVL48:
 465:tmk_core/common/keyboard.c ****     if (encoders_changed) last_encoder_activity_trigger();
 954              		.loc 1 465 5 view .LVU179
 465:tmk_core/common/keyboard.c ****     if (encoders_changed) last_encoder_activity_trigger();
 955              		.loc 1 465 24 is_stmt 0 view .LVU180
 956 00da FFF7FEFF 		bl	encoder_read
 957              	.LVL49:
 466:tmk_core/common/keyboard.c **** #endif
 958              		.loc 1 466 5 is_stmt 1 view .LVU181
 466:tmk_core/common/keyboard.c **** #endif
 959              		.loc 1 466 8 is_stmt 0 view .LVU182
 960 00de 08B1     		cbz	r0, .L70
 466:tmk_core/common/keyboard.c **** #endif
 961              		.loc 1 466 27 is_stmt 1 discriminator 1 view .LVU183
 962 00e0 FFF7FEFF 		bl	last_encoder_activity_trigger
 963              	.LVL50:
 964              	.L70:
 499:tmk_core/common/keyboard.c **** #endif
 965              		.loc 1 499 5 view .LVU184
 541:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 966              		.loc 1 541 20 is_stmt 0 view .LVU185
 967 00e4 0A4C     		ldr	r4, .L89+4
 968              	.LVL51:
 499:tmk_core/common/keyboard.c **** #endif
 969              		.loc 1 499 5 view .LVU186
 970 00e6 FFF7FEFF 		bl	mousekey_task
 971              	.LVL52:
 541:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 972              		.loc 1 541 5 is_stmt 1 view .LVU187
 541:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 973              		.loc 1 541 23 is_stmt 0 view .LVU188
 974 00ea FFF7FEFF 		bl	host_keyboard_leds
 975              	.LVL53:
 541:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 976              		.loc 1 541 8 view .LVU189
 977 00ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 978 00f0 8342     		cmp	r3, r0
 979 00f2 07D0     		beq	.L60
 542:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 980              		.loc 1 542 9 is_stmt 1 view .LVU190
 542:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 981              		.loc 1 542 22 is_stmt 0 view .LVU191
 982 00f4 FFF7FEFF 		bl	host_keyboard_leds
 983              	.LVL54:
 542:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 984              		.loc 1 542 20 view .LVU192
 985 00f8 2070     		strb	r0, [r4]
 543:tmk_core/common/keyboard.c ****     }
 986              		.loc 1 543 9 is_stmt 1 view .LVU193
 545:tmk_core/common/keyboard.c **** 
 987              		.loc 1 545 1 is_stmt 0 view .LVU194
 988 00fa 05B0     		add	sp, sp, #20
 989              		.cfi_remember_state
 990              		.cfi_def_cfa_offset 36
 991              		@ sp needed
 992 00fc BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 993              		.cfi_restore 14
 994              		.cfi_restore 11
 995              		.cfi_restore 10
 996              		.cfi_restore 9
 997              		.cfi_restore 8
 998              		.cfi_restore 7
 999              		.cfi_restore 6
 1000              		.cfi_restore 5
 1001              		.cfi_restore 4
 1002              		.cfi_def_cfa_offset 0
 543:tmk_core/common/keyboard.c ****     }
 1003              		.loc 1 543 9 view .LVU195
 1004 0100 FFF7FEBF 		b	keyboard_set_leds
 1005              	.LVL55:
 1006              	.L60:
 1007              		.cfi_restore_state
 545:tmk_core/common/keyboard.c **** 
 1008              		.loc 1 545 1 view .LVU196
 1009 0104 05B0     		add	sp, sp, #20
 1010              		.cfi_def_cfa_offset 36
 1011              		@ sp needed
 1012 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1013              	.L90:
 1014 010a 00BF     		.align	2
 1015              	.L89:
 1016 010c 00000000 		.word	debug_config
 1017 0110 00000000 		.word	.LANCHOR4
 1018 0114 00000000 		.word	.LANCHOR3
 1019              		.cfi_endproc
 1020              	.LFE314:
 1022              		.section	.bss.last_encoder_modification_time,"aw",%nobits
 1023              		.align	2
 1024              		.set	.LANCHOR2,. + 0
 1027              	last_encoder_modification_time:
 1028 0000 00000000 		.space	4
 1029              		.section	.bss.last_input_modification_time,"aw",%nobits
 1030              		.align	2
 1031              		.set	.LANCHOR0,. + 0
 1034              	last_input_modification_time:
 1035 0000 00000000 		.space	4
 1036              		.section	.bss.last_matrix_modification_time,"aw",%nobits
 1037              		.align	2
 1038              		.set	.LANCHOR1,. + 0
 1041              	last_matrix_modification_time:
 1042 0000 00000000 		.space	4
 1043              		.section	.bss.led_status.0,"aw",%nobits
 1044              		.set	.LANCHOR4,. + 0
 1047              	led_status.0:
 1048 0000 00       		.space	1
 1049              		.section	.bss.matrix_prev.1,"aw",%nobits
 1050              		.set	.LANCHOR3,. + 0
 1053              	matrix_prev.1:
 1054 0000 00000000 		.space	11
 1054      00000000 
 1054      000000
 1055              		.text
 1056              	.Letext0:
 1057              		.file 2 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 1058              		.file 3 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 1059              		.file 4 "tmk_core/common/keyboard.h"
 1060              		.file 5 "quantum/matrix.h"
 1061              		.file 6 "quantum/logging/debug.h"
 1062              		.file 7 "lib/printf/printf.h"
 1063              		.file 8 "quantum/led.h"
 1064              		.file 9 "quantum/rgb_matrix/rgb_matrix.h"
 1065              		.file 10 "tmk_core/common/timer.h"
 1066              		.file 11 "tmk_core/common/action.h"
 1067              		.file 12 "quantum/encoder.h"
 1068              		.file 13 "quantum/mousekey.h"
 1069              		.file 14 "tmk_core/common/host.h"
 1070              		.file 15 "quantum/logging/print.h"
 1071              		.file 16 "tmk_core/common/chibios/eeprom_stm32.h"
 1072              		.file 17 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:18     .text.last_input_activity_time:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:26     .text.last_input_activity_time:0000000000000000 last_input_activity_time
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:42     .text.last_input_activity_time:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:47     .text.last_input_activity_elapsed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:54     .text.last_input_activity_elapsed:0000000000000000 last_input_activity_elapsed
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:70     .text.last_input_activity_elapsed:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:75     .text.last_matrix_activity_time:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:82     .text.last_matrix_activity_time:0000000000000000 last_matrix_activity_time
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:97     .text.last_matrix_activity_time:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:102    .text.last_matrix_activity_elapsed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:109    .text.last_matrix_activity_elapsed:0000000000000000 last_matrix_activity_elapsed
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:125    .text.last_matrix_activity_elapsed:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:130    .text.last_matrix_activity_trigger:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:137    .text.last_matrix_activity_trigger:0000000000000000 last_matrix_activity_trigger
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:163    .text.last_matrix_activity_trigger:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:169    .text.last_encoder_activity_time:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:176    .text.last_encoder_activity_time:0000000000000000 last_encoder_activity_time
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:191    .text.last_encoder_activity_time:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:196    .text.last_encoder_activity_elapsed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:203    .text.last_encoder_activity_elapsed:0000000000000000 last_encoder_activity_elapsed
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:219    .text.last_encoder_activity_elapsed:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:224    .text.last_encoder_activity_trigger:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:231    .text.last_encoder_activity_trigger:0000000000000000 last_encoder_activity_trigger
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:257    .text.last_encoder_activity_trigger:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:263    .text.disable_jtag:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:270    .text.disable_jtag:0000000000000000 disable_jtag
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:283    .text.matrix_setup:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:290    .text.matrix_setup:0000000000000000 matrix_setup
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:301    .text.keyboard_pre_init_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:308    .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:321    .text.keyboard_pre_init_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:328    .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:349    .text.keyboard_post_init_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:356    .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:367    .text.keyboard_post_init_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:374    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:395    .text.keyboard_setup:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:402    .text.keyboard_setup:0000000000000000 keyboard_setup
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:434    .text.keyboard_setup:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:439    .text.is_keyboard_master:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:446    .text.is_keyboard_master:0000000000000000 is_keyboard_master
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:461    .text.is_keyboard_left:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:468    .text.is_keyboard_left:0000000000000000 is_keyboard_left
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:480    .text.should_process_keypress:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:487    .text.should_process_keypress:0000000000000000 should_process_keypress
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:508    .text.housekeeping_task_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:515    .text.housekeeping_task_kb:0000000000000000 housekeeping_task_kb
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:526    .text.housekeeping_task_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:533    .text.housekeeping_task_user:0000000000000000 housekeeping_task_user
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:544    .text.housekeeping_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:551    .text.housekeeping_task:0000000000000000 housekeeping_task
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:575    .text.keyboard_init:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:582    .text.keyboard_init:0000000000000000 keyboard_init
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:613    .text.switch_events:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:620    .text.switch_events:0000000000000000 switch_events
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:643    .text.keyboard_set_leds:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:650    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:721    .text.keyboard_set_leds:000000000000003c $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:729    .text.keyboard_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:736    .text.keyboard_task:0000000000000000 keyboard_task
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1016   .text.keyboard_task:000000000000010c $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1023   .bss.last_encoder_modification_time:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1027   .bss.last_encoder_modification_time:0000000000000000 last_encoder_modification_time
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1030   .bss.last_input_modification_time:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1034   .bss.last_input_modification_time:0000000000000000 last_input_modification_time
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1037   .bss.last_matrix_modification_time:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1041   .bss.last_matrix_modification_time:0000000000000000 last_matrix_modification_time
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1047   .bss.led_status.0:0000000000000000 led_status.0
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1048   .bss.led_status.0:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1053   .bss.matrix_prev.1:0000000000000000 matrix_prev.1
C:\Users\lhanj\AppData\Local\Temp\ccQthYx6.s:1054   .bss.matrix_prev.1:0000000000000000 $d

UNDEFINED SYMBOLS
timer_elapsed32
timer_read32
print_set_sendchar
EEPROM_Init
sendchar
timer_init
matrix_init
encoder_init
process_rgb_matrix
printf_
led_set
debug_config
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
rgb_matrix_task
encoder_read
mousekey_task
host_keyboard_leds
