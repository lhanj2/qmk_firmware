   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"process_dynamic_macro.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.dynamic_macro_led_blink,"ax",%progbits
  18              		.align	1
  19              		.global	dynamic_macro_led_blink
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	dynamic_macro_led_blink:
  27              	.LFB291:
  28              		.file 1 "quantum/process_keycode/process_dynamic_macro.c"
   1:quantum/process_keycode/process_dynamic_macro.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_dynamic_macro.c ****  * Copyright 2019 Drashna Jael're (@drashna, aka Christopher Courtney)
   3:quantum/process_keycode/process_dynamic_macro.c ****  *
   4:quantum/process_keycode/process_dynamic_macro.c ****  * This program is free software: you can redistribute it and/or modify
   5:quantum/process_keycode/process_dynamic_macro.c ****  * it under the terms of the GNU General Public License as published by
   6:quantum/process_keycode/process_dynamic_macro.c ****  * the Free Software Foundation, either version 2 of the License, or
   7:quantum/process_keycode/process_dynamic_macro.c ****  * (at your option) any later version.
   8:quantum/process_keycode/process_dynamic_macro.c ****  *
   9:quantum/process_keycode/process_dynamic_macro.c ****  * This program is distributed in the hope that it will be useful,
  10:quantum/process_keycode/process_dynamic_macro.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/process_keycode/process_dynamic_macro.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/process_keycode/process_dynamic_macro.c ****  * GNU General Public License for more details.
  13:quantum/process_keycode/process_dynamic_macro.c ****  *
  14:quantum/process_keycode/process_dynamic_macro.c ****  * You should have received a copy of the GNU General Public License
  15:quantum/process_keycode/process_dynamic_macro.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/process_keycode/process_dynamic_macro.c ****  */
  17:quantum/process_keycode/process_dynamic_macro.c **** 
  18:quantum/process_keycode/process_dynamic_macro.c **** /* Author: Wojciech Siewierski < wojciech dot siewierski at onet dot pl > */
  19:quantum/process_keycode/process_dynamic_macro.c **** #include "process_dynamic_macro.h"
  20:quantum/process_keycode/process_dynamic_macro.c **** 
  21:quantum/process_keycode/process_dynamic_macro.c **** // default feedback method
  22:quantum/process_keycode/process_dynamic_macro.c **** void dynamic_macro_led_blink(void) {
  29              		.loc 1 22 36 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  23:quantum/process_keycode/process_dynamic_macro.c **** #ifdef BACKLIGHT_ENABLE
  24:quantum/process_keycode/process_dynamic_macro.c ****     backlight_toggle();
  25:quantum/process_keycode/process_dynamic_macro.c ****     wait_ms(100);
  26:quantum/process_keycode/process_dynamic_macro.c ****     backlight_toggle();
  27:quantum/process_keycode/process_dynamic_macro.c **** #endif
  28:quantum/process_keycode/process_dynamic_macro.c **** }
  34              		.loc 1 28 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE291:
  39              		.section	.text.dynamic_macro_record_start_user,"ax",%progbits
  40              		.align	1
  41              		.weak	dynamic_macro_record_start_user
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	dynamic_macro_record_start_user:
  48              	.LFB292:
  29:quantum/process_keycode/process_dynamic_macro.c **** 
  30:quantum/process_keycode/process_dynamic_macro.c **** /* User hooks for Dynamic Macros */
  31:quantum/process_keycode/process_dynamic_macro.c **** 
  32:quantum/process_keycode/process_dynamic_macro.c **** __attribute__((weak)) void dynamic_macro_record_start_user(void) { dynamic_macro_led_blink(); }
  49              		.loc 1 32 66 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              		.loc 1 32 68 view .LVU3
  28:quantum/process_keycode/process_dynamic_macro.c **** 
  55              		.loc 1 28 1 view .LVU4
  56              		.loc 1 32 95 is_stmt 0 view .LVU5
  57 0000 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE292:
  61              		.section	.text.dynamic_macro_play_user,"ax",%progbits
  62              		.align	1
  63              		.weak	dynamic_macro_play_user
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	dynamic_macro_play_user:
  70              	.LVL0:
  71              	.LFB293:
  33:quantum/process_keycode/process_dynamic_macro.c **** 
  34:quantum/process_keycode/process_dynamic_macro.c **** __attribute__((weak)) void dynamic_macro_play_user(int8_t direction) { dynamic_macro_led_blink(); }
  72              		.loc 1 34 70 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              		.loc 1 34 72 view .LVU7
  28:quantum/process_keycode/process_dynamic_macro.c **** 
  78              		.loc 1 28 1 view .LVU8
  79              		.loc 1 34 99 is_stmt 0 view .LVU9
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE293:
  84              		.section	.text.dynamic_macro_record_key_user,"ax",%progbits
  85              		.align	1
  86              		.weak	dynamic_macro_record_key_user
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	dynamic_macro_record_key_user:
  93              	.LVL1:
  94              	.LFB294:
  35:quantum/process_keycode/process_dynamic_macro.c **** 
  36:quantum/process_keycode/process_dynamic_macro.c **** __attribute__((weak)) void dynamic_macro_record_key_user(int8_t direction, keyrecord_t *record) { d
  95              		.loc 1 36 97 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100              		.loc 1 36 99 view .LVU11
  28:quantum/process_keycode/process_dynamic_macro.c **** 
 101              		.loc 1 28 1 view .LVU12
 102              		.loc 1 36 126 is_stmt 0 view .LVU13
 103 0000 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE294:
 107              		.section	.text.dynamic_macro_record_end_user,"ax",%progbits
 108              		.align	1
 109              		.weak	dynamic_macro_record_end_user
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	dynamic_macro_record_end_user:
 116              	.LFB302:
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE302:
 125              		.section	.text.dynamic_macro_record_start,"ax",%progbits
 126              		.align	1
 127              		.global	dynamic_macro_record_start
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	dynamic_macro_record_start:
 134              	.LVL2:
 135              	.LFB296:
  37:quantum/process_keycode/process_dynamic_macro.c **** 
  38:quantum/process_keycode/process_dynamic_macro.c **** __attribute__((weak)) void dynamic_macro_record_end_user(int8_t direction) { dynamic_macro_led_blin
  39:quantum/process_keycode/process_dynamic_macro.c **** 
  40:quantum/process_keycode/process_dynamic_macro.c **** /* Convenience macros used for retrieving the debug info. All of them
  41:quantum/process_keycode/process_dynamic_macro.c ****  * need a `direction` variable accessible at the call site.
  42:quantum/process_keycode/process_dynamic_macro.c ****  */
  43:quantum/process_keycode/process_dynamic_macro.c **** #define DYNAMIC_MACRO_CURRENT_SLOT() (direction > 0 ? 1 : 2)
  44:quantum/process_keycode/process_dynamic_macro.c **** #define DYNAMIC_MACRO_CURRENT_LENGTH(BEGIN, POINTER) ((int)(direction * ((POINTER) - (BEGIN))))
  45:quantum/process_keycode/process_dynamic_macro.c **** #define DYNAMIC_MACRO_CURRENT_CAPACITY(BEGIN, END2) ((int)(direction * ((END2) - (BEGIN)) + 1))
  46:quantum/process_keycode/process_dynamic_macro.c **** 
  47:quantum/process_keycode/process_dynamic_macro.c **** /**
  48:quantum/process_keycode/process_dynamic_macro.c ****  * Start recording of the dynamic macro.
  49:quantum/process_keycode/process_dynamic_macro.c ****  *
  50:quantum/process_keycode/process_dynamic_macro.c ****  * @param[out] macro_pointer The new macro buffer iterator.
  51:quantum/process_keycode/process_dynamic_macro.c ****  * @param[in]  macro_buffer  The macro buffer used to initialize macro_pointer.
  52:quantum/process_keycode/process_dynamic_macro.c ****  */
  53:quantum/process_keycode/process_dynamic_macro.c **** void dynamic_macro_record_start(keyrecord_t **macro_pointer, keyrecord_t *macro_buffer) {
 136              		.loc 1 53 89 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
  54:quantum/process_keycode/process_dynamic_macro.c ****     dprintln("dynamic macro recording: started");
 140              		.loc 1 54 49 view .LVU15
  55:quantum/process_keycode/process_dynamic_macro.c **** 
  56:quantum/process_keycode/process_dynamic_macro.c ****     dynamic_macro_record_start_user();
 141              		.loc 1 56 5 view .LVU16
  53:quantum/process_keycode/process_dynamic_macro.c ****     dprintln("dynamic macro recording: started");
 142              		.loc 1 53 89 is_stmt 0 view .LVU17
 143 0000 38B5     		push	{r3, r4, r5, lr}
 144              		.cfi_def_cfa_offset 16
 145              		.cfi_offset 3, -16
 146              		.cfi_offset 4, -12
 147              		.cfi_offset 5, -8
 148              		.cfi_offset 14, -4
  53:quantum/process_keycode/process_dynamic_macro.c ****     dprintln("dynamic macro recording: started");
 149              		.loc 1 53 89 view .LVU18
 150 0002 0446     		mov	r4, r0
 151 0004 0D46     		mov	r5, r1
 152              		.loc 1 56 5 view .LVU19
 153 0006 FFF7FEFF 		bl	dynamic_macro_record_start_user
 154              	.LVL3:
  57:quantum/process_keycode/process_dynamic_macro.c **** 
  58:quantum/process_keycode/process_dynamic_macro.c ****     clear_keyboard();
 155              		.loc 1 58 5 is_stmt 1 view .LVU20
 156 000a FFF7FEFF 		bl	clear_keyboard
 157              	.LVL4:
  59:quantum/process_keycode/process_dynamic_macro.c ****     layer_clear();
 158              		.loc 1 59 5 view .LVU21
 159 000e FFF7FEFF 		bl	layer_clear
 160              	.LVL5:
  60:quantum/process_keycode/process_dynamic_macro.c ****     *macro_pointer = macro_buffer;
 161              		.loc 1 60 5 view .LVU22
 162              		.loc 1 60 20 is_stmt 0 view .LVU23
 163 0012 2560     		str	r5, [r4]
  61:quantum/process_keycode/process_dynamic_macro.c **** }
 164              		.loc 1 61 1 view .LVU24
 165 0014 38BD     		pop	{r3, r4, r5, pc}
 166              		.loc 1 61 1 view .LVU25
 167              		.cfi_endproc
 168              	.LFE296:
 170              		.section	.text.dynamic_macro_play,"ax",%progbits
 171              		.align	1
 172              		.global	dynamic_macro_play
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	dynamic_macro_play:
 179              	.LVL6:
 180              	.LFB297:
  62:quantum/process_keycode/process_dynamic_macro.c **** 
  63:quantum/process_keycode/process_dynamic_macro.c **** /**
  64:quantum/process_keycode/process_dynamic_macro.c ****  * Play the dynamic macro.
  65:quantum/process_keycode/process_dynamic_macro.c ****  *
  66:quantum/process_keycode/process_dynamic_macro.c ****  * @param macro_buffer[in] The beginning of the macro buffer being played.
  67:quantum/process_keycode/process_dynamic_macro.c ****  * @param macro_end[in]    The element after the last macro buffer element.
  68:quantum/process_keycode/process_dynamic_macro.c ****  * @param direction[in]    Either +1 or -1, which way to iterate the buffer.
  69:quantum/process_keycode/process_dynamic_macro.c ****  */
  70:quantum/process_keycode/process_dynamic_macro.c **** void dynamic_macro_play(keyrecord_t *macro_buffer, keyrecord_t *macro_end, int8_t direction) {
 181              		.loc 1 70 94 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
  71:quantum/process_keycode/process_dynamic_macro.c ****     dprintf("dynamic macro: slot %d playback\n", DYNAMIC_MACRO_CURRENT_SLOT());
 185              		.loc 1 71 79 view .LVU27
  72:quantum/process_keycode/process_dynamic_macro.c **** 
  73:quantum/process_keycode/process_dynamic_macro.c ****     layer_state_t saved_layer_state = layer_state;
 186              		.loc 1 73 5 view .LVU28
  70:quantum/process_keycode/process_dynamic_macro.c ****     dprintf("dynamic macro: slot %d playback\n", DYNAMIC_MACRO_CURRENT_SLOT());
 187              		.loc 1 70 94 is_stmt 0 view .LVU29
 188 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 189              		.cfi_def_cfa_offset 32
 190              		.cfi_offset 3, -32
 191              		.cfi_offset 4, -28
 192              		.cfi_offset 5, -24
 193              		.cfi_offset 6, -20
 194              		.cfi_offset 7, -16
 195              		.cfi_offset 8, -12
 196              		.cfi_offset 9, -8
 197              		.cfi_offset 14, -4
 198              		.loc 1 73 19 view .LVU30
 199 0004 0D4F     		ldr	r7, .L10
  70:quantum/process_keycode/process_dynamic_macro.c ****     dprintf("dynamic macro: slot %d playback\n", DYNAMIC_MACRO_CURRENT_SLOT());
 200              		.loc 1 70 94 view .LVU31
 201 0006 1546     		mov	r5, r2
 202 0008 0446     		mov	r4, r0
 203 000a 0E46     		mov	r6, r1
 204              		.loc 1 73 19 view .LVU32
 205 000c 97F80080 		ldrb	r8, [r7]	@ zero_extendqisi2
 206              	.LVL7:
  74:quantum/process_keycode/process_dynamic_macro.c **** 
  75:quantum/process_keycode/process_dynamic_macro.c ****     clear_keyboard();
 207              		.loc 1 75 5 is_stmt 1 view .LVU33
 208 0010 FFF7FEFF 		bl	clear_keyboard
 209              	.LVL8:
  76:quantum/process_keycode/process_dynamic_macro.c ****     layer_clear();
 210              		.loc 1 76 5 view .LVU34
 211 0014 FFF7FEFF 		bl	layer_clear
 212              	.LVL9:
  77:quantum/process_keycode/process_dynamic_macro.c **** 
  78:quantum/process_keycode/process_dynamic_macro.c ****     while (macro_buffer != macro_end) {
 213              		.loc 1 78 5 view .LVU35
  79:quantum/process_keycode/process_dynamic_macro.c ****         process_record(macro_buffer);
  80:quantum/process_keycode/process_dynamic_macro.c ****         macro_buffer += direction;
 214              		.loc 1 80 22 is_stmt 0 view .LVU36
 215 0018 4FEAC509 		lsl	r9, r5, #3
 216              	.L8:
  78:quantum/process_keycode/process_dynamic_macro.c ****         process_record(macro_buffer);
 217              		.loc 1 78 11 is_stmt 1 view .LVU37
 218 001c B442     		cmp	r4, r6
 219 001e 08D1     		bne	.L9
  81:quantum/process_keycode/process_dynamic_macro.c ****     }
  82:quantum/process_keycode/process_dynamic_macro.c **** 
  83:quantum/process_keycode/process_dynamic_macro.c ****     clear_keyboard();
 220              		.loc 1 83 5 view .LVU38
 221 0020 FFF7FEFF 		bl	clear_keyboard
 222              	.LVL10:
  84:quantum/process_keycode/process_dynamic_macro.c **** 
  85:quantum/process_keycode/process_dynamic_macro.c ****     layer_state = saved_layer_state;
 223              		.loc 1 85 5 view .LVU39
  86:quantum/process_keycode/process_dynamic_macro.c **** 
  87:quantum/process_keycode/process_dynamic_macro.c ****     dynamic_macro_play_user(direction);
 224              		.loc 1 87 5 is_stmt 0 view .LVU40
 225 0024 2846     		mov	r0, r5
  85:quantum/process_keycode/process_dynamic_macro.c **** 
 226              		.loc 1 85 17 view .LVU41
 227 0026 87F80080 		strb	r8, [r7]
 228              		.loc 1 87 5 is_stmt 1 view .LVU42
 229 002a FFF7FEFF 		bl	dynamic_macro_play_user
 230              	.LVL11:
  88:quantum/process_keycode/process_dynamic_macro.c **** }
 231              		.loc 1 88 1 is_stmt 0 view .LVU43
 232 002e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 233              	.LVL12:
 234              	.L9:
  79:quantum/process_keycode/process_dynamic_macro.c ****         macro_buffer += direction;
 235              		.loc 1 79 9 is_stmt 1 view .LVU44
 236 0032 2046     		mov	r0, r4
 237 0034 FFF7FEFF 		bl	process_record
 238              	.LVL13:
  80:quantum/process_keycode/process_dynamic_macro.c ****     }
 239              		.loc 1 80 9 view .LVU45
  80:quantum/process_keycode/process_dynamic_macro.c ****     }
 240              		.loc 1 80 22 is_stmt 0 view .LVU46
 241 0038 4C44     		add	r4, r4, r9
 242              	.LVL14:
  80:quantum/process_keycode/process_dynamic_macro.c ****     }
 243              		.loc 1 80 22 view .LVU47
 244 003a EFE7     		b	.L8
 245              	.L11:
 246              		.align	2
 247              	.L10:
 248 003c 00000000 		.word	layer_state
 249              		.cfi_endproc
 250              	.LFE297:
 252              		.section	.text.dynamic_macro_record_key,"ax",%progbits
 253              		.align	1
 254              		.global	dynamic_macro_record_key
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	dynamic_macro_record_key:
 261              	.LVL15:
 262              	.LFB298:
  89:quantum/process_keycode/process_dynamic_macro.c **** 
  90:quantum/process_keycode/process_dynamic_macro.c **** /**
  91:quantum/process_keycode/process_dynamic_macro.c ****  * Record a single key in a dynamic macro.
  92:quantum/process_keycode/process_dynamic_macro.c ****  *
  93:quantum/process_keycode/process_dynamic_macro.c ****  * @param macro_buffer[in] The start of the used macro buffer.
  94:quantum/process_keycode/process_dynamic_macro.c ****  * @param macro_pointer[in,out] The current buffer position.
  95:quantum/process_keycode/process_dynamic_macro.c ****  * @param macro2_end[in] The end of the other macro.
  96:quantum/process_keycode/process_dynamic_macro.c ****  * @param direction[in]  Either +1 or -1, which way to iterate the buffer.
  97:quantum/process_keycode/process_dynamic_macro.c ****  * @param record[in]     The current keypress.
  98:quantum/process_keycode/process_dynamic_macro.c ****  */
  99:quantum/process_keycode/process_dynamic_macro.c **** void dynamic_macro_record_key(keyrecord_t *macro_buffer, keyrecord_t **macro_pointer, keyrecord_t *
 263              		.loc 1 99 151 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 4, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 100:quantum/process_keycode/process_dynamic_macro.c ****     /* If we've just started recording, ignore all the key releases. */
 101:quantum/process_keycode/process_dynamic_macro.c ****     if (!record->event.pressed && *macro_pointer == macro_buffer) {
 267              		.loc 1 101 5 view .LVU49
  99:quantum/process_keycode/process_dynamic_macro.c ****     /* If we've just started recording, ignore all the key releases. */
 268              		.loc 1 99 151 is_stmt 0 view .LVU50
 269 0000 70B5     		push	{r4, r5, r6, lr}
 270              		.cfi_def_cfa_offset 16
 271              		.cfi_offset 4, -16
 272              		.cfi_offset 5, -12
 273              		.cfi_offset 6, -8
 274              		.cfi_offset 14, -4
  99:quantum/process_keycode/process_dynamic_macro.c ****     /* If we've just started recording, ignore all the key releases. */
 275              		.loc 1 99 151 view .LVU51
 276 0002 0D46     		mov	r5, r1
 277 0004 0499     		ldr	r1, [sp, #16]
 278              	.LVL16:
 279              		.loc 1 101 35 view .LVU52
 280 0006 2C68     		ldr	r4, [r5]
 281              		.loc 1 101 8 view .LVU53
 282 0008 8E78     		ldrb	r6, [r1, #2]	@ zero_extendqisi2
 283 000a 0EB9     		cbnz	r6, .L13
 284              		.loc 1 101 32 discriminator 1 view .LVU54
 285 000c A042     		cmp	r0, r4
 286 000e 0BD0     		beq	.L12
 287              	.L13:
 102:quantum/process_keycode/process_dynamic_macro.c ****         dprintln("dynamic macro: ignoring a leading key-up event");
 103:quantum/process_keycode/process_dynamic_macro.c ****         return;
 104:quantum/process_keycode/process_dynamic_macro.c ****     }
 105:quantum/process_keycode/process_dynamic_macro.c **** 
 106:quantum/process_keycode/process_dynamic_macro.c ****     /* The other end of the other macro is the last buffer element it
 107:quantum/process_keycode/process_dynamic_macro.c ****      * is safe to use before overwriting the other macro.
 108:quantum/process_keycode/process_dynamic_macro.c ****      */
 109:quantum/process_keycode/process_dynamic_macro.c ****     if (*macro_pointer - direction != macro2_end) {
 288              		.loc 1 109 5 is_stmt 1 view .LVU55
 289              		.loc 1 109 24 is_stmt 0 view .LVU56
 290 0010 A4EBC306 		sub	r6, r4, r3, lsl #3
 291              		.loc 1 109 8 view .LVU57
 292 0014 B242     		cmp	r2, r6
 293              		.loc 1 109 24 view .LVU58
 294 0016 4FEAC300 		lsl	r0, r3, #3
 295              	.LVL17:
 296              		.loc 1 109 8 view .LVU59
 297 001a 06D0     		beq	.L15
 110:quantum/process_keycode/process_dynamic_macro.c ****         **macro_pointer = *record;
 298              		.loc 1 110 9 is_stmt 1 view .LVU60
 299              		.loc 1 110 25 is_stmt 0 view .LVU61
 300 001c 0B68     		ldr	r3, [r1]	@ unaligned
 301              	.LVL18:
 302              		.loc 1 110 25 view .LVU62
 303 001e 2360     		str	r3, [r4]	@ unaligned
 304 0020 4B68     		ldr	r3, [r1, #4]	@ unaligned
 305 0022 6360     		str	r3, [r4, #4]	@ unaligned
 111:quantum/process_keycode/process_dynamic_macro.c ****         *macro_pointer += direction;
 306              		.loc 1 111 9 is_stmt 1 view .LVU63
 307              		.loc 1 111 24 is_stmt 0 view .LVU64
 308 0024 0444     		add	r4, r4, r0
 309 0026 2C60     		str	r4, [r5]
 310              	.LVL19:
 311              	.L12:
 112:quantum/process_keycode/process_dynamic_macro.c ****     } else {
 113:quantum/process_keycode/process_dynamic_macro.c ****         dynamic_macro_record_key_user(direction, record);
 114:quantum/process_keycode/process_dynamic_macro.c ****     }
 115:quantum/process_keycode/process_dynamic_macro.c **** 
 116:quantum/process_keycode/process_dynamic_macro.c ****     dprintf("dynamic macro: slot %d length: %d/%d\n", DYNAMIC_MACRO_CURRENT_SLOT(), DYNAMIC_MACRO_C
 117:quantum/process_keycode/process_dynamic_macro.c **** }
 312              		.loc 1 117 1 view .LVU65
 313 0028 70BD     		pop	{r4, r5, r6, pc}
 314              	.LVL20:
 315              	.L15:
 113:quantum/process_keycode/process_dynamic_macro.c ****     }
 316              		.loc 1 113 9 is_stmt 1 view .LVU66
 317 002a 1846     		mov	r0, r3
 318 002c FFF7FEFF 		bl	dynamic_macro_record_key_user
 319              	.LVL21:
 116:quantum/process_keycode/process_dynamic_macro.c **** }
 320              		.loc 1 116 202 view .LVU67
 321 0030 FAE7     		b	.L12
 322              		.cfi_endproc
 323              	.LFE298:
 325              		.section	.text.dynamic_macro_record_end,"ax",%progbits
 326              		.align	1
 327              		.global	dynamic_macro_record_end
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
 333              	dynamic_macro_record_end:
 334              	.LVL22:
 335              	.LFB299:
 118:quantum/process_keycode/process_dynamic_macro.c **** 
 119:quantum/process_keycode/process_dynamic_macro.c **** /**
 120:quantum/process_keycode/process_dynamic_macro.c ****  * End recording of the dynamic macro. Essentially just update the
 121:quantum/process_keycode/process_dynamic_macro.c ****  * pointer to the end of the macro.
 122:quantum/process_keycode/process_dynamic_macro.c ****  */
 123:quantum/process_keycode/process_dynamic_macro.c **** void dynamic_macro_record_end(keyrecord_t *macro_buffer, keyrecord_t *macro_pointer, int8_t directi
 336              		.loc 1 123 129 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 124:quantum/process_keycode/process_dynamic_macro.c ****     dynamic_macro_record_end_user(direction);
 340              		.loc 1 124 5 view .LVU69
 123:quantum/process_keycode/process_dynamic_macro.c ****     dynamic_macro_record_end_user(direction);
 341              		.loc 1 123 129 is_stmt 0 view .LVU70
 342 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 343              		.cfi_def_cfa_offset 24
 344              		.cfi_offset 3, -24
 345              		.cfi_offset 4, -20
 346              		.cfi_offset 5, -16
 347              		.cfi_offset 6, -12
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 123:quantum/process_keycode/process_dynamic_macro.c ****     dynamic_macro_record_end_user(direction);
 350              		.loc 1 123 129 view .LVU71
 351 0002 0746     		mov	r7, r0
 352              		.loc 1 124 5 view .LVU72
 353 0004 1046     		mov	r0, r2
 354              	.LVL23:
 123:quantum/process_keycode/process_dynamic_macro.c ****     dynamic_macro_record_end_user(direction);
 355              		.loc 1 123 129 view .LVU73
 356 0006 1446     		mov	r4, r2
 357 0008 0D46     		mov	r5, r1
 358 000a 1E46     		mov	r6, r3
 359              		.loc 1 124 5 view .LVU74
 360 000c FFF7FEFF 		bl	dynamic_macro_record_end_user
 361              	.LVL24:
 125:quantum/process_keycode/process_dynamic_macro.c **** 
 126:quantum/process_keycode/process_dynamic_macro.c ****     /* Do not save the keys being held when stopping the recording,
 127:quantum/process_keycode/process_dynamic_macro.c ****      * i.e. the keys used to access the layer DYN_REC_STOP is on.
 128:quantum/process_keycode/process_dynamic_macro.c ****      */
 129:quantum/process_keycode/process_dynamic_macro.c ****     while (macro_pointer != macro_buffer && (macro_pointer - direction)->event.pressed) {
 362              		.loc 1 129 5 is_stmt 1 view .LVU75
 363              		.loc 1 129 60 is_stmt 0 view .LVU76
 364 0010 E400     		lsls	r4, r4, #3
 365 0012 6442     		rsbs	r4, r4, #0
 366              	.LVL25:
 367              	.L18:
 368              		.loc 1 129 11 is_stmt 1 view .LVU77
 369 0014 BD42     		cmp	r5, r7
 370 0016 02D0     		beq	.L17
 371              		.loc 1 129 60 is_stmt 0 discriminator 1 view .LVU78
 372 0018 2B19     		adds	r3, r5, r4
 373              		.loc 1 129 42 discriminator 1 view .LVU79
 374 001a 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 375 001c 0AB9     		cbnz	r2, .L19
 376              	.L17:
 130:quantum/process_keycode/process_dynamic_macro.c ****         dprintln("dynamic macro: trimming a trailing key-down event");
 131:quantum/process_keycode/process_dynamic_macro.c ****         macro_pointer -= direction;
 132:quantum/process_keycode/process_dynamic_macro.c ****     }
 133:quantum/process_keycode/process_dynamic_macro.c **** 
 134:quantum/process_keycode/process_dynamic_macro.c ****     dprintf("dynamic macro: slot %d saved, length: %d\n", DYNAMIC_MACRO_CURRENT_SLOT(), DYNAMIC_MAC
 377              		.loc 1 134 147 is_stmt 1 view .LVU80
 135:quantum/process_keycode/process_dynamic_macro.c **** 
 136:quantum/process_keycode/process_dynamic_macro.c ****     *macro_end = macro_pointer;
 378              		.loc 1 136 5 view .LVU81
 379              		.loc 1 136 16 is_stmt 0 view .LVU82
 380 001e 3560     		str	r5, [r6]
 137:quantum/process_keycode/process_dynamic_macro.c **** }
 381              		.loc 1 137 1 view .LVU83
 382 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 383              	.LVL26:
 384              	.L19:
 385              		.loc 1 137 1 view .LVU84
 386 0022 1D46     		mov	r5, r3
 387              	.LVL27:
 388              		.loc 1 137 1 view .LVU85
 389 0024 F6E7     		b	.L18
 390              		.cfi_endproc
 391              	.LFE299:
 393              		.section	.text.process_dynamic_macro,"ax",%progbits
 394              		.align	1
 395              		.global	process_dynamic_macro
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	process_dynamic_macro:
 402              	.LVL28:
 403              	.LFB300:
 138:quantum/process_keycode/process_dynamic_macro.c **** 
 139:quantum/process_keycode/process_dynamic_macro.c **** /* Handle the key events related to the dynamic macros. Should be
 140:quantum/process_keycode/process_dynamic_macro.c ****  * called from process_record_user() like this:
 141:quantum/process_keycode/process_dynamic_macro.c ****  *
 142:quantum/process_keycode/process_dynamic_macro.c ****  *   bool process_record_user(uint16_t keycode, keyrecord_t *record) {
 143:quantum/process_keycode/process_dynamic_macro.c ****  *       if (!process_record_dynamic_macro(keycode, record)) {
 144:quantum/process_keycode/process_dynamic_macro.c ****  *           return false;
 145:quantum/process_keycode/process_dynamic_macro.c ****  *       }
 146:quantum/process_keycode/process_dynamic_macro.c ****  *       <...THE REST OF THE FUNCTION...>
 147:quantum/process_keycode/process_dynamic_macro.c ****  *   }
 148:quantum/process_keycode/process_dynamic_macro.c ****  */
 149:quantum/process_keycode/process_dynamic_macro.c **** bool process_dynamic_macro(uint16_t keycode, keyrecord_t *record) {
 404              		.loc 1 149 67 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 150:quantum/process_keycode/process_dynamic_macro.c ****     /* Both macros use the same buffer but read/write on different
 151:quantum/process_keycode/process_dynamic_macro.c ****      * ends of it.
 152:quantum/process_keycode/process_dynamic_macro.c ****      *
 153:quantum/process_keycode/process_dynamic_macro.c ****      * Macro1 is written left-to-right starting from the beginning of
 154:quantum/process_keycode/process_dynamic_macro.c ****      * the buffer.
 155:quantum/process_keycode/process_dynamic_macro.c ****      *
 156:quantum/process_keycode/process_dynamic_macro.c ****      * Macro2 is written right-to-left starting from the end of the
 157:quantum/process_keycode/process_dynamic_macro.c ****      * buffer.
 158:quantum/process_keycode/process_dynamic_macro.c ****      *
 159:quantum/process_keycode/process_dynamic_macro.c ****      * &macro_buffer   macro_end
 160:quantum/process_keycode/process_dynamic_macro.c ****      *  v                   v
 161:quantum/process_keycode/process_dynamic_macro.c ****      * +------------------------------------------------------------+
 162:quantum/process_keycode/process_dynamic_macro.c ****      * |>>>>>> MACRO1 >>>>>>      <<<<<<<<<<<<< MACRO2 <<<<<<<<<<<<<|
 163:quantum/process_keycode/process_dynamic_macro.c ****      * +------------------------------------------------------------+
 164:quantum/process_keycode/process_dynamic_macro.c ****      *                           ^                                 ^
 165:quantum/process_keycode/process_dynamic_macro.c ****      *                         r_macro_end                  r_macro_buffer
 166:quantum/process_keycode/process_dynamic_macro.c ****      *
 167:quantum/process_keycode/process_dynamic_macro.c ****      * During the recording when one macro encounters the end of the
 168:quantum/process_keycode/process_dynamic_macro.c ****      * other macro, the recording is stopped. Apart from this, there
 169:quantum/process_keycode/process_dynamic_macro.c ****      * are no arbitrary limits for the macros' length in relation to
 170:quantum/process_keycode/process_dynamic_macro.c ****      * each other: for example one can either have two medium sized
 171:quantum/process_keycode/process_dynamic_macro.c ****      * macros or one long macro and one short macro. Or even one empty
 172:quantum/process_keycode/process_dynamic_macro.c ****      * and one using the whole buffer.
 173:quantum/process_keycode/process_dynamic_macro.c ****      */
 174:quantum/process_keycode/process_dynamic_macro.c ****     static keyrecord_t macro_buffer[DYNAMIC_MACRO_SIZE];
 408              		.loc 1 174 5 view .LVU87
 175:quantum/process_keycode/process_dynamic_macro.c **** 
 176:quantum/process_keycode/process_dynamic_macro.c ****     /* Pointer to the first buffer element after the first macro.
 177:quantum/process_keycode/process_dynamic_macro.c ****      * Initially points to the very beginning of the buffer since the
 178:quantum/process_keycode/process_dynamic_macro.c ****      * macro is empty. */
 179:quantum/process_keycode/process_dynamic_macro.c ****     static keyrecord_t *macro_end = macro_buffer;
 409              		.loc 1 179 5 view .LVU88
 180:quantum/process_keycode/process_dynamic_macro.c **** 
 181:quantum/process_keycode/process_dynamic_macro.c ****     /* The other end of the macro buffer. Serves as the beginning of
 182:quantum/process_keycode/process_dynamic_macro.c ****      * the second macro. */
 183:quantum/process_keycode/process_dynamic_macro.c ****     static keyrecord_t *const r_macro_buffer = macro_buffer + DYNAMIC_MACRO_SIZE - 1;
 410              		.loc 1 183 5 view .LVU89
 184:quantum/process_keycode/process_dynamic_macro.c **** 
 185:quantum/process_keycode/process_dynamic_macro.c ****     /* Like macro_end but for the second macro. */
 186:quantum/process_keycode/process_dynamic_macro.c ****     static keyrecord_t *r_macro_end = r_macro_buffer;
 411              		.loc 1 186 5 view .LVU90
 187:quantum/process_keycode/process_dynamic_macro.c **** 
 188:quantum/process_keycode/process_dynamic_macro.c ****     /* A persistent pointer to the current macro position (iterator)
 189:quantum/process_keycode/process_dynamic_macro.c ****      * used during the recording. */
 190:quantum/process_keycode/process_dynamic_macro.c ****     static keyrecord_t *macro_pointer = NULL;
 412              		.loc 1 190 5 view .LVU91
 191:quantum/process_keycode/process_dynamic_macro.c **** 
 192:quantum/process_keycode/process_dynamic_macro.c ****     /* 0   - no macro is being recorded right now
 193:quantum/process_keycode/process_dynamic_macro.c ****      * 1,2 - either macro 1 or 2 is being recorded */
 194:quantum/process_keycode/process_dynamic_macro.c ****     static uint8_t macro_id = 0;
 413              		.loc 1 194 5 view .LVU92
 195:quantum/process_keycode/process_dynamic_macro.c **** 
 196:quantum/process_keycode/process_dynamic_macro.c ****     if (macro_id == 0) {
 414              		.loc 1 196 5 view .LVU93
 149:quantum/process_keycode/process_dynamic_macro.c ****     /* Both macros use the same buffer but read/write on different
 415              		.loc 1 149 67 is_stmt 0 view .LVU94
 416 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 417              		.cfi_def_cfa_offset 24
 418              		.cfi_offset 4, -12
 419              		.cfi_offset 5, -8
 420              		.cfi_offset 14, -4
 421              		.loc 1 196 18 view .LVU95
 422 0002 344D     		ldr	r5, .L39
 423 0004 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 424              		.loc 1 196 8 view .LVU96
 425 0006 3CBB     		cbnz	r4, .L21
 197:quantum/process_keycode/process_dynamic_macro.c ****         /* No macro recording in progress. */
 198:quantum/process_keycode/process_dynamic_macro.c ****         if (!record->event.pressed) {
 426              		.loc 1 198 9 is_stmt 1 view .LVU97
 427              		.loc 1 198 27 is_stmt 0 view .LVU98
 428 0008 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 429              		.loc 1 198 12 view .LVU99
 430 000a 7CB9     		cbnz	r4, .L22
 199:quantum/process_keycode/process_dynamic_macro.c ****             switch (keycode) {
 431              		.loc 1 199 13 is_stmt 1 view .LVU100
 432 000c A0F5BA40 		sub	r0, r0, #23808
 433              	.LVL29:
 434              		.loc 1 199 13 is_stmt 0 view .LVU101
 435 0010 0338     		subs	r0, r0, #3
 436 0012 0428     		cmp	r0, #4
 437 0014 47D8     		bhi	.L34
 438 0016 DFE800F0 		tbb	[pc, r0]
 439              	.L24:
 440 001a 03       		.byte	(.L27-.L24)/2
 441 001b 0C       		.byte	(.L26-.L24)/2
 442 001c 46       		.byte	(.L34-.L24)/2
 443 001d 12       		.byte	(.L25-.L24)/2
 444 001e 19       		.byte	(.L23-.L24)/2
 445 001f 00       		.p2align 1
 446              	.L27:
 200:quantum/process_keycode/process_dynamic_macro.c ****                 case DYN_REC_START1:
 201:quantum/process_keycode/process_dynamic_macro.c ****                     dynamic_macro_record_start(&macro_pointer, macro_buffer);
 447              		.loc 1 201 21 is_stmt 1 view .LVU102
 448 0020 2D49     		ldr	r1, .L39+4
 449              	.LVL30:
 450              		.loc 1 201 21 is_stmt 0 view .LVU103
 451 0022 2E48     		ldr	r0, .L39+8
 452 0024 FFF7FEFF 		bl	dynamic_macro_record_start
 453              	.LVL31:
 202:quantum/process_keycode/process_dynamic_macro.c ****                     macro_id = 1;
 454              		.loc 1 202 21 is_stmt 1 view .LVU104
 455              		.loc 1 202 30 is_stmt 0 view .LVU105
 456 0028 0123     		movs	r3, #1
 457              	.L37:
 203:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 204:quantum/process_keycode/process_dynamic_macro.c ****                 case DYN_REC_START2:
 205:quantum/process_keycode/process_dynamic_macro.c ****                     dynamic_macro_record_start(&macro_pointer, r_macro_buffer);
 206:quantum/process_keycode/process_dynamic_macro.c ****                     macro_id = 2;
 458              		.loc 1 206 30 view .LVU106
 459 002a 2B70     		strb	r3, [r5]
 207:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 460              		.loc 1 207 21 is_stmt 1 view .LVU107
 461              	.L22:
 208:quantum/process_keycode/process_dynamic_macro.c ****                 case DYN_MACRO_PLAY1:
 209:quantum/process_keycode/process_dynamic_macro.c ****                     dynamic_macro_play(macro_buffer, macro_end, +1);
 210:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 211:quantum/process_keycode/process_dynamic_macro.c ****                 case DYN_MACRO_PLAY2:
 212:quantum/process_keycode/process_dynamic_macro.c ****                     dynamic_macro_play(r_macro_buffer, r_macro_end, -1);
 213:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 214:quantum/process_keycode/process_dynamic_macro.c ****             }
 215:quantum/process_keycode/process_dynamic_macro.c ****         }
 216:quantum/process_keycode/process_dynamic_macro.c ****     } else {
 217:quantum/process_keycode/process_dynamic_macro.c ****         /* A macro is being recorded right now. */
 218:quantum/process_keycode/process_dynamic_macro.c ****         switch (keycode) {
 219:quantum/process_keycode/process_dynamic_macro.c ****             case DYN_REC_START1:
 220:quantum/process_keycode/process_dynamic_macro.c ****             case DYN_REC_START2:
 221:quantum/process_keycode/process_dynamic_macro.c ****             case DYN_REC_STOP:
 222:quantum/process_keycode/process_dynamic_macro.c ****                 /* Stop the macro recording. */
 223:quantum/process_keycode/process_dynamic_macro.c ****                 if (record->event.pressed ^ (keycode != DYN_REC_STOP)) { /* Ignore the initial rele
 224:quantum/process_keycode/process_dynamic_macro.c ****                                                                           * just after the recordin
 225:quantum/process_keycode/process_dynamic_macro.c ****                                                                           * starts for DYN_REC_STOP
 226:quantum/process_keycode/process_dynamic_macro.c ****                     switch (macro_id) {
 227:quantum/process_keycode/process_dynamic_macro.c ****                         case 1:
 228:quantum/process_keycode/process_dynamic_macro.c ****                             dynamic_macro_record_end(macro_buffer, macro_pointer, +1, &macro_end);
 229:quantum/process_keycode/process_dynamic_macro.c ****                             break;
 230:quantum/process_keycode/process_dynamic_macro.c ****                         case 2:
 231:quantum/process_keycode/process_dynamic_macro.c ****                             dynamic_macro_record_end(r_macro_buffer, macro_pointer, -1, &r_macro_en
 232:quantum/process_keycode/process_dynamic_macro.c ****                             break;
 233:quantum/process_keycode/process_dynamic_macro.c ****                     }
 234:quantum/process_keycode/process_dynamic_macro.c ****                     macro_id = 0;
 235:quantum/process_keycode/process_dynamic_macro.c ****                 }
 236:quantum/process_keycode/process_dynamic_macro.c ****                 return false;
 237:quantum/process_keycode/process_dynamic_macro.c **** #ifdef DYNAMIC_MACRO_NO_NESTING
 238:quantum/process_keycode/process_dynamic_macro.c ****             case DYN_MACRO_PLAY1:
 239:quantum/process_keycode/process_dynamic_macro.c ****             case DYN_MACRO_PLAY2:
 240:quantum/process_keycode/process_dynamic_macro.c ****                 dprintln("dynamic macro: ignoring macro play key while recording");
 241:quantum/process_keycode/process_dynamic_macro.c ****                 return false;
 242:quantum/process_keycode/process_dynamic_macro.c **** #endif
 243:quantum/process_keycode/process_dynamic_macro.c ****             default:
 244:quantum/process_keycode/process_dynamic_macro.c ****                 /* Store the key in the macro buffer and process it normally. */
 245:quantum/process_keycode/process_dynamic_macro.c ****                 switch (macro_id) {
 246:quantum/process_keycode/process_dynamic_macro.c ****                     case 1:
 247:quantum/process_keycode/process_dynamic_macro.c ****                         dynamic_macro_record_key(macro_buffer, &macro_pointer, r_macro_end, +1, rec
 248:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 249:quantum/process_keycode/process_dynamic_macro.c ****                     case 2:
 250:quantum/process_keycode/process_dynamic_macro.c ****                         dynamic_macro_record_key(r_macro_buffer, &macro_pointer, macro_end, -1, rec
 251:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 252:quantum/process_keycode/process_dynamic_macro.c ****                 }
 253:quantum/process_keycode/process_dynamic_macro.c ****                 return true;
 254:quantum/process_keycode/process_dynamic_macro.c ****                 break;
 255:quantum/process_keycode/process_dynamic_macro.c ****         }
 256:quantum/process_keycode/process_dynamic_macro.c ****     }
 257:quantum/process_keycode/process_dynamic_macro.c **** 
 258:quantum/process_keycode/process_dynamic_macro.c ****     return true;
 259:quantum/process_keycode/process_dynamic_macro.c **** }
 462              		.loc 1 259 1 is_stmt 0 view .LVU108
 463 002c 2046     		mov	r0, r4
 464 002e 03B0     		add	sp, sp, #12
 465              		.cfi_remember_state
 466              		.cfi_def_cfa_offset 12
 467              		@ sp needed
 468 0030 30BD     		pop	{r4, r5, pc}
 469              	.LVL32:
 470              	.L26:
 471              		.cfi_restore_state
 205:quantum/process_keycode/process_dynamic_macro.c ****                     macro_id = 2;
 472              		.loc 1 205 21 is_stmt 1 view .LVU109
 473 0032 2B49     		ldr	r1, .L39+12
 474              	.LVL33:
 205:quantum/process_keycode/process_dynamic_macro.c ****                     macro_id = 2;
 475              		.loc 1 205 21 is_stmt 0 view .LVU110
 476 0034 2948     		ldr	r0, .L39+8
 477 0036 FFF7FEFF 		bl	dynamic_macro_record_start
 478              	.LVL34:
 206:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 479              		.loc 1 206 21 is_stmt 1 view .LVU111
 206:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 480              		.loc 1 206 30 is_stmt 0 view .LVU112
 481 003a 0223     		movs	r3, #2
 482 003c F5E7     		b	.L37
 483              	.LVL35:
 484              	.L25:
 209:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 485              		.loc 1 209 21 is_stmt 1 view .LVU113
 486 003e 294B     		ldr	r3, .L39+16
 487 0040 2548     		ldr	r0, .L39+4
 488 0042 1968     		ldr	r1, [r3]
 489              	.LVL36:
 209:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 490              		.loc 1 209 21 is_stmt 0 view .LVU114
 491 0044 0122     		movs	r2, #1
 492              	.L38:
 212:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 493              		.loc 1 212 21 view .LVU115
 494 0046 FFF7FEFF 		bl	dynamic_macro_play
 495              	.LVL37:
 213:quantum/process_keycode/process_dynamic_macro.c ****             }
 496              		.loc 1 213 21 is_stmt 1 view .LVU116
 213:quantum/process_keycode/process_dynamic_macro.c ****             }
 497              		.loc 1 213 28 is_stmt 0 view .LVU117
 498 004a EFE7     		b	.L22
 499              	.LVL38:
 500              	.L23:
 212:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 501              		.loc 1 212 21 is_stmt 1 view .LVU118
 502 004c 264B     		ldr	r3, .L39+20
 503 004e 2448     		ldr	r0, .L39+12
 504 0050 1968     		ldr	r1, [r3]
 505              	.LVL39:
 212:quantum/process_keycode/process_dynamic_macro.c ****                     return false;
 506              		.loc 1 212 21 is_stmt 0 view .LVU119
 507 0052 4FF0FF32 		mov	r2, #-1
 508 0056 F6E7     		b	.L38
 509              	.LVL40:
 510              	.L21:
 218:quantum/process_keycode/process_dynamic_macro.c ****             case DYN_REC_START1:
 511              		.loc 1 218 9 is_stmt 1 view .LVU120
 512 0058 A0F5BA43 		sub	r3, r0, #23808
 513 005c 033B     		subs	r3, r3, #3
 514 005e 022B     		cmp	r3, #2
 515 0060 1DD8     		bhi	.L28
 223:quantum/process_keycode/process_dynamic_macro.c ****                                                                           * just after the recordin
 516              		.loc 1 223 17 view .LVU121
 223:quantum/process_keycode/process_dynamic_macro.c ****                                                                           * just after the recordin
 517              		.loc 1 223 20 is_stmt 0 view .LVU122
 518 0062 45F60552 		movw	r2, #23813
 519 0066 801A     		subs	r0, r0, r2
 520              	.LVL41:
 223:quantum/process_keycode/process_dynamic_macro.c ****                                                                           * just after the recordin
 521              		.loc 1 223 20 view .LVU123
 522 0068 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 523 006a 18BF     		it	ne
 524 006c 0120     		movne	r0, #1
 525 006e 8342     		cmp	r3, r0
 526 0070 2ED0     		beq	.L35
 226:quantum/process_keycode/process_dynamic_macro.c ****                         case 1:
 527              		.loc 1 226 21 is_stmt 1 view .LVU124
 528 0072 012C     		cmp	r4, #1
 529 0074 04D0     		beq	.L29
 530 0076 022C     		cmp	r4, #2
 531 0078 0AD0     		beq	.L30
 532              	.LVL42:
 533              	.L31:
 234:quantum/process_keycode/process_dynamic_macro.c ****                 }
 534              		.loc 1 234 21 view .LVU125
 234:quantum/process_keycode/process_dynamic_macro.c ****                 }
 535              		.loc 1 234 30 is_stmt 0 view .LVU126
 536 007a 0024     		movs	r4, #0
 537 007c 2C70     		strb	r4, [r5]
 538 007e D5E7     		b	.L22
 539              	.LVL43:
 540              	.L29:
 228:quantum/process_keycode/process_dynamic_macro.c ****                             break;
 541              		.loc 1 228 29 is_stmt 1 view .LVU127
 542 0080 1649     		ldr	r1, .L39+8
 543              	.LVL44:
 228:quantum/process_keycode/process_dynamic_macro.c ****                             break;
 544              		.loc 1 228 29 is_stmt 0 view .LVU128
 545 0082 184B     		ldr	r3, .L39+16
 546 0084 0968     		ldr	r1, [r1]
 547 0086 1448     		ldr	r0, .L39+4
 548 0088 2246     		mov	r2, r4
 549              	.L36:
 231:quantum/process_keycode/process_dynamic_macro.c ****                             break;
 550              		.loc 1 231 29 view .LVU129
 551 008a FFF7FEFF 		bl	dynamic_macro_record_end
 552              	.LVL45:
 232:quantum/process_keycode/process_dynamic_macro.c ****                     }
 553              		.loc 1 232 29 is_stmt 1 view .LVU130
 554 008e F4E7     		b	.L31
 555              	.LVL46:
 556              	.L30:
 231:quantum/process_keycode/process_dynamic_macro.c ****                             break;
 557              		.loc 1 231 29 view .LVU131
 558 0090 1249     		ldr	r1, .L39+8
 559              	.LVL47:
 231:quantum/process_keycode/process_dynamic_macro.c ****                             break;
 560              		.loc 1 231 29 is_stmt 0 view .LVU132
 561 0092 154B     		ldr	r3, .L39+20
 562 0094 0968     		ldr	r1, [r1]
 563 0096 1248     		ldr	r0, .L39+12
 564 0098 4FF0FF32 		mov	r2, #-1
 565 009c F5E7     		b	.L36
 566              	.LVL48:
 567              	.L28:
 245:quantum/process_keycode/process_dynamic_macro.c ****                     case 1:
 568              		.loc 1 245 17 is_stmt 1 view .LVU133
 569 009e 012C     		cmp	r4, #1
 570 00a0 03D0     		beq	.L32
 571 00a2 022C     		cmp	r4, #2
 572 00a4 0AD0     		beq	.L33
 573              	.LVL49:
 574              	.L34:
 198:quantum/process_keycode/process_dynamic_macro.c ****             switch (keycode) {
 575              		.loc 1 198 12 is_stmt 0 view .LVU134
 576 00a6 0124     		movs	r4, #1
 577 00a8 C0E7     		b	.L22
 578              	.LVL50:
 579              	.L32:
 247:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 580              		.loc 1 247 25 is_stmt 1 view .LVU135
 581 00aa 0F4A     		ldr	r2, .L39+20
 582 00ac 0091     		str	r1, [sp]
 583 00ae 1268     		ldr	r2, [r2]
 584 00b0 0A49     		ldr	r1, .L39+8
 585              	.LVL51:
 247:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 586              		.loc 1 247 25 is_stmt 0 view .LVU136
 587 00b2 0948     		ldr	r0, .L39+4
 588              	.LVL52:
 247:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 589              		.loc 1 247 25 view .LVU137
 590 00b4 2346     		mov	r3, r4
 591 00b6 FFF7FEFF 		bl	dynamic_macro_record_key
 592              	.LVL53:
 248:quantum/process_keycode/process_dynamic_macro.c ****                     case 2:
 593              		.loc 1 248 25 is_stmt 1 view .LVU138
 594 00ba B7E7     		b	.L22
 595              	.LVL54:
 596              	.L33:
 250:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 597              		.loc 1 250 25 view .LVU139
 598 00bc 094A     		ldr	r2, .L39+16
 599 00be 0091     		str	r1, [sp]
 600 00c0 1268     		ldr	r2, [r2]
 601 00c2 0649     		ldr	r1, .L39+8
 602              	.LVL55:
 250:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 603              		.loc 1 250 25 is_stmt 0 view .LVU140
 604 00c4 0648     		ldr	r0, .L39+12
 605              	.LVL56:
 250:quantum/process_keycode/process_dynamic_macro.c ****                         break;
 606              		.loc 1 250 25 view .LVU141
 607 00c6 4FF0FF33 		mov	r3, #-1
 608 00ca FFF7FEFF 		bl	dynamic_macro_record_key
 609              	.LVL57:
 251:quantum/process_keycode/process_dynamic_macro.c ****                 }
 610              		.loc 1 251 25 is_stmt 1 view .LVU142
 611 00ce EAE7     		b	.L34
 612              	.LVL58:
 613              	.L35:
 236:quantum/process_keycode/process_dynamic_macro.c **** #ifdef DYNAMIC_MACRO_NO_NESTING
 614              		.loc 1 236 24 is_stmt 0 view .LVU143
 615 00d0 0024     		movs	r4, #0
 616 00d2 ABE7     		b	.L22
 617              	.L40:
 618              		.align	2
 619              	.L39:
 620 00d4 00000000 		.word	.LANCHOR0
 621 00d8 00000000 		.word	.LANCHOR1
 622 00dc 00000000 		.word	.LANCHOR2
 623 00e0 F8030000 		.word	.LANCHOR1+1016
 624 00e4 00000000 		.word	.LANCHOR3
 625 00e8 00000000 		.word	.LANCHOR4
 626              		.cfi_endproc
 627              	.LFE300:
 629              		.section	.bss.macro_buffer.2,"aw",%nobits
 630              		.align	1
 631              		.set	.LANCHOR1,. + 0
 634              	macro_buffer.2:
 635 0000 00000000 		.space	1024
 635      00000000 
 635      00000000 
 635      00000000 
 635      00000000 
 636              		.section	.bss.macro_id.4,"aw",%nobits
 637              		.set	.LANCHOR0,. + 0
 640              	macro_id.4:
 641 0000 00       		.space	1
 642              		.section	.bss.macro_pointer.3,"aw",%nobits
 643              		.align	2
 644              		.set	.LANCHOR2,. + 0
 647              	macro_pointer.3:
 648 0000 00000000 		.space	4
 649              		.section	.data.macro_end.1,"aw"
 650              		.align	2
 651              		.set	.LANCHOR3,. + 0
 654              	macro_end.1:
 655 0000 00000000 		.word	macro_buffer.2
 656              		.section	.data.r_macro_end.0,"aw"
 657              		.align	2
 658              		.set	.LANCHOR4,. + 0
 661              	r_macro_end.0:
 662 0000 F8030000 		.word	macro_buffer.2+1016
 663              		.text
 664              	.Letext0:
 665              		.file 2 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 666              		.file 3 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 667              		.file 4 "tmk_core/common/keyboard.h"
 668              		.file 5 "tmk_core/common/action.h"
 669              		.file 6 "tmk_core/common/action_layer.h"
 670              		.file 7 "quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_dynamic_macro.c
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:18     .text.dynamic_macro_led_blink:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:26     .text.dynamic_macro_led_blink:0000000000000000 dynamic_macro_led_blink
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:40     .text.dynamic_macro_record_start_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:47     .text.dynamic_macro_record_start_user:0000000000000000 dynamic_macro_record_start_user
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:62     .text.dynamic_macro_play_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:69     .text.dynamic_macro_play_user:0000000000000000 dynamic_macro_play_user
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:85     .text.dynamic_macro_record_key_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:92     .text.dynamic_macro_record_key_user:0000000000000000 dynamic_macro_record_key_user
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:108    .text.dynamic_macro_record_end_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:115    .text.dynamic_macro_record_end_user:0000000000000000 dynamic_macro_record_end_user
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:126    .text.dynamic_macro_record_start:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:133    .text.dynamic_macro_record_start:0000000000000000 dynamic_macro_record_start
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:171    .text.dynamic_macro_play:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:178    .text.dynamic_macro_play:0000000000000000 dynamic_macro_play
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:248    .text.dynamic_macro_play:000000000000003c $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:253    .text.dynamic_macro_record_key:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:260    .text.dynamic_macro_record_key:0000000000000000 dynamic_macro_record_key
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:326    .text.dynamic_macro_record_end:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:333    .text.dynamic_macro_record_end:0000000000000000 dynamic_macro_record_end
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:394    .text.process_dynamic_macro:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:401    .text.process_dynamic_macro:0000000000000000 process_dynamic_macro
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:440    .text.process_dynamic_macro:000000000000001a $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:620    .text.process_dynamic_macro:00000000000000d4 $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:630    .bss.macro_buffer.2:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:634    .bss.macro_buffer.2:0000000000000000 macro_buffer.2
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:640    .bss.macro_id.4:0000000000000000 macro_id.4
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:641    .bss.macro_id.4:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:643    .bss.macro_pointer.3:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:647    .bss.macro_pointer.3:0000000000000000 macro_pointer.3
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:650    .data.macro_end.1:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:654    .data.macro_end.1:0000000000000000 macro_end.1
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:657    .data.r_macro_end.0:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:661    .data.r_macro_end.0:0000000000000000 r_macro_end.0
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:445    .text.process_dynamic_macro:000000000000001f $d
C:\Users\lhanj\AppData\Local\Temp\ccUalrTU.s:445    .text.process_dynamic_macro:0000000000000020 $t

UNDEFINED SYMBOLS
clear_keyboard
layer_clear
process_record
layer_state
