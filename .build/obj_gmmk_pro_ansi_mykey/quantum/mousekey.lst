   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"mousekey.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.move_unit,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	move_unit:
  26              	.LFB283:
  27              		.file 1 "quantum/mousekey.c"
   1:quantum/mousekey.c **** /*
   2:quantum/mousekey.c ****  * Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:quantum/mousekey.c ****  *
   4:quantum/mousekey.c ****  * This program is free software: you can redistribute it and/or modify
   5:quantum/mousekey.c ****  * it under the terms of the GNU General Public License as published by
   6:quantum/mousekey.c ****  * the Free Software Foundation, either version 2 of the License, or
   7:quantum/mousekey.c ****  * (at your option) any later version.
   8:quantum/mousekey.c ****  *
   9:quantum/mousekey.c ****  * This program is distributed in the hope that it will be useful,
  10:quantum/mousekey.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/mousekey.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/mousekey.c ****  * GNU General Public License for more details.
  13:quantum/mousekey.c ****  *
  14:quantum/mousekey.c ****  * You should have received a copy of the GNU General Public License
  15:quantum/mousekey.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/mousekey.c ****  */
  17:quantum/mousekey.c **** 
  18:quantum/mousekey.c **** #include <stdint.h>
  19:quantum/mousekey.c **** #include "keycode.h"
  20:quantum/mousekey.c **** #include "host.h"
  21:quantum/mousekey.c **** #include "timer.h"
  22:quantum/mousekey.c **** #include "print.h"
  23:quantum/mousekey.c **** #include "debug.h"
  24:quantum/mousekey.c **** #include "mousekey.h"
  25:quantum/mousekey.c **** 
  26:quantum/mousekey.c **** inline int8_t times_inv_sqrt2(int8_t x) {
  27:quantum/mousekey.c ****     // 181/256 is pretty close to 1/sqrt(2)
  28:quantum/mousekey.c ****     // 0.70703125                 0.707106781
  29:quantum/mousekey.c ****     // 1 too small for x=99 and x=198
  30:quantum/mousekey.c ****     // This ends up being a mult and discard lower 8 bits
  31:quantum/mousekey.c ****     return (x * 181) >> 8;
  32:quantum/mousekey.c **** }
  33:quantum/mousekey.c **** 
  34:quantum/mousekey.c **** static report_mouse_t mouse_report = {0};
  35:quantum/mousekey.c **** static void           mousekey_debug(void);
  36:quantum/mousekey.c **** static uint8_t        mousekey_accel        = 0;
  37:quantum/mousekey.c **** static uint8_t        mousekey_repeat       = 0;
  38:quantum/mousekey.c **** static uint8_t        mousekey_wheel_repeat = 0;
  39:quantum/mousekey.c **** #ifdef MK_KINETIC_SPEED
  40:quantum/mousekey.c **** static uint16_t mouse_timer = 0;
  41:quantum/mousekey.c **** #endif
  42:quantum/mousekey.c **** 
  43:quantum/mousekey.c **** #ifndef MK_3_SPEED
  44:quantum/mousekey.c **** 
  45:quantum/mousekey.c **** static uint16_t last_timer_c = 0;
  46:quantum/mousekey.c **** static uint16_t last_timer_w = 0;
  47:quantum/mousekey.c **** 
  48:quantum/mousekey.c **** /*
  49:quantum/mousekey.c ****  * Mouse keys acceleration algorithm
  50:quantum/mousekey.c ****  *  http://en.wikipedia.org/wiki/Mouse_keys
  51:quantum/mousekey.c ****  *
  52:quantum/mousekey.c ****  *  speed = delta * max_speed * (repeat / time_to_max)**((1000+curve)/1000)
  53:quantum/mousekey.c ****  */
  54:quantum/mousekey.c **** /* milliseconds between the initial key press and first repeated motion event (0-2550) */
  55:quantum/mousekey.c **** uint8_t mk_delay = MOUSEKEY_DELAY / 10;
  56:quantum/mousekey.c **** /* milliseconds between repeated motion events (0-255) */
  57:quantum/mousekey.c **** uint8_t mk_interval = MOUSEKEY_INTERVAL;
  58:quantum/mousekey.c **** /* steady speed (in action_delta units) applied each event (0-255) */
  59:quantum/mousekey.c **** uint8_t mk_max_speed = MOUSEKEY_MAX_SPEED;
  60:quantum/mousekey.c **** /* number of events (count) accelerating to steady speed (0-255) */
  61:quantum/mousekey.c **** uint8_t mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
  62:quantum/mousekey.c **** /* ramp used to reach maximum pointer speed (NOT SUPPORTED) */
  63:quantum/mousekey.c **** // int8_t mk_curve = 0;
  64:quantum/mousekey.c **** /* wheel params */
  65:quantum/mousekey.c **** /* milliseconds between the initial key press and first repeated motion event (0-2550) */
  66:quantum/mousekey.c **** uint8_t mk_wheel_delay = MOUSEKEY_WHEEL_DELAY / 10;
  67:quantum/mousekey.c **** /* milliseconds between repeated motion events (0-255) */
  68:quantum/mousekey.c **** uint8_t mk_wheel_interval    = MOUSEKEY_WHEEL_INTERVAL;
  69:quantum/mousekey.c **** uint8_t mk_wheel_max_speed   = MOUSEKEY_WHEEL_MAX_SPEED;
  70:quantum/mousekey.c **** uint8_t mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
  71:quantum/mousekey.c **** 
  72:quantum/mousekey.c **** #    ifndef MK_COMBINED
  73:quantum/mousekey.c **** 
  74:quantum/mousekey.c **** static uint8_t move_unit(void) {
  28              		.loc 1 74 32 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  75:quantum/mousekey.c ****     uint16_t unit;
  33              		.loc 1 75 5 view .LVU1
  76:quantum/mousekey.c ****     if (mousekey_accel & (1 << 0)) {
  34              		.loc 1 76 5 view .LVU2
  35              		.loc 1 76 24 is_stmt 0 view .LVU3
  36 0000 194B     		ldr	r3, .L13
  37 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  38              		.loc 1 76 8 view .LVU4
  39 0004 D907     		lsls	r1, r3, #31
  40 0006 09D5     		bpl	.L2
  77:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed) / 4;
  41              		.loc 1 77 9 is_stmt 1 view .LVU5
  42              		.loc 1 77 37 is_stmt 0 view .LVU6
  43 0008 184B     		ldr	r3, .L13+4
  44 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  45 000c 00EB8000 		add	r0, r0, r0, lsl #2
  46              		.loc 1 77 14 view .LVU7
  47 0010 8008     		lsrs	r0, r0, #2
  48              	.LVL0:
  49              	.L3:
  78:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
  79:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed) / 2;
  80:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  81:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed);
  82:quantum/mousekey.c ****     } else if (mousekey_repeat == 0) {
  83:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA;
  84:quantum/mousekey.c ****     } else if (mousekey_repeat >= mk_time_to_max) {
  85:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
  86:quantum/mousekey.c ****     } else {
  87:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed * mousekey_repeat) / mk_time_to_max;
  88:quantum/mousekey.c ****     }
  89:quantum/mousekey.c ****     return (unit > MOUSEKEY_MOVE_MAX ? MOUSEKEY_MOVE_MAX : (unit == 0 ? 1 : unit));
  50              		.loc 1 89 5 is_stmt 1 view .LVU8
  51              		.loc 1 89 58 is_stmt 0 view .LVU9
  52 0012 7F28     		cmp	r0, #127
  53 0014 24D8     		bhi	.L10
  54              	.LVL1:
  55              		.loc 1 89 58 discriminator 1 view .LVU10
  56 0016 28B3     		cbz	r0, .L11
  57              	.L6:
  58              		.loc 1 89 58 discriminator 3 view .LVU11
  59 0018 C0B2     		uxtb	r0, r0
  60 001a 7047     		bx	lr
  61              	.L2:
  78:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
  62              		.loc 1 78 12 is_stmt 1 view .LVU12
  78:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
  63              		.loc 1 78 15 is_stmt 0 view .LVU13
  64 001c 9A07     		lsls	r2, r3, #30
  65 001e 05D5     		bpl	.L4
  79:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  66              		.loc 1 79 9 is_stmt 1 view .LVU14
  79:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  67              		.loc 1 79 37 is_stmt 0 view .LVU15
  68 0020 124B     		ldr	r3, .L13+4
  69 0022 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  70 0024 00EB8000 		add	r0, r0, r0, lsl #2
  79:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  71              		.loc 1 79 14 view .LVU16
  72 0028 4008     		lsrs	r0, r0, #1
  73              	.LVL2:
  79:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  74              		.loc 1 79 14 view .LVU17
  75 002a F2E7     		b	.L3
  76              	.LVL3:
  77              	.L4:
  80:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed);
  78              		.loc 1 80 12 is_stmt 1 view .LVU18
  80:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed);
  79              		.loc 1 80 15 is_stmt 0 view .LVU19
  80 002c 5B07     		lsls	r3, r3, #29
  81 002e 04D5     		bpl	.L5
  81:quantum/mousekey.c ****     } else if (mousekey_repeat == 0) {
  82              		.loc 1 81 9 is_stmt 1 view .LVU20
  81:quantum/mousekey.c ****     } else if (mousekey_repeat == 0) {
  83              		.loc 1 81 14 is_stmt 0 view .LVU21
  84 0030 0E4B     		ldr	r3, .L13+4
  85 0032 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  86              	.L12:
  85:quantum/mousekey.c ****     } else {
  87              		.loc 1 85 9 is_stmt 1 view .LVU22
  85:quantum/mousekey.c ****     } else {
  88              		.loc 1 85 14 is_stmt 0 view .LVU23
  89 0034 00EB8000 		add	r0, r0, r0, lsl #2
  90              	.LVL4:
  85:quantum/mousekey.c ****     } else {
  91              		.loc 1 85 14 view .LVU24
  92 0038 EBE7     		b	.L3
  93              	.LVL5:
  94              	.L5:
  82:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA;
  95              		.loc 1 82 12 is_stmt 1 view .LVU25
  82:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA;
  96              		.loc 1 82 32 is_stmt 0 view .LVU26
  97 003a 0D4B     		ldr	r3, .L13+8
  98 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  82:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA;
  99              		.loc 1 82 15 view .LVU27
 100 003e 6BB1     		cbz	r3, .L9
  84:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
 101              		.loc 1 84 12 is_stmt 1 view .LVU28
  84:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
 102              		.loc 1 84 32 is_stmt 0 view .LVU29
 103 0040 0C4A     		ldr	r2, .L13+12
  77:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 104              		.loc 1 77 37 view .LVU30
 105 0042 0A49     		ldr	r1, .L13+4
  84:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
 106              		.loc 1 84 32 view .LVU31
 107 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  77:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 108              		.loc 1 77 37 view .LVU32
 109 0046 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
  84:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
 110              		.loc 1 84 15 view .LVU33
 111 0048 9342     		cmp	r3, r2
 112 004a F3D2     		bcs	.L12
  87:quantum/mousekey.c ****     }
 113              		.loc 1 87 9 is_stmt 1 view .LVU34
  87:quantum/mousekey.c ****     }
 114              		.loc 1 87 52 is_stmt 0 view .LVU35
 115 004c 10FB03F0 		smulbb	r0, r0, r3
 116 0050 00EB8000 		add	r0, r0, r0, lsl #2
  87:quantum/mousekey.c ****     }
 117              		.loc 1 87 71 view .LVU36
 118 0054 B0FBF2F0 		udiv	r0, r0, r2
  87:quantum/mousekey.c ****     }
 119              		.loc 1 87 14 view .LVU37
 120 0058 80B2     		uxth	r0, r0
 121              	.LVL6:
  87:quantum/mousekey.c ****     }
 122              		.loc 1 87 14 view .LVU38
 123 005a DAE7     		b	.L3
 124              	.LVL7:
 125              	.L9:
  83:quantum/mousekey.c ****     } else if (mousekey_repeat >= mk_time_to_max) {
 126              		.loc 1 83 14 view .LVU39
 127 005c 0520     		movs	r0, #5
 128 005e DBE7     		b	.L6
 129              	.LVL8:
 130              	.L10:
 131              		.loc 1 89 58 view .LVU40
 132 0060 7F20     		movs	r0, #127
 133              	.LVL9:
 134              		.loc 1 89 58 view .LVU41
 135 0062 7047     		bx	lr
 136              	.L11:
 137              		.loc 1 89 58 view .LVU42
 138 0064 0120     		movs	r0, #1
  90:quantum/mousekey.c **** }
 139              		.loc 1 90 1 view .LVU43
 140 0066 7047     		bx	lr
 141              	.L14:
 142              		.align	2
 143              	.L13:
 144 0068 00000000 		.word	.LANCHOR0
 145 006c 00000000 		.word	.LANCHOR1
 146 0070 00000000 		.word	.LANCHOR2
 147 0074 00000000 		.word	.LANCHOR3
 148              		.cfi_endproc
 149              	.LFE283:
 151              		.section	.text.wheel_unit,"ax",%progbits
 152              		.align	1
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu fpv4-sp-d16
 158              	wheel_unit:
 159              	.LFB284:
  91:quantum/mousekey.c **** 
  92:quantum/mousekey.c **** static uint8_t wheel_unit(void) {
 160              		.loc 1 92 33 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
  93:quantum/mousekey.c ****     uint16_t unit;
 165              		.loc 1 93 5 view .LVU45
  94:quantum/mousekey.c ****     if (mousekey_accel & (1 << 0)) {
 166              		.loc 1 94 5 view .LVU46
 167              		.loc 1 94 24 is_stmt 0 view .LVU47
 168 0000 154B     		ldr	r3, .L27
 169 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170              		.loc 1 94 8 view .LVU48
 171 0004 D907     		lsls	r1, r3, #31
 172 0006 05D5     		bpl	.L16
  95:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed) / 4;
 173              		.loc 1 95 9 is_stmt 1 view .LVU49
 174              		.loc 1 95 38 is_stmt 0 view .LVU50
 175 0008 144B     		ldr	r3, .L27+4
 176 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 177              		.loc 1 95 14 view .LVU51
 178 000c 8008     		lsrs	r0, r0, #2
 179              	.LVL10:
 180              	.L17:
  96:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
  97:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed) / 2;
  98:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
  99:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed);
 100:quantum/mousekey.c ****     } else if (mousekey_wheel_repeat == 0) {
 101:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA;
 102:quantum/mousekey.c ****     } else if (mousekey_wheel_repeat >= mk_wheel_time_to_max) {
 103:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
 104:quantum/mousekey.c ****     } else {
 105:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed * mousekey_wheel_repeat) / mk_wheel_time_
 106:quantum/mousekey.c ****     }
 107:quantum/mousekey.c ****     return (unit > MOUSEKEY_WHEEL_MAX ? MOUSEKEY_WHEEL_MAX : (unit == 0 ? 1 : unit));
 181              		.loc 1 107 60 view .LVU52
 182 000e 00B3     		cbz	r0, .L26
 183              	.L21:
 184              		.loc 1 107 60 discriminator 3 view .LVU53
 185 0010 C0B2     		uxtb	r0, r0
 186 0012 7047     		bx	lr
 187              	.L16:
  96:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 188              		.loc 1 96 12 is_stmt 1 view .LVU54
  96:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 189              		.loc 1 96 15 is_stmt 0 view .LVU55
 190 0014 9A07     		lsls	r2, r3, #30
 191 0016 03D5     		bpl	.L18
  97:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
 192              		.loc 1 97 9 is_stmt 1 view .LVU56
  97:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
 193              		.loc 1 97 38 is_stmt 0 view .LVU57
 194 0018 104B     		ldr	r3, .L27+4
 195 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  97:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
 196              		.loc 1 97 14 view .LVU58
 197 001c 4008     		lsrs	r0, r0, #1
 198              	.LVL11:
  97:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
 199              		.loc 1 97 14 view .LVU59
 200 001e F6E7     		b	.L17
 201              	.LVL12:
 202              	.L18:
  98:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed);
 203              		.loc 1 98 12 is_stmt 1 view .LVU60
  98:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed);
 204              		.loc 1 98 15 is_stmt 0 view .LVU61
 205 0020 5B07     		lsls	r3, r3, #29
 206 0022 05D5     		bpl	.L19
  99:quantum/mousekey.c ****     } else if (mousekey_wheel_repeat == 0) {
 207              		.loc 1 99 9 is_stmt 1 view .LVU62
  99:quantum/mousekey.c ****     } else if (mousekey_wheel_repeat == 0) {
 208              		.loc 1 99 14 is_stmt 0 view .LVU63
 209 0024 0D4B     		ldr	r3, .L27+4
 210 0026 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 211              	.LVL13:
 212              	.L20:
 213              		.loc 1 107 5 is_stmt 1 view .LVU64
 214              		.loc 1 107 60 is_stmt 0 view .LVU65
 215 0028 7F28     		cmp	r0, #127
 216 002a F0D9     		bls	.L17
 217              		.loc 1 107 60 view .LVU66
 218 002c 7F20     		movs	r0, #127
 219              	.LVL14:
 220              		.loc 1 107 60 view .LVU67
 221 002e 7047     		bx	lr
 222              	.L19:
 100:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA;
 223              		.loc 1 100 12 is_stmt 1 view .LVU68
 100:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA;
 224              		.loc 1 100 38 is_stmt 0 view .LVU69
 225 0030 0B4B     		ldr	r3, .L27+8
 226 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 100:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA;
 227              		.loc 1 100 15 view .LVU70
 228 0034 5BB1     		cbz	r3, .L24
 102:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
 229              		.loc 1 102 12 is_stmt 1 view .LVU71
 102:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
 230              		.loc 1 102 38 is_stmt 0 view .LVU72
 231 0036 0B4A     		ldr	r2, .L27+12
  95:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 232              		.loc 1 95 38 view .LVU73
 233 0038 0849     		ldr	r1, .L27+4
 102:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
 234              		.loc 1 102 38 view .LVU74
 235 003a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
  95:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 236              		.loc 1 95 38 view .LVU75
 237 003c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 102:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
 238              		.loc 1 102 15 view .LVU76
 239 003e 9342     		cmp	r3, r2
 103:quantum/mousekey.c ****     } else {
 240              		.loc 1 103 9 is_stmt 1 view .LVU77
 105:quantum/mousekey.c ****     }
 241              		.loc 1 105 59 is_stmt 0 view .LVU78
 242 0040 36BF     		itet	cc
 243 0042 10FB03F0 		smulbbcc	r0, r0, r3
 103:quantum/mousekey.c ****     } else {
 244              		.loc 1 103 14 view .LVU79
 245 0046 80B2     		uxthcs	r0, r0
 105:quantum/mousekey.c ****     }
 246              		.loc 1 105 9 is_stmt 1 view .LVU80
 105:quantum/mousekey.c ****     }
 247              		.loc 1 105 14 is_stmt 0 view .LVU81
 248 0048 B0FBF2F0 		udivcc	r0, r0, r2
 249              	.LVL15:
 105:quantum/mousekey.c ****     }
 250              		.loc 1 105 14 view .LVU82
 251 004c ECE7     		b	.L20
 252              	.LVL16:
 253              	.L24:
 101:quantum/mousekey.c ****     } else if (mousekey_wheel_repeat >= mk_wheel_time_to_max) {
 254              		.loc 1 101 14 view .LVU83
 255 004e 0120     		movs	r0, #1
 256 0050 DEE7     		b	.L21
 257              	.L26:
 258              		.loc 1 107 60 view .LVU84
 259 0052 0120     		movs	r0, #1
 108:quantum/mousekey.c **** }
 260              		.loc 1 108 1 view .LVU85
 261 0054 7047     		bx	lr
 262              	.L28:
 263 0056 00BF     		.align	2
 264              	.L27:
 265 0058 00000000 		.word	.LANCHOR0
 266 005c 00000000 		.word	.LANCHOR4
 267 0060 00000000 		.word	.LANCHOR5
 268 0064 00000000 		.word	.LANCHOR6
 269              		.cfi_endproc
 270              	.LFE284:
 272              		.section	.text.mousekey_on,"ax",%progbits
 273              		.align	1
 274              		.global	mousekey_on
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	mousekey_on:
 281              	.LVL17:
 282              	.LFB286:
 109:quantum/mousekey.c **** 
 110:quantum/mousekey.c **** #    else /* #ifndef MK_COMBINED */
 111:quantum/mousekey.c **** #        ifdef MK_KINETIC_SPEED
 112:quantum/mousekey.c **** 
 113:quantum/mousekey.c **** /*
 114:quantum/mousekey.c ****  * Kinetic movement  acceleration algorithm
 115:quantum/mousekey.c ****  *
 116:quantum/mousekey.c ****  *  current speed = I + A * T/50 + A * 0.5 * T^2 | maximum B
 117:quantum/mousekey.c ****  *
 118:quantum/mousekey.c ****  * T: time since the mouse movement started
 119:quantum/mousekey.c ****  * E: mouse events per second (set through MOUSEKEY_INTERVAL, UHK sends 250, the
 120:quantum/mousekey.c ****  *    pro micro on my Signum 3.0 sends only 125!)
 121:quantum/mousekey.c ****  * I: initial speed at time 0
 122:quantum/mousekey.c ****  * A: acceleration
 123:quantum/mousekey.c ****  * B: base mouse travel speed
 124:quantum/mousekey.c ****  */
 125:quantum/mousekey.c **** const uint16_t mk_accelerated_speed = MOUSEKEY_ACCELERATED_SPEED;
 126:quantum/mousekey.c **** const uint16_t mk_base_speed        = MOUSEKEY_BASE_SPEED;
 127:quantum/mousekey.c **** const uint16_t mk_decelerated_speed = MOUSEKEY_DECELERATED_SPEED;
 128:quantum/mousekey.c **** const uint16_t mk_initial_speed     = MOUSEKEY_INITIAL_SPEED;
 129:quantum/mousekey.c **** 
 130:quantum/mousekey.c **** static uint8_t move_unit(void) {
 131:quantum/mousekey.c ****     float speed = mk_initial_speed;
 132:quantum/mousekey.c **** 
 133:quantum/mousekey.c ****     if (mousekey_accel & ((1 << 0) | (1 << 2))) {
 134:quantum/mousekey.c ****         speed = mousekey_accel & (1 << 2) ? mk_accelerated_speed : mk_decelerated_speed;
 135:quantum/mousekey.c ****     } else if (mousekey_repeat && mouse_timer) {
 136:quantum/mousekey.c ****         const float time_elapsed = timer_elapsed(mouse_timer) / 50;
 137:quantum/mousekey.c ****         speed                    = mk_initial_speed + MOUSEKEY_MOVE_DELTA * time_elapsed + MOUSEKEY
 138:quantum/mousekey.c **** 
 139:quantum/mousekey.c ****         speed = speed > mk_base_speed ? mk_base_speed : speed;
 140:quantum/mousekey.c ****     }
 141:quantum/mousekey.c **** 
 142:quantum/mousekey.c ****     /* convert speed to USB mouse speed 1 to 127 */
 143:quantum/mousekey.c ****     speed = (uint8_t)(speed / (1000.0f / mk_interval));
 144:quantum/mousekey.c ****     speed = speed < 1 ? 1 : speed;
 145:quantum/mousekey.c **** 
 146:quantum/mousekey.c ****     return speed > MOUSEKEY_MOVE_MAX ? MOUSEKEY_MOVE_MAX : speed;
 147:quantum/mousekey.c **** }
 148:quantum/mousekey.c **** 
 149:quantum/mousekey.c **** float mk_wheel_interval = 1000.0f / MOUSEKEY_WHEEL_INITIAL_MOVEMENTS;
 150:quantum/mousekey.c **** 
 151:quantum/mousekey.c **** static uint8_t wheel_unit(void) {
 152:quantum/mousekey.c ****     float speed = MOUSEKEY_WHEEL_INITIAL_MOVEMENTS;
 153:quantum/mousekey.c **** 
 154:quantum/mousekey.c ****     if (mousekey_accel & ((1 << 0) | (1 << 2))) {
 155:quantum/mousekey.c ****         speed = mousekey_accel & (1 << 2) ? MOUSEKEY_WHEEL_ACCELERATED_MOVEMENTS : MOUSEKEY_WHEEL_D
 156:quantum/mousekey.c ****     } else if (mousekey_repeat && mouse_timer) {
 157:quantum/mousekey.c ****         if (mk_wheel_interval != MOUSEKEY_WHEEL_BASE_MOVEMENTS) {
 158:quantum/mousekey.c ****             const float time_elapsed = timer_elapsed(mouse_timer) / 50;
 159:quantum/mousekey.c ****             speed                    = MOUSEKEY_WHEEL_INITIAL_MOVEMENTS + 1 * time_elapsed + 1 * 0.
 160:quantum/mousekey.c ****         }
 161:quantum/mousekey.c ****         speed = speed > MOUSEKEY_WHEEL_BASE_MOVEMENTS ? MOUSEKEY_WHEEL_BASE_MOVEMENTS : speed;
 162:quantum/mousekey.c ****     }
 163:quantum/mousekey.c **** 
 164:quantum/mousekey.c ****     mk_wheel_interval = 1000.0f / speed;
 165:quantum/mousekey.c **** 
 166:quantum/mousekey.c ****     return 1;
 167:quantum/mousekey.c **** }
 168:quantum/mousekey.c **** 
 169:quantum/mousekey.c **** #        else /* #ifndef MK_KINETIC_SPEED */
 170:quantum/mousekey.c **** 
 171:quantum/mousekey.c **** static uint8_t move_unit(void) {
 172:quantum/mousekey.c ****     uint16_t unit;
 173:quantum/mousekey.c ****     if (mousekey_accel & (1 << 0)) {
 174:quantum/mousekey.c ****         unit = 1;
 175:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 176:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed) / 2;
 177:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
 178:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_MAX;
 179:quantum/mousekey.c ****     } else if (mousekey_repeat == 0) {
 180:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA;
 181:quantum/mousekey.c ****     } else if (mousekey_repeat >= mk_time_to_max) {
 182:quantum/mousekey.c ****         unit = MOUSEKEY_MOVE_DELTA * mk_max_speed;
 183:quantum/mousekey.c ****     } else {
 184:quantum/mousekey.c ****         unit = (MOUSEKEY_MOVE_DELTA * mk_max_speed * mousekey_repeat) / mk_time_to_max;
 185:quantum/mousekey.c ****     }
 186:quantum/mousekey.c ****     return (unit > MOUSEKEY_MOVE_MAX ? MOUSEKEY_MOVE_MAX : (unit == 0 ? 1 : unit));
 187:quantum/mousekey.c **** }
 188:quantum/mousekey.c **** 
 189:quantum/mousekey.c **** static uint8_t wheel_unit(void) {
 190:quantum/mousekey.c ****     uint16_t unit;
 191:quantum/mousekey.c ****     if (mousekey_accel & (1 << 0)) {
 192:quantum/mousekey.c ****         unit = 1;
 193:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 1)) {
 194:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed) / 2;
 195:quantum/mousekey.c ****     } else if (mousekey_accel & (1 << 2)) {
 196:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_MAX;
 197:quantum/mousekey.c ****     } else if (mousekey_repeat == 0) {
 198:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA;
 199:quantum/mousekey.c ****     } else if (mousekey_repeat >= mk_wheel_time_to_max) {
 200:quantum/mousekey.c ****         unit = MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed;
 201:quantum/mousekey.c ****     } else {
 202:quantum/mousekey.c ****         unit = (MOUSEKEY_WHEEL_DELTA * mk_wheel_max_speed * mousekey_repeat) / mk_wheel_time_to_max
 203:quantum/mousekey.c ****     }
 204:quantum/mousekey.c ****     return (unit > MOUSEKEY_WHEEL_MAX ? MOUSEKEY_WHEEL_MAX : (unit == 0 ? 1 : unit));
 205:quantum/mousekey.c **** }
 206:quantum/mousekey.c **** 
 207:quantum/mousekey.c **** #        endif /* #ifndef MK_KINETIC_SPEED */
 208:quantum/mousekey.c **** #    endif     /* #ifndef MK_COMBINED */
 209:quantum/mousekey.c **** 
 210:quantum/mousekey.c **** void mousekey_task(void) {
 211:quantum/mousekey.c ****     // report cursor and scroll movement independently
 212:quantum/mousekey.c ****     report_mouse_t const tmpmr = mouse_report;
 213:quantum/mousekey.c **** 
 214:quantum/mousekey.c ****     mouse_report.x = 0;
 215:quantum/mousekey.c ****     mouse_report.y = 0;
 216:quantum/mousekey.c ****     mouse_report.v = 0;
 217:quantum/mousekey.c ****     mouse_report.h = 0;
 218:quantum/mousekey.c **** 
 219:quantum/mousekey.c ****     if ((tmpmr.x || tmpmr.y) && timer_elapsed(last_timer_c) > (mousekey_repeat ? mk_interval : mk_d
 220:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 221:quantum/mousekey.c ****         if (tmpmr.x != 0) mouse_report.x = move_unit() * ((tmpmr.x > 0) ? 1 : -1);
 222:quantum/mousekey.c ****         if (tmpmr.y != 0) mouse_report.y = move_unit() * ((tmpmr.y > 0) ? 1 : -1);
 223:quantum/mousekey.c **** 
 224:quantum/mousekey.c ****         /* diagonal move [1/sqrt(2)] */
 225:quantum/mousekey.c ****         if (mouse_report.x && mouse_report.y) {
 226:quantum/mousekey.c ****             mouse_report.x = times_inv_sqrt2(mouse_report.x);
 227:quantum/mousekey.c ****             if (mouse_report.x == 0) {
 228:quantum/mousekey.c ****                 mouse_report.x = 1;
 229:quantum/mousekey.c ****             }
 230:quantum/mousekey.c ****             mouse_report.y = times_inv_sqrt2(mouse_report.y);
 231:quantum/mousekey.c ****             if (mouse_report.y == 0) {
 232:quantum/mousekey.c ****                 mouse_report.y = 1;
 233:quantum/mousekey.c ****             }
 234:quantum/mousekey.c ****         }
 235:quantum/mousekey.c ****     }
 236:quantum/mousekey.c ****     if ((tmpmr.v || tmpmr.h) && timer_elapsed(last_timer_w) > (mousekey_wheel_repeat ? mk_wheel_int
 237:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 238:quantum/mousekey.c ****         if (tmpmr.v != 0) mouse_report.v = wheel_unit() * ((tmpmr.v > 0) ? 1 : -1);
 239:quantum/mousekey.c ****         if (tmpmr.h != 0) mouse_report.h = wheel_unit() * ((tmpmr.h > 0) ? 1 : -1);
 240:quantum/mousekey.c **** 
 241:quantum/mousekey.c ****         /* diagonal move [1/sqrt(2)] */
 242:quantum/mousekey.c ****         if (mouse_report.v && mouse_report.h) {
 243:quantum/mousekey.c ****             mouse_report.v = times_inv_sqrt2(mouse_report.v);
 244:quantum/mousekey.c ****             if (mouse_report.v == 0) {
 245:quantum/mousekey.c ****                 mouse_report.v = 1;
 246:quantum/mousekey.c ****             }
 247:quantum/mousekey.c ****             mouse_report.h = times_inv_sqrt2(mouse_report.h);
 248:quantum/mousekey.c ****             if (mouse_report.h == 0) {
 249:quantum/mousekey.c ****                 mouse_report.h = 1;
 250:quantum/mousekey.c ****             }
 251:quantum/mousekey.c ****         }
 252:quantum/mousekey.c ****     }
 253:quantum/mousekey.c **** 
 254:quantum/mousekey.c ****     if (mouse_report.x || mouse_report.y || mouse_report.v || mouse_report.h) mousekey_send();
 255:quantum/mousekey.c ****     mouse_report = tmpmr;
 256:quantum/mousekey.c **** }
 257:quantum/mousekey.c **** 
 258:quantum/mousekey.c **** void mousekey_on(uint8_t code) {
 283              		.loc 1 258 32 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 259:quantum/mousekey.c **** #    ifdef MK_KINETIC_SPEED
 260:quantum/mousekey.c ****     if (mouse_timer == 0) {
 261:quantum/mousekey.c ****         mouse_timer = timer_read();
 262:quantum/mousekey.c ****     }
 263:quantum/mousekey.c **** #    endif /* #ifdef MK_KINETIC_SPEED */
 264:quantum/mousekey.c **** 
 265:quantum/mousekey.c ****     if (code == KC_MS_UP)
 287              		.loc 1 265 5 view .LVU87
 288              		.loc 1 265 8 is_stmt 0 view .LVU88
 289 0000 F028     		cmp	r0, #240
 258:quantum/mousekey.c **** #    ifdef MK_KINETIC_SPEED
 290              		.loc 1 258 32 view .LVU89
 291 0002 08B5     		push	{r3, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 295              		.loc 1 265 8 view .LVU90
 296 0004 05D1     		bne	.L30
 266:quantum/mousekey.c ****         mouse_report.y = move_unit() * -1;
 297              		.loc 1 266 9 is_stmt 1 view .LVU91
 298              		.loc 1 266 26 is_stmt 0 view .LVU92
 299 0006 FFF7FEFF 		bl	move_unit
 300              	.LVL18:
 301              		.loc 1 266 24 view .LVU93
 302 000a 4042     		rsbs	r0, r0, #0
 303              	.L42:
 267:quantum/mousekey.c ****     else if (code == KC_MS_DOWN)
 268:quantum/mousekey.c ****         mouse_report.y = move_unit();
 304              		.loc 1 268 24 view .LVU94
 305 000c 294B     		ldr	r3, .L47
 306 000e D870     		strb	r0, [r3, #3]
 307              	.L29:
 269:quantum/mousekey.c ****     else if (code == KC_MS_LEFT)
 270:quantum/mousekey.c ****         mouse_report.x = move_unit() * -1;
 271:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT)
 272:quantum/mousekey.c ****         mouse_report.x = move_unit();
 273:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP)
 274:quantum/mousekey.c ****         mouse_report.v = wheel_unit();
 275:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN)
 276:quantum/mousekey.c ****         mouse_report.v = wheel_unit() * -1;
 277:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 278:quantum/mousekey.c ****         mouse_report.h = wheel_unit() * -1;
 279:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 280:quantum/mousekey.c ****         mouse_report.h = wheel_unit();
 281:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 282:quantum/mousekey.c ****         mouse_report.buttons |= 1 << (code - KC_MS_BTN1);
 283:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 284:quantum/mousekey.c ****         mousekey_accel |= (1 << 0);
 285:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 286:quantum/mousekey.c ****         mousekey_accel |= (1 << 1);
 287:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 288:quantum/mousekey.c ****         mousekey_accel |= (1 << 2);
 289:quantum/mousekey.c **** }
 308              		.loc 1 289 1 view .LVU95
 309 0010 08BD     		pop	{r3, pc}
 310              	.LVL19:
 311              	.L30:
 267:quantum/mousekey.c ****     else if (code == KC_MS_DOWN)
 312              		.loc 1 267 10 is_stmt 1 view .LVU96
 267:quantum/mousekey.c ****     else if (code == KC_MS_DOWN)
 313              		.loc 1 267 13 is_stmt 0 view .LVU97
 314 0012 F128     		cmp	r0, #241
 315 0014 02D1     		bne	.L32
 268:quantum/mousekey.c ****     else if (code == KC_MS_LEFT)
 316              		.loc 1 268 9 is_stmt 1 view .LVU98
 268:quantum/mousekey.c ****     else if (code == KC_MS_LEFT)
 317              		.loc 1 268 26 is_stmt 0 view .LVU99
 318 0016 FFF7FEFF 		bl	move_unit
 319              	.LVL20:
 268:quantum/mousekey.c ****     else if (code == KC_MS_LEFT)
 320              		.loc 1 268 26 view .LVU100
 321 001a F7E7     		b	.L42
 322              	.LVL21:
 323              	.L32:
 269:quantum/mousekey.c ****     else if (code == KC_MS_LEFT)
 324              		.loc 1 269 10 is_stmt 1 view .LVU101
 269:quantum/mousekey.c ****     else if (code == KC_MS_LEFT)
 325              		.loc 1 269 13 is_stmt 0 view .LVU102
 326 001c F228     		cmp	r0, #242
 327 001e 05D1     		bne	.L33
 270:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT)
 328              		.loc 1 270 9 is_stmt 1 view .LVU103
 270:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT)
 329              		.loc 1 270 26 is_stmt 0 view .LVU104
 330 0020 FFF7FEFF 		bl	move_unit
 331              	.LVL22:
 270:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT)
 332              		.loc 1 270 24 view .LVU105
 333 0024 4042     		rsbs	r0, r0, #0
 334              	.L44:
 272:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP)
 335              		.loc 1 272 24 view .LVU106
 336 0026 234B     		ldr	r3, .L47
 337 0028 9870     		strb	r0, [r3, #2]
 338 002a F1E7     		b	.L29
 339              	.LVL23:
 340              	.L33:
 271:quantum/mousekey.c ****         mouse_report.x = move_unit();
 341              		.loc 1 271 10 is_stmt 1 view .LVU107
 271:quantum/mousekey.c ****         mouse_report.x = move_unit();
 342              		.loc 1 271 13 is_stmt 0 view .LVU108
 343 002c F328     		cmp	r0, #243
 344 002e 02D1     		bne	.L34
 272:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP)
 345              		.loc 1 272 9 is_stmt 1 view .LVU109
 272:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP)
 346              		.loc 1 272 26 is_stmt 0 view .LVU110
 347 0030 FFF7FEFF 		bl	move_unit
 348              	.LVL24:
 272:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP)
 349              		.loc 1 272 26 view .LVU111
 350 0034 F7E7     		b	.L44
 351              	.LVL25:
 352              	.L34:
 273:quantum/mousekey.c ****         mouse_report.v = wheel_unit();
 353              		.loc 1 273 10 is_stmt 1 view .LVU112
 273:quantum/mousekey.c ****         mouse_report.v = wheel_unit();
 354              		.loc 1 273 13 is_stmt 0 view .LVU113
 355 0036 F928     		cmp	r0, #249
 356 0038 04D1     		bne	.L35
 274:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN)
 357              		.loc 1 274 9 is_stmt 1 view .LVU114
 274:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN)
 358              		.loc 1 274 26 is_stmt 0 view .LVU115
 359 003a FFF7FEFF 		bl	wheel_unit
 360              	.LVL26:
 361              	.L45:
 276:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 362              		.loc 1 276 24 view .LVU116
 363 003e 1D4B     		ldr	r3, .L47
 364 0040 1871     		strb	r0, [r3, #4]
 365 0042 E5E7     		b	.L29
 366              	.LVL27:
 367              	.L35:
 275:quantum/mousekey.c ****         mouse_report.v = wheel_unit() * -1;
 368              		.loc 1 275 10 is_stmt 1 view .LVU117
 275:quantum/mousekey.c ****         mouse_report.v = wheel_unit() * -1;
 369              		.loc 1 275 13 is_stmt 0 view .LVU118
 370 0044 FA28     		cmp	r0, #250
 371 0046 03D1     		bne	.L36
 276:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 372              		.loc 1 276 9 is_stmt 1 view .LVU119
 276:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 373              		.loc 1 276 26 is_stmt 0 view .LVU120
 374 0048 FFF7FEFF 		bl	wheel_unit
 375              	.LVL28:
 276:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 376              		.loc 1 276 24 view .LVU121
 377 004c 4042     		rsbs	r0, r0, #0
 378 004e F6E7     		b	.L45
 379              	.LVL29:
 380              	.L36:
 277:quantum/mousekey.c ****         mouse_report.h = wheel_unit() * -1;
 381              		.loc 1 277 10 is_stmt 1 view .LVU122
 277:quantum/mousekey.c ****         mouse_report.h = wheel_unit() * -1;
 382              		.loc 1 277 13 is_stmt 0 view .LVU123
 383 0050 FB28     		cmp	r0, #251
 384 0052 05D1     		bne	.L37
 278:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 385              		.loc 1 278 9 is_stmt 1 view .LVU124
 278:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 386              		.loc 1 278 26 is_stmt 0 view .LVU125
 387 0054 FFF7FEFF 		bl	wheel_unit
 388              	.LVL30:
 278:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 389              		.loc 1 278 24 view .LVU126
 390 0058 4042     		rsbs	r0, r0, #0
 391              	.L46:
 280:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 392              		.loc 1 280 24 view .LVU127
 393 005a 164B     		ldr	r3, .L47
 394 005c 5871     		strb	r0, [r3, #5]
 395 005e D7E7     		b	.L29
 396              	.LVL31:
 397              	.L37:
 279:quantum/mousekey.c ****         mouse_report.h = wheel_unit();
 398              		.loc 1 279 10 is_stmt 1 view .LVU128
 279:quantum/mousekey.c ****         mouse_report.h = wheel_unit();
 399              		.loc 1 279 13 is_stmt 0 view .LVU129
 400 0060 FC28     		cmp	r0, #252
 401 0062 02D1     		bne	.L38
 280:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 402              		.loc 1 280 9 is_stmt 1 view .LVU130
 280:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 403              		.loc 1 280 26 is_stmt 0 view .LVU131
 404 0064 FFF7FEFF 		bl	wheel_unit
 405              	.LVL32:
 280:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 406              		.loc 1 280 26 view .LVU132
 407 0068 F7E7     		b	.L46
 408              	.LVL33:
 409              	.L38:
 281:quantum/mousekey.c ****         mouse_report.buttons |= 1 << (code - KC_MS_BTN1);
 410              		.loc 1 281 10 is_stmt 1 view .LVU133
 281:quantum/mousekey.c ****         mouse_report.buttons |= 1 << (code - KC_MS_BTN1);
 411              		.loc 1 281 14 is_stmt 0 view .LVU134
 412 006a 00F10C03 		add	r3, r0, #12
 281:quantum/mousekey.c ****         mouse_report.buttons |= 1 << (code - KC_MS_BTN1);
 413              		.loc 1 281 13 view .LVU135
 414 006e DBB2     		uxtb	r3, r3
 415 0070 042B     		cmp	r3, #4
 416 0072 08D8     		bhi	.L39
 282:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 417              		.loc 1 282 9 is_stmt 1 view .LVU136
 282:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 418              		.loc 1 282 30 is_stmt 0 view .LVU137
 419 0074 0F4A     		ldr	r2, .L47
 282:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 420              		.loc 1 282 35 view .LVU138
 421 0076 0123     		movs	r3, #1
 282:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 422              		.loc 1 282 44 view .LVU139
 423 0078 F438     		subs	r0, r0, #244
 424              	.LVL34:
 282:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 425              		.loc 1 282 35 view .LVU140
 426 007a 03FA00F0 		lsl	r0, r3, r0
 282:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 427              		.loc 1 282 30 view .LVU141
 428 007e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 429 0080 1843     		orrs	r0, r0, r3
 430 0082 5070     		strb	r0, [r2, #1]
 431 0084 C4E7     		b	.L29
 432              	.LVL35:
 433              	.L39:
 283:quantum/mousekey.c ****         mousekey_accel |= (1 << 0);
 434              		.loc 1 283 10 is_stmt 1 view .LVU142
 283:quantum/mousekey.c ****         mousekey_accel |= (1 << 0);
 435              		.loc 1 283 13 is_stmt 0 view .LVU143
 436 0086 FD28     		cmp	r0, #253
 437 0088 05D1     		bne	.L40
 284:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 438              		.loc 1 284 9 is_stmt 1 view .LVU144
 284:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 439              		.loc 1 284 24 is_stmt 0 view .LVU145
 440 008a 0B4A     		ldr	r2, .L47+4
 441 008c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 442 008e 43F00103 		orr	r3, r3, #1
 443              	.L43:
 288:quantum/mousekey.c **** }
 444              		.loc 1 288 24 view .LVU146
 445 0092 1370     		strb	r3, [r2]
 446              		.loc 1 289 1 view .LVU147
 447 0094 BCE7     		b	.L29
 448              	.L40:
 285:quantum/mousekey.c ****         mousekey_accel |= (1 << 1);
 449              		.loc 1 285 10 is_stmt 1 view .LVU148
 285:quantum/mousekey.c ****         mousekey_accel |= (1 << 1);
 450              		.loc 1 285 13 is_stmt 0 view .LVU149
 451 0096 FE28     		cmp	r0, #254
 452 0098 04D1     		bne	.L41
 286:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 453              		.loc 1 286 9 is_stmt 1 view .LVU150
 286:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 454              		.loc 1 286 24 is_stmt 0 view .LVU151
 455 009a 074A     		ldr	r2, .L47+4
 456 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 457 009e 43F00203 		orr	r3, r3, #2
 458 00a2 F6E7     		b	.L43
 459              	.L41:
 287:quantum/mousekey.c ****         mousekey_accel |= (1 << 2);
 460              		.loc 1 287 10 is_stmt 1 view .LVU152
 287:quantum/mousekey.c ****         mousekey_accel |= (1 << 2);
 461              		.loc 1 287 13 is_stmt 0 view .LVU153
 462 00a4 FF28     		cmp	r0, #255
 463 00a6 B3D1     		bne	.L29
 288:quantum/mousekey.c **** }
 464              		.loc 1 288 9 is_stmt 1 view .LVU154
 288:quantum/mousekey.c **** }
 465              		.loc 1 288 24 is_stmt 0 view .LVU155
 466 00a8 034A     		ldr	r2, .L47+4
 467 00aa 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 468 00ac 43F00403 		orr	r3, r3, #4
 469 00b0 EFE7     		b	.L43
 470              	.L48:
 471 00b2 00BF     		.align	2
 472              	.L47:
 473 00b4 00000000 		.word	.LANCHOR7
 474 00b8 00000000 		.word	.LANCHOR0
 475              		.cfi_endproc
 476              	.LFE286:
 478              		.section	.text.mousekey_off,"ax",%progbits
 479              		.align	1
 480              		.global	mousekey_off
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 484              		.fpu fpv4-sp-d16
 486              	mousekey_off:
 487              	.LVL36:
 488              	.LFB287:
 290:quantum/mousekey.c **** 
 291:quantum/mousekey.c **** void mousekey_off(uint8_t code) {
 489              		.loc 1 291 33 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 292:quantum/mousekey.c ****     if (code == KC_MS_UP && mouse_report.y < 0)
 494              		.loc 1 292 5 view .LVU157
 293:quantum/mousekey.c ****         mouse_report.y = 0;
 294:quantum/mousekey.c ****     else if (code == KC_MS_DOWN && mouse_report.y > 0)
 295:quantum/mousekey.c ****         mouse_report.y = 0;
 296:quantum/mousekey.c ****     else if (code == KC_MS_LEFT && mouse_report.x < 0)
 495              		.loc 1 296 48 is_stmt 0 view .LVU158
 496 0000 364B     		ldr	r3, .L83
 292:quantum/mousekey.c ****     if (code == KC_MS_UP && mouse_report.y < 0)
 497              		.loc 1 292 8 view .LVU159
 498 0002 F028     		cmp	r0, #240
 499              		.loc 1 296 48 view .LVU160
 500 0004 93F90220 		ldrsb	r2, [r3, #2]
 292:quantum/mousekey.c ****     if (code == KC_MS_UP && mouse_report.y < 0)
 501              		.loc 1 292 8 view .LVU161
 502 0008 0AD1     		bne	.L50
 292:quantum/mousekey.c ****     if (code == KC_MS_UP && mouse_report.y < 0)
 503              		.loc 1 292 26 discriminator 1 view .LVU162
 504 000a 93F90310 		ldrsb	r1, [r3, #3]
 505 000e 0029     		cmp	r1, #0
 506 0010 0CDA     		bge	.L51
 507              	.L55:
 293:quantum/mousekey.c ****         mouse_report.y = 0;
 508              		.loc 1 293 9 is_stmt 1 view .LVU163
 293:quantum/mousekey.c ****         mouse_report.y = 0;
 509              		.loc 1 293 24 is_stmt 0 view .LVU164
 510 0012 0021     		movs	r1, #0
 511 0014 D970     		strb	r1, [r3, #3]
 297:quantum/mousekey.c ****         mouse_report.x = 0;
 298:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT && mouse_report.x > 0)
 299:quantum/mousekey.c ****         mouse_report.x = 0;
 300:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP && mouse_report.v > 0)
 301:quantum/mousekey.c ****         mouse_report.v = 0;
 302:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN && mouse_report.v < 0)
 303:quantum/mousekey.c ****         mouse_report.v = 0;
 304:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT && mouse_report.h < 0)
 305:quantum/mousekey.c ****         mouse_report.h = 0;
 306:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT && mouse_report.h > 0)
 307:quantum/mousekey.c ****         mouse_report.h = 0;
 308:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 309:quantum/mousekey.c ****         mouse_report.buttons &= ~(1 << (code - KC_MS_BTN1));
 310:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 311:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 0);
 312:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 313:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 1);
 314:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 315:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 2);
 316:quantum/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0) {
 512              		.loc 1 316 5 is_stmt 1 view .LVU165
 513              	.LVL37:
 514              	.L82:
 515              		.loc 1 316 29 is_stmt 0 view .LVU166
 516 0016 52B9     		cbnz	r2, .L69
 317:quantum/mousekey.c ****         mousekey_repeat = 0;
 517              		.loc 1 317 9 is_stmt 1 view .LVU167
 518              		.loc 1 317 25 is_stmt 0 view .LVU168
 519 0018 314A     		ldr	r2, .L83+4
 520 001a 0021     		movs	r1, #0
 521 001c 1170     		strb	r1, [r2]
 522 001e 06E0     		b	.L69
 523              	.LVL38:
 524              	.L50:
 294:quantum/mousekey.c ****         mouse_report.y = 0;
 525              		.loc 1 294 10 is_stmt 1 view .LVU169
 294:quantum/mousekey.c ****         mouse_report.y = 0;
 526              		.loc 1 294 13 is_stmt 0 view .LVU170
 527 0020 F128     		cmp	r0, #241
 528 0022 0DD1     		bne	.L54
 294:quantum/mousekey.c ****         mouse_report.y = 0;
 529              		.loc 1 294 33 discriminator 1 view .LVU171
 530 0024 93F90310 		ldrsb	r1, [r3, #3]
 531 0028 0029     		cmp	r1, #0
 532 002a F2DC     		bgt	.L55
 533              	.LVL39:
 534              	.L51:
 316:quantum/mousekey.c ****         mousekey_repeat = 0;
 535              		.loc 1 316 5 is_stmt 1 view .LVU172
 316:quantum/mousekey.c ****         mousekey_repeat = 0;
 536              		.loc 1 316 8 is_stmt 0 view .LVU173
 537 002c 72B1     		cbz	r2, .L57
 538              	.L69:
 318:quantum/mousekey.c **** #    ifdef MK_KINETIC_SPEED
 319:quantum/mousekey.c ****         mouse_timer = 0;
 320:quantum/mousekey.c **** #    endif /* #ifdef MK_KINETIC_SPEED */
 321:quantum/mousekey.c ****     }
 322:quantum/mousekey.c ****     if (mouse_report.v == 0 && mouse_report.h == 0) mousekey_wheel_repeat = 0;
 539              		.loc 1 322 5 is_stmt 1 view .LVU174
 540              		.loc 1 322 29 is_stmt 0 view .LVU175
 541 002e 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 542 0030 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 543 0032 1343     		orrs	r3, r3, r2
 544 0034 5AB2     		sxtb	r2, r3
 545 0036 002B     		cmp	r3, #0
 546 0038 4FD1     		bne	.L49
 547              		.loc 1 322 53 is_stmt 1 discriminator 2 view .LVU176
 548              		.loc 1 322 75 is_stmt 0 discriminator 2 view .LVU177
 549 003a 2A4B     		ldr	r3, .L83+8
 550 003c 1A70     		strb	r2, [r3]
 323:quantum/mousekey.c **** }
 551              		.loc 1 323 1 discriminator 2 view .LVU178
 552 003e 7047     		bx	lr
 553              	.LVL40:
 554              	.L54:
 296:quantum/mousekey.c ****         mouse_report.x = 0;
 555              		.loc 1 296 10 is_stmt 1 view .LVU179
 296:quantum/mousekey.c ****         mouse_report.x = 0;
 556              		.loc 1 296 13 is_stmt 0 view .LVU180
 557 0040 F228     		cmp	r0, #242
 558 0042 06D1     		bne	.L56
 296:quantum/mousekey.c ****         mouse_report.x = 0;
 559              		.loc 1 296 33 discriminator 1 view .LVU181
 560 0044 002A     		cmp	r2, #0
 561 0046 F1DA     		bge	.L51
 562              	.L59:
 297:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT && mouse_report.x > 0)
 563              		.loc 1 297 9 is_stmt 1 view .LVU182
 297:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT && mouse_report.x > 0)
 564              		.loc 1 297 24 is_stmt 0 view .LVU183
 565 0048 0022     		movs	r2, #0
 566 004a 9A70     		strb	r2, [r3, #2]
 567              	.LVL41:
 568              	.L57:
 316:quantum/mousekey.c ****         mousekey_repeat = 0;
 569              		.loc 1 316 5 is_stmt 1 view .LVU184
 316:quantum/mousekey.c ****         mousekey_repeat = 0;
 570              		.loc 1 316 29 is_stmt 0 view .LVU185
 571 004c 93F90320 		ldrsb	r2, [r3, #3]
 572 0050 E1E7     		b	.L82
 573              	.LVL42:
 574              	.L56:
 298:quantum/mousekey.c ****         mouse_report.x = 0;
 575              		.loc 1 298 10 is_stmt 1 view .LVU186
 298:quantum/mousekey.c ****         mouse_report.x = 0;
 576              		.loc 1 298 13 is_stmt 0 view .LVU187
 577 0052 F328     		cmp	r0, #243
 578 0054 02D1     		bne	.L58
 298:quantum/mousekey.c ****         mouse_report.x = 0;
 579              		.loc 1 298 34 discriminator 1 view .LVU188
 580 0056 002A     		cmp	r2, #0
 581 0058 F6DC     		bgt	.L59
 582 005a E7E7     		b	.L51
 583              	.L58:
 300:quantum/mousekey.c ****         mouse_report.v = 0;
 584              		.loc 1 300 13 view .LVU189
 585 005c F928     		cmp	r0, #249
 300:quantum/mousekey.c ****         mouse_report.v = 0;
 586              		.loc 1 300 49 view .LVU190
 587 005e 93F90410 		ldrsb	r1, [r3, #4]
 300:quantum/mousekey.c ****         mouse_report.v = 0;
 588              		.loc 1 300 10 is_stmt 1 view .LVU191
 300:quantum/mousekey.c ****         mouse_report.v = 0;
 589              		.loc 1 300 13 is_stmt 0 view .LVU192
 590 0062 04D1     		bne	.L60
 300:quantum/mousekey.c ****         mouse_report.v = 0;
 591              		.loc 1 300 34 discriminator 1 view .LVU193
 592 0064 0029     		cmp	r1, #0
 593 0066 E1DD     		ble	.L51
 594              	.L62:
 301:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN && mouse_report.v < 0)
 595              		.loc 1 301 9 is_stmt 1 view .LVU194
 301:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN && mouse_report.v < 0)
 596              		.loc 1 301 24 is_stmt 0 view .LVU195
 597 0068 0021     		movs	r1, #0
 598 006a 1971     		strb	r1, [r3, #4]
 599 006c DEE7     		b	.L51
 600              	.L60:
 302:quantum/mousekey.c ****         mouse_report.v = 0;
 601              		.loc 1 302 10 is_stmt 1 view .LVU196
 302:quantum/mousekey.c ****         mouse_report.v = 0;
 602              		.loc 1 302 13 is_stmt 0 view .LVU197
 603 006e FA28     		cmp	r0, #250
 604 0070 02D1     		bne	.L61
 302:quantum/mousekey.c ****         mouse_report.v = 0;
 605              		.loc 1 302 36 discriminator 1 view .LVU198
 606 0072 0029     		cmp	r1, #0
 607 0074 DADA     		bge	.L51
 608 0076 F7E7     		b	.L62
 609              	.L61:
 304:quantum/mousekey.c ****         mouse_report.h = 0;
 610              		.loc 1 304 13 view .LVU199
 611 0078 FB28     		cmp	r0, #251
 304:quantum/mousekey.c ****         mouse_report.h = 0;
 612              		.loc 1 304 51 view .LVU200
 613 007a 93F90510 		ldrsb	r1, [r3, #5]
 304:quantum/mousekey.c ****         mouse_report.h = 0;
 614              		.loc 1 304 10 is_stmt 1 view .LVU201
 304:quantum/mousekey.c ****         mouse_report.h = 0;
 615              		.loc 1 304 13 is_stmt 0 view .LVU202
 616 007e 04D1     		bne	.L63
 304:quantum/mousekey.c ****         mouse_report.h = 0;
 617              		.loc 1 304 36 discriminator 1 view .LVU203
 618 0080 0029     		cmp	r1, #0
 619 0082 D3DA     		bge	.L51
 620              	.L65:
 305:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT && mouse_report.h > 0)
 621              		.loc 1 305 9 is_stmt 1 view .LVU204
 305:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT && mouse_report.h > 0)
 622              		.loc 1 305 24 is_stmt 0 view .LVU205
 623 0084 0021     		movs	r1, #0
 624 0086 5971     		strb	r1, [r3, #5]
 625 0088 D0E7     		b	.L51
 626              	.L63:
 306:quantum/mousekey.c ****         mouse_report.h = 0;
 627              		.loc 1 306 10 is_stmt 1 view .LVU206
 306:quantum/mousekey.c ****         mouse_report.h = 0;
 628              		.loc 1 306 13 is_stmt 0 view .LVU207
 629 008a FC28     		cmp	r0, #252
 630 008c 02D1     		bne	.L64
 306:quantum/mousekey.c ****         mouse_report.h = 0;
 631              		.loc 1 306 37 discriminator 1 view .LVU208
 632 008e 0029     		cmp	r1, #0
 633 0090 F8DC     		bgt	.L65
 634 0092 CBE7     		b	.L51
 635              	.L64:
 308:quantum/mousekey.c ****         mouse_report.buttons &= ~(1 << (code - KC_MS_BTN1));
 636              		.loc 1 308 10 is_stmt 1 view .LVU209
 308:quantum/mousekey.c ****         mouse_report.buttons &= ~(1 << (code - KC_MS_BTN1));
 637              		.loc 1 308 14 is_stmt 0 view .LVU210
 638 0094 00F10C01 		add	r1, r0, #12
 308:quantum/mousekey.c ****         mouse_report.buttons &= ~(1 << (code - KC_MS_BTN1));
 639              		.loc 1 308 13 view .LVU211
 640 0098 C9B2     		uxtb	r1, r1
 641 009a 0429     		cmp	r1, #4
 642 009c 07D8     		bhi	.L66
 309:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 643              		.loc 1 309 9 is_stmt 1 view .LVU212
 309:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 644              		.loc 1 309 46 is_stmt 0 view .LVU213
 645 009e F438     		subs	r0, r0, #244
 646              	.LVL43:
 309:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 647              		.loc 1 309 37 view .LVU214
 648 00a0 0121     		movs	r1, #1
 649 00a2 8140     		lsls	r1, r1, r0
 309:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 650              		.loc 1 309 30 view .LVU215
 651 00a4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 652 00a6 20EA0100 		bic	r0, r0, r1
 653 00aa 5870     		strb	r0, [r3, #1]
 654 00ac BEE7     		b	.L51
 655              	.LVL44:
 656              	.L66:
 310:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 0);
 657              		.loc 1 310 10 is_stmt 1 view .LVU216
 310:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 0);
 658              		.loc 1 310 13 is_stmt 0 view .LVU217
 659 00ae FD28     		cmp	r0, #253
 660 00b0 05D1     		bne	.L67
 311:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 661              		.loc 1 311 9 is_stmt 1 view .LVU218
 311:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 662              		.loc 1 311 24 is_stmt 0 view .LVU219
 663 00b2 0D48     		ldr	r0, .L83+12
 664              	.LVL45:
 311:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 665              		.loc 1 311 24 view .LVU220
 666 00b4 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 667 00b6 21F00101 		bic	r1, r1, #1
 668              	.L80:
 315:quantum/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0) {
 669              		.loc 1 315 24 view .LVU221
 670 00ba 0170     		strb	r1, [r0]
 671 00bc B6E7     		b	.L51
 672              	.LVL46:
 673              	.L67:
 312:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 1);
 674              		.loc 1 312 10 is_stmt 1 view .LVU222
 312:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 1);
 675              		.loc 1 312 13 is_stmt 0 view .LVU223
 676 00be FE28     		cmp	r0, #254
 677 00c0 04D1     		bne	.L68
 313:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 678              		.loc 1 313 9 is_stmt 1 view .LVU224
 313:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 679              		.loc 1 313 24 is_stmt 0 view .LVU225
 680 00c2 0948     		ldr	r0, .L83+12
 681              	.LVL47:
 313:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 682              		.loc 1 313 24 view .LVU226
 683 00c4 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 684 00c6 21F00201 		bic	r1, r1, #2
 685 00ca F6E7     		b	.L80
 686              	.LVL48:
 687              	.L68:
 314:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 2);
 688              		.loc 1 314 10 is_stmt 1 view .LVU227
 314:quantum/mousekey.c ****         mousekey_accel &= ~(1 << 2);
 689              		.loc 1 314 13 is_stmt 0 view .LVU228
 690 00cc FF28     		cmp	r0, #255
 691 00ce ADD1     		bne	.L51
 315:quantum/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0) {
 692              		.loc 1 315 9 is_stmt 1 view .LVU229
 315:quantum/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0) {
 693              		.loc 1 315 24 is_stmt 0 view .LVU230
 694 00d0 0548     		ldr	r0, .L83+12
 695              	.LVL49:
 315:quantum/mousekey.c ****     if (mouse_report.x == 0 && mouse_report.y == 0) {
 696              		.loc 1 315 24 view .LVU231
 697 00d2 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 698 00d4 21F00401 		bic	r1, r1, #4
 699 00d8 EFE7     		b	.L80
 700              	.L49:
 701              		.loc 1 323 1 view .LVU232
 702 00da 7047     		bx	lr
 703              	.L84:
 704              		.align	2
 705              	.L83:
 706 00dc 00000000 		.word	.LANCHOR7
 707 00e0 00000000 		.word	.LANCHOR2
 708 00e4 00000000 		.word	.LANCHOR5
 709 00e8 00000000 		.word	.LANCHOR0
 710              		.cfi_endproc
 711              	.LFE287:
 713              		.section	.text.mousekey_send,"ax",%progbits
 714              		.align	1
 715              		.global	mousekey_send
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	mousekey_send:
 722              	.LFB288:
 324:quantum/mousekey.c **** 
 325:quantum/mousekey.c **** #else /* #ifndef MK_3_SPEED */
 326:quantum/mousekey.c **** 
 327:quantum/mousekey.c **** enum { mkspd_unmod, mkspd_0, mkspd_1, mkspd_2, mkspd_COUNT };
 328:quantum/mousekey.c **** #    ifndef MK_MOMENTARY_ACCEL
 329:quantum/mousekey.c **** static uint8_t  mk_speed                 = mkspd_1;
 330:quantum/mousekey.c **** #    else
 331:quantum/mousekey.c **** static uint8_t mk_speed      = mkspd_unmod;
 332:quantum/mousekey.c **** static uint8_t mkspd_DEFAULT = mkspd_unmod;
 333:quantum/mousekey.c **** #    endif
 334:quantum/mousekey.c **** static uint16_t last_timer_c             = 0;
 335:quantum/mousekey.c **** static uint16_t last_timer_w             = 0;
 336:quantum/mousekey.c **** uint16_t        c_offsets[mkspd_COUNT]   = {MK_C_OFFSET_UNMOD, MK_C_OFFSET_0, MK_C_OFFSET_1, MK_C_O
 337:quantum/mousekey.c **** uint16_t        c_intervals[mkspd_COUNT] = {MK_C_INTERVAL_UNMOD, MK_C_INTERVAL_0, MK_C_INTERVAL_1, 
 338:quantum/mousekey.c **** uint16_t        w_offsets[mkspd_COUNT]   = {MK_W_OFFSET_UNMOD, MK_W_OFFSET_0, MK_W_OFFSET_1, MK_W_O
 339:quantum/mousekey.c **** uint16_t        w_intervals[mkspd_COUNT] = {MK_W_INTERVAL_UNMOD, MK_W_INTERVAL_0, MK_W_INTERVAL_1, 
 340:quantum/mousekey.c **** 
 341:quantum/mousekey.c **** void mousekey_task(void) {
 342:quantum/mousekey.c ****     // report cursor and scroll movement independently
 343:quantum/mousekey.c ****     report_mouse_t const tmpmr = mouse_report;
 344:quantum/mousekey.c ****     mouse_report.x             = 0;
 345:quantum/mousekey.c ****     mouse_report.y             = 0;
 346:quantum/mousekey.c ****     mouse_report.v             = 0;
 347:quantum/mousekey.c ****     mouse_report.h             = 0;
 348:quantum/mousekey.c **** 
 349:quantum/mousekey.c ****     if ((tmpmr.x || tmpmr.y) && timer_elapsed(last_timer_c) > c_intervals[mk_speed]) {
 350:quantum/mousekey.c ****         mouse_report.x = tmpmr.x;
 351:quantum/mousekey.c ****         mouse_report.y = tmpmr.y;
 352:quantum/mousekey.c ****     }
 353:quantum/mousekey.c ****     if ((tmpmr.h || tmpmr.v) && timer_elapsed(last_timer_w) > w_intervals[mk_speed]) {
 354:quantum/mousekey.c ****         mouse_report.v = tmpmr.v;
 355:quantum/mousekey.c ****         mouse_report.h = tmpmr.h;
 356:quantum/mousekey.c ****     }
 357:quantum/mousekey.c **** 
 358:quantum/mousekey.c ****     if (mouse_report.x || mouse_report.y || mouse_report.v || mouse_report.h) mousekey_send();
 359:quantum/mousekey.c ****     mouse_report = tmpmr;
 360:quantum/mousekey.c **** }
 361:quantum/mousekey.c **** 
 362:quantum/mousekey.c **** void adjust_speed(void) {
 363:quantum/mousekey.c ****     uint16_t const c_offset = c_offsets[mk_speed];
 364:quantum/mousekey.c ****     uint16_t const w_offset = w_offsets[mk_speed];
 365:quantum/mousekey.c ****     if (mouse_report.x > 0) mouse_report.x = c_offset;
 366:quantum/mousekey.c ****     if (mouse_report.x < 0) mouse_report.x = c_offset * -1;
 367:quantum/mousekey.c ****     if (mouse_report.y > 0) mouse_report.y = c_offset;
 368:quantum/mousekey.c ****     if (mouse_report.y < 0) mouse_report.y = c_offset * -1;
 369:quantum/mousekey.c ****     if (mouse_report.h > 0) mouse_report.h = w_offset;
 370:quantum/mousekey.c ****     if (mouse_report.h < 0) mouse_report.h = w_offset * -1;
 371:quantum/mousekey.c ****     if (mouse_report.v > 0) mouse_report.v = w_offset;
 372:quantum/mousekey.c ****     if (mouse_report.v < 0) mouse_report.v = w_offset * -1;
 373:quantum/mousekey.c ****     // adjust for diagonals
 374:quantum/mousekey.c ****     if (mouse_report.x && mouse_report.y) {
 375:quantum/mousekey.c ****         mouse_report.x = times_inv_sqrt2(mouse_report.x);
 376:quantum/mousekey.c ****         if (mouse_report.x == 0) {
 377:quantum/mousekey.c ****             mouse_report.x = 1;
 378:quantum/mousekey.c ****         }
 379:quantum/mousekey.c ****         mouse_report.y = times_inv_sqrt2(mouse_report.y);
 380:quantum/mousekey.c ****         if (mouse_report.y == 0) {
 381:quantum/mousekey.c ****             mouse_report.y = 1;
 382:quantum/mousekey.c ****         }
 383:quantum/mousekey.c ****     }
 384:quantum/mousekey.c ****     if (mouse_report.h && mouse_report.v) {
 385:quantum/mousekey.c ****         mouse_report.h = times_inv_sqrt2(mouse_report.h);
 386:quantum/mousekey.c ****         mouse_report.v = times_inv_sqrt2(mouse_report.v);
 387:quantum/mousekey.c ****     }
 388:quantum/mousekey.c **** }
 389:quantum/mousekey.c **** 
 390:quantum/mousekey.c **** void mousekey_on(uint8_t code) {
 391:quantum/mousekey.c ****     uint16_t const c_offset  = c_offsets[mk_speed];
 392:quantum/mousekey.c ****     uint16_t const w_offset  = w_offsets[mk_speed];
 393:quantum/mousekey.c ****     uint8_t const  old_speed = mk_speed;
 394:quantum/mousekey.c ****     if (code == KC_MS_UP)
 395:quantum/mousekey.c ****         mouse_report.y = c_offset * -1;
 396:quantum/mousekey.c ****     else if (code == KC_MS_DOWN)
 397:quantum/mousekey.c ****         mouse_report.y = c_offset;
 398:quantum/mousekey.c ****     else if (code == KC_MS_LEFT)
 399:quantum/mousekey.c ****         mouse_report.x = c_offset * -1;
 400:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT)
 401:quantum/mousekey.c ****         mouse_report.x = c_offset;
 402:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP)
 403:quantum/mousekey.c ****         mouse_report.v = w_offset;
 404:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN)
 405:quantum/mousekey.c ****         mouse_report.v = w_offset * -1;
 406:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT)
 407:quantum/mousekey.c ****         mouse_report.h = w_offset * -1;
 408:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT)
 409:quantum/mousekey.c ****         mouse_report.h = w_offset;
 410:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 411:quantum/mousekey.c ****         mouse_report.buttons |= 1 << (code - KC_MS_BTN1);
 412:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 413:quantum/mousekey.c ****         mk_speed = mkspd_0;
 414:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 415:quantum/mousekey.c ****         mk_speed = mkspd_1;
 416:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 417:quantum/mousekey.c ****         mk_speed = mkspd_2;
 418:quantum/mousekey.c ****     if (mk_speed != old_speed) adjust_speed();
 419:quantum/mousekey.c **** }
 420:quantum/mousekey.c **** 
 421:quantum/mousekey.c **** void mousekey_off(uint8_t code) {
 422:quantum/mousekey.c **** #    ifdef MK_MOMENTARY_ACCEL
 423:quantum/mousekey.c ****     uint8_t const old_speed = mk_speed;
 424:quantum/mousekey.c **** #    endif
 425:quantum/mousekey.c ****     if (code == KC_MS_UP && mouse_report.y < 0)
 426:quantum/mousekey.c ****         mouse_report.y = 0;
 427:quantum/mousekey.c ****     else if (code == KC_MS_DOWN && mouse_report.y > 0)
 428:quantum/mousekey.c ****         mouse_report.y = 0;
 429:quantum/mousekey.c ****     else if (code == KC_MS_LEFT && mouse_report.x < 0)
 430:quantum/mousekey.c ****         mouse_report.x = 0;
 431:quantum/mousekey.c ****     else if (code == KC_MS_RIGHT && mouse_report.x > 0)
 432:quantum/mousekey.c ****         mouse_report.x = 0;
 433:quantum/mousekey.c ****     else if (code == KC_MS_WH_UP && mouse_report.v > 0)
 434:quantum/mousekey.c ****         mouse_report.v = 0;
 435:quantum/mousekey.c ****     else if (code == KC_MS_WH_DOWN && mouse_report.v < 0)
 436:quantum/mousekey.c ****         mouse_report.v = 0;
 437:quantum/mousekey.c ****     else if (code == KC_MS_WH_LEFT && mouse_report.h < 0)
 438:quantum/mousekey.c ****         mouse_report.h = 0;
 439:quantum/mousekey.c ****     else if (code == KC_MS_WH_RIGHT && mouse_report.h > 0)
 440:quantum/mousekey.c ****         mouse_report.h = 0;
 441:quantum/mousekey.c ****     else if (IS_MOUSEKEY_BUTTON(code))
 442:quantum/mousekey.c ****         mouse_report.buttons &= ~(1 << (code - KC_MS_BTN1));
 443:quantum/mousekey.c **** #    ifdef MK_MOMENTARY_ACCEL
 444:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL0)
 445:quantum/mousekey.c ****         mk_speed = mkspd_DEFAULT;
 446:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL1)
 447:quantum/mousekey.c ****         mk_speed = mkspd_DEFAULT;
 448:quantum/mousekey.c ****     else if (code == KC_MS_ACCEL2)
 449:quantum/mousekey.c ****         mk_speed = mkspd_DEFAULT;
 450:quantum/mousekey.c ****     if (mk_speed != old_speed) adjust_speed();
 451:quantum/mousekey.c **** #    endif
 452:quantum/mousekey.c **** }
 453:quantum/mousekey.c **** 
 454:quantum/mousekey.c **** #endif /* #ifndef MK_3_SPEED */
 455:quantum/mousekey.c **** 
 456:quantum/mousekey.c **** void mousekey_send(void) {
 723              		.loc 1 456 26 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 457:quantum/mousekey.c ****     mousekey_debug();
 727              		.loc 1 457 5 view .LVU234
 458:quantum/mousekey.c ****     uint16_t time = timer_read();
 459:quantum/mousekey.c ****     if (mouse_report.x || mouse_report.y) last_timer_c = time;
 460:quantum/mousekey.c ****     if (mouse_report.v || mouse_report.h) last_timer_w = time;
 461:quantum/mousekey.c ****     host_mouse_send(&mouse_report);
 462:quantum/mousekey.c **** }
 463:quantum/mousekey.c **** 
 464:quantum/mousekey.c **** void mousekey_clear(void) {
 465:quantum/mousekey.c ****     mouse_report          = (report_mouse_t){};
 466:quantum/mousekey.c ****     mousekey_repeat       = 0;
 467:quantum/mousekey.c ****     mousekey_wheel_repeat = 0;
 468:quantum/mousekey.c ****     mousekey_accel        = 0;
 469:quantum/mousekey.c **** }
 470:quantum/mousekey.c **** 
 471:quantum/mousekey.c **** static void mousekey_debug(void) {
 472:quantum/mousekey.c ****     if (!debug_mouse) return;
 728              		.loc 1 472 5 view .LVU235
 473:quantum/mousekey.c ****     print("mousekey [btn|x y v h](rep/acl): [");
 729              		.loc 1 473 48 view .LVU236
 474:quantum/mousekey.c ****     print_hex8(mouse_report.buttons);
 730              		.loc 1 474 37 view .LVU237
 475:quantum/mousekey.c ****     print("|");
 731              		.loc 1 475 15 view .LVU238
 476:quantum/mousekey.c ****     print_decs(mouse_report.x);
 732              		.loc 1 476 31 view .LVU239
 477:quantum/mousekey.c ****     print(" ");
 733              		.loc 1 477 15 view .LVU240
 478:quantum/mousekey.c ****     print_decs(mouse_report.y);
 734              		.loc 1 478 31 view .LVU241
 479:quantum/mousekey.c ****     print(" ");
 735              		.loc 1 479 15 view .LVU242
 480:quantum/mousekey.c ****     print_decs(mouse_report.v);
 736              		.loc 1 480 31 view .LVU243
 481:quantum/mousekey.c ****     print(" ");
 737              		.loc 1 481 15 view .LVU244
 482:quantum/mousekey.c ****     print_decs(mouse_report.h);
 738              		.loc 1 482 31 view .LVU245
 483:quantum/mousekey.c ****     print("](");
 739              		.loc 1 483 16 view .LVU246
 484:quantum/mousekey.c ****     print_dec(mousekey_repeat);
 740              		.loc 1 484 31 view .LVU247
 485:quantum/mousekey.c ****     print("/");
 741              		.loc 1 485 15 view .LVU248
 486:quantum/mousekey.c ****     print_dec(mousekey_accel);
 742              		.loc 1 486 30 view .LVU249
 487:quantum/mousekey.c ****     print(")\n");
 743              		.loc 1 487 17 view .LVU250
 458:quantum/mousekey.c ****     if (mouse_report.x || mouse_report.y) last_timer_c = time;
 744              		.loc 1 458 5 view .LVU251
 456:quantum/mousekey.c ****     mousekey_debug();
 745              		.loc 1 456 26 is_stmt 0 view .LVU252
 746 0000 08B5     		push	{r3, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 3, -8
 749              		.cfi_offset 14, -4
 458:quantum/mousekey.c ****     if (mouse_report.x || mouse_report.y) last_timer_c = time;
 750              		.loc 1 458 21 view .LVU253
 751 0002 FFF7FEFF 		bl	timer_read
 752              	.LVL50:
 459:quantum/mousekey.c ****     if (mouse_report.v || mouse_report.h) last_timer_w = time;
 753              		.loc 1 459 5 is_stmt 1 view .LVU254
 459:quantum/mousekey.c ****     if (mouse_report.v || mouse_report.h) last_timer_w = time;
 754              		.loc 1 459 21 is_stmt 0 view .LVU255
 755 0006 094B     		ldr	r3, .L94
 459:quantum/mousekey.c ****     if (mouse_report.v || mouse_report.h) last_timer_w = time;
 756              		.loc 1 459 24 view .LVU256
 757 0008 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 758 000a 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 759 000c 0A43     		orrs	r2, r1, r2
 459:quantum/mousekey.c ****     if (mouse_report.v || mouse_report.h) last_timer_w = time;
 760              		.loc 1 459 43 is_stmt 1 view .LVU257
 459:quantum/mousekey.c ****     if (mouse_report.v || mouse_report.h) last_timer_w = time;
 761              		.loc 1 459 56 is_stmt 0 view .LVU258
 762 000e 1CBF     		itt	ne
 763 0010 074A     		ldrne	r2, .L94+4
 764 0012 1080     		strhne	r0, [r2]	@ movhi
 460:quantum/mousekey.c ****     host_mouse_send(&mouse_report);
 765              		.loc 1 460 5 is_stmt 1 view .LVU259
 460:quantum/mousekey.c ****     host_mouse_send(&mouse_report);
 766              		.loc 1 460 24 is_stmt 0 view .LVU260
 767 0014 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 768 0016 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 769 0018 1343     		orrs	r3, r2, r3
 460:quantum/mousekey.c ****     host_mouse_send(&mouse_report);
 770              		.loc 1 460 43 is_stmt 1 view .LVU261
 460:quantum/mousekey.c ****     host_mouse_send(&mouse_report);
 771              		.loc 1 460 56 is_stmt 0 view .LVU262
 772 001a 1CBF     		itt	ne
 773 001c 054B     		ldrne	r3, .L94+8
 774 001e 1880     		strhne	r0, [r3]	@ movhi
 461:quantum/mousekey.c **** }
 775              		.loc 1 461 5 is_stmt 1 view .LVU263
 462:quantum/mousekey.c **** 
 776              		.loc 1 462 1 is_stmt 0 view .LVU264
 777 0020 BDE80840 		pop	{r3, lr}
 778              		.cfi_restore 14
 779              		.cfi_restore 3
 780              		.cfi_def_cfa_offset 0
 461:quantum/mousekey.c **** }
 781              		.loc 1 461 5 view .LVU265
 782 0024 0148     		ldr	r0, .L94
 783              	.LVL51:
 461:quantum/mousekey.c **** }
 784              		.loc 1 461 5 view .LVU266
 785 0026 FFF7FEBF 		b	host_mouse_send
 786              	.LVL52:
 787              	.L95:
 788 002a 00BF     		.align	2
 789              	.L94:
 790 002c 00000000 		.word	.LANCHOR7
 791 0030 00000000 		.word	.LANCHOR8
 792 0034 00000000 		.word	.LANCHOR9
 793              		.cfi_endproc
 794              	.LFE288:
 796              		.section	.text.mousekey_task,"ax",%progbits
 797              		.align	1
 798              		.global	mousekey_task
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 802              		.fpu fpv4-sp-d16
 804              	mousekey_task:
 805              	.LFB285:
 210:quantum/mousekey.c ****     // report cursor and scroll movement independently
 806              		.loc 1 210 26 is_stmt 1 view -0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 212:quantum/mousekey.c **** 
 810              		.loc 1 212 5 view .LVU268
 210:quantum/mousekey.c ****     // report cursor and scroll movement independently
 811              		.loc 1 210 26 is_stmt 0 view .LVU269
 812 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 813              		.cfi_def_cfa_offset 32
 814              		.cfi_offset 4, -32
 815              		.cfi_offset 5, -28
 816              		.cfi_offset 6, -24
 817              		.cfi_offset 7, -20
 818              		.cfi_offset 8, -16
 819              		.cfi_offset 9, -12
 820              		.cfi_offset 10, -8
 821              		.cfi_offset 14, -4
 212:quantum/mousekey.c **** 
 822              		.loc 1 212 26 view .LVU270
 823 0004 564C     		ldr	r4, .L167
 824 0006 94F90280 		ldrsb	r8, [r4, #2]
 825 000a 94F90370 		ldrsb	r7, [r4, #3]
 826 000e 94F90460 		ldrsb	r6, [r4, #4]
 827 0012 94F90550 		ldrsb	r5, [r4, #5]
 828 0016 94F800A0 		ldrb	r10, [r4]	@ zero_extendqisi2
 829              	.LVL53:
 212:quantum/mousekey.c **** 
 830              		.loc 1 212 26 view .LVU271
 831 001a 94F80190 		ldrb	r9, [r4, #1]	@ zero_extendqisi2
 832              	.LVL54:
 214:quantum/mousekey.c ****     mouse_report.y = 0;
 833              		.loc 1 214 5 is_stmt 1 view .LVU272
 214:quantum/mousekey.c ****     mouse_report.y = 0;
 834              		.loc 1 214 20 is_stmt 0 view .LVU273
 835 001e 0023     		movs	r3, #0
 836 0020 A370     		strb	r3, [r4, #2]
 215:quantum/mousekey.c ****     mouse_report.v = 0;
 837              		.loc 1 215 5 is_stmt 1 view .LVU274
 215:quantum/mousekey.c ****     mouse_report.v = 0;
 838              		.loc 1 215 20 is_stmt 0 view .LVU275
 839 0022 E370     		strb	r3, [r4, #3]
 216:quantum/mousekey.c ****     mouse_report.h = 0;
 840              		.loc 1 216 5 is_stmt 1 view .LVU276
 216:quantum/mousekey.c ****     mouse_report.h = 0;
 841              		.loc 1 216 20 is_stmt 0 view .LVU277
 842 0024 2371     		strb	r3, [r4, #4]
 217:quantum/mousekey.c **** 
 843              		.loc 1 217 5 is_stmt 1 view .LVU278
 217:quantum/mousekey.c **** 
 844              		.loc 1 217 20 is_stmt 0 view .LVU279
 845 0026 6371     		strb	r3, [r4, #5]
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 846              		.loc 1 219 5 is_stmt 1 view .LVU280
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 847              		.loc 1 219 18 is_stmt 0 view .LVU281
 848 0028 58EA0703 		orrs	r3, r8, r7
 849 002c 0AD0     		beq	.L98
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 850              		.loc 1 219 33 discriminator 3 view .LVU282
 851 002e 4D4B     		ldr	r3, .L167+4
 852 0030 1888     		ldrh	r0, [r3]
 853 0032 FFF7FEFF 		bl	timer_elapsed
 854              	.LVL55:
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 855              		.loc 1 219 80 discriminator 3 view .LVU283
 856 0036 4C49     		ldr	r1, .L167+8
 857 0038 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 858              		.loc 1 219 94 discriminator 3 view .LVU284
 859 003a 3BB3     		cbz	r3, .L99
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 860              		.loc 1 219 94 discriminator 4 view .LVU285
 861 003c 4B4A     		ldr	r2, .L167+12
 862 003e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 863              		.loc 1 219 30 discriminator 4 view .LVU286
 864 0040 9042     		cmp	r0, r2
 865 0042 2DDC     		bgt	.L100
 866              	.L98:
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 867              		.loc 1 236 5 is_stmt 1 view .LVU287
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 868              		.loc 1 236 18 is_stmt 0 view .LVU288
 869 0044 56EA0503 		orrs	r3, r6, r5
 870 0048 0BD0     		beq	.L112
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 871              		.loc 1 236 33 discriminator 3 view .LVU289
 872 004a 494B     		ldr	r3, .L167+16
 873 004c 1888     		ldrh	r0, [r3]
 874 004e FFF7FEFF 		bl	timer_elapsed
 875              	.LVL56:
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 876              		.loc 1 236 86 discriminator 3 view .LVU290
 877 0052 4849     		ldr	r1, .L167+20
 878 0054 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 879              		.loc 1 236 106 discriminator 3 view .LVU291
 880 0056 002B     		cmp	r3, #0
 881 0058 4ED0     		beq	.L113
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 882              		.loc 1 236 106 discriminator 4 view .LVU292
 883 005a 474A     		ldr	r2, .L167+24
 884 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 885              		.loc 1 236 30 discriminator 4 view .LVU293
 886 005e 9042     		cmp	r0, r2
 887 0060 54DC     		bgt	.L114
 888              	.L112:
 254:quantum/mousekey.c ****     mouse_report = tmpmr;
 889              		.loc 1 254 5 is_stmt 1 view .LVU294
 254:quantum/mousekey.c ****     mouse_report = tmpmr;
 890              		.loc 1 254 60 is_stmt 0 view .LVU295
 891 0062 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 892 0064 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 893 0066 1343     		orrs	r3, r3, r2
 894 0068 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 895 006a 1343     		orrs	r3, r3, r2
 896 006c 6279     		ldrb	r2, [r4, #5]	@ zero_extendqisi2
 897 006e 1343     		orrs	r3, r3, r2
 898 0070 01D0     		beq	.L125
 254:quantum/mousekey.c ****     mouse_report = tmpmr;
 899              		.loc 1 254 79 is_stmt 1 discriminator 7 view .LVU296
 900 0072 FFF7FEFF 		bl	mousekey_send
 901              	.LVL57:
 902              	.L125:
 255:quantum/mousekey.c **** }
 903              		.loc 1 255 5 view .LVU297
 255:quantum/mousekey.c **** }
 904              		.loc 1 255 18 is_stmt 0 view .LVU298
 905 0076 84F800A0 		strb	r10, [r4]
 906 007a 84F80190 		strb	r9, [r4, #1]
 907 007e 84F80280 		strb	r8, [r4, #2]
 908 0082 E770     		strb	r7, [r4, #3]
 909 0084 2671     		strb	r6, [r4, #4]
 910 0086 6571     		strb	r5, [r4, #5]
 911              	.LVL58:
 256:quantum/mousekey.c **** 
 912              		.loc 1 256 1 view .LVU299
 913 0088 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 914              	.LVL59:
 915              	.L99:
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 916              		.loc 1 219 94 discriminator 5 view .LVU300
 917 008c 3B4A     		ldr	r2, .L167+28
 918 008e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 919 0090 02EB8202 		add	r2, r2, r2, lsl #2
 219:quantum/mousekey.c ****         if (mousekey_repeat != UINT8_MAX) mousekey_repeat++;
 920              		.loc 1 219 30 discriminator 5 view .LVU301
 921 0094 B0EB420F 		cmp	r0, r2, lsl #1
 922 0098 D4DD     		ble	.L98
 923              	.L102:
 220:quantum/mousekey.c ****         if (tmpmr.x != 0) mouse_report.x = move_unit() * ((tmpmr.x > 0) ? 1 : -1);
 924              		.loc 1 220 43 is_stmt 1 discriminator 1 view .LVU302
 220:quantum/mousekey.c ****         if (tmpmr.x != 0) mouse_report.x = move_unit() * ((tmpmr.x > 0) ? 1 : -1);
 925              		.loc 1 220 58 is_stmt 0 discriminator 1 view .LVU303
 926 009a 0133     		adds	r3, r3, #1
 927 009c 0B70     		strb	r3, [r1]
 928 009e 01E0     		b	.L103
 929              	.L100:
 220:quantum/mousekey.c ****         if (tmpmr.x != 0) mouse_report.x = move_unit() * ((tmpmr.x > 0) ? 1 : -1);
 930              		.loc 1 220 9 is_stmt 1 view .LVU304
 220:quantum/mousekey.c ****         if (tmpmr.x != 0) mouse_report.x = move_unit() * ((tmpmr.x > 0) ? 1 : -1);
 931              		.loc 1 220 12 is_stmt 0 view .LVU305
 932 00a0 FF2B     		cmp	r3, #255
 933 00a2 FAD1     		bne	.L102
 934              	.L103:
 221:quantum/mousekey.c ****         if (tmpmr.y != 0) mouse_report.y = move_unit() * ((tmpmr.y > 0) ? 1 : -1);
 935              		.loc 1 221 9 is_stmt 1 view .LVU306
 221:quantum/mousekey.c ****         if (tmpmr.y != 0) mouse_report.y = move_unit() * ((tmpmr.y > 0) ? 1 : -1);
 936              		.loc 1 221 12 is_stmt 0 view .LVU307
 937 00a4 B8F1000F 		cmp	r8, #0
 938 00a8 08D0     		beq	.L104
 221:quantum/mousekey.c ****         if (tmpmr.y != 0) mouse_report.y = move_unit() * ((tmpmr.y > 0) ? 1 : -1);
 939              		.loc 1 221 27 is_stmt 1 discriminator 1 view .LVU308
 221:quantum/mousekey.c ****         if (tmpmr.y != 0) mouse_report.y = move_unit() * ((tmpmr.y > 0) ? 1 : -1);
 940              		.loc 1 221 44 is_stmt 0 discriminator 1 view .LVU309
 941 00aa FFF7FEFF 		bl	move_unit
 942              	.LVL60:
 221:quantum/mousekey.c ****         if (tmpmr.y != 0) mouse_report.y = move_unit() * ((tmpmr.y > 0) ? 1 : -1);
 943              		.loc 1 221 42 discriminator 1 view .LVU310
 944 00ae B8F1000F 		cmp	r8, #0
 945 00b2 CCBF     		ite	gt
 946 00b4 0123     		movgt	r3, #1
 947 00b6 FF23     		movle	r3, #255
 948 00b8 5843     		muls	r0, r3, r0
 949 00ba A070     		strb	r0, [r4, #2]
 950              	.L104:
 222:quantum/mousekey.c **** 
 951              		.loc 1 222 9 is_stmt 1 view .LVU311
 222:quantum/mousekey.c **** 
 952              		.loc 1 222 12 is_stmt 0 view .LVU312
 953 00bc 3FB1     		cbz	r7, .L106
 222:quantum/mousekey.c **** 
 954              		.loc 1 222 27 is_stmt 1 discriminator 1 view .LVU313
 222:quantum/mousekey.c **** 
 955              		.loc 1 222 44 is_stmt 0 discriminator 1 view .LVU314
 956 00be FFF7FEFF 		bl	move_unit
 957              	.LVL61:
 222:quantum/mousekey.c **** 
 958              		.loc 1 222 42 discriminator 1 view .LVU315
 959 00c2 002F     		cmp	r7, #0
 960 00c4 CCBF     		ite	gt
 961 00c6 0123     		movgt	r3, #1
 962 00c8 FF23     		movle	r3, #255
 963 00ca 5843     		muls	r0, r3, r0
 964 00cc E070     		strb	r0, [r4, #3]
 965              	.L106:
 225:quantum/mousekey.c ****             mouse_report.x = times_inv_sqrt2(mouse_report.x);
 966              		.loc 1 225 9 is_stmt 1 view .LVU316
 225:quantum/mousekey.c ****             mouse_report.x = times_inv_sqrt2(mouse_report.x);
 967              		.loc 1 225 25 is_stmt 0 view .LVU317
 968 00ce 94F90220 		ldrsb	r2, [r4, #2]
 225:quantum/mousekey.c ****             mouse_report.x = times_inv_sqrt2(mouse_report.x);
 969              		.loc 1 225 12 view .LVU318
 970 00d2 002A     		cmp	r2, #0
 971 00d4 B6D0     		beq	.L98
 225:quantum/mousekey.c ****             mouse_report.x = times_inv_sqrt2(mouse_report.x);
 972              		.loc 1 225 43 discriminator 1 view .LVU319
 973 00d6 94F90330 		ldrsb	r3, [r4, #3]
 225:quantum/mousekey.c ****             mouse_report.x = times_inv_sqrt2(mouse_report.x);
 974              		.loc 1 225 28 discriminator 1 view .LVU320
 975 00da 002B     		cmp	r3, #0
 976 00dc B2D0     		beq	.L98
 226:quantum/mousekey.c ****             if (mouse_report.x == 0) {
 977              		.loc 1 226 13 is_stmt 1 view .LVU321
 978              	.LVL62:
 979              	.LBB12:
 980              	.LBI12:
  26:quantum/mousekey.c ****     // 181/256 is pretty close to 1/sqrt(2)
 981              		.loc 1 26 15 view .LVU322
 982              	.LBB13:
  31:quantum/mousekey.c **** }
 983              		.loc 1 31 5 view .LVU323
  31:quantum/mousekey.c **** }
 984              		.loc 1 31 5 is_stmt 0 view .LVU324
 985              	.LBE13:
 986              	.LBE12:
 227:quantum/mousekey.c ****                 mouse_report.x = 1;
 987              		.loc 1 227 13 is_stmt 1 view .LVU325
 988              	.LBB15:
 989              	.LBB14:
  31:quantum/mousekey.c **** }
 990              		.loc 1 31 15 is_stmt 0 view .LVU326
 991 00de B521     		movs	r1, #181
 992 00e0 4A43     		muls	r2, r1, r2
 993              	.LBE14:
 994              	.LBE15:
 227:quantum/mousekey.c ****                 mouse_report.x = 1;
 995              		.loc 1 227 16 view .LVU327
 996 00e2 1212     		asrs	r2, r2, #8
 228:quantum/mousekey.c ****             }
 997              		.loc 1 228 17 is_stmt 1 view .LVU328
 998              	.LBB16:
 999              	.LBB17:
  31:quantum/mousekey.c **** }
 1000              		.loc 1 31 15 is_stmt 0 view .LVU329
 1001 00e4 01FB03F3 		mul	r3, r1, r3
 1002              	.LBE17:
 1003              	.LBE16:
 228:quantum/mousekey.c ****             }
 1004              		.loc 1 228 32 view .LVU330
 1005 00e8 08BF     		it	eq
 1006 00ea 0122     		moveq	r2, #1
 231:quantum/mousekey.c ****                 mouse_report.y = 1;
 1007              		.loc 1 231 16 view .LVU331
 1008 00ec 1B12     		asrs	r3, r3, #8
 232:quantum/mousekey.c ****             }
 1009              		.loc 1 232 32 view .LVU332
 1010 00ee 08BF     		it	eq
 1011 00f0 0123     		moveq	r3, #1
 228:quantum/mousekey.c ****             }
 1012              		.loc 1 228 32 view .LVU333
 1013 00f2 A270     		strb	r2, [r4, #2]
 230:quantum/mousekey.c ****             if (mouse_report.y == 0) {
 1014              		.loc 1 230 13 is_stmt 1 view .LVU334
 1015              	.LBB19:
 1016              	.LBI16:
  26:quantum/mousekey.c ****     // 181/256 is pretty close to 1/sqrt(2)
 1017              		.loc 1 26 15 view .LVU335
 1018              	.LBB18:
  31:quantum/mousekey.c **** }
 1019              		.loc 1 31 5 view .LVU336
 1020              	.LBE18:
 1021              	.LBE19:
 231:quantum/mousekey.c ****                 mouse_report.y = 1;
 1022              		.loc 1 231 13 view .LVU337
 232:quantum/mousekey.c ****             }
 1023              		.loc 1 232 17 view .LVU338
 232:quantum/mousekey.c ****             }
 1024              		.loc 1 232 32 is_stmt 0 view .LVU339
 1025 00f4 E370     		strb	r3, [r4, #3]
 1026 00f6 A5E7     		b	.L98
 1027              	.L113:
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 1028              		.loc 1 236 106 discriminator 5 view .LVU340
 1029 00f8 214A     		ldr	r2, .L167+32
 1030 00fa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1031 00fc 02EB8202 		add	r2, r2, r2, lsl #2
 236:quantum/mousekey.c ****         if (mousekey_wheel_repeat != UINT8_MAX) mousekey_wheel_repeat++;
 1032              		.loc 1 236 30 discriminator 5 view .LVU341
 1033 0100 B0EB420F 		cmp	r0, r2, lsl #1
 1034 0104 ADDD     		ble	.L112
 1035              	.L116:
 237:quantum/mousekey.c ****         if (tmpmr.v != 0) mouse_report.v = wheel_unit() * ((tmpmr.v > 0) ? 1 : -1);
 1036              		.loc 1 237 49 is_stmt 1 discriminator 1 view .LVU342
 237:quantum/mousekey.c ****         if (tmpmr.v != 0) mouse_report.v = wheel_unit() * ((tmpmr.v > 0) ? 1 : -1);
 1037              		.loc 1 237 70 is_stmt 0 discriminator 1 view .LVU343
 1038 0106 0133     		adds	r3, r3, #1
 1039 0108 0B70     		strb	r3, [r1]
 1040 010a 01E0     		b	.L117
 1041              	.L114:
 237:quantum/mousekey.c ****         if (tmpmr.v != 0) mouse_report.v = wheel_unit() * ((tmpmr.v > 0) ? 1 : -1);
 1042              		.loc 1 237 9 is_stmt 1 view .LVU344
 237:quantum/mousekey.c ****         if (tmpmr.v != 0) mouse_report.v = wheel_unit() * ((tmpmr.v > 0) ? 1 : -1);
 1043              		.loc 1 237 12 is_stmt 0 view .LVU345
 1044 010c FF2B     		cmp	r3, #255
 1045 010e FAD1     		bne	.L116
 1046              	.L117:
 238:quantum/mousekey.c ****         if (tmpmr.h != 0) mouse_report.h = wheel_unit() * ((tmpmr.h > 0) ? 1 : -1);
 1047              		.loc 1 238 9 is_stmt 1 view .LVU346
 238:quantum/mousekey.c ****         if (tmpmr.h != 0) mouse_report.h = wheel_unit() * ((tmpmr.h > 0) ? 1 : -1);
 1048              		.loc 1 238 12 is_stmt 0 view .LVU347
 1049 0110 3EB1     		cbz	r6, .L118
 238:quantum/mousekey.c ****         if (tmpmr.h != 0) mouse_report.h = wheel_unit() * ((tmpmr.h > 0) ? 1 : -1);
 1050              		.loc 1 238 27 is_stmt 1 discriminator 1 view .LVU348
 238:quantum/mousekey.c ****         if (tmpmr.h != 0) mouse_report.h = wheel_unit() * ((tmpmr.h > 0) ? 1 : -1);
 1051              		.loc 1 238 44 is_stmt 0 discriminator 1 view .LVU349
 1052 0112 FFF7FEFF 		bl	wheel_unit
 1053              	.LVL63:
 238:quantum/mousekey.c ****         if (tmpmr.h != 0) mouse_report.h = wheel_unit() * ((tmpmr.h > 0) ? 1 : -1);
 1054              		.loc 1 238 42 discriminator 1 view .LVU350
 1055 0116 002E     		cmp	r6, #0
 1056 0118 CCBF     		ite	gt
 1057 011a 0123     		movgt	r3, #1
 1058 011c FF23     		movle	r3, #255
 1059 011e 5843     		muls	r0, r3, r0
 1060 0120 2071     		strb	r0, [r4, #4]
 1061              	.L118:
 239:quantum/mousekey.c **** 
 1062              		.loc 1 239 9 is_stmt 1 view .LVU351
 239:quantum/mousekey.c **** 
 1063              		.loc 1 239 12 is_stmt 0 view .LVU352
 1064 0122 3DB1     		cbz	r5, .L120
 239:quantum/mousekey.c **** 
 1065              		.loc 1 239 27 is_stmt 1 discriminator 1 view .LVU353
 239:quantum/mousekey.c **** 
 1066              		.loc 1 239 44 is_stmt 0 discriminator 1 view .LVU354
 1067 0124 FFF7FEFF 		bl	wheel_unit
 1068              	.LVL64:
 239:quantum/mousekey.c **** 
 1069              		.loc 1 239 42 discriminator 1 view .LVU355
 1070 0128 002D     		cmp	r5, #0
 1071 012a CCBF     		ite	gt
 1072 012c 0123     		movgt	r3, #1
 1073 012e FF23     		movle	r3, #255
 1074 0130 5843     		muls	r0, r3, r0
 1075 0132 6071     		strb	r0, [r4, #5]
 1076              	.L120:
 242:quantum/mousekey.c ****             mouse_report.v = times_inv_sqrt2(mouse_report.v);
 1077              		.loc 1 242 9 is_stmt 1 view .LVU356
 242:quantum/mousekey.c ****             mouse_report.v = times_inv_sqrt2(mouse_report.v);
 1078              		.loc 1 242 25 is_stmt 0 view .LVU357
 1079 0134 94F90420 		ldrsb	r2, [r4, #4]
 242:quantum/mousekey.c ****             mouse_report.v = times_inv_sqrt2(mouse_report.v);
 1080              		.loc 1 242 12 view .LVU358
 1081 0138 002A     		cmp	r2, #0
 1082 013a 92D0     		beq	.L112
 242:quantum/mousekey.c ****             mouse_report.v = times_inv_sqrt2(mouse_report.v);
 1083              		.loc 1 242 43 discriminator 1 view .LVU359
 1084 013c 94F90530 		ldrsb	r3, [r4, #5]
 242:quantum/mousekey.c ****             mouse_report.v = times_inv_sqrt2(mouse_report.v);
 1085              		.loc 1 242 28 discriminator 1 view .LVU360
 1086 0140 002B     		cmp	r3, #0
 1087 0142 8ED0     		beq	.L112
 243:quantum/mousekey.c ****             if (mouse_report.v == 0) {
 1088              		.loc 1 243 13 is_stmt 1 view .LVU361
 1089              	.LVL65:
 1090              	.LBB20:
 1091              	.LBI20:
  26:quantum/mousekey.c ****     // 181/256 is pretty close to 1/sqrt(2)
 1092              		.loc 1 26 15 view .LVU362
 1093              	.LBB21:
  31:quantum/mousekey.c **** }
 1094              		.loc 1 31 5 view .LVU363
  31:quantum/mousekey.c **** }
 1095              		.loc 1 31 5 is_stmt 0 view .LVU364
 1096              	.LBE21:
 1097              	.LBE20:
 244:quantum/mousekey.c ****                 mouse_report.v = 1;
 1098              		.loc 1 244 13 is_stmt 1 view .LVU365
 1099              	.LBB23:
 1100              	.LBB22:
  31:quantum/mousekey.c **** }
 1101              		.loc 1 31 15 is_stmt 0 view .LVU366
 1102 0144 B521     		movs	r1, #181
 1103 0146 4A43     		muls	r2, r1, r2
 1104              	.LBE22:
 1105              	.LBE23:
 244:quantum/mousekey.c ****                 mouse_report.v = 1;
 1106              		.loc 1 244 16 view .LVU367
 1107 0148 1212     		asrs	r2, r2, #8
 245:quantum/mousekey.c ****             }
 1108              		.loc 1 245 17 is_stmt 1 view .LVU368
 1109              	.LBB24:
 1110              	.LBB25:
  31:quantum/mousekey.c **** }
 1111              		.loc 1 31 15 is_stmt 0 view .LVU369
 1112 014a 01FB03F3 		mul	r3, r1, r3
 1113              	.LBE25:
 1114              	.LBE24:
 245:quantum/mousekey.c ****             }
 1115              		.loc 1 245 32 view .LVU370
 1116 014e 08BF     		it	eq
 1117 0150 0122     		moveq	r2, #1
 248:quantum/mousekey.c ****                 mouse_report.h = 1;
 1118              		.loc 1 248 16 view .LVU371
 1119 0152 1B12     		asrs	r3, r3, #8
 249:quantum/mousekey.c ****             }
 1120              		.loc 1 249 32 view .LVU372
 1121 0154 08BF     		it	eq
 1122 0156 0123     		moveq	r3, #1
 245:quantum/mousekey.c ****             }
 1123              		.loc 1 245 32 view .LVU373
 1124 0158 2271     		strb	r2, [r4, #4]
 247:quantum/mousekey.c ****             if (mouse_report.h == 0) {
 1125              		.loc 1 247 13 is_stmt 1 view .LVU374
 1126              	.LVL66:
 1127              	.LBB27:
 1128              	.LBI24:
  26:quantum/mousekey.c ****     // 181/256 is pretty close to 1/sqrt(2)
 1129              		.loc 1 26 15 view .LVU375
 1130              	.LBB26:
  31:quantum/mousekey.c **** }
 1131              		.loc 1 31 5 view .LVU376
  31:quantum/mousekey.c **** }
 1132              		.loc 1 31 5 is_stmt 0 view .LVU377
 1133              	.LBE26:
 1134              	.LBE27:
 248:quantum/mousekey.c ****                 mouse_report.h = 1;
 1135              		.loc 1 248 13 is_stmt 1 view .LVU378
 249:quantum/mousekey.c ****             }
 1136              		.loc 1 249 17 view .LVU379
 249:quantum/mousekey.c ****             }
 1137              		.loc 1 249 32 is_stmt 0 view .LVU380
 1138 015a 6371     		strb	r3, [r4, #5]
 1139 015c 81E7     		b	.L112
 1140              	.L168:
 1141 015e 00BF     		.align	2
 1142              	.L167:
 1143 0160 00000000 		.word	.LANCHOR7
 1144 0164 00000000 		.word	.LANCHOR8
 1145 0168 00000000 		.word	.LANCHOR2
 1146 016c 00000000 		.word	.LANCHOR10
 1147 0170 00000000 		.word	.LANCHOR9
 1148 0174 00000000 		.word	.LANCHOR5
 1149 0178 00000000 		.word	.LANCHOR12
 1150 017c 00000000 		.word	.LANCHOR11
 1151 0180 00000000 		.word	.LANCHOR13
 1152              		.cfi_endproc
 1153              	.LFE285:
 1155              		.section	.text.mousekey_clear,"ax",%progbits
 1156              		.align	1
 1157              		.global	mousekey_clear
 1158              		.syntax unified
 1159              		.thumb
 1160              		.thumb_func
 1161              		.fpu fpv4-sp-d16
 1163              	mousekey_clear:
 1164              	.LFB289:
 464:quantum/mousekey.c ****     mouse_report          = (report_mouse_t){};
 1165              		.loc 1 464 27 is_stmt 1 view -0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 0, uses_anonymous_args = 0
 1169              		@ link register save eliminated.
 465:quantum/mousekey.c ****     mousekey_repeat       = 0;
 1170              		.loc 1 465 5 view .LVU382
 465:quantum/mousekey.c ****     mousekey_repeat       = 0;
 1171              		.loc 1 465 27 is_stmt 0 view .LVU383
 1172 0000 054A     		ldr	r2, .L170
 1173 0002 0023     		movs	r3, #0
 1174 0004 1360     		str	r3, [r2]	@ unaligned
 1175 0006 9380     		strh	r3, [r2, #4]	@ unaligned
 466:quantum/mousekey.c ****     mousekey_wheel_repeat = 0;
 1176              		.loc 1 466 5 is_stmt 1 view .LVU384
 466:quantum/mousekey.c ****     mousekey_wheel_repeat = 0;
 1177              		.loc 1 466 27 is_stmt 0 view .LVU385
 1178 0008 044A     		ldr	r2, .L170+4
 1179 000a 1370     		strb	r3, [r2]
 467:quantum/mousekey.c ****     mousekey_accel        = 0;
 1180              		.loc 1 467 5 is_stmt 1 view .LVU386
 467:quantum/mousekey.c ****     mousekey_accel        = 0;
 1181              		.loc 1 467 27 is_stmt 0 view .LVU387
 1182 000c 044A     		ldr	r2, .L170+8
 1183 000e 1370     		strb	r3, [r2]
 468:quantum/mousekey.c **** }
 1184              		.loc 1 468 5 is_stmt 1 view .LVU388
 468:quantum/mousekey.c **** }
 1185              		.loc 1 468 27 is_stmt 0 view .LVU389
 1186 0010 044A     		ldr	r2, .L170+12
 1187 0012 1370     		strb	r3, [r2]
 469:quantum/mousekey.c **** 
 1188              		.loc 1 469 1 view .LVU390
 1189 0014 7047     		bx	lr
 1190              	.L171:
 1191 0016 00BF     		.align	2
 1192              	.L170:
 1193 0018 00000000 		.word	.LANCHOR7
 1194 001c 00000000 		.word	.LANCHOR2
 1195 0020 00000000 		.word	.LANCHOR5
 1196 0024 00000000 		.word	.LANCHOR0
 1197              		.cfi_endproc
 1198              	.LFE289:
 1200              		.section	.text.mousekey_get_report,"ax",%progbits
 1201              		.align	1
 1202              		.global	mousekey_get_report
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu fpv4-sp-d16
 1208              	mousekey_get_report:
 1209              	.LVL67:
 1210              	.LFB291:
 488:quantum/mousekey.c **** }
 489:quantum/mousekey.c **** 
 490:quantum/mousekey.c **** report_mouse_t mousekey_get_report(void) { return mouse_report; }
 1211              		.loc 1 490 42 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216              		.loc 1 490 44 view .LVU392
 1217              		.loc 1 490 51 is_stmt 0 view .LVU393
 1218 0000 024A     		ldr	r2, .L173
 1219 0002 1168     		ldr	r1, [r2]	@ unaligned
 1220 0004 9288     		ldrh	r2, [r2, #4]	@ unaligned
 1221 0006 0160     		str	r1, [r0]	@ unaligned
 1222 0008 8280     		strh	r2, [r0, #4]	@ unaligned
 1223              		.loc 1 490 65 view .LVU394
 1224 000a 7047     		bx	lr
 1225              	.L174:
 1226              		.align	2
 1227              	.L173:
 1228 000c 00000000 		.word	.LANCHOR7
 1229              		.cfi_endproc
 1230              	.LFE291:
 1232              		.global	mk_wheel_time_to_max
 1233              		.global	mk_wheel_max_speed
 1234              		.global	mk_wheel_interval
 1235              		.global	mk_wheel_delay
 1236              		.global	mk_time_to_max
 1237              		.global	mk_max_speed
 1238              		.global	mk_interval
 1239              		.global	mk_delay
 1240              		.section	.bss.last_timer_c,"aw",%nobits
 1241              		.align	1
 1242              		.set	.LANCHOR8,. + 0
 1245              	last_timer_c:
 1246 0000 0000     		.space	2
 1247              		.section	.bss.last_timer_w,"aw",%nobits
 1248              		.align	1
 1249              		.set	.LANCHOR9,. + 0
 1252              	last_timer_w:
 1253 0000 0000     		.space	2
 1254              		.section	.bss.mouse_report,"aw",%nobits
 1255              		.set	.LANCHOR7,. + 0
 1258              	mouse_report:
 1259 0000 00000000 		.space	6
 1259      0000
 1260              		.section	.bss.mousekey_accel,"aw",%nobits
 1261              		.set	.LANCHOR0,. + 0
 1264              	mousekey_accel:
 1265 0000 00       		.space	1
 1266              		.section	.bss.mousekey_repeat,"aw",%nobits
 1267              		.set	.LANCHOR2,. + 0
 1270              	mousekey_repeat:
 1271 0000 00       		.space	1
 1272              		.section	.bss.mousekey_wheel_repeat,"aw",%nobits
 1273              		.set	.LANCHOR5,. + 0
 1276              	mousekey_wheel_repeat:
 1277 0000 00       		.space	1
 1278              		.section	.data.mk_delay,"aw"
 1279              		.set	.LANCHOR11,. + 0
 1282              	mk_delay:
 1283 0000 1E       		.byte	30
 1284              		.section	.data.mk_interval,"aw"
 1285              		.set	.LANCHOR10,. + 0
 1288              	mk_interval:
 1289 0000 32       		.byte	50
 1290              		.section	.data.mk_max_speed,"aw"
 1291              		.set	.LANCHOR1,. + 0
 1294              	mk_max_speed:
 1295 0000 0A       		.byte	10
 1296              		.section	.data.mk_time_to_max,"aw"
 1297              		.set	.LANCHOR3,. + 0
 1300              	mk_time_to_max:
 1301 0000 14       		.byte	20
 1302              		.section	.data.mk_wheel_delay,"aw"
 1303              		.set	.LANCHOR13,. + 0
 1306              	mk_wheel_delay:
 1307 0000 1E       		.byte	30
 1308              		.section	.data.mk_wheel_interval,"aw"
 1309              		.set	.LANCHOR12,. + 0
 1312              	mk_wheel_interval:
 1313 0000 64       		.byte	100
 1314              		.section	.data.mk_wheel_max_speed,"aw"
 1315              		.set	.LANCHOR4,. + 0
 1318              	mk_wheel_max_speed:
 1319 0000 08       		.byte	8
 1320              		.section	.data.mk_wheel_time_to_max,"aw"
 1321              		.set	.LANCHOR6,. + 0
 1324              	mk_wheel_time_to_max:
 1325 0000 28       		.byte	40
 1326              		.text
 1327              	.Letext0:
 1328              		.file 2 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 1329              		.file 3 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 1330              		.file 4 "tmk_core/common/report.h"
 1331              		.file 5 "quantum/logging/debug.h"
 1332              		.file 6 "quantum/mousekey.h"
 1333              		.file 7 "tmk_core/common/timer.h"
 1334              		.file 8 "tmk_core/common/host.h"
 1335              		.file 9 "tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 mousekey.c
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:18     .text.move_unit:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:25     .text.move_unit:0000000000000000 move_unit
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:144    .text.move_unit:0000000000000068 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:152    .text.wheel_unit:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:158    .text.wheel_unit:0000000000000000 wheel_unit
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:265    .text.wheel_unit:0000000000000058 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:273    .text.mousekey_on:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:280    .text.mousekey_on:0000000000000000 mousekey_on
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:473    .text.mousekey_on:00000000000000b4 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:479    .text.mousekey_off:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:486    .text.mousekey_off:0000000000000000 mousekey_off
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:706    .text.mousekey_off:00000000000000dc $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:714    .text.mousekey_send:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:721    .text.mousekey_send:0000000000000000 mousekey_send
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:790    .text.mousekey_send:000000000000002c $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:797    .text.mousekey_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:804    .text.mousekey_task:0000000000000000 mousekey_task
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1143   .text.mousekey_task:0000000000000160 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1156   .text.mousekey_clear:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1163   .text.mousekey_clear:0000000000000000 mousekey_clear
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1193   .text.mousekey_clear:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1201   .text.mousekey_get_report:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1208   .text.mousekey_get_report:0000000000000000 mousekey_get_report
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1228   .text.mousekey_get_report:000000000000000c $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1324   .data.mk_wheel_time_to_max:0000000000000000 mk_wheel_time_to_max
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1318   .data.mk_wheel_max_speed:0000000000000000 mk_wheel_max_speed
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1312   .data.mk_wheel_interval:0000000000000000 mk_wheel_interval
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1306   .data.mk_wheel_delay:0000000000000000 mk_wheel_delay
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1300   .data.mk_time_to_max:0000000000000000 mk_time_to_max
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1294   .data.mk_max_speed:0000000000000000 mk_max_speed
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1288   .data.mk_interval:0000000000000000 mk_interval
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1282   .data.mk_delay:0000000000000000 mk_delay
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1241   .bss.last_timer_c:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1245   .bss.last_timer_c:0000000000000000 last_timer_c
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1248   .bss.last_timer_w:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1252   .bss.last_timer_w:0000000000000000 last_timer_w
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1258   .bss.mouse_report:0000000000000000 mouse_report
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1259   .bss.mouse_report:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1264   .bss.mousekey_accel:0000000000000000 mousekey_accel
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1265   .bss.mousekey_accel:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1270   .bss.mousekey_repeat:0000000000000000 mousekey_repeat
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1271   .bss.mousekey_repeat:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1276   .bss.mousekey_wheel_repeat:0000000000000000 mousekey_wheel_repeat
C:\Users\lhanj\AppData\Local\Temp\ccHlgpKs.s:1277   .bss.mousekey_wheel_repeat:0000000000000000 $d

UNDEFINED SYMBOLS
timer_read
host_mouse_send
timer_elapsed
