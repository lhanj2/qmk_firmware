   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"rgb_matrix.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.sqrt16,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	sqrt16:
  26              	.LVL0:
  27              	.LFB320:
  28              		.file 1 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 111:./lib/lib8tion/math8.h **** #else
 112:./lib/lib8tion/math8.h **** #error "No implementation for qsub8 available."
 113:./lib/lib8tion/math8.h **** #endif
 114:./lib/lib8tion/math8.h **** }
 115:./lib/lib8tion/math8.h **** 
 116:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 117:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t add8( uint8_t i, uint8_t j)
 118:./lib/lib8tion/math8.h **** {
 119:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 120:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 121:./lib/lib8tion/math8.h ****     return t;
 122:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 123:./lib/lib8tion/math8.h ****     // Add j to i, period.
 124:./lib/lib8tion/math8.h ****     asm volatile( "add %0, %1" : "+a" (i) : "a" (j));
 125:./lib/lib8tion/math8.h ****     return i;
 126:./lib/lib8tion/math8.h **** #else
 127:./lib/lib8tion/math8.h **** #error "No implementation for add8 available."
 128:./lib/lib8tion/math8.h **** #endif
 129:./lib/lib8tion/math8.h **** }
 130:./lib/lib8tion/math8.h **** 
 131:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 132:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t add8to16( uint8_t i, uint16_t j)
 133:./lib/lib8tion/math8.h **** {
 134:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 135:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 136:./lib/lib8tion/math8.h ****     return t;
 137:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 138:./lib/lib8tion/math8.h ****     // Add i(one byte) to j(two bytes)
 139:./lib/lib8tion/math8.h ****     asm volatile( "add %A[j], %[i]              \n\t"
 140:./lib/lib8tion/math8.h ****                   "adc %B[j], __zero_reg__      \n\t"
 141:./lib/lib8tion/math8.h ****                  : [j] "+a" (j)
 142:./lib/lib8tion/math8.h ****                  : [i] "a"  (i)
 143:./lib/lib8tion/math8.h ****                  );
 144:./lib/lib8tion/math8.h ****     return i;
 145:./lib/lib8tion/math8.h **** #else
 146:./lib/lib8tion/math8.h **** #error "No implementation for add8to16 available."
 147:./lib/lib8tion/math8.h **** #endif
 148:./lib/lib8tion/math8.h **** }
 149:./lib/lib8tion/math8.h **** 
 150:./lib/lib8tion/math8.h **** 
 151:./lib/lib8tion/math8.h **** /// subtract one byte from another, 8-bit result
 152:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t sub8( uint8_t i, uint8_t j)
 153:./lib/lib8tion/math8.h **** {
 154:./lib/lib8tion/math8.h **** #if SUB8_C == 1
 155:./lib/lib8tion/math8.h ****     int16_t t = i - j;
 156:./lib/lib8tion/math8.h ****     return t;
 157:./lib/lib8tion/math8.h **** #elif SUB8_AVRASM == 1
 158:./lib/lib8tion/math8.h ****     // Subtract j from i, period.
 159:./lib/lib8tion/math8.h ****     asm volatile( "sub %0, %1" : "+a" (i) : "a" (j));
 160:./lib/lib8tion/math8.h ****     return i;
 161:./lib/lib8tion/math8.h **** #else
 162:./lib/lib8tion/math8.h **** #error "No implementation for sub8 available."
 163:./lib/lib8tion/math8.h **** #endif
 164:./lib/lib8tion/math8.h **** }
 165:./lib/lib8tion/math8.h **** 
 166:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 167:./lib/lib8tion/math8.h **** ///       8-bit integer values (uint8_t).
 168:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg8(20,41) = 30
 169:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t avg8( uint8_t i, uint8_t j)
 170:./lib/lib8tion/math8.h **** {
 171:./lib/lib8tion/math8.h **** #if AVG8_C == 1
 172:./lib/lib8tion/math8.h ****     return (i + j) >> 1;
 173:./lib/lib8tion/math8.h **** #elif AVG8_AVRASM == 1
 174:./lib/lib8tion/math8.h ****     asm volatile(
 175:./lib/lib8tion/math8.h ****          /* First, add j to i, 9th bit overflows into C flag */
 176:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
 177:./lib/lib8tion/math8.h ****          /* Divide by two, moving C flag into high 8th bit */
 178:./lib/lib8tion/math8.h ****          "ror %0        \n\t"
 179:./lib/lib8tion/math8.h ****          : "+a" (i)
 180:./lib/lib8tion/math8.h ****          : "a"  (j) );
 181:./lib/lib8tion/math8.h ****     return i;
 182:./lib/lib8tion/math8.h **** #else
 183:./lib/lib8tion/math8.h **** #error "No implementation for avg8 available."
 184:./lib/lib8tion/math8.h **** #endif
 185:./lib/lib8tion/math8.h **** }
 186:./lib/lib8tion/math8.h **** 
 187:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 188:./lib/lib8tion/math8.h **** ///       16-bit integer values (uint16_t).
 189:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg16(20,41) = 30
 190:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t avg16( uint16_t i, uint16_t j)
 191:./lib/lib8tion/math8.h **** {
 192:./lib/lib8tion/math8.h **** #if AVG16_C == 1
 193:./lib/lib8tion/math8.h ****     return (uint32_t)((uint32_t)(i) + (uint32_t)(j)) >> 1;
 194:./lib/lib8tion/math8.h **** #elif AVG16_AVRASM == 1
 195:./lib/lib8tion/math8.h ****     asm volatile(
 196:./lib/lib8tion/math8.h ****                  /* First, add jLo (heh) to iLo, 9th bit overflows into C flag */
 197:./lib/lib8tion/math8.h ****                  "add %A[i], %A[j]    \n\t"
 198:./lib/lib8tion/math8.h ****                  /* Now, add C + jHi to iHi, 17th bit overflows into C flag */
 199:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]    \n\t"
 200:./lib/lib8tion/math8.h ****                  /* Divide iHi by two, moving C flag into high 16th bit, old 9th bit now in C */
 201:./lib/lib8tion/math8.h ****                  "ror %B[i]        \n\t"
 202:./lib/lib8tion/math8.h ****                  /* Divide iLo by two, moving C flag into high 8th bit */
 203:./lib/lib8tion/math8.h ****                  "ror %A[i]        \n\t"
 204:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 205:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 206:./lib/lib8tion/math8.h ****     return i;
 207:./lib/lib8tion/math8.h **** #else
 208:./lib/lib8tion/math8.h **** #error "No implementation for avg16 available."
 209:./lib/lib8tion/math8.h **** #endif
 210:./lib/lib8tion/math8.h **** }
 211:./lib/lib8tion/math8.h **** 
 212:./lib/lib8tion/math8.h **** 
 213:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 7-bit
 214:./lib/lib8tion/math8.h **** ///       integers (int8_t)
 215:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 216:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 217:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t avg7( int8_t i, int8_t j)
 218:./lib/lib8tion/math8.h **** {
 219:./lib/lib8tion/math8.h **** #if AVG7_C == 1
 220:./lib/lib8tion/math8.h ****     return ((i + j) >> 1) + (i & 0x1);
 221:./lib/lib8tion/math8.h **** #elif AVG7_AVRASM == 1
 222:./lib/lib8tion/math8.h ****     asm volatile(
 223:./lib/lib8tion/math8.h ****                  "asr %1        \n\t"
 224:./lib/lib8tion/math8.h ****                  "asr %0        \n\t"
 225:./lib/lib8tion/math8.h ****                  "adc %0, %1    \n\t"
 226:./lib/lib8tion/math8.h ****                  : "+a" (i)
 227:./lib/lib8tion/math8.h ****                  : "a"  (j) );
 228:./lib/lib8tion/math8.h ****     return i;
 229:./lib/lib8tion/math8.h **** #else
 230:./lib/lib8tion/math8.h **** #error "No implementation for avg7 available."
 231:./lib/lib8tion/math8.h **** #endif
 232:./lib/lib8tion/math8.h **** }
 233:./lib/lib8tion/math8.h **** 
 234:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 15-bit
 235:./lib/lib8tion/math8.h **** ///       integers (int16_t)
 236:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 237:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 238:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int16_t avg15( int16_t i, int16_t j)
 239:./lib/lib8tion/math8.h **** {
 240:./lib/lib8tion/math8.h **** #if AVG15_C == 1
 241:./lib/lib8tion/math8.h ****     return ((int32_t)((int32_t)(i) + (int32_t)(j)) >> 1) + (i & 0x1);
 242:./lib/lib8tion/math8.h **** #elif AVG15_AVRASM == 1
 243:./lib/lib8tion/math8.h ****     asm volatile(
 244:./lib/lib8tion/math8.h ****                  /* first divide j by 2, throwing away lowest bit */
 245:./lib/lib8tion/math8.h ****                  "asr %B[j]          \n\t"
 246:./lib/lib8tion/math8.h ****                  "ror %A[j]          \n\t"
 247:./lib/lib8tion/math8.h ****                  /* now divide i by 2, with lowest bit going into C */
 248:./lib/lib8tion/math8.h ****                  "asr %B[i]          \n\t"
 249:./lib/lib8tion/math8.h ****                  "ror %A[i]          \n\t"
 250:./lib/lib8tion/math8.h ****                  /* add j + C to i */
 251:./lib/lib8tion/math8.h ****                  "adc %A[i], %A[j]   \n\t"
 252:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]   \n\t"
 253:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 254:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 255:./lib/lib8tion/math8.h ****     return i;
 256:./lib/lib8tion/math8.h **** #else
 257:./lib/lib8tion/math8.h **** #error "No implementation for avg15 available."
 258:./lib/lib8tion/math8.h **** #endif
 259:./lib/lib8tion/math8.h **** }
 260:./lib/lib8tion/math8.h **** 
 261:./lib/lib8tion/math8.h **** 
 262:./lib/lib8tion/math8.h **** ///       Calculate the remainder of one unsigned 8-bit
 263:./lib/lib8tion/math8.h **** ///       value divided by anoter, aka A % M.
 264:./lib/lib8tion/math8.h **** ///       Implemented by repeated subtraction, which is
 265:./lib/lib8tion/math8.h **** ///       very compact, and very fast if A is 'probably'
 266:./lib/lib8tion/math8.h **** ///       less than M.  If A is a large multiple of M,
 267:./lib/lib8tion/math8.h **** ///       the loop has to execute multiple times.  However,
 268:./lib/lib8tion/math8.h **** ///       even in that case, the loop is only two
 269:./lib/lib8tion/math8.h **** ///       instructions long on AVR, i.e., quick.
 270:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mod8( uint8_t a, uint8_t m)
 271:./lib/lib8tion/math8.h **** {
 272:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 273:./lib/lib8tion/math8.h ****     asm volatile (
 274:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 275:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 276:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 277:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 278:./lib/lib8tion/math8.h ****                   : [m] "r"  (m)
 279:./lib/lib8tion/math8.h ****                   );
 280:./lib/lib8tion/math8.h **** #else
 281:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 282:./lib/lib8tion/math8.h **** #endif
 283:./lib/lib8tion/math8.h ****     return a;
 284:./lib/lib8tion/math8.h **** }
 285:./lib/lib8tion/math8.h **** 
 286:./lib/lib8tion/math8.h **** ///          Add two numbers, and calculate the modulo
 287:./lib/lib8tion/math8.h **** ///          of the sum and a third number, M.
 288:./lib/lib8tion/math8.h **** ///          In other words, it returns (A+B) % M.
 289:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 290:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 291:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 292:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 293:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 294:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 295:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 296:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 297:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t addmod8( uint8_t a, uint8_t b, uint8_t m)
 298:./lib/lib8tion/math8.h **** {
 299:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 300:./lib/lib8tion/math8.h ****     asm volatile (
 301:./lib/lib8tion/math8.h ****                   "       add %[a],%[b]    \n\t"
 302:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 303:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 304:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 305:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 306:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 307:./lib/lib8tion/math8.h ****                   );
 308:./lib/lib8tion/math8.h **** #else
 309:./lib/lib8tion/math8.h ****     a += b;
 310:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 311:./lib/lib8tion/math8.h **** #endif
 312:./lib/lib8tion/math8.h ****     return a;
 313:./lib/lib8tion/math8.h **** }
 314:./lib/lib8tion/math8.h **** 
 315:./lib/lib8tion/math8.h **** ///          Subtract two numbers, and calculate the modulo
 316:./lib/lib8tion/math8.h **** ///          of the difference and a third number, M.
 317:./lib/lib8tion/math8.h **** ///          In other words, it returns (A-B) % M.
 318:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 319:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 320:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 321:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 322:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 323:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 324:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 325:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 326:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t submod8( uint8_t a, uint8_t b, uint8_t m)
 327:./lib/lib8tion/math8.h **** {
 328:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 329:./lib/lib8tion/math8.h ****     asm volatile (
 330:./lib/lib8tion/math8.h ****                   "       sub %[a],%[b]    \n\t"
 331:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 332:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 333:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 334:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 335:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 336:./lib/lib8tion/math8.h ****                   );
 337:./lib/lib8tion/math8.h **** #else
 338:./lib/lib8tion/math8.h ****     a -= b;
 339:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 340:./lib/lib8tion/math8.h **** #endif
 341:./lib/lib8tion/math8.h ****     return a;
 342:./lib/lib8tion/math8.h **** }
 343:./lib/lib8tion/math8.h **** 
 344:./lib/lib8tion/math8.h **** /// 8x8 bit multiplication, with 8 bit result
 345:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mul8( uint8_t i, uint8_t j)
 346:./lib/lib8tion/math8.h **** {
 347:./lib/lib8tion/math8.h **** #if MUL8_C == 1
 348:./lib/lib8tion/math8.h ****     return ((uint16_t)i * (uint16_t)(j) ) & 0xFF;
 349:./lib/lib8tion/math8.h **** #elif MUL8_AVRASM == 1
 350:./lib/lib8tion/math8.h ****     asm volatile(
 351:./lib/lib8tion/math8.h ****          /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 352:./lib/lib8tion/math8.h ****          "mul %0, %1          \n\t"
 353:./lib/lib8tion/math8.h ****          /* Extract the LOW 8-bits (r0) */
 354:./lib/lib8tion/math8.h ****          "mov %0, r0          \n\t"
 355:./lib/lib8tion/math8.h ****          /* Restore r1 to "0"; it's expected to always be that */
 356:./lib/lib8tion/math8.h ****          "clr __zero_reg__    \n\t"
 357:./lib/lib8tion/math8.h ****          : "+a" (i)
 358:./lib/lib8tion/math8.h ****          : "a"  (j)
 359:./lib/lib8tion/math8.h ****          : "r0", "r1");
 360:./lib/lib8tion/math8.h **** 
 361:./lib/lib8tion/math8.h ****     return i;
 362:./lib/lib8tion/math8.h **** #else
 363:./lib/lib8tion/math8.h **** #error "No implementation for mul8 available."
 364:./lib/lib8tion/math8.h **** #endif
 365:./lib/lib8tion/math8.h **** }
 366:./lib/lib8tion/math8.h **** 
 367:./lib/lib8tion/math8.h **** 
 368:./lib/lib8tion/math8.h **** /// saturating 8x8 bit multiplication, with 8 bit result
 369:./lib/lib8tion/math8.h **** /// @returns the product of i * j, capping at 0xFF
 370:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qmul8( uint8_t i, uint8_t j)
 371:./lib/lib8tion/math8.h **** {
 372:./lib/lib8tion/math8.h **** #if QMUL8_C == 1
 373:./lib/lib8tion/math8.h ****     int p = ((uint16_t)i * (uint16_t)(j) );
 374:./lib/lib8tion/math8.h ****     if( p > 255) p = 255;
 375:./lib/lib8tion/math8.h ****     return p;
 376:./lib/lib8tion/math8.h **** #elif QMUL8_AVRASM == 1
 377:./lib/lib8tion/math8.h ****     asm volatile(
 378:./lib/lib8tion/math8.h ****                  /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 379:./lib/lib8tion/math8.h ****                  "  mul %0, %1          \n\t"
 380:./lib/lib8tion/math8.h ****                  /* If high byte of result is zero, all is well. */
 381:./lib/lib8tion/math8.h ****                  "  tst r1              \n\t"
 382:./lib/lib8tion/math8.h ****                  "  breq Lnospill_%=    \n\t"
 383:./lib/lib8tion/math8.h ****                  /* If high byte of result > 0, saturate low byte to 0xFF */
 384:./lib/lib8tion/math8.h ****                  "  ldi %0,0xFF         \n\t"
 385:./lib/lib8tion/math8.h ****                  "  rjmp Ldone_%=       \n\t"
 386:./lib/lib8tion/math8.h ****                  "Lnospill_%=:          \n\t"
 387:./lib/lib8tion/math8.h ****                  /* Extract the LOW 8-bits (r0) */
 388:./lib/lib8tion/math8.h ****                  "  mov %0, r0          \n\t"
 389:./lib/lib8tion/math8.h ****                  "Ldone_%=:             \n\t"
 390:./lib/lib8tion/math8.h ****                  /* Restore r1 to "0"; it's expected to always be that */
 391:./lib/lib8tion/math8.h ****                  "  clr __zero_reg__    \n\t"
 392:./lib/lib8tion/math8.h ****                  : "+a" (i)
 393:./lib/lib8tion/math8.h ****                  : "a"  (j)
 394:./lib/lib8tion/math8.h ****                  : "r0", "r1");
 395:./lib/lib8tion/math8.h **** 
 396:./lib/lib8tion/math8.h ****     return i;
 397:./lib/lib8tion/math8.h **** #else
 398:./lib/lib8tion/math8.h **** #error "No implementation for qmul8 available."
 399:./lib/lib8tion/math8.h **** #endif
 400:./lib/lib8tion/math8.h **** }
 401:./lib/lib8tion/math8.h **** 
 402:./lib/lib8tion/math8.h **** 
 403:./lib/lib8tion/math8.h **** /// take abs() of a signed 8-bit uint8_t
 404:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t abs8( int8_t i)
 405:./lib/lib8tion/math8.h **** {
 406:./lib/lib8tion/math8.h **** #if ABS8_C == 1
 407:./lib/lib8tion/math8.h ****     if( i < 0) i = -i;
 408:./lib/lib8tion/math8.h ****     return i;
 409:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 410:./lib/lib8tion/math8.h **** 
 411:./lib/lib8tion/math8.h **** 
 412:./lib/lib8tion/math8.h ****     asm volatile(
 413:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 414:./lib/lib8tion/math8.h ****          "sbrc %0, 7 \n"
 415:./lib/lib8tion/math8.h **** 
 416:./lib/lib8tion/math8.h ****          /* Negate the value */
 417:./lib/lib8tion/math8.h ****          "neg %0     \n"
 418:./lib/lib8tion/math8.h **** 
 419:./lib/lib8tion/math8.h ****          : "+r" (i) : "r" (i) );
 420:./lib/lib8tion/math8.h ****     return i;
 421:./lib/lib8tion/math8.h **** #else
 422:./lib/lib8tion/math8.h **** #error "No implementation for abs8 available."
 423:./lib/lib8tion/math8.h **** #endif
 424:./lib/lib8tion/math8.h **** }
 425:./lib/lib8tion/math8.h **** 
 426:./lib/lib8tion/math8.h **** ///         square root for 16-bit integers
 427:./lib/lib8tion/math8.h **** ///         About three times faster and five times smaller
 428:./lib/lib8tion/math8.h **** ///         than Arduino's general sqrt on AVR.
 429:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t sqrt16(uint16_t x)
 430:./lib/lib8tion/math8.h **** {
  29              		.loc 1 430 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 431:./lib/lib8tion/math8.h ****     if( x <= 1) {
  33              		.loc 1 431 5 view .LVU1
  34              		.loc 1 431 7 is_stmt 0 view .LVU2
  35 0000 0128     		cmp	r0, #1
 430:./lib/lib8tion/math8.h ****     if( x <= 1) {
  36              		.loc 1 430 1 view .LVU3
  37 0002 30B5     		push	{r4, r5, lr}
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 431 7 view .LVU4
  43 0004 01D8     		bhi	.L2
  44              	.LVL1:
  45              	.L11:
 432:./lib/lib8tion/math8.h ****         return x;
 433:./lib/lib8tion/math8.h ****     }
 434:./lib/lib8tion/math8.h **** 
 435:./lib/lib8tion/math8.h ****     uint8_t low = 1; // lower bound
 436:./lib/lib8tion/math8.h ****     uint8_t hi, mid;
 437:./lib/lib8tion/math8.h **** 
 438:./lib/lib8tion/math8.h ****     if( x > 7904) {
 439:./lib/lib8tion/math8.h ****         hi = 255;
 440:./lib/lib8tion/math8.h ****     } else {
 441:./lib/lib8tion/math8.h ****         hi = (x >> 5) + 8; // initial estimate for upper bound
 442:./lib/lib8tion/math8.h ****     }
 443:./lib/lib8tion/math8.h **** 
 444:./lib/lib8tion/math8.h ****     do {
 445:./lib/lib8tion/math8.h ****         mid = (low + hi) >> 1;
 446:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
 447:./lib/lib8tion/math8.h ****             hi = mid - 1;
 448:./lib/lib8tion/math8.h ****         } else {
 449:./lib/lib8tion/math8.h ****             if( mid == 255) {
 450:./lib/lib8tion/math8.h ****                 return 255;
 451:./lib/lib8tion/math8.h ****             }
 452:./lib/lib8tion/math8.h ****             low = mid + 1;
 453:./lib/lib8tion/math8.h ****         }
 454:./lib/lib8tion/math8.h ****     } while (hi >= low);
 455:./lib/lib8tion/math8.h **** 
 456:./lib/lib8tion/math8.h ****     return low - 1;
  46              		.loc 1 456 16 view .LVU5
  47 0006 C0B2     		uxtb	r0, r0
  48              	.L3:
 457:./lib/lib8tion/math8.h **** }
  49              		.loc 1 457 1 view .LVU6
  50 0008 30BD     		pop	{r4, r5, pc}
  51              	.LVL2:
  52              	.L2:
 435:./lib/lib8tion/math8.h ****     uint8_t hi, mid;
  53              		.loc 1 435 5 is_stmt 1 view .LVU7
 436:./lib/lib8tion/math8.h **** 
  54              		.loc 1 436 5 view .LVU8
 438:./lib/lib8tion/math8.h ****         hi = 255;
  55              		.loc 1 438 5 view .LVU9
 438:./lib/lib8tion/math8.h ****         hi = 255;
  56              		.loc 1 438 7 is_stmt 0 view .LVU10
  57 000a B0F5F75F 		cmp	r0, #7904
 441:./lib/lib8tion/math8.h ****     }
  58              		.loc 1 441 9 is_stmt 1 view .LVU11
 441:./lib/lib8tion/math8.h ****     }
  59              		.loc 1 441 23 is_stmt 0 view .LVU12
  60 000e 9DBF     		ittte	ls
  61 0010 4209     		lsrls	r2, r0, #5
 441:./lib/lib8tion/math8.h ****     }
  62              		.loc 1 441 12 view .LVU13
  63 0012 0832     		addls	r2, r2, #8
  64 0014 D2B2     		uxtbls	r2, r2
  65              	.LVL3:
 439:./lib/lib8tion/math8.h ****     } else {
  66              		.loc 1 439 12 view .LVU14
  67 0016 FF22     		movhi	r2, #255
  68              	.LVL4:
 439:./lib/lib8tion/math8.h ****     } else {
  69              		.loc 1 439 12 view .LVU15
  70 0018 0124     		movs	r4, #1
  71              	.LVL5:
  72              	.L7:
 444:./lib/lib8tion/math8.h ****         mid = (low + hi) >> 1;
  73              		.loc 1 444 5 is_stmt 1 view .LVU16
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  74              		.loc 1 445 9 view .LVU17
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  75              		.loc 1 445 20 is_stmt 0 view .LVU18
  76 001a A318     		adds	r3, r4, r2
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  77              		.loc 1 445 26 view .LVU19
  78 001c 5910     		asrs	r1, r3, #1
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  79              		.loc 1 445 13 view .LVU20
  80 001e C3F34705 		ubfx	r5, r3, #1, #8
  81              	.LVL6:
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  82              		.loc 1 446 9 is_stmt 1 view .LVU21
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  83              		.loc 1 446 13 is_stmt 0 view .LVU22
  84 0022 C3F34F03 		ubfx	r3, r3, #1, #16
  85 0026 13FB03F3 		smulbb	r3, r3, r3
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  86              		.loc 1 446 12 view .LVU23
  87 002a 9BB2     		uxth	r3, r3
  88 002c 8342     		cmp	r3, r0
  89 002e 05D9     		bls	.L5
 447:./lib/lib8tion/math8.h ****         } else {
  90              		.loc 1 447 13 is_stmt 1 view .LVU24
 447:./lib/lib8tion/math8.h ****         } else {
  91              		.loc 1 447 16 is_stmt 0 view .LVU25
  92 0030 6A1E     		subs	r2, r5, #1
  93              	.LVL7:
 447:./lib/lib8tion/math8.h ****         } else {
  94              		.loc 1 447 16 view .LVU26
  95 0032 D2B2     		uxtb	r2, r2
  96              	.LVL8:
  97              	.L6:
 454:./lib/lib8tion/math8.h **** 
  98              		.loc 1 454 13 is_stmt 1 view .LVU27
 454:./lib/lib8tion/math8.h **** 
  99              		.loc 1 454 5 is_stmt 0 view .LVU28
 100 0034 9442     		cmp	r4, r2
 101 0036 F0D9     		bls	.L7
 456:./lib/lib8tion/math8.h **** }
 102              		.loc 1 456 5 is_stmt 1 view .LVU29
 456:./lib/lib8tion/math8.h **** }
 103              		.loc 1 456 16 is_stmt 0 view .LVU30
 104 0038 601E     		subs	r0, r4, #1
 105              	.LVL9:
 456:./lib/lib8tion/math8.h **** }
 106              		.loc 1 456 16 view .LVU31
 107 003a E4E7     		b	.L11
 108              	.LVL10:
 109              	.L5:
 449:./lib/lib8tion/math8.h ****                 return 255;
 110              		.loc 1 449 13 is_stmt 1 view .LVU32
 449:./lib/lib8tion/math8.h ****                 return 255;
 111              		.loc 1 449 15 is_stmt 0 view .LVU33
 112 003c FF29     		cmp	r1, #255
 113 003e 02D0     		beq	.L9
 452:./lib/lib8tion/math8.h ****         }
 114              		.loc 1 452 13 is_stmt 1 view .LVU34
 452:./lib/lib8tion/math8.h ****         }
 115              		.loc 1 452 17 is_stmt 0 view .LVU35
 116 0040 6C1C     		adds	r4, r5, #1
 117              	.LVL11:
 452:./lib/lib8tion/math8.h ****         }
 118              		.loc 1 452 17 view .LVU36
 119 0042 E4B2     		uxtb	r4, r4
 120              	.LVL12:
 452:./lib/lib8tion/math8.h ****         }
 121              		.loc 1 452 17 view .LVU37
 122 0044 F6E7     		b	.L6
 123              	.L9:
 450:./lib/lib8tion/math8.h ****             }
 124              		.loc 1 450 24 view .LVU38
 125 0046 0846     		mov	r0, r1
 126              	.LVL13:
 450:./lib/lib8tion/math8.h ****             }
 127              		.loc 1 450 24 view .LVU39
 128 0048 DEE7     		b	.L3
 129              		.cfi_endproc
 130              	.LFE320:
 132              		.section	.text.sin8_C,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	sin8_C:
 140              	.LVL14:
 141              	.LFB335:
 142              		.file 2 "./lib/lib8tion/trig8.h"
   1:./lib/lib8tion/trig8.h **** #ifndef __INC_LIB8TION_TRIG_H
   2:./lib/lib8tion/trig8.h **** #define __INC_LIB8TION_TRIG_H
   3:./lib/lib8tion/trig8.h **** 
   4:./lib/lib8tion/trig8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/trig8.h **** 
   6:./lib/lib8tion/trig8.h **** ///@defgroup Trig Fast trig functions
   7:./lib/lib8tion/trig8.h **** /// Fast 8 and 16-bit approximations of sin(x) and cos(x).
   8:./lib/lib8tion/trig8.h **** ///        Don't use these approximations for calculating the
   9:./lib/lib8tion/trig8.h **** ///        trajectory of a rocket to Mars, but they're great
  10:./lib/lib8tion/trig8.h **** ///        for art projects and LED displays.
  11:./lib/lib8tion/trig8.h **** ///
  12:./lib/lib8tion/trig8.h **** ///        On Arduino/AVR, the 16-bit approximation is more than
  13:./lib/lib8tion/trig8.h **** ///        10X faster than floating point sin(x) and cos(x), while
  14:./lib/lib8tion/trig8.h **** /// the 8-bit approximation is more than 20X faster.
  15:./lib/lib8tion/trig8.h **** ///@{
  16:./lib/lib8tion/trig8.h **** 
  17:./lib/lib8tion/trig8.h **** #if defined(__AVR__)
  18:./lib/lib8tion/trig8.h **** #define sin16 sin16_avr
  19:./lib/lib8tion/trig8.h **** #else
  20:./lib/lib8tion/trig8.h **** #define sin16 sin16_C
  21:./lib/lib8tion/trig8.h **** #endif
  22:./lib/lib8tion/trig8.h **** 
  23:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  24:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  25:./lib/lib8tion/trig8.h **** ///
  26:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  27:./lib/lib8tion/trig8.h **** ///
  28:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  29:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  30:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_avr( uint16_t theta )
  31:./lib/lib8tion/trig8.h **** {
  32:./lib/lib8tion/trig8.h ****     static const uint8_t data[] =
  33:./lib/lib8tion/trig8.h ****     { 0,         0,         49, 0, 6393%256,   6393/256, 48, 0,
  34:./lib/lib8tion/trig8.h ****       12539%256, 12539/256, 44, 0, 18204%256, 18204/256, 38, 0,
  35:./lib/lib8tion/trig8.h ****       23170%256, 23170/256, 31, 0, 27245%256, 27245/256, 23, 0,
  36:./lib/lib8tion/trig8.h ****       30273%256, 30273/256, 14, 0, 32137%256, 32137/256,  4 /*,0*/ };
  37:./lib/lib8tion/trig8.h **** 
  38:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF);
  39:./lib/lib8tion/trig8.h **** 
  40:./lib/lib8tion/trig8.h ****     // AVR doesn't have a multi-bit shift instruction,
  41:./lib/lib8tion/trig8.h ****     // so if we say "offset >>= 3", gcc makes a tiny loop.
  42:./lib/lib8tion/trig8.h ****     // Inserting empty volatile statements between each
  43:./lib/lib8tion/trig8.h ****     // bit shift forces gcc to unroll the loop.
  44:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..8191
  45:./lib/lib8tion/trig8.h ****     asm volatile("");
  46:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..4095
  47:./lib/lib8tion/trig8.h ****     asm volatile("");
  48:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..2047
  49:./lib/lib8tion/trig8.h **** 
  50:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  51:./lib/lib8tion/trig8.h **** 
  52:./lib/lib8tion/trig8.h ****     uint8_t sectionX4;
  53:./lib/lib8tion/trig8.h ****     sectionX4 = offset / 256;
  54:./lib/lib8tion/trig8.h ****     sectionX4 *= 4;
  55:./lib/lib8tion/trig8.h **** 
  56:./lib/lib8tion/trig8.h ****     uint8_t m;
  57:./lib/lib8tion/trig8.h **** 
  58:./lib/lib8tion/trig8.h ****     union {
  59:./lib/lib8tion/trig8.h ****         uint16_t b;
  60:./lib/lib8tion/trig8.h ****         struct {
  61:./lib/lib8tion/trig8.h ****             uint8_t blo;
  62:./lib/lib8tion/trig8.h ****             uint8_t bhi;
  63:./lib/lib8tion/trig8.h ****         };
  64:./lib/lib8tion/trig8.h ****     } u;
  65:./lib/lib8tion/trig8.h **** 
  66:./lib/lib8tion/trig8.h ****     //in effect u.b = blo + (256 * bhi);
  67:./lib/lib8tion/trig8.h ****     u.blo = data[ sectionX4 ];
  68:./lib/lib8tion/trig8.h ****     u.bhi = data[ sectionX4 + 1];
  69:./lib/lib8tion/trig8.h ****     m     = data[ sectionX4 + 2];
  70:./lib/lib8tion/trig8.h **** 
  71:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
  72:./lib/lib8tion/trig8.h **** 
  73:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
  74:./lib/lib8tion/trig8.h **** 
  75:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + u.b;
  76:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
  77:./lib/lib8tion/trig8.h **** 
  78:./lib/lib8tion/trig8.h ****     return y;
  79:./lib/lib8tion/trig8.h **** }
  80:./lib/lib8tion/trig8.h **** 
  81:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  82:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  83:./lib/lib8tion/trig8.h **** ///
  84:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  85:./lib/lib8tion/trig8.h **** ///
  86:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  87:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  88:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_C( uint16_t theta )
  89:./lib/lib8tion/trig8.h **** {
  90:./lib/lib8tion/trig8.h ****     static const uint16_t base[] =
  91:./lib/lib8tion/trig8.h ****     { 0, 6393, 12539, 18204, 23170, 27245, 30273, 32137 };
  92:./lib/lib8tion/trig8.h ****     static const uint8_t slope[] =
  93:./lib/lib8tion/trig8.h ****     { 49, 48, 44, 38, 31, 23, 14, 4 };
  94:./lib/lib8tion/trig8.h **** 
  95:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF) >> 3; // 0..2047
  96:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  97:./lib/lib8tion/trig8.h **** 
  98:./lib/lib8tion/trig8.h ****     uint8_t section = offset / 256; // 0..7
  99:./lib/lib8tion/trig8.h ****     uint16_t b   = base[section];
 100:./lib/lib8tion/trig8.h ****     uint8_t  m   = slope[section];
 101:./lib/lib8tion/trig8.h **** 
 102:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
 103:./lib/lib8tion/trig8.h **** 
 104:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
 105:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + b;
 106:./lib/lib8tion/trig8.h **** 
 107:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
 108:./lib/lib8tion/trig8.h **** 
 109:./lib/lib8tion/trig8.h ****     return y;
 110:./lib/lib8tion/trig8.h **** }
 111:./lib/lib8tion/trig8.h **** 
 112:./lib/lib8tion/trig8.h **** 
 113:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of cos(x). This approximation never varies more than
 114:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
 115:./lib/lib8tion/trig8.h **** ///
 116:./lib/lib8tion/trig8.h **** ///     float s = cos(x) * 32767.0;
 117:./lib/lib8tion/trig8.h **** ///
 118:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
 119:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
 120:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t cos16( uint16_t theta)
 121:./lib/lib8tion/trig8.h **** {
 122:./lib/lib8tion/trig8.h ****     return sin16( theta + 16384);
 123:./lib/lib8tion/trig8.h **** }
 124:./lib/lib8tion/trig8.h **** 
 125:./lib/lib8tion/trig8.h **** ///////////////////////////////////////////////////////////////////////
 126:./lib/lib8tion/trig8.h **** 
 127:./lib/lib8tion/trig8.h **** // sin8 & cos8
 128:./lib/lib8tion/trig8.h **** //        Fast 8-bit approximations of sin(x) & cos(x).
 129:./lib/lib8tion/trig8.h **** //        Input angle is an unsigned int from 0-255.
 130:./lib/lib8tion/trig8.h **** //        Output is an unsigned int from 0 to 255.
 131:./lib/lib8tion/trig8.h **** //
 132:./lib/lib8tion/trig8.h **** //        This approximation can vary to to 2%
 133:./lib/lib8tion/trig8.h **** //        from the floating point value you'd get by doing
 134:./lib/lib8tion/trig8.h **** //          float s = (sin( x ) * 128.0) + 128;
 135:./lib/lib8tion/trig8.h **** //
 136:./lib/lib8tion/trig8.h **** //        Don't use this approximation for calculating the
 137:./lib/lib8tion/trig8.h **** //        "real" trigonometric calculations, but it's great
 138:./lib/lib8tion/trig8.h **** //        for art projects and LED displays.
 139:./lib/lib8tion/trig8.h **** //
 140:./lib/lib8tion/trig8.h **** //        On Arduino/AVR, this approximation is more than
 141:./lib/lib8tion/trig8.h **** //        20X faster than floating point sin(x) and cos(x)
 142:./lib/lib8tion/trig8.h **** 
 143:./lib/lib8tion/trig8.h **** #if defined(__AVR__) && !defined(LIB8_ATTINY)
 144:./lib/lib8tion/trig8.h **** #define sin8 sin8_avr
 145:./lib/lib8tion/trig8.h **** #else
 146:./lib/lib8tion/trig8.h **** #define sin8 sin8_C
 147:./lib/lib8tion/trig8.h **** #endif
 148:./lib/lib8tion/trig8.h **** 
 149:./lib/lib8tion/trig8.h **** 
 150:./lib/lib8tion/trig8.h **** static const uint8_t b_m16_interleave[8] = { 0, 49, 49, 41, 90, 27, 117, 10 };
 151:./lib/lib8tion/trig8.h **** 
 152:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 153:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 154:./lib/lib8tion/trig8.h **** ///
 155:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 156:./lib/lib8tion/trig8.h **** ///
 157:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 158:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 159:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t  sin8_avr( uint8_t theta)
 160:./lib/lib8tion/trig8.h **** {
 161:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 162:./lib/lib8tion/trig8.h **** 
 163:./lib/lib8tion/trig8.h ****     asm volatile(
 164:./lib/lib8tion/trig8.h ****                  "sbrc %[theta],6         \n\t"
 165:./lib/lib8tion/trig8.h ****                  "com  %[offset]           \n\t"
 166:./lib/lib8tion/trig8.h ****                  : [theta] "+r" (theta), [offset] "+r" (offset)
 167:./lib/lib8tion/trig8.h ****                  );
 168:./lib/lib8tion/trig8.h **** 
 169:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 170:./lib/lib8tion/trig8.h **** 
 171:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 172:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 173:./lib/lib8tion/trig8.h **** 
 174:./lib/lib8tion/trig8.h ****     uint8_t m16; uint8_t b;
 175:./lib/lib8tion/trig8.h **** 
 176:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 177:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 178:./lib/lib8tion/trig8.h **** 
 179:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 180:./lib/lib8tion/trig8.h ****     p += s2;
 181:./lib/lib8tion/trig8.h ****     b   = *p;
 182:./lib/lib8tion/trig8.h ****     p++;
 183:./lib/lib8tion/trig8.h ****     m16 = *p;
 184:./lib/lib8tion/trig8.h **** 
 185:./lib/lib8tion/trig8.h ****     uint8_t mx;
 186:./lib/lib8tion/trig8.h ****     uint8_t xr1;
 187:./lib/lib8tion/trig8.h ****     asm volatile(
 188:./lib/lib8tion/trig8.h ****                  "mul %[m16],%[secoffset]   \n\t"
 189:./lib/lib8tion/trig8.h ****                  "mov %[mx],r0              \n\t"
 190:./lib/lib8tion/trig8.h ****                  "mov %[xr1],r1             \n\t"
 191:./lib/lib8tion/trig8.h ****                  "eor  r1, r1               \n\t"
 192:./lib/lib8tion/trig8.h ****                  "swap %[mx]                \n\t"
 193:./lib/lib8tion/trig8.h ****                  "andi %[mx],0x0F           \n\t"
 194:./lib/lib8tion/trig8.h ****                  "swap %[xr1]               \n\t"
 195:./lib/lib8tion/trig8.h ****                  "andi %[xr1], 0xF0         \n\t"
 196:./lib/lib8tion/trig8.h ****                  "or   %[mx], %[xr1]        \n\t"
 197:./lib/lib8tion/trig8.h ****                  : [mx] "=d" (mx), [xr1] "=d" (xr1)
 198:./lib/lib8tion/trig8.h ****                  : [m16] "d" (m16), [secoffset] "d" (secoffset)
 199:./lib/lib8tion/trig8.h ****                  );
 200:./lib/lib8tion/trig8.h **** 
 201:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 202:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 203:./lib/lib8tion/trig8.h **** 
 204:./lib/lib8tion/trig8.h ****     y += 128;
 205:./lib/lib8tion/trig8.h **** 
 206:./lib/lib8tion/trig8.h ****     return y;
 207:./lib/lib8tion/trig8.h **** }
 208:./lib/lib8tion/trig8.h **** 
 209:./lib/lib8tion/trig8.h **** 
 210:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 211:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 212:./lib/lib8tion/trig8.h **** ///
 213:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 214:./lib/lib8tion/trig8.h **** ///
 215:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 216:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 217:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t sin8_C( uint8_t theta)
 218:./lib/lib8tion/trig8.h **** {
 143              		.loc 2 218 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 219:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 147              		.loc 2 219 5 view .LVU41
 220:./lib/lib8tion/trig8.h ****     if( theta & 0x40 ) {
 148              		.loc 2 220 5 view .LVU42
 149              		.loc 2 220 7 is_stmt 0 view .LVU43
 150 0000 10F04003 		ands	r3, r0, #64
 221:./lib/lib8tion/trig8.h ****         offset = (uint8_t)255 - offset;
 151              		.loc 2 221 9 is_stmt 1 view .LVU44
 152              		.loc 2 221 16 is_stmt 0 view .LVU45
 153 0004 1ABF     		itte	ne
 154 0006 C243     		mvnne	r2, r0
 155 0008 D2B2     		uxtbne	r2, r2
 156              	.LVL15:
 157              		.loc 2 221 16 view .LVU46
 158 000a 0246     		moveq	r2, r0
 159              	.LVL16:
 222:./lib/lib8tion/trig8.h ****     }
 223:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 160              		.loc 2 223 5 is_stmt 1 view .LVU47
 224:./lib/lib8tion/trig8.h **** 
 225:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 161              		.loc 2 225 5 view .LVU48
 218:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 162              		.loc 2 218 1 is_stmt 0 view .LVU49
 163 000c 10B5     		push	{r4, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167              		.loc 2 225 13 view .LVU50
 168 000e 02F00F01 		and	r1, r2, #15
 169              	.LVL17:
 226:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 170              		.loc 2 226 5 is_stmt 1 view .LVU51
 171              		.loc 2 226 7 is_stmt 0 view .LVU52
 172 0012 03B1     		cbz	r3, .L14
 173              		.loc 2 226 23 is_stmt 1 discriminator 1 view .LVU53
 174              		.loc 2 226 32 is_stmt 0 discriminator 1 view .LVU54
 175 0014 0131     		adds	r1, r1, #1
 176              	.LVL18:
 177              	.L14:
 227:./lib/lib8tion/trig8.h **** 
 228:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 178              		.loc 2 228 5 is_stmt 1 view .LVU55
 229:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 179              		.loc 2 229 5 view .LVU56
 230:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 180              		.loc 2 230 5 view .LVU57
 231:./lib/lib8tion/trig8.h ****     p += s2;
 181              		.loc 2 231 5 view .LVU58
 182              		.loc 2 231 7 is_stmt 0 view .LVU59
 183 0016 0A4C     		ldr	r4, .L20
 228:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 184              		.loc 2 228 13 view .LVU60
 185 0018 C2F30112 		ubfx	r2, r2, #4, #2
 186              	.LVL19:
 187              		.loc 2 231 7 view .LVU61
 188 001c 04EB4203 		add	r3, r4, r2, lsl #1
 189              	.LVL20:
 232:./lib/lib8tion/trig8.h ****     uint8_t b   =  *p;
 190              		.loc 2 232 5 is_stmt 1 view .LVU62
 233:./lib/lib8tion/trig8.h ****     p++;
 191              		.loc 2 233 5 view .LVU63
 234:./lib/lib8tion/trig8.h ****     uint8_t m16 =  *p;
 192              		.loc 2 234 5 view .LVU64
 235:./lib/lib8tion/trig8.h **** 
 236:./lib/lib8tion/trig8.h ****     uint8_t mx = (m16 * secoffset) >> 4;
 193              		.loc 2 236 5 view .LVU65
 237:./lib/lib8tion/trig8.h **** 
 238:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 194              		.loc 2 238 5 view .LVU66
 236:./lib/lib8tion/trig8.h **** 
 195              		.loc 2 236 23 is_stmt 0 view .LVU67
 196 0020 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 197              	.LVL21:
 236:./lib/lib8tion/trig8.h **** 
 198              		.loc 2 236 23 view .LVU68
 199 0022 13FB01F1 		smulbb	r1, r3, r1
 200              	.LVL22:
 201              		.loc 2 238 19 view .LVU69
 202 0026 14F81230 		ldrb	r3, [r4, r2, lsl #1]	@ zero_extendqisi2
 203 002a 03EB2113 		add	r3, r3, r1, asr #4
 204 002e DBB2     		uxtb	r3, r3
 205              	.LVL23:
 239:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 206              		.loc 2 239 5 is_stmt 1 view .LVU70
 207              		.loc 2 239 7 is_stmt 0 view .LVU71
 208 0030 0206     		lsls	r2, r0, #24
 209              	.LVL24:
 210              		.loc 2 239 24 is_stmt 1 view .LVU72
 211              		.loc 2 239 26 is_stmt 0 view .LVU73
 212 0032 44BF     		itt	mi
 213 0034 5B42     		rsbmi	r3, r3, #0
 214              	.LVL25:
 215              		.loc 2 239 26 view .LVU74
 216 0036 DBB2     		uxtbmi	r3, r3
 217              	.LVL26:
 240:./lib/lib8tion/trig8.h **** 
 241:./lib/lib8tion/trig8.h ****     y += 128;
 218              		.loc 2 241 5 is_stmt 1 view .LVU75
 242:./lib/lib8tion/trig8.h **** 
 243:./lib/lib8tion/trig8.h ****     return y;
 219              		.loc 2 243 5 view .LVU76
 244:./lib/lib8tion/trig8.h **** }
 220              		.loc 2 244 1 is_stmt 0 view .LVU77
 221 0038 83F08000 		eor	r0, r3, #128
 222              	.LVL27:
 223              		.loc 2 244 1 view .LVU78
 224 003c 10BD     		pop	{r4, pc}
 225              	.L21:
 226 003e 00BF     		.align	2
 227              	.L20:
 228 0040 00000000 		.word	.LANCHOR0
 229              		.cfi_endproc
 230              	.LFE335:
 232              		.section	.text.BAND_SAT_math,"ax",%progbits
 233              		.align	1
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	BAND_SAT_math:
 240              	.LVL28:
 241              	.LFB373:
 242              		.file 3 "quantum/rgb_matrix/animations/colorband_sat_anim.h"
   1:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SAT
   2:quantum/rgb_matrix/animations/colorband_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SAT)
   3:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_sat_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_sat_anim.h **** static HSV BAND_SAT_math(HSV hsv, uint8_t i, uint8_t time) {
 243              		.loc 3 5 60 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248              		.loc 3 5 60 is_stmt 0 view .LVU80
 249 0000 84B0     		sub	sp, sp, #16
 250              		.cfi_def_cfa_offset 16
 251 0002 C0F30723 		ubfx	r3, r0, #8, #8
 252              	.LVL29:
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     int16_t s = hsv.s - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 253              		.loc 3 6 5 is_stmt 1 view .LVU81
 254              	.LBB110:
 255              	.LBI110:
 256              		.file 4 "./lib/lib8tion/scale8.h"
   1:./lib/lib8tion/scale8.h **** #ifndef __INC_LIB8TION_SCALE_H
   2:./lib/lib8tion/scale8.h **** #define __INC_LIB8TION_SCALE_H
   3:./lib/lib8tion/scale8.h **** 
   4:./lib/lib8tion/scale8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/scale8.h **** 
   6:./lib/lib8tion/scale8.h **** ///@defgroup Scaling Scaling functions
   7:./lib/lib8tion/scale8.h **** /// Fast, efficient 8-bit scaling functions specifically
   8:./lib/lib8tion/scale8.h **** /// designed for high-performance LED programming.
   9:./lib/lib8tion/scale8.h **** ///
  10:./lib/lib8tion/scale8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  11:./lib/lib8tion/scale8.h **** /// implementations provided, using these functions often
  12:./lib/lib8tion/scale8.h **** /// results in smaller and faster code than the equivalent
  13:./lib/lib8tion/scale8.h **** /// program using plain "C" arithmetic and logic.
  14:./lib/lib8tion/scale8.h **** ///@{
  15:./lib/lib8tion/scale8.h **** 
  16:./lib/lib8tion/scale8.h **** ///  scale one byte by a second one, which is treated as
  17:./lib/lib8tion/scale8.h **** ///  the numerator of a fraction whose denominator is 256
  18:./lib/lib8tion/scale8.h **** ///  In other words, it computes i * (scale / 256)
  19:./lib/lib8tion/scale8.h **** ///  4 clocks AVR with MUL, 2 clocks ARM
  20:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8( uint8_t i, fract8 scale)
 257              		.loc 4 20 34 view .LVU82
 258              	.LBB111:
  21:./lib/lib8tion/scale8.h **** {
  22:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
  23:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  24:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * (1+(uint16_t)(scale))) >> 8;
  25:./lib/lib8tion/scale8.h **** #else
  26:./lib/lib8tion/scale8.h ****     return ((uint16_t)i * (uint16_t)(scale) ) >> 8;
 259              		.loc 4 26 5 view .LVU83
 260              		.loc 4 26 5 is_stmt 0 view .LVU84
 261              	.LBE111:
 262              	.LBE110:
   7:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 263              		.loc 3 7 5 is_stmt 1 view .LVU85
 264              	.LBB113:
 265              	.LBI113:
  20:./lib/lib8tion/scale8.h **** {
 266              		.loc 4 20 34 view .LVU86
 267              	.LBB114:
 268              		.loc 4 26 5 view .LVU87
 269              		.loc 4 26 5 is_stmt 0 view .LVU88
 270              	.LBE114:
 271              	.LBE113:
   8:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     return hsv;
 272              		.loc 3 8 5 is_stmt 1 view .LVU89
   5:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     int16_t s = hsv.s - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 273              		.loc 3 5 60 is_stmt 0 view .LVU90
 274 0006 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 275              		.loc 3 6 29 view .LVU91
 276 0008 2C31     		adds	r1, r1, #44
 277              	.LVL30:
 278              	.LBB116:
 279              	.LBB112:
 280              		.loc 4 26 25 view .LVU92
 281 000a 1248     		ldr	r0, .L23
 282 000c 10F81100 		ldrb	r0, [r0, r1, lsl #1]	@ zero_extendqisi2
 283 0010 E421     		movs	r1, #228
 284              	.LVL31:
 285              		.loc 4 26 25 view .LVU93
 286 0012 10FB01F0 		smulbb	r0, r0, r1
 287              	.LBE112:
 288              	.LBE116:
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 289              		.loc 3 6 66 view .LVU94
 290 0016 C2EB1020 		rsb	r0, r2, r0, lsr #8
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 291              		.loc 3 6 71 view .LVU95
 292 001a 1C30     		adds	r0, r0, #28
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 293              		.loc 3 6 25 view .LVU96
 294 001c 0028     		cmp	r0, #0
 295 001e B8BF     		it	lt
 296 0020 4042     		rsblt	r0, r0, #0
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 297              		.loc 3 6 23 view .LVU97
 298 0022 A3EBC000 		sub	r0, r3, r0, lsl #3
   7:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     return hsv;
 299              		.loc 3 7 34 view .LVU98
 300 0026 00B2     		sxth	r0, r0
 301 0028 20EAE070 		bic	r0, r0, r0, asr #31
 302              	.LBB117:
 303              	.LBB115:
 304              		.loc 4 26 25 view .LVU99
 305 002c 10FB03F0 		smulbb	r0, r0, r3
 306              		.loc 4 26 47 view .LVU100
 307 0030 0012     		asrs	r0, r0, #8
 308 0032 8DF80500 		strb	r0, [sp, #5]
 309              	.LBE115:
 310              	.LBE117:
 311              		.loc 3 8 12 view .LVU101
 312 0036 019B     		ldr	r3, [sp, #4]
 313              		.loc 3 8 12 view .LVU102
 314 0038 0020     		movs	r0, #0
 315 003a DAB2     		uxtb	r2, r3
 316              	.LVL32:
 317              		.loc 3 8 12 view .LVU103
 318 003c 62F30700 		bfi	r0, r2, #0, #8
 319 0040 C3F30722 		ubfx	r2, r3, #8, #8
 320 0044 62F30F20 		bfi	r0, r2, #8, #8
 321 0048 C3F30743 		ubfx	r3, r3, #16, #8
 322 004c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix/animations/colorband_sat_anim.h **** }
 323              		.loc 3 9 1 view .LVU104
 324 0050 04B0     		add	sp, sp, #16
 325              		.cfi_def_cfa_offset 0
 326              		@ sp needed
 327 0052 7047     		bx	lr
 328              	.L24:
 329              		.align	2
 330              	.L23:
 331 0054 00000000 		.word	g_led_config
 332              		.cfi_endproc
 333              	.LFE373:
 335              		.section	.text.BAND_VAL_math,"ax",%progbits
 336              		.align	1
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	BAND_VAL_math:
 343              	.LVL33:
 344              	.LFB375:
 345              		.file 5 "quantum/rgb_matrix/animations/colorband_val_anim.h"
   1:quantum/rgb_matrix/animations/colorband_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_VAL
   2:quantum/rgb_matrix/animations/colorband_val_anim.h **** RGB_MATRIX_EFFECT(BAND_VAL)
   3:quantum/rgb_matrix/animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_val_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_val_anim.h **** static HSV BAND_VAL_math(HSV hsv, uint8_t i, uint8_t time) {
 346              		.loc 5 5 60 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 16
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 351              		.loc 5 5 60 is_stmt 0 view .LVU106
 352 0000 84B0     		sub	sp, sp, #16
 353              		.cfi_def_cfa_offset 16
 354 0002 C0F30743 		ubfx	r3, r0, #16, #8
 355              	.LVL34:
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     int16_t v = hsv.v - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 356              		.loc 5 6 5 is_stmt 1 view .LVU107
 357              	.LBB118:
 358              	.LBI118:
  20:./lib/lib8tion/scale8.h **** {
 359              		.loc 4 20 34 view .LVU108
 360              	.LBB119:
 361              		.loc 4 26 5 view .LVU109
 362              		.loc 4 26 5 is_stmt 0 view .LVU110
 363              	.LBE119:
 364              	.LBE118:
   7:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 365              		.loc 5 7 5 is_stmt 1 view .LVU111
 366              	.LBB121:
 367              	.LBI121:
  20:./lib/lib8tion/scale8.h **** {
 368              		.loc 4 20 34 view .LVU112
 369              	.LBB122:
 370              		.loc 4 26 5 view .LVU113
 371              		.loc 4 26 5 is_stmt 0 view .LVU114
 372              	.LBE122:
 373              	.LBE121:
   8:quantum/rgb_matrix/animations/colorband_val_anim.h ****     return hsv;
 374              		.loc 5 8 5 is_stmt 1 view .LVU115
   5:quantum/rgb_matrix/animations/colorband_val_anim.h ****     int16_t v = hsv.v - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 375              		.loc 5 5 60 is_stmt 0 view .LVU116
 376 0006 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 377              		.loc 5 6 29 view .LVU117
 378 0008 2C31     		adds	r1, r1, #44
 379              	.LVL35:
 380              	.LBB124:
 381              	.LBB120:
 382              		.loc 4 26 25 view .LVU118
 383 000a 1248     		ldr	r0, .L26
 384 000c 10F81100 		ldrb	r0, [r0, r1, lsl #1]	@ zero_extendqisi2
 385 0010 E421     		movs	r1, #228
 386              	.LVL36:
 387              		.loc 4 26 25 view .LVU119
 388 0012 10FB01F0 		smulbb	r0, r0, r1
 389              	.LBE120:
 390              	.LBE124:
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 391              		.loc 5 6 66 view .LVU120
 392 0016 C2EB1020 		rsb	r0, r2, r0, lsr #8
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 393              		.loc 5 6 71 view .LVU121
 394 001a 1C30     		adds	r0, r0, #28
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 395              		.loc 5 6 25 view .LVU122
 396 001c 0028     		cmp	r0, #0
 397 001e B8BF     		it	lt
 398 0020 4042     		rsblt	r0, r0, #0
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 399              		.loc 5 6 23 view .LVU123
 400 0022 A3EBC000 		sub	r0, r3, r0, lsl #3
   7:quantum/rgb_matrix/animations/colorband_val_anim.h ****     return hsv;
 401              		.loc 5 7 34 view .LVU124
 402 0026 00B2     		sxth	r0, r0
 403 0028 20EAE070 		bic	r0, r0, r0, asr #31
 404              	.LBB125:
 405              	.LBB123:
 406              		.loc 4 26 25 view .LVU125
 407 002c 10FB03F0 		smulbb	r0, r0, r3
 408              		.loc 4 26 47 view .LVU126
 409 0030 0012     		asrs	r0, r0, #8
 410 0032 8DF80600 		strb	r0, [sp, #6]
 411              	.LBE123:
 412              	.LBE125:
 413              		.loc 5 8 12 view .LVU127
 414 0036 019B     		ldr	r3, [sp, #4]
 415              		.loc 5 8 12 view .LVU128
 416 0038 0020     		movs	r0, #0
 417 003a DAB2     		uxtb	r2, r3
 418              	.LVL37:
 419              		.loc 5 8 12 view .LVU129
 420 003c 62F30700 		bfi	r0, r2, #0, #8
 421 0040 C3F30722 		ubfx	r2, r3, #8, #8
 422 0044 62F30F20 		bfi	r0, r2, #8, #8
 423 0048 C3F30743 		ubfx	r3, r3, #16, #8
 424 004c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix/animations/colorband_val_anim.h **** }
 425              		.loc 5 9 1 view .LVU130
 426 0050 04B0     		add	sp, sp, #16
 427              		.cfi_def_cfa_offset 0
 428              		@ sp needed
 429 0052 7047     		bx	lr
 430              	.L27:
 431              		.align	2
 432              	.L26:
 433 0054 00000000 		.word	g_led_config
 434              		.cfi_endproc
 435              	.LFE375:
 437              		.section	.text.CYCLE_ALL_math,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	CYCLE_ALL_math:
 445              	.LVL38:
 446              	.LFB385:
 447              		.file 6 "quantum/rgb_matrix/animations/cycle_all_anim.h"
   1:quantum/rgb_matrix/animations/cycle_all_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_ALL
   2:quantum/rgb_matrix/animations/cycle_all_anim.h **** RGB_MATRIX_EFFECT(CYCLE_ALL)
   3:quantum/rgb_matrix/animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_all_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_all_anim.h **** static HSV CYCLE_ALL_math(HSV hsv, uint8_t i, uint8_t time) {
 448              		.loc 6 5 61 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              		.loc 6 5 61 is_stmt 0 view .LVU132
 454 0000 84B0     		sub	sp, sp, #16
 455              		.cfi_def_cfa_offset 16
 456              	.LVL39:
   6:quantum/rgb_matrix/animations/cycle_all_anim.h ****     hsv.h = time;
 457              		.loc 6 6 5 is_stmt 1 view .LVU133
   7:quantum/rgb_matrix/animations/cycle_all_anim.h ****     return hsv;
 458              		.loc 6 7 5 view .LVU134
   5:quantum/rgb_matrix/animations/cycle_all_anim.h ****     hsv.h = time;
 459              		.loc 6 5 61 is_stmt 0 view .LVU135
 460 0002 0190     		str	r0, [sp, #4]
 461              		.loc 6 7 12 view .LVU136
 462 0004 8DF80420 		strb	r2, [sp, #4]
 463 0008 019B     		ldr	r3, [sp, #4]
 464 000a 0020     		movs	r0, #0
 465 000c DAB2     		uxtb	r2, r3
 466              	.LVL40:
 467              		.loc 6 7 12 view .LVU137
 468 000e 62F30700 		bfi	r0, r2, #0, #8
 469 0012 C3F30722 		ubfx	r2, r3, #8, #8
 470 0016 62F30F20 		bfi	r0, r2, #8, #8
 471 001a C3F30743 		ubfx	r3, r3, #16, #8
 472 001e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_all_anim.h **** }
 473              		.loc 6 8 1 view .LVU138
 474 0022 04B0     		add	sp, sp, #16
 475              		.cfi_def_cfa_offset 0
 476              	.LVL41:
 477              		.loc 6 8 1 view .LVU139
 478              		@ sp needed
 479 0024 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE385:
 483              		.section	.text.CYCLE_LEFT_RIGHT_math,"ax",%progbits
 484              		.align	1
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu fpv4-sp-d16
 490              	CYCLE_LEFT_RIGHT_math:
 491              	.LVL42:
 492              	.LFB387:
 493              		.file 7 "quantum/rgb_matrix/animations/cycle_left_right_anim.h"
   1:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
   2:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** RGB_MATRIX_EFFECT(CYCLE_LEFT_RIGHT)
   3:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** static HSV CYCLE_LEFT_RIGHT_math(HSV hsv, uint8_t i, uint8_t time) {
 494              		.loc 7 5 68 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 16
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499              		.loc 7 5 68 is_stmt 0 view .LVU141
 500 0000 84B0     		sub	sp, sp, #16
 501              		.cfi_def_cfa_offset 16
 502              	.LVL43:
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 503              		.loc 7 6 5 is_stmt 1 view .LVU142
   7:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     return hsv;
 504              		.loc 7 7 5 view .LVU143
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 505              		.loc 7 6 34 is_stmt 0 view .LVU144
 506 0002 2C31     		adds	r1, r1, #44
 507              	.LVL44:
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 508              		.loc 7 6 37 view .LVU145
 509 0004 0A4B     		ldr	r3, .L30
   5:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 510              		.loc 7 5 68 view .LVU146
 511 0006 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 512              		.loc 7 6 37 view .LVU147
 513 0008 13F81130 		ldrb	r3, [r3, r1, lsl #1]	@ zero_extendqisi2
 514 000c 9A1A     		subs	r2, r3, r2
 515              	.LVL45:
 516              		.loc 7 7 12 view .LVU148
 517 000e 8DF80420 		strb	r2, [sp, #4]
 518 0012 019B     		ldr	r3, [sp, #4]
 519 0014 0020     		movs	r0, #0
 520 0016 DAB2     		uxtb	r2, r3
 521 0018 62F30700 		bfi	r0, r2, #0, #8
 522 001c C3F30722 		ubfx	r2, r3, #8, #8
 523 0020 62F30F20 		bfi	r0, r2, #8, #8
 524 0024 C3F30743 		ubfx	r3, r3, #16, #8
 525 0028 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** }
 526              		.loc 7 8 1 view .LVU149
 527 002c 04B0     		add	sp, sp, #16
 528              		.cfi_def_cfa_offset 0
 529              		@ sp needed
 530 002e 7047     		bx	lr
 531              	.L31:
 532              		.align	2
 533              	.L30:
 534 0030 00000000 		.word	g_led_config
 535              		.cfi_endproc
 536              	.LFE387:
 538              		.section	.text.CYCLE_UP_DOWN_math,"ax",%progbits
 539              		.align	1
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu fpv4-sp-d16
 545              	CYCLE_UP_DOWN_math:
 546              	.LVL46:
 547              	.LFB389:
 548              		.file 8 "quantum/rgb_matrix/animations/cycle_up_down_anim.h"
   1:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_UP_DOWN
   2:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** RGB_MATRIX_EFFECT(CYCLE_UP_DOWN)
   3:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** static HSV CYCLE_UP_DOWN_math(HSV hsv, uint8_t i, uint8_t time) {
 549              		.loc 8 5 65 is_stmt 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 16
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              		.loc 8 5 65 is_stmt 0 view .LVU151
 555 0000 84B0     		sub	sp, sp, #16
 556              		.cfi_def_cfa_offset 16
 557              	.LVL47:
   6:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 558              		.loc 8 6 5 is_stmt 1 view .LVU152
   7:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     return hsv;
 559              		.loc 8 7 5 view .LVU153
   5:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 560              		.loc 8 5 65 is_stmt 0 view .LVU154
 561 0002 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 562              		.loc 8 6 34 view .LVU155
 563 0004 0B48     		ldr	r0, .L33
 564 0006 00EB4101 		add	r1, r0, r1, lsl #1
 565              	.LVL48:
 566              		.loc 8 7 12 view .LVU156
 567 000a 0020     		movs	r0, #0
   6:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 568              		.loc 8 6 37 view .LVU157
 569 000c 91F85930 		ldrb	r3, [r1, #89]	@ zero_extendqisi2
 570 0010 9A1A     		subs	r2, r3, r2
 571              	.LVL49:
 572              		.loc 8 7 12 view .LVU158
 573 0012 8DF80420 		strb	r2, [sp, #4]
 574 0016 019B     		ldr	r3, [sp, #4]
 575 0018 DAB2     		uxtb	r2, r3
 576 001a 62F30700 		bfi	r0, r2, #0, #8
 577 001e C3F30722 		ubfx	r2, r3, #8, #8
 578 0022 62F30F20 		bfi	r0, r2, #8, #8
 579 0026 C3F30743 		ubfx	r3, r3, #16, #8
 580 002a 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** }
 581              		.loc 8 8 1 view .LVU159
 582 002e 04B0     		add	sp, sp, #16
 583              		.cfi_def_cfa_offset 0
 584              		@ sp needed
 585 0030 7047     		bx	lr
 586              	.L34:
 587 0032 00BF     		.align	2
 588              	.L33:
 589 0034 00000000 		.word	g_led_config
 590              		.cfi_endproc
 591              	.LFE389:
 593              		.section	.text.RAINBOW_MOVING_CHEVRON_math,"ax",%progbits
 594              		.align	1
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 598              		.fpu fpv4-sp-d16
 600              	RAINBOW_MOVING_CHEVRON_math:
 601              	.LVL50:
 602              	.LFB391:
 603              		.file 9 "quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h"
   1:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_MOVING_CHEVRON
   2:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_MOVING_CHEVRON)
   3:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** 
   5:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** static HSV RAINBOW_MOVING_CHEVRON_math(HSV hsv, uint8_t i, uint8_t time) {
 604              		.loc 9 5 74 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 16
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		.loc 9 5 74 is_stmt 0 view .LVU161
 609 0000 30B5     		push	{r4, r5, lr}
 610              		.cfi_def_cfa_offset 12
 611              		.cfi_offset 4, -12
 612              		.cfi_offset 5, -8
 613              		.cfi_offset 14, -4
   6:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 614              		.loc 9 6 40 view .LVU162
 615 0002 134D     		ldr	r5, .L37
   5:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 616              		.loc 9 5 74 view .LVU163
 617 0004 85B0     		sub	sp, sp, #20
 618              		.cfi_def_cfa_offset 32
 619              		.loc 9 6 40 view .LVU164
 620 0006 2C31     		adds	r1, r1, #44
 621              	.LVL51:
 622              		.loc 9 6 40 view .LVU165
 623 0008 05EB4103 		add	r3, r5, r1, lsl #1
   5:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 624              		.loc 9 5 74 view .LVU166
 625 000c 0190     		str	r0, [sp, #4]
 626              		.loc 9 6 40 view .LVU167
 627 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 628              		.loc 9 6 43 view .LVU168
 629 0010 A3F12004 		sub	r4, r3, #32
 630              		.loc 9 6 14 view .LVU169
 631 0014 64B2     		sxtb	r4, r4
 632              	.LBB126:
 633              	.LBB127:
 407:./lib/lib8tion/math8.h ****     return i;
 634              		.loc 1 407 7 view .LVU170
 635 0016 002C     		cmp	r4, #0
 407:./lib/lib8tion/math8.h ****     return i;
 636              		.loc 1 407 18 view .LVU171
 637 0018 BCBF     		itt	lt
 638 001a C3F12003 		rsblt	r3, r3, #32
 639 001e 5CB2     		sxtblt	r4, r3
 640              	.LBE127:
 641              	.LBE126:
 642              		.loc 9 6 92 view .LVU172
 643 0020 15F81130 		ldrb	r3, [r5, r1, lsl #1]	@ zero_extendqisi2
 644              		.loc 9 6 95 view .LVU173
 645 0024 9A1A     		subs	r2, r3, r2
 646              	.LVL52:
 647              		.loc 9 6 68 view .LVU174
 648 0026 2244     		add	r2, r2, r4
 649 0028 C0B2     		uxtb	r0, r0
 650              	.LVL53:
 651              		.loc 9 6 5 is_stmt 1 view .LVU175
 652              	.LBB129:
 653              	.LBI126:
 404:./lib/lib8tion/math8.h **** {
 654              		.loc 1 404 33 view .LVU176
 655              	.LBB128:
 407:./lib/lib8tion/math8.h ****     return i;
 656              		.loc 1 407 5 view .LVU177
 407:./lib/lib8tion/math8.h ****     return i;
 657              		.loc 1 407 16 view .LVU178
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 658              		.loc 1 408 5 view .LVU179
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 659              		.loc 1 408 5 is_stmt 0 view .LVU180
 660              	.LBE128:
 661              	.LBE129:
   7:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     return hsv;
 662              		.loc 9 7 5 is_stmt 1 view .LVU181
   6:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     return hsv;
 663              		.loc 9 6 11 is_stmt 0 view .LVU182
 664 002a 1044     		add	r0, r0, r2
 665              		.loc 9 7 12 view .LVU183
 666 002c 8DF80400 		strb	r0, [sp, #4]
 667 0030 019B     		ldr	r3, [sp, #4]
 668 0032 0020     		movs	r0, #0
 669 0034 DAB2     		uxtb	r2, r3
 670 0036 62F30700 		bfi	r0, r2, #0, #8
 671 003a C3F30722 		ubfx	r2, r3, #8, #8
 672 003e 62F30F20 		bfi	r0, r2, #8, #8
 673 0042 C3F30743 		ubfx	r3, r3, #16, #8
 674 0046 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** }
 675              		.loc 9 8 1 view .LVU184
 676 004a 05B0     		add	sp, sp, #20
 677              		.cfi_def_cfa_offset 12
 678              		@ sp needed
 679 004c 30BD     		pop	{r4, r5, pc}
 680              	.L38:
 681 004e 00BF     		.align	2
 682              	.L37:
 683 0050 00000000 		.word	g_led_config
 684              		.cfi_endproc
 685              	.LFE391:
 687              		.section	.text.CYCLE_OUT_IN_math,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	CYCLE_OUT_IN_math:
 695              	.LVL54:
 696              	.LFB393:
 697              		.file 10 "quantum/rgb_matrix/animations/cycle_out_in_anim.h"
   1:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN
   2:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN)
   3:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** static HSV CYCLE_OUT_IN_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 698              		.loc 10 5 91 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ args = 4, pretend = 0, frame = 16
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703              		.loc 10 5 91 is_stmt 0 view .LVU186
 704 0000 84B0     		sub	sp, sp, #16
 705              		.cfi_def_cfa_offset 16
 706              	.LVL55:
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 707              		.loc 10 6 5 is_stmt 1 view .LVU187
   7:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     return hsv;
 708              		.loc 10 7 5 view .LVU188
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 709              		.loc 10 6 15 is_stmt 0 view .LVU189
 710 0002 03EB4303 		add	r3, r3, r3, lsl #1
 711              	.LVL56:
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 712              		.loc 10 6 26 view .LVU190
 713 0006 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 714              	.LVL57:
   5:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 715              		.loc 10 5 91 view .LVU191
 716 000a 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 717              		.loc 10 6 26 view .LVU192
 718 000c 02EB5303 		add	r3, r2, r3, lsr #1
 719              		.loc 10 7 12 view .LVU193
 720 0010 8DF80430 		strb	r3, [sp, #4]
 721 0014 019B     		ldr	r3, [sp, #4]
 722 0016 0020     		movs	r0, #0
 723 0018 DAB2     		uxtb	r2, r3
 724 001a 62F30700 		bfi	r0, r2, #0, #8
 725 001e C3F30722 		ubfx	r2, r3, #8, #8
 726 0022 62F30F20 		bfi	r0, r2, #8, #8
 727 0026 C3F30743 		ubfx	r3, r3, #16, #8
 728 002a 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** }
 729              		.loc 10 8 1 view .LVU194
 730 002e 04B0     		add	sp, sp, #16
 731              		.cfi_def_cfa_offset 0
 732              	.LVL58:
 733              		.loc 10 8 1 view .LVU195
 734              		@ sp needed
 735 0030 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE393:
 739              		.section	.text.CYCLE_OUT_IN_DUAL_math,"ax",%progbits
 740              		.align	1
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	CYCLE_OUT_IN_DUAL_math:
 747              	.LVL59:
 748              	.LFB395:
 749              		.file 11 "quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h"
   1:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN_DUAL
   2:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN_DUAL)
   3:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** static HSV CYCLE_OUT_IN_DUAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 750              		.loc 11 5 82 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 16
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              		.loc 11 5 82 is_stmt 0 view .LVU197
 755 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 756              		.cfi_def_cfa_offset 24
 757              		.cfi_offset 4, -8
 758              		.cfi_offset 14, -4
 759              	.LVL60:
   6:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 760              		.loc 11 6 5 is_stmt 1 view .LVU198
   5:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 761              		.loc 11 5 82 is_stmt 0 view .LVU199
 762 0002 0190     		str	r0, [sp, #4]
 763              	.LVL61:
 764              		.loc 11 6 50 view .LVU200
 765 0004 48B2     		sxtb	r0, r1
 766              	.LVL62:
 767              	.LBB130:
 768              	.LBI130:
 404:./lib/lib8tion/math8.h **** {
 769              		.loc 1 404 33 is_stmt 1 view .LVU201
 770              	.LBB131:
 407:./lib/lib8tion/math8.h ****     return i;
 771              		.loc 1 407 5 view .LVU202
 407:./lib/lib8tion/math8.h ****     return i;
 772              		.loc 1 407 7 is_stmt 0 view .LVU203
 773 0006 0028     		cmp	r0, #0
 407:./lib/lib8tion/math8.h ****     return i;
 774              		.loc 1 407 16 is_stmt 1 view .LVU204
 407:./lib/lib8tion/math8.h ****     return i;
 775              		.loc 1 407 18 is_stmt 0 view .LVU205
 776 0008 BCBF     		itt	lt
 777 000a 4942     		rsblt	r1, r1, #0
 778              	.LVL63:
 407:./lib/lib8tion/math8.h ****     return i;
 779              		.loc 1 407 18 view .LVU206
 780 000c 48B2     		sxtblt	r0, r1
 781              	.LVL64:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 782              		.loc 1 408 5 is_stmt 1 view .LVU207
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 783              		.loc 1 408 5 is_stmt 0 view .LVU208
 784              	.LBE131:
 785              	.LBE130:
   7:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     uint8_t dist = sqrt16(dx * dx + dy * dy);
 786              		.loc 11 7 5 is_stmt 1 view .LVU209
 787              		.loc 11 7 40 is_stmt 0 view .LVU210
 788 000e 5243     		muls	r2, r2, r2
 789              	.LVL65:
   6:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     uint8_t dist = sqrt16(dx * dx + dy * dy);
 790              		.loc 11 6 18 view .LVU211
 791 0010 C0F13800 		rsb	r0, r0, #56
 792              	.LVL66:
 793              		.loc 11 7 20 view .LVU212
 794 0014 10FB0020 		smlabb	r0, r0, r0, r2
 795 0018 80B2     		uxth	r0, r0
   5:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 796              		.loc 11 5 82 view .LVU213
 797 001a 1C46     		mov	r4, r3
 798              		.loc 11 7 20 view .LVU214
 799 001c FFF7FEFF 		bl	sqrt16
 800              	.LVL67:
   8:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 801              		.loc 11 8 5 is_stmt 1 view .LVU215
   9:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     return hsv;
 802              		.loc 11 9 5 view .LVU216
   8:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 803              		.loc 11 8 29 is_stmt 0 view .LVU217
 804 0020 00EB4000 		add	r0, r0, r0, lsl #1
 805              	.LVL68:
   8:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 806              		.loc 11 8 29 view .LVU218
 807 0024 0444     		add	r4, r4, r0
 808              		.loc 11 9 12 view .LVU219
 809 0026 8DF80440 		strb	r4, [sp, #4]
 810 002a 019B     		ldr	r3, [sp, #4]
 811 002c 0020     		movs	r0, #0
 812 002e DAB2     		uxtb	r2, r3
 813 0030 62F30700 		bfi	r0, r2, #0, #8
 814 0034 C3F30722 		ubfx	r2, r3, #8, #8
 815 0038 62F30F20 		bfi	r0, r2, #8, #8
 816 003c C3F30743 		ubfx	r3, r3, #16, #8
 817 0040 63F31740 		bfi	r0, r3, #16, #8
  10:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** }
 818              		.loc 11 10 1 view .LVU220
 819 0044 04B0     		add	sp, sp, #16
 820              		.cfi_def_cfa_offset 8
 821              		@ sp needed
 822 0046 10BD     		pop	{r4, pc}
 823              		.cfi_endproc
 824              	.LFE395:
 826              		.section	.text.DUAL_BEACON_math,"ax",%progbits
 827              		.align	1
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv4-sp-d16
 833              	DUAL_BEACON_math:
 834              	.LVL69:
 835              	.LFB401:
 836              		.file 12 "quantum/rgb_matrix/animations/dual_beacon_anim.h"
   1:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_DUAL_BEACON
   2:quantum/rgb_matrix/animations/dual_beacon_anim.h **** RGB_MATRIX_EFFECT(DUAL_BEACON)
   3:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/dual_beacon_anim.h **** 
   5:quantum/rgb_matrix/animations/dual_beacon_anim.h **** static HSV DUAL_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 837              		.loc 12 5 87 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 4, pretend = 0, frame = 16
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              		.loc 12 5 87 is_stmt 0 view .LVU222
 842 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 843              		.cfi_def_cfa_offset 24
 844              		.cfi_offset 4, -8
 845              		.cfi_offset 14, -4
 846              	.LVL70:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 847              		.loc 12 6 5 is_stmt 1 view .LVU223
   7:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     return hsv;
 848              		.loc 12 7 5 view .LVU224
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 849              		.loc 12 6 37 is_stmt 0 view .LVU225
 850 0002 124C     		ldr	r4, .L44
   5:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 851              		.loc 12 5 87 view .LVU226
 852 0004 0190     		str	r0, [sp, #4]
 853              	.LVL71:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 854              		.loc 12 6 37 view .LVU227
 855 0006 2C33     		adds	r3, r3, #44
 856              	.LVL72:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 857              		.loc 12 6 37 view .LVU228
 858 0008 04EB4300 		add	r0, r4, r3, lsl #1
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 859              		.loc 12 6 95 view .LVU229
 860 000c 14F81330 		ldrb	r3, [r4, r3, lsl #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 861              		.loc 12 6 37 view .LVU230
 862 0010 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 863              		.loc 12 6 98 view .LVU231
 864 0012 703B     		subs	r3, r3, #112
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 865              		.loc 12 6 123 view .LVU232
 866 0014 5943     		muls	r1, r3, r1
 867              	.LVL73:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 868              		.loc 12 6 40 view .LVU233
 869 0016 2038     		subs	r0, r0, #32
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 870              		.loc 12 6 71 view .LVU234
 871 0018 02FB0012 		mla	r2, r2, r0, r1
 872              	.LVL74:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 873              		.loc 12 6 130 view .LVU235
 874 001c 002A     		cmp	r2, #0
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 875              		.loc 12 6 11 view .LVU236
 876 001e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 877              		.loc 12 6 130 view .LVU237
 878 0022 B8BF     		it	lt
 879 0024 7F32     		addlt	r2, r2, #127
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 880              		.loc 12 6 11 view .LVU238
 881 0026 01EBE212 		add	r2, r1, r2, asr #7
 882              		.loc 12 7 12 view .LVU239
 883 002a 8DF80420 		strb	r2, [sp, #4]
 884 002e 019B     		ldr	r3, [sp, #4]
 885 0030 0020     		movs	r0, #0
 886 0032 DAB2     		uxtb	r2, r3
 887 0034 62F30700 		bfi	r0, r2, #0, #8
 888 0038 C3F30722 		ubfx	r2, r3, #8, #8
 889 003c 62F30F20 		bfi	r0, r2, #8, #8
 890 0040 C3F30743 		ubfx	r3, r3, #16, #8
 891 0044 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/dual_beacon_anim.h **** }
 892              		.loc 12 8 1 view .LVU240
 893 0048 04B0     		add	sp, sp, #16
 894              		.cfi_def_cfa_offset 8
 895              		@ sp needed
 896 004a 10BD     		pop	{r4, pc}
 897              	.LVL75:
 898              	.L45:
 899              		.loc 12 8 1 view .LVU241
 900              		.align	2
 901              	.L44:
 902 004c 00000000 		.word	g_led_config
 903              		.cfi_endproc
 904              	.LFE401:
 906              		.section	.text.RAINBOW_BEACON_math,"ax",%progbits
 907              		.align	1
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 911              		.fpu fpv4-sp-d16
 913              	RAINBOW_BEACON_math:
 914              	.LVL76:
 915              	.LFB403:
 916              		.file 13 "quantum/rgb_matrix/animations/rainbow_beacon_anim.h"
   1:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_BEACON
   2:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_BEACON)
   3:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** 
   5:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** static HSV RAINBOW_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 917              		.loc 13 5 90 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 4, pretend = 0, frame = 16
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		.loc 13 5 90 is_stmt 0 view .LVU243
 922 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 923              		.cfi_def_cfa_offset 24
 924              		.cfi_offset 4, -8
 925              		.cfi_offset 14, -4
 926              	.LVL77:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 927              		.loc 13 6 5 is_stmt 1 view .LVU244
   7:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     return hsv;
 928              		.loc 13 7 5 view .LVU245
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 929              		.loc 13 6 37 is_stmt 0 view .LVU246
 930 0002 124C     		ldr	r4, .L48
   5:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 931              		.loc 13 5 90 view .LVU247
 932 0004 0190     		str	r0, [sp, #4]
 933              	.LVL78:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 934              		.loc 13 6 37 view .LVU248
 935 0006 2C33     		adds	r3, r3, #44
 936              	.LVL79:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 937              		.loc 13 6 37 view .LVU249
 938 0008 04EB4300 		add	r0, r4, r3, lsl #1
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 939              		.loc 13 6 99 view .LVU250
 940 000c 14F81330 		ldrb	r3, [r4, r3, lsl #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 941              		.loc 13 6 37 view .LVU251
 942 0010 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 943              		.loc 13 6 102 view .LVU252
 944 0012 703B     		subs	r3, r3, #112
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 945              		.loc 13 6 131 view .LVU253
 946 0014 5943     		muls	r1, r3, r1
 947              	.LVL80:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 948              		.loc 13 6 40 view .LVU254
 949 0016 2038     		subs	r0, r0, #32
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 950              		.loc 13 6 75 view .LVU255
 951 0018 02FB0012 		mla	r2, r2, r0, r1
 952              	.LVL81:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 953              		.loc 13 6 138 view .LVU256
 954 001c 002A     		cmp	r2, #0
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 955              		.loc 13 6 11 view .LVU257
 956 001e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 957              		.loc 13 6 138 view .LVU258
 958 0022 B8BF     		it	lt
 959 0024 3F32     		addlt	r2, r2, #63
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 960              		.loc 13 6 11 view .LVU259
 961 0026 01EBA212 		add	r2, r1, r2, asr #6
 962              		.loc 13 7 12 view .LVU260
 963 002a 8DF80420 		strb	r2, [sp, #4]
 964 002e 019B     		ldr	r3, [sp, #4]
 965 0030 0020     		movs	r0, #0
 966 0032 DAB2     		uxtb	r2, r3
 967 0034 62F30700 		bfi	r0, r2, #0, #8
 968 0038 C3F30722 		ubfx	r2, r3, #8, #8
 969 003c 62F30F20 		bfi	r0, r2, #8, #8
 970 0040 C3F30743 		ubfx	r3, r3, #16, #8
 971 0044 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** }
 972              		.loc 13 8 1 view .LVU261
 973 0048 04B0     		add	sp, sp, #16
 974              		.cfi_def_cfa_offset 8
 975              		@ sp needed
 976 004a 10BD     		pop	{r4, pc}
 977              	.LVL82:
 978              	.L49:
 979              		.loc 13 8 1 view .LVU262
 980              		.align	2
 981              	.L48:
 982 004c 00000000 		.word	g_led_config
 983              		.cfi_endproc
 984              	.LFE403:
 986              		.section	.text.RAINBOW_PINWHEELS_math,"ax",%progbits
 987              		.align	1
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 993              	RAINBOW_PINWHEELS_math:
 994              	.LVL83:
 995              	.LFB405:
 996              		.file 14 "quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h"
   1:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_PINWHEELS
   2:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_PINWHEELS)
   3:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** 
   5:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** static HSV RAINBOW_PINWHEELS_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 997              		.loc 14 5 93 is_stmt 1 view -0
 998              		.cfi_startproc
 999              		@ args = 4, pretend = 0, frame = 16
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              		.loc 14 5 93 is_stmt 0 view .LVU264
 1002 0000 30B5     		push	{r4, r5, lr}
 1003              		.cfi_def_cfa_offset 12
 1004              		.cfi_offset 4, -12
 1005              		.cfi_offset 5, -8
 1006              		.cfi_offset 14, -4
 1007 0002 85B0     		sub	sp, sp, #20
 1008              		.cfi_def_cfa_offset 32
   6:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1009              		.loc 14 6 37 view .LVU265
 1010 0004 2C33     		adds	r3, r3, #44
 1011              	.LVL84:
 1012              		.loc 14 6 37 view .LVU266
 1013 0006 164D     		ldr	r5, .L53
   5:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1014              		.loc 14 5 93 view .LVU267
 1015 0008 0190     		str	r0, [sp, #4]
 1016              		.loc 14 6 37 view .LVU268
 1017 000a 05EB4304 		add	r4, r5, r3, lsl #1
 1018              		.loc 14 6 109 view .LVU269
 1019 000e 15F81350 		ldrb	r5, [r5, r3, lsl #1]	@ zero_extendqisi2
 1020              		.loc 14 6 37 view .LVU270
 1021 0012 6478     		ldrb	r4, [r4, #1]	@ zero_extendqisi2
 1022              		.loc 14 6 112 view .LVU271
 1023 0014 A5F17003 		sub	r3, r5, #112
 1024              		.loc 14 6 83 view .LVU272
 1025 0018 5BB2     		sxtb	r3, r3
 1026              	.LBB132:
 1027              	.LBB133:
 407:./lib/lib8tion/math8.h ****     return i;
 1028              		.loc 1 407 7 view .LVU273
 1029 001a 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 1030              		.loc 1 407 18 view .LVU274
 1031 001c BCBF     		itt	lt
 1032 001e C5F17003 		rsblt	r3, r5, #112
 1033 0022 5BB2     		sxtblt	r3, r3
 1034              	.LBE133:
 1035              	.LBE132:
 1036              		.loc 14 6 40 view .LVU275
 1037 0024 203C     		subs	r4, r4, #32
 1038              		.loc 14 6 69 view .LVU276
 1039 0026 5443     		muls	r4, r2, r4
 1040              		.loc 14 6 81 view .LVU277
 1041 0028 C3F13803 		rsb	r3, r3, #56
 1042              		.loc 14 6 75 view .LVU278
 1043 002c 01FB0342 		mla	r2, r1, r3, r4
 1044              	.LVL85:
 1045              		.loc 14 6 149 view .LVU279
 1046 0030 12EB4202 		adds	r2, r2, r2, lsl #1
 1047 0034 C0B2     		uxtb	r0, r0
 1048              	.LVL86:
 1049              		.loc 14 6 5 is_stmt 1 view .LVU280
 1050              	.LBB135:
 1051              	.LBI132:
 404:./lib/lib8tion/math8.h **** {
 1052              		.loc 1 404 33 view .LVU281
 1053              	.LBB134:
 407:./lib/lib8tion/math8.h ****     return i;
 1054              		.loc 1 407 5 view .LVU282
 407:./lib/lib8tion/math8.h ****     return i;
 1055              		.loc 1 407 16 view .LVU283
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1056              		.loc 1 408 5 view .LVU284
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1057              		.loc 1 408 5 is_stmt 0 view .LVU285
 1058              	.LBE134:
 1059              	.LBE135:
   7:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     return hsv;
 1060              		.loc 14 7 5 is_stmt 1 view .LVU286
   6:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     return hsv;
 1061              		.loc 14 6 149 is_stmt 0 view .LVU287
 1062 0036 48BF     		it	mi
 1063 0038 7F32     		addmi	r2, r2, #127
   6:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     return hsv;
 1064              		.loc 14 6 11 view .LVU288
 1065 003a 00EBE212 		add	r2, r0, r2, asr #7
 1066              		.loc 14 7 12 view .LVU289
 1067 003e 8DF80420 		strb	r2, [sp, #4]
 1068 0042 019B     		ldr	r3, [sp, #4]
 1069 0044 0020     		movs	r0, #0
 1070 0046 DAB2     		uxtb	r2, r3
 1071 0048 62F30700 		bfi	r0, r2, #0, #8
 1072 004c C3F30722 		ubfx	r2, r3, #8, #8
 1073 0050 62F30F20 		bfi	r0, r2, #8, #8
 1074 0054 C3F30743 		ubfx	r3, r3, #16, #8
 1075 0058 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** }
 1076              		.loc 14 8 1 view .LVU290
 1077 005c 05B0     		add	sp, sp, #20
 1078              		.cfi_def_cfa_offset 12
 1079              		@ sp needed
 1080 005e 30BD     		pop	{r4, r5, pc}
 1081              	.LVL87:
 1082              	.L54:
 1083              		.loc 14 8 1 view .LVU291
 1084              		.align	2
 1085              	.L53:
 1086 0060 00000000 		.word	g_led_config
 1087              		.cfi_endproc
 1088              	.LFE405:
 1090              		.section	.text.HUE_PENDULUM_math,"ax",%progbits
 1091              		.align	1
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv4-sp-d16
 1097              	HUE_PENDULUM_math:
 1098              	.LVL88:
 1099              	.LFB412:
 1100              		.file 15 "quantum/rgb_matrix/animations/hue_pendulum_anim.h"
   1:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #ifndef DISABLE_RGB_MATRIX_HUE_PENDULUM
   2:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** RGB_MATRIX_EFFECT(HUE_PENDULUM)
   3:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** 
   5:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** // Change huedelta to adjust range of hue change. 0-255.
   6:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** // Looks better with a low value and slow speed for subtle change.
   7:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** // Hue Pendulum - color changes in a wave to the right before reversing direction
   8:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** static HSV HUE_PENDULUM_math(HSV hsv, uint8_t i, uint8_t time) {
 1101              		.loc 15 8 64 is_stmt 1 view -0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 16
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		.loc 15 8 64 is_stmt 0 view .LVU293
 1106 0000 30B5     		push	{r4, r5, lr}
 1107              		.cfi_def_cfa_offset 12
 1108              		.cfi_offset 4, -12
 1109              		.cfi_offset 5, -8
 1110              		.cfi_offset 14, -4
 1111 0002 85B0     		sub	sp, sp, #20
 1112              		.cfi_def_cfa_offset 32
 1113              		.loc 15 8 64 view .LVU294
 1114 0004 0D46     		mov	r5, r1
 1115 0006 0190     		str	r0, [sp, #4]
 1116 0008 C4B2     		uxtb	r4, r0
 1117              	.LVL89:
   9:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     uint8_t huedelta = 12;
 1118              		.loc 15 9 5 is_stmt 1 view .LVU295
  10:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     hsv.h            = hsv.h + scale8(abs8(sin8(time) + (g_led_config.point[i].x) - 128) * 2, huede
 1119              		.loc 15 10 5 view .LVU296
 1120              		.loc 15 10 44 is_stmt 0 view .LVU297
 1121 000a 1046     		mov	r0, r2
 1122 000c FFF7FEFF 		bl	sin8_C
 1123              	.LVL90:
 1124              		.loc 15 10 79 view .LVU298
 1125 0010 2C35     		adds	r5, r5, #44
 1126              		.loc 15 10 55 view .LVU299
 1127 0012 124B     		ldr	r3, .L57
 1128 0014 13F81520 		ldrb	r2, [r3, r5, lsl #1]	@ zero_extendqisi2
 1129 0018 1044     		add	r0, r0, r2
 1130 001a C2B2     		uxtb	r2, r0
 1131              		.loc 15 10 83 view .LVU300
 1132 001c A2F18003 		sub	r3, r2, #128
 1133              		.loc 15 10 39 view .LVU301
 1134 0020 5BB2     		sxtb	r3, r3
 1135              	.LVL91:
 1136              	.LBB136:
 1137              	.LBI136:
 404:./lib/lib8tion/math8.h **** {
 1138              		.loc 1 404 33 is_stmt 1 view .LVU302
 1139              	.LBB137:
 407:./lib/lib8tion/math8.h ****     return i;
 1140              		.loc 1 407 5 view .LVU303
 407:./lib/lib8tion/math8.h ****     return i;
 1141              		.loc 1 407 7 is_stmt 0 view .LVU304
 1142 0022 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 1143              		.loc 1 407 16 is_stmt 1 view .LVU305
 407:./lib/lib8tion/math8.h ****     return i;
 1144              		.loc 1 407 18 is_stmt 0 view .LVU306
 1145 0024 BCBF     		itt	lt
 1146 0026 C2F18002 		rsblt	r2, r2, #128
 1147 002a 53B2     		sxtblt	r3, r2
 1148              	.LVL92:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1149              		.loc 1 408 5 is_stmt 1 view .LVU307
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1150              		.loc 1 408 5 is_stmt 0 view .LVU308
 1151              	.LBE137:
 1152              	.LBE136:
 1153              	.LBB138:
 1154              	.LBI138:
  20:./lib/lib8tion/scale8.h **** {
 1155              		.loc 4 20 34 is_stmt 1 view .LVU309
 1156              	.LBB139:
 1157              		.loc 4 26 5 view .LVU310
 1158              		.loc 4 26 5 is_stmt 0 view .LVU311
 1159              	.LBE139:
 1160              	.LBE138:
  11:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     return hsv;
 1161              		.loc 15 11 5 is_stmt 1 view .LVU312
  10:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     return hsv;
 1162              		.loc 15 10 32 is_stmt 0 view .LVU313
 1163 002c 5B00     		lsls	r3, r3, #1
 1164              	.LVL93:
 1165              	.LBB141:
 1166              	.LBB140:
 1167              		.loc 4 26 25 view .LVU314
 1168 002e 03F0FE03 		and	r3, r3, #254
 1169 0032 03EB4303 		add	r3, r3, r3, lsl #1
 1170              	.LBE140:
 1171              	.LBE141:
  10:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     return hsv;
 1172              		.loc 15 10 30 view .LVU315
 1173 0036 04EB9313 		add	r3, r4, r3, lsr #6
 1174              		.loc 15 11 12 view .LVU316
 1175 003a 8DF80430 		strb	r3, [sp, #4]
 1176 003e 019B     		ldr	r3, [sp, #4]
 1177 0040 0020     		movs	r0, #0
 1178              	.LVL94:
 1179              		.loc 15 11 12 view .LVU317
 1180 0042 DAB2     		uxtb	r2, r3
 1181              		.loc 15 11 12 view .LVU318
 1182 0044 62F30700 		bfi	r0, r2, #0, #8
 1183 0048 C3F30722 		ubfx	r2, r3, #8, #8
 1184 004c 62F30F20 		bfi	r0, r2, #8, #8
 1185 0050 C3F30743 		ubfx	r3, r3, #16, #8
 1186 0054 63F31740 		bfi	r0, r3, #16, #8
  12:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** }
 1187              		.loc 15 12 1 view .LVU319
 1188 0058 05B0     		add	sp, sp, #20
 1189              		.cfi_def_cfa_offset 12
 1190              		@ sp needed
 1191 005a 30BD     		pop	{r4, r5, pc}
 1192              	.L58:
 1193              		.align	2
 1194              	.L57:
 1195 005c 00000000 		.word	g_led_config
 1196              		.cfi_endproc
 1197              	.LFE412:
 1199              		.section	.text.HUE_WAVE_math,"ax",%progbits
 1200              		.align	1
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1204              		.fpu fpv4-sp-d16
 1206              	HUE_WAVE_math:
 1207              	.LVL95:
 1208              	.LFB414:
 1209              		.file 16 "quantum/rgb_matrix/animations/hue_wave_anim.h"
   1:quantum/rgb_matrix/animations/hue_wave_anim.h **** #ifndef DISABLE_RGB_MATRIX_HUE_WAVE
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** RGB_MATRIX_EFFECT(HUE_WAVE)
   3:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/hue_wave_anim.h **** 
   5:quantum/rgb_matrix/animations/hue_wave_anim.h **** // Change huedelta to adjust range of hue change. 0-255.
   6:quantum/rgb_matrix/animations/hue_wave_anim.h **** // Looks better with a low value and slow speed for subtle change.
   7:quantum/rgb_matrix/animations/hue_wave_anim.h **** // Hue Wave - color changes in a wave to the right
   8:quantum/rgb_matrix/animations/hue_wave_anim.h **** static HSV HUE_WAVE_math(HSV hsv, uint8_t i, uint8_t time) {
 1210              		.loc 16 8 60 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 16
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215              		.loc 16 8 60 is_stmt 0 view .LVU321
 1216 0000 84B0     		sub	sp, sp, #16
 1217              		.cfi_def_cfa_offset 16
   9:quantum/rgb_matrix/animations/hue_wave_anim.h ****     uint8_t huedelta = 24;
  10:quantum/rgb_matrix/animations/hue_wave_anim.h ****     hsv.h            = hsv.h + scale8(abs8(g_led_config.point[i].x - time), huedelta);
 1218              		.loc 16 10 65 view .LVU322
 1219 0002 114B     		ldr	r3, .L61
   8:quantum/rgb_matrix/animations/hue_wave_anim.h ****     uint8_t huedelta = 24;
 1220              		.loc 16 8 60 view .LVU323
 1221 0004 0190     		str	r0, [sp, #4]
 1222              		.loc 16 10 65 view .LVU324
 1223 0006 2C31     		adds	r1, r1, #44
 1224              	.LVL96:
 1225              		.loc 16 10 65 view .LVU325
 1226 0008 C0B2     		uxtb	r0, r0
 1227              	.LVL97:
   9:quantum/rgb_matrix/animations/hue_wave_anim.h ****     uint8_t huedelta = 24;
 1228              		.loc 16 9 5 is_stmt 1 view .LVU326
 1229              		.loc 16 10 5 view .LVU327
 1230              		.loc 16 10 65 is_stmt 0 view .LVU328
 1231 000a 13F81110 		ldrb	r1, [r3, r1, lsl #1]	@ zero_extendqisi2
 1232              		.loc 16 10 68 view .LVU329
 1233 000e 8B1A     		subs	r3, r1, r2
 1234              		.loc 16 10 39 view .LVU330
 1235 0010 5BB2     		sxtb	r3, r3
 1236              	.LVL98:
 1237              	.LBB142:
 1238              	.LBI142:
 404:./lib/lib8tion/math8.h **** {
 1239              		.loc 1 404 33 is_stmt 1 view .LVU331
 1240              	.LBB143:
 407:./lib/lib8tion/math8.h ****     return i;
 1241              		.loc 1 407 5 view .LVU332
 407:./lib/lib8tion/math8.h ****     return i;
 1242              		.loc 1 407 7 is_stmt 0 view .LVU333
 1243 0012 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 1244              		.loc 1 407 16 is_stmt 1 view .LVU334
 407:./lib/lib8tion/math8.h ****     return i;
 1245              		.loc 1 407 18 is_stmt 0 view .LVU335
 1246 0014 BCBF     		itt	lt
 1247 0016 521A     		sublt	r2, r2, r1
 1248              	.LVL99:
 407:./lib/lib8tion/math8.h ****     return i;
 1249              		.loc 1 407 18 view .LVU336
 1250 0018 53B2     		sxtblt	r3, r2
 1251              	.LVL100:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1252              		.loc 1 408 5 is_stmt 1 view .LVU337
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1253              		.loc 1 408 5 is_stmt 0 view .LVU338
 1254              	.LBE143:
 1255              	.LBE142:
 1256              	.LBB144:
 1257              	.LBI144:
  20:./lib/lib8tion/scale8.h **** {
 1258              		.loc 4 20 34 is_stmt 1 view .LVU339
 1259              	.LBB145:
 1260              		.loc 4 26 5 view .LVU340
 1261              		.loc 4 26 5 is_stmt 0 view .LVU341
 1262              	.LBE145:
 1263              	.LBE144:
  11:quantum/rgb_matrix/animations/hue_wave_anim.h ****     return hsv;
 1264              		.loc 16 11 5 is_stmt 1 view .LVU342
 1265              	.LBB147:
 1266              	.LBB146:
 1267              		.loc 4 26 25 is_stmt 0 view .LVU343
 1268 001a DBB2     		uxtb	r3, r3
 1269              	.LVL101:
 1270              		.loc 4 26 25 view .LVU344
 1271 001c 03EB4303 		add	r3, r3, r3, lsl #1
 1272              	.LVL102:
 1273              		.loc 4 26 25 view .LVU345
 1274              	.LBE146:
 1275              	.LBE147:
  10:quantum/rgb_matrix/animations/hue_wave_anim.h ****     return hsv;
 1276              		.loc 16 10 30 view .LVU346
 1277 0020 00EB5313 		add	r3, r0, r3, lsr #5
 1278              		.loc 16 11 12 view .LVU347
 1279 0024 8DF80430 		strb	r3, [sp, #4]
 1280 0028 019B     		ldr	r3, [sp, #4]
 1281 002a 0020     		movs	r0, #0
 1282 002c DAB2     		uxtb	r2, r3
 1283              		.loc 16 11 12 view .LVU348
 1284 002e 62F30700 		bfi	r0, r2, #0, #8
 1285 0032 C3F30722 		ubfx	r2, r3, #8, #8
 1286 0036 62F30F20 		bfi	r0, r2, #8, #8
 1287 003a C3F30743 		ubfx	r3, r3, #16, #8
 1288 003e 63F31740 		bfi	r0, r3, #16, #8
  12:quantum/rgb_matrix/animations/hue_wave_anim.h **** }
 1289              		.loc 16 12 1 view .LVU349
 1290 0042 04B0     		add	sp, sp, #16
 1291              		.cfi_def_cfa_offset 0
 1292              		@ sp needed
 1293 0044 7047     		bx	lr
 1294              	.L62:
 1295 0046 00BF     		.align	2
 1296              	.L61:
 1297 0048 00000000 		.word	g_led_config
 1298              		.cfi_endproc
 1299              	.LFE414:
 1301              		.section	.text.atan2_8,"ax",%progbits
 1302              		.align	1
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1306              		.fpu fpv4-sp-d16
 1308              	atan2_8:
 1309              	.LVL103:
 1310              	.LFB337:
 245:./lib/lib8tion/trig8.h **** 
 246:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of cos(x). This approximation never varies more than
 247:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 248:./lib/lib8tion/trig8.h **** ///
 249:./lib/lib8tion/trig8.h **** ///     float s = (cos(x) * 128.0) + 128;
 250:./lib/lib8tion/trig8.h **** ///
 251:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 252:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 253:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t cos8( uint8_t theta)
 254:./lib/lib8tion/trig8.h **** {
 255:./lib/lib8tion/trig8.h ****     return sin8( theta + 64);
 256:./lib/lib8tion/trig8.h **** }
 257:./lib/lib8tion/trig8.h **** 
 258:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of atan2(x).
 259:./lib/lib8tion/trig8.h **** /// @returns atan2, value between 0 and 255
 260:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t atan2_8(int16_t dy, int16_t dx)
 261:./lib/lib8tion/trig8.h **** {
 1311              		.loc 2 261 1 is_stmt 1 view -0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 0
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 262:./lib/lib8tion/trig8.h ****     if (dy == 0)
 1315              		.loc 2 262 5 view .LVU351
 261:./lib/lib8tion/trig8.h ****     if (dy == 0)
 1316              		.loc 2 261 1 is_stmt 0 view .LVU352
 1317 0000 10B5     		push	{r4, lr}
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 4, -8
 1320              		.cfi_offset 14, -4
 1321              		.loc 2 262 8 view .LVU353
 1322 0002 0446     		mov	r4, r0
 1323 0004 20B9     		cbnz	r0, .L64
 263:./lib/lib8tion/trig8.h ****     {
 264:./lib/lib8tion/trig8.h ****         if (dx >= 0)
 1324              		.loc 2 264 9 is_stmt 1 view .LVU354
 265:./lib/lib8tion/trig8.h ****             return 0;
 266:./lib/lib8tion/trig8.h ****         else
 267:./lib/lib8tion/trig8.h ****             return 128;
 1325              		.loc 2 267 20 is_stmt 0 view .LVU355
 1326 0006 0029     		cmp	r1, #0
 1327 0008 ACBF     		ite	ge
 1328 000a 0020     		movge	r0, #0
 1329              	.LVL104:
 1330              		.loc 2 267 20 view .LVU356
 1331 000c 8020     		movlt	r0, #128
 1332              	.L65:
 268:./lib/lib8tion/trig8.h ****     }
 269:./lib/lib8tion/trig8.h **** 
 270:./lib/lib8tion/trig8.h ****     int16_t abs_y = dy > 0 ? dy : -dy;
 271:./lib/lib8tion/trig8.h ****     int8_t a;
 272:./lib/lib8tion/trig8.h **** 
 273:./lib/lib8tion/trig8.h ****     if (dx >= 0)
 274:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 275:./lib/lib8tion/trig8.h ****     else
 276:./lib/lib8tion/trig8.h ****         a = 96 - (32 * (dx + abs_y) / (abs_y - dx));
 277:./lib/lib8tion/trig8.h **** 
 278:./lib/lib8tion/trig8.h ****     if (dy < 0)
 279:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 280:./lib/lib8tion/trig8.h ****     return a;
 281:./lib/lib8tion/trig8.h **** }
 1333              		.loc 2 281 1 view .LVU357
 1334 000e 10BD     		pop	{r4, pc}
 1335              	.LVL105:
 1336              	.L64:
 1337              	.LBB150:
 1338              	.LBI150:
 260:./lib/lib8tion/trig8.h **** {
 1339              		.loc 2 260 20 is_stmt 1 view .LVU358
 1340              	.LBB151:
 270:./lib/lib8tion/trig8.h ****     int8_t a;
 1341              		.loc 2 270 5 view .LVU359
 271:./lib/lib8tion/trig8.h **** 
 1342              		.loc 2 271 5 view .LVU360
 273:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 1343              		.loc 2 273 5 view .LVU361
 270:./lib/lib8tion/trig8.h ****     int8_t a;
 1344              		.loc 2 270 33 is_stmt 0 view .LVU362
 1345 0010 80EAE072 		eor	r2, r0, r0, asr #31
 1346 0014 A2EBE072 		sub	r2, r2, r0, asr #31
 274:./lib/lib8tion/trig8.h ****     else
 1347              		.loc 2 274 28 view .LVU363
 1348 0018 13B2     		sxth	r3, r2
 273:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 1349              		.loc 2 273 8 view .LVU364
 1350 001a 0029     		cmp	r1, #0
 274:./lib/lib8tion/trig8.h ****     else
 1351              		.loc 2 274 9 is_stmt 1 view .LVU365
 274:./lib/lib8tion/trig8.h ****     else
 1352              		.loc 2 274 28 is_stmt 0 view .LVU366
 1353 001c A6BF     		itte	ge
 1354 001e CB1A     		subge	r3, r1, r3
 274:./lib/lib8tion/trig8.h ****     else
 1355              		.loc 2 274 22 view .LVU367
 1356 0020 5B01     		lslge	r3, r3, #5
 276:./lib/lib8tion/trig8.h **** 
 1357              		.loc 2 276 46 view .LVU368
 1358 0022 5B1A     		sublt	r3, r3, r1
 274:./lib/lib8tion/trig8.h ****     else
 1359              		.loc 2 274 43 view .LVU369
 1360 0024 01FA82F2 		sxtah	r2, r1, r2
 276:./lib/lib8tion/trig8.h **** 
 1361              		.loc 2 276 22 view .LVU370
 1362 0028 B5BF     		itete	lt
 1363 002a 5201     		lsllt	r2, r2, #5
 274:./lib/lib8tion/trig8.h ****     else
 1364              		.loc 2 274 37 view .LVU371
 1365 002c 93FBF2F3 		sdivge	r3, r3, r2
 276:./lib/lib8tion/trig8.h **** 
 1366              		.loc 2 276 37 view .LVU372
 1367 0030 92FBF3F3 		sdivlt	r3, r2, r3
 274:./lib/lib8tion/trig8.h ****     else
 1368              		.loc 2 274 16 view .LVU373
 1369 0034 C3F12003 		rsbge	r3, r3, #32
 276:./lib/lib8tion/trig8.h **** 
 1370              		.loc 2 276 9 is_stmt 1 view .LVU374
 276:./lib/lib8tion/trig8.h **** 
 1371              		.loc 2 276 16 is_stmt 0 view .LVU375
 1372 0038 B8BF     		it	lt
 1373 003a C3F16003 		rsblt	r3, r3, #96
 276:./lib/lib8tion/trig8.h **** 
 1374              		.loc 2 276 11 view .LVU376
 1375 003e 5BB2     		sxtb	r3, r3
 1376              	.LVL106:
 278:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 1377              		.loc 2 278 5 is_stmt 1 view .LVU377
 279:./lib/lib8tion/trig8.h ****     return a;
 1378              		.loc 2 279 16 is_stmt 0 view .LVU378
 1379 0040 D8B2     		uxtb	r0, r3
 1380              	.LVL107:
 278:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 1381              		.loc 2 278 8 view .LVU379
 1382 0042 002C     		cmp	r4, #0
 279:./lib/lib8tion/trig8.h ****     return a;
 1383              		.loc 2 279 9 is_stmt 1 view .LVU380
 279:./lib/lib8tion/trig8.h ****     return a;
 1384              		.loc 2 279 16 is_stmt 0 view .LVU381
 1385 0044 BCBF     		itt	lt
 1386 0046 4042     		rsblt	r0, r0, #0
 1387 0048 C0B2     		uxtblt	r0, r0
 1388 004a E0E7     		b	.L65
 1389              	.LBE151:
 1390              	.LBE150:
 1391              		.cfi_endproc
 1392              	.LFE337:
 1394              		.section	.text.BAND_PINWHEEL_SAT_math,"ax",%progbits
 1395              		.align	1
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv4-sp-d16
 1401              	BAND_PINWHEEL_SAT_math:
 1402              	.LVL108:
 1403              	.LFB377:
 1404              		.file 17 "quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h"
   1:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_SAT
   2:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_SAT)
   3:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** static HSV BAND_PINWHEEL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1405              		.loc 17 5 82 is_stmt 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 16
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              		.loc 17 5 82 is_stmt 0 view .LVU383
 1410 0000 30B5     		push	{r4, r5, lr}
 1411              		.cfi_def_cfa_offset 12
 1412              		.cfi_offset 4, -12
 1413              		.cfi_offset 5, -8
 1414              		.cfi_offset 14, -4
 1415 0002 85B0     		sub	sp, sp, #20
 1416              		.cfi_def_cfa_offset 32
 1417 0004 C0F30725 		ubfx	r5, r0, #8, #8
 1418              	.LVL109:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     hsv.s = scale8(hsv.s - time - atan2_8(dy, dx) * 3, hsv.s);
 1419              		.loc 17 6 5 is_stmt 1 view .LVU384
 1420              		.loc 17 6 26 is_stmt 0 view .LVU385
 1421 0008 EB1A     		subs	r3, r5, r3
 1422              	.LVL110:
   5:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     hsv.s = scale8(hsv.s - time - atan2_8(dy, dx) * 3, hsv.s);
 1423              		.loc 17 5 82 view .LVU386
 1424 000a 0190     		str	r0, [sp, #4]
 1425              		.loc 17 6 35 view .LVU387
 1426 000c 1046     		mov	r0, r2
 1427              		.loc 17 6 26 view .LVU388
 1428 000e DCB2     		uxtb	r4, r3
 1429              		.loc 17 6 35 view .LVU389
 1430 0010 FFF7FEFF 		bl	atan2_8
 1431              	.LVL111:
 1432              	.LBB152:
 1433              	.LBI152:
  20:./lib/lib8tion/scale8.h **** {
 1434              		.loc 4 20 34 is_stmt 1 view .LVU390
 1435              	.LBB153:
 1436              		.loc 4 26 5 view .LVU391
 1437              		.loc 4 26 5 is_stmt 0 view .LVU392
 1438              	.LBE153:
 1439              	.LBE152:
   7:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1440              		.loc 17 7 5 is_stmt 1 view .LVU393
   6:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1441              		.loc 17 6 13 is_stmt 0 view .LVU394
 1442 0014 C0EB8013 		rsb	r3, r0, r0, lsl #6
 1443 0018 00EB8300 		add	r0, r0, r3, lsl #2
 1444              	.LVL112:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1445              		.loc 17 6 13 view .LVU395
 1446 001c 2044     		add	r0, r0, r4
 1447              	.LBB155:
 1448              	.LBB154:
 1449              		.loc 4 26 25 view .LVU396
 1450 001e C0B2     		uxtb	r0, r0
 1451 0020 10FB05F0 		smulbb	r0, r0, r5
 1452              		.loc 4 26 47 view .LVU397
 1453 0024 0012     		asrs	r0, r0, #8
 1454 0026 8DF80500 		strb	r0, [sp, #5]
 1455              	.LBE154:
 1456              	.LBE155:
 1457              		.loc 17 7 12 view .LVU398
 1458 002a 019B     		ldr	r3, [sp, #4]
 1459 002c 0020     		movs	r0, #0
 1460 002e DAB2     		uxtb	r2, r3
 1461 0030 62F30700 		bfi	r0, r2, #0, #8
 1462 0034 C3F30722 		ubfx	r2, r3, #8, #8
 1463 0038 62F30F20 		bfi	r0, r2, #8, #8
 1464 003c C3F30743 		ubfx	r3, r3, #16, #8
 1465 0040 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** }
 1466              		.loc 17 8 1 view .LVU399
 1467 0044 05B0     		add	sp, sp, #20
 1468              		.cfi_def_cfa_offset 12
 1469              		@ sp needed
 1470 0046 30BD     		pop	{r4, r5, pc}
 1471              		.cfi_endproc
 1472              	.LFE377:
 1474              		.section	.text.BAND_PINWHEEL_VAL_math,"ax",%progbits
 1475              		.align	1
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1479              		.fpu fpv4-sp-d16
 1481              	BAND_PINWHEEL_VAL_math:
 1482              	.LVL113:
 1483              	.LFB379:
 1484              		.file 18 "quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h"
   1:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_VAL
   2:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_VAL)
   3:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** static HSV BAND_PINWHEEL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1485              		.loc 18 5 82 is_stmt 1 view -0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 16
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              		.loc 18 5 82 is_stmt 0 view .LVU401
 1490 0000 30B5     		push	{r4, r5, lr}
 1491              		.cfi_def_cfa_offset 12
 1492              		.cfi_offset 4, -12
 1493              		.cfi_offset 5, -8
 1494              		.cfi_offset 14, -4
 1495 0002 85B0     		sub	sp, sp, #20
 1496              		.cfi_def_cfa_offset 32
 1497 0004 C0F30745 		ubfx	r5, r0, #16, #8
 1498              	.LVL114:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     hsv.v = scale8(hsv.v - time - atan2_8(dy, dx) * 3, hsv.v);
 1499              		.loc 18 6 5 is_stmt 1 view .LVU402
 1500              		.loc 18 6 26 is_stmt 0 view .LVU403
 1501 0008 EB1A     		subs	r3, r5, r3
 1502              	.LVL115:
   5:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     hsv.v = scale8(hsv.v - time - atan2_8(dy, dx) * 3, hsv.v);
 1503              		.loc 18 5 82 view .LVU404
 1504 000a 0190     		str	r0, [sp, #4]
 1505              		.loc 18 6 35 view .LVU405
 1506 000c 1046     		mov	r0, r2
 1507              		.loc 18 6 26 view .LVU406
 1508 000e DCB2     		uxtb	r4, r3
 1509              		.loc 18 6 35 view .LVU407
 1510 0010 FFF7FEFF 		bl	atan2_8
 1511              	.LVL116:
 1512              	.LBB156:
 1513              	.LBI156:
  20:./lib/lib8tion/scale8.h **** {
 1514              		.loc 4 20 34 is_stmt 1 view .LVU408
 1515              	.LBB157:
 1516              		.loc 4 26 5 view .LVU409
 1517              		.loc 4 26 5 is_stmt 0 view .LVU410
 1518              	.LBE157:
 1519              	.LBE156:
   7:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     return hsv;
 1520              		.loc 18 7 5 is_stmt 1 view .LVU411
   6:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     return hsv;
 1521              		.loc 18 6 13 is_stmt 0 view .LVU412
 1522 0014 C0EB8013 		rsb	r3, r0, r0, lsl #6
 1523 0018 00EB8300 		add	r0, r0, r3, lsl #2
 1524              	.LVL117:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     return hsv;
 1525              		.loc 18 6 13 view .LVU413
 1526 001c 2044     		add	r0, r0, r4
 1527              	.LBB159:
 1528              	.LBB158:
 1529              		.loc 4 26 25 view .LVU414
 1530 001e C0B2     		uxtb	r0, r0
 1531 0020 10FB05F0 		smulbb	r0, r0, r5
 1532              		.loc 4 26 47 view .LVU415
 1533 0024 0012     		asrs	r0, r0, #8
 1534 0026 8DF80600 		strb	r0, [sp, #6]
 1535              	.LBE158:
 1536              	.LBE159:
 1537              		.loc 18 7 12 view .LVU416
 1538 002a 019B     		ldr	r3, [sp, #4]
 1539 002c 0020     		movs	r0, #0
 1540 002e DAB2     		uxtb	r2, r3
 1541 0030 62F30700 		bfi	r0, r2, #0, #8
 1542 0034 C3F30722 		ubfx	r2, r3, #8, #8
 1543 0038 62F30F20 		bfi	r0, r2, #8, #8
 1544 003c C3F30743 		ubfx	r3, r3, #16, #8
 1545 0040 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** }
 1546              		.loc 18 8 1 view .LVU417
 1547 0044 05B0     		add	sp, sp, #20
 1548              		.cfi_def_cfa_offset 12
 1549              		@ sp needed
 1550 0046 30BD     		pop	{r4, r5, pc}
 1551              		.cfi_endproc
 1552              	.LFE379:
 1554              		.section	.text.BAND_SPIRAL_SAT_math,"ax",%progbits
 1555              		.align	1
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1559              		.fpu fpv4-sp-d16
 1561              	BAND_SPIRAL_SAT_math:
 1562              	.LVL118:
 1563              	.LFB381:
 1564              		.file 19 "quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h"
   1:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_SAT
   2:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_SAT)
   3:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** static HSV BAND_SPIRAL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1565              		.loc 19 5 94 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 4, pretend = 0, frame = 16
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              		.loc 19 5 94 is_stmt 0 view .LVU419
 1570 0000 30B5     		push	{r4, r5, lr}
 1571              		.cfi_def_cfa_offset 12
 1572              		.cfi_offset 4, -12
 1573              		.cfi_offset 5, -8
 1574              		.cfi_offset 14, -4
 1575 0002 85B0     		sub	sp, sp, #20
 1576              		.cfi_def_cfa_offset 32
 1577 0004 C0F30725 		ubfx	r5, r0, #8, #8
 1578              	.LVL119:
   6:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     hsv.s = scale8(hsv.s + dist - time - atan2_8(dy, dx), hsv.s);
 1579              		.loc 19 6 5 is_stmt 1 view .LVU420
 1580              		.loc 19 6 33 is_stmt 0 view .LVU421
 1581 0008 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     hsv.s = scale8(hsv.s + dist - time - atan2_8(dy, dx), hsv.s);
 1582              		.loc 19 5 94 view .LVU422
 1583 000c 0190     		str	r0, [sp, #4]
 1584              		.loc 19 6 42 view .LVU423
 1585 000e 1046     		mov	r0, r2
 1586              		.loc 19 6 33 view .LVU424
 1587 0010 1C1B     		subs	r4, r3, r4
 1588              		.loc 19 6 42 view .LVU425
 1589 0012 FFF7FEFF 		bl	atan2_8
 1590              	.LVL120:
 1591              		.loc 19 6 33 view .LVU426
 1592 0016 2C44     		add	r4, r4, r5
 1593 0018 E4B2     		uxtb	r4, r4
 1594              	.LVL121:
 1595              	.LBB160:
 1596              	.LBI160:
  20:./lib/lib8tion/scale8.h **** {
 1597              		.loc 4 20 34 is_stmt 1 view .LVU427
 1598              	.LBB161:
 1599              		.loc 4 26 5 view .LVU428
 1600              		.loc 4 26 5 is_stmt 0 view .LVU429
 1601              	.LBE161:
 1602              	.LBE160:
   7:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     return hsv;
 1603              		.loc 19 7 5 is_stmt 1 view .LVU430
   6:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     return hsv;
 1604              		.loc 19 6 13 is_stmt 0 view .LVU431
 1605 001a 201A     		subs	r0, r4, r0
 1606              	.LVL122:
 1607              	.LBB163:
 1608              	.LBB162:
 1609              		.loc 4 26 25 view .LVU432
 1610 001c C0B2     		uxtb	r0, r0
 1611 001e 10FB05F0 		smulbb	r0, r0, r5
 1612              		.loc 4 26 47 view .LVU433
 1613 0022 0012     		asrs	r0, r0, #8
 1614 0024 8DF80500 		strb	r0, [sp, #5]
 1615              	.LBE162:
 1616              	.LBE163:
 1617              		.loc 19 7 12 view .LVU434
 1618 0028 019B     		ldr	r3, [sp, #4]
 1619 002a 0020     		movs	r0, #0
 1620 002c DAB2     		uxtb	r2, r3
 1621 002e 62F30700 		bfi	r0, r2, #0, #8
 1622 0032 C3F30722 		ubfx	r2, r3, #8, #8
 1623 0036 62F30F20 		bfi	r0, r2, #8, #8
 1624 003a C3F30743 		ubfx	r3, r3, #16, #8
 1625 003e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** }
 1626              		.loc 19 8 1 view .LVU435
 1627 0042 05B0     		add	sp, sp, #20
 1628              		.cfi_def_cfa_offset 12
 1629              		@ sp needed
 1630 0044 30BD     		pop	{r4, r5, pc}
 1631              		.loc 19 8 1 view .LVU436
 1632              		.cfi_endproc
 1633              	.LFE381:
 1635              		.section	.text.BAND_SPIRAL_VAL_math,"ax",%progbits
 1636              		.align	1
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu fpv4-sp-d16
 1642              	BAND_SPIRAL_VAL_math:
 1643              	.LVL123:
 1644              	.LFB383:
 1645              		.file 20 "quantum/rgb_matrix/animations/colorband_spiral_val_anim.h"
   1:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_VAL
   2:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_VAL)
   3:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** static HSV BAND_SPIRAL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1646              		.loc 20 5 94 is_stmt 1 view -0
 1647              		.cfi_startproc
 1648              		@ args = 4, pretend = 0, frame = 16
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              		.loc 20 5 94 is_stmt 0 view .LVU438
 1651 0000 30B5     		push	{r4, r5, lr}
 1652              		.cfi_def_cfa_offset 12
 1653              		.cfi_offset 4, -12
 1654              		.cfi_offset 5, -8
 1655              		.cfi_offset 14, -4
 1656 0002 85B0     		sub	sp, sp, #20
 1657              		.cfi_def_cfa_offset 32
 1658 0004 C0F30745 		ubfx	r5, r0, #16, #8
 1659              	.LVL124:
   6:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     hsv.v = scale8(hsv.v + dist - time - atan2_8(dy, dx), hsv.v);
 1660              		.loc 20 6 5 is_stmt 1 view .LVU439
 1661              		.loc 20 6 33 is_stmt 0 view .LVU440
 1662 0008 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     hsv.v = scale8(hsv.v + dist - time - atan2_8(dy, dx), hsv.v);
 1663              		.loc 20 5 94 view .LVU441
 1664 000c 0190     		str	r0, [sp, #4]
 1665              		.loc 20 6 42 view .LVU442
 1666 000e 1046     		mov	r0, r2
 1667              		.loc 20 6 33 view .LVU443
 1668 0010 1C1B     		subs	r4, r3, r4
 1669              		.loc 20 6 42 view .LVU444
 1670 0012 FFF7FEFF 		bl	atan2_8
 1671              	.LVL125:
 1672              		.loc 20 6 33 view .LVU445
 1673 0016 2C44     		add	r4, r4, r5
 1674 0018 E4B2     		uxtb	r4, r4
 1675              	.LVL126:
 1676              	.LBB164:
 1677              	.LBI164:
  20:./lib/lib8tion/scale8.h **** {
 1678              		.loc 4 20 34 is_stmt 1 view .LVU446
 1679              	.LBB165:
 1680              		.loc 4 26 5 view .LVU447
 1681              		.loc 4 26 5 is_stmt 0 view .LVU448
 1682              	.LBE165:
 1683              	.LBE164:
   7:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     return hsv;
 1684              		.loc 20 7 5 is_stmt 1 view .LVU449
   6:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     return hsv;
 1685              		.loc 20 6 13 is_stmt 0 view .LVU450
 1686 001a 201A     		subs	r0, r4, r0
 1687              	.LVL127:
 1688              	.LBB167:
 1689              	.LBB166:
 1690              		.loc 4 26 25 view .LVU451
 1691 001c C0B2     		uxtb	r0, r0
 1692 001e 10FB05F0 		smulbb	r0, r0, r5
 1693              		.loc 4 26 47 view .LVU452
 1694 0022 0012     		asrs	r0, r0, #8
 1695 0024 8DF80600 		strb	r0, [sp, #6]
 1696              	.LBE166:
 1697              	.LBE167:
 1698              		.loc 20 7 12 view .LVU453
 1699 0028 019B     		ldr	r3, [sp, #4]
 1700 002a 0020     		movs	r0, #0
 1701 002c DAB2     		uxtb	r2, r3
 1702 002e 62F30700 		bfi	r0, r2, #0, #8
 1703 0032 C3F30722 		ubfx	r2, r3, #8, #8
 1704 0036 62F30F20 		bfi	r0, r2, #8, #8
 1705 003a C3F30743 		ubfx	r3, r3, #16, #8
 1706 003e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** }
 1707              		.loc 20 8 1 view .LVU454
 1708 0042 05B0     		add	sp, sp, #20
 1709              		.cfi_def_cfa_offset 12
 1710              		@ sp needed
 1711 0044 30BD     		pop	{r4, r5, pc}
 1712              		.loc 20 8 1 view .LVU455
 1713              		.cfi_endproc
 1714              	.LFE383:
 1716              		.section	.text.CYCLE_PINWHEEL_math,"ax",%progbits
 1717              		.align	1
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1721              		.fpu fpv4-sp-d16
 1723              	CYCLE_PINWHEEL_math:
 1724              	.LVL128:
 1725              	.LFB397:
 1726              		.file 21 "quantum/rgb_matrix/animations/cycle_pinwheel_anim.h"
   1:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_PINWHEEL
   2:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** RGB_MATRIX_EFFECT(CYCLE_PINWHEEL)
   3:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** static HSV CYCLE_PINWHEEL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1727              		.loc 21 5 79 is_stmt 1 view -0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 16
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              		.loc 21 5 79 is_stmt 0 view .LVU457
 1732 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1733              		.cfi_def_cfa_offset 24
 1734              		.cfi_offset 4, -8
 1735              		.cfi_offset 14, -4
 1736              	.LVL129:
   6:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1737              		.loc 21 6 5 is_stmt 1 view .LVU458
   5:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1738              		.loc 21 5 79 is_stmt 0 view .LVU459
 1739 0002 0190     		str	r0, [sp, #4]
 1740              	.LVL130:
 1741              		.loc 21 6 13 view .LVU460
 1742 0004 1046     		mov	r0, r2
   5:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1743              		.loc 21 5 79 view .LVU461
 1744 0006 1C46     		mov	r4, r3
 1745              		.loc 21 6 13 view .LVU462
 1746 0008 FFF7FEFF 		bl	atan2_8
 1747              	.LVL131:
   7:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     return hsv;
 1748              		.loc 21 7 5 is_stmt 1 view .LVU463
   6:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1749              		.loc 21 6 29 is_stmt 0 view .LVU464
 1750 000c 2044     		add	r0, r0, r4
 1751              	.LVL132:
 1752              		.loc 21 7 12 view .LVU465
 1753 000e 8DF80400 		strb	r0, [sp, #4]
 1754 0012 019B     		ldr	r3, [sp, #4]
 1755 0014 0020     		movs	r0, #0
 1756 0016 DAB2     		uxtb	r2, r3
 1757 0018 62F30700 		bfi	r0, r2, #0, #8
 1758 001c C3F30722 		ubfx	r2, r3, #8, #8
 1759 0020 62F30F20 		bfi	r0, r2, #8, #8
 1760 0024 C3F30743 		ubfx	r3, r3, #16, #8
 1761 0028 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** }
 1762              		.loc 21 8 1 view .LVU466
 1763 002c 04B0     		add	sp, sp, #16
 1764              		.cfi_def_cfa_offset 8
 1765              		@ sp needed
 1766 002e 10BD     		pop	{r4, pc}
 1767              		.cfi_endproc
 1768              	.LFE397:
 1770              		.section	.text.CYCLE_SPIRAL_math,"ax",%progbits
 1771              		.align	1
 1772              		.syntax unified
 1773              		.thumb
 1774              		.thumb_func
 1775              		.fpu fpv4-sp-d16
 1777              	CYCLE_SPIRAL_math:
 1778              	.LVL133:
 1779              	.LFB399:
 1780              		.file 22 "quantum/rgb_matrix/animations/cycle_spiral_anim.h"
   1:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_SPIRAL
   2:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** RGB_MATRIX_EFFECT(CYCLE_SPIRAL)
   3:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** static HSV CYCLE_SPIRAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1781              		.loc 22 5 91 is_stmt 1 view -0
 1782              		.cfi_startproc
 1783              		@ args = 4, pretend = 0, frame = 16
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              		.loc 22 5 91 is_stmt 0 view .LVU468
 1786 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1787              		.cfi_def_cfa_offset 24
 1788              		.cfi_offset 4, -8
 1789              		.cfi_offset 14, -4
 1790              	.LVL134:
   6:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1791              		.loc 22 6 5 is_stmt 1 view .LVU469
 1792              		.loc 22 6 18 is_stmt 0 view .LVU470
 1793 0002 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1794              		.loc 22 5 91 view .LVU471
 1795 0006 0190     		str	r0, [sp, #4]
 1796              	.LVL135:
 1797              		.loc 22 6 18 view .LVU472
 1798 0008 1B1B     		subs	r3, r3, r4
 1799              	.LVL136:
 1800              		.loc 22 6 27 view .LVU473
 1801 000a 1046     		mov	r0, r2
 1802              		.loc 22 6 18 view .LVU474
 1803 000c DCB2     		uxtb	r4, r3
 1804              		.loc 22 6 27 view .LVU475
 1805 000e FFF7FEFF 		bl	atan2_8
 1806              	.LVL137:
   7:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     return hsv;
 1807              		.loc 22 7 5 is_stmt 1 view .LVU476
   6:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1808              		.loc 22 6 25 is_stmt 0 view .LVU477
 1809 0012 201A     		subs	r0, r4, r0
 1810              	.LVL138:
 1811              		.loc 22 7 12 view .LVU478
 1812 0014 8DF80400 		strb	r0, [sp, #4]
 1813 0018 019B     		ldr	r3, [sp, #4]
 1814 001a 0020     		movs	r0, #0
 1815 001c DAB2     		uxtb	r2, r3
 1816 001e 62F30700 		bfi	r0, r2, #0, #8
 1817 0022 C3F30722 		ubfx	r2, r3, #8, #8
 1818 0026 62F30F20 		bfi	r0, r2, #8, #8
 1819 002a C3F30743 		ubfx	r3, r3, #16, #8
 1820 002e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** }
 1821              		.loc 22 8 1 view .LVU479
 1822 0032 04B0     		add	sp, sp, #16
 1823              		.cfi_def_cfa_offset 8
 1824              		@ sp needed
 1825 0034 10BD     		pop	{r4, pc}
 1826              		.loc 22 8 1 view .LVU480
 1827              		.cfi_endproc
 1828              	.LFE399:
 1830              		.section	.text.rgb_matrix_hsv_to_rgb,"ax",%progbits
 1831              		.align	1
 1832              		.weak	rgb_matrix_hsv_to_rgb
 1833              		.syntax unified
 1834              		.thumb
 1835              		.thumb_func
 1836              		.fpu fpv4-sp-d16
 1838              	rgb_matrix_hsv_to_rgb:
 1839              	.LFB363:
 1840              		.file 23 "quantum/rgb_matrix/rgb_matrix.c"
   1:quantum/rgb_matrix/rgb_matrix.c **** /* Copyright 2017 Jason Williams
   2:quantum/rgb_matrix/rgb_matrix.c ****  * Copyright 2017 Jack Humbert
   3:quantum/rgb_matrix/rgb_matrix.c ****  * Copyright 2018 Yiancar
   4:quantum/rgb_matrix/rgb_matrix.c ****  *
   5:quantum/rgb_matrix/rgb_matrix.c ****  * This program is free software: you can redistribute it and/or modify
   6:quantum/rgb_matrix/rgb_matrix.c ****  * it under the terms of the GNU General Public License as published by
   7:quantum/rgb_matrix/rgb_matrix.c ****  * the Free Software Foundation, either version 2 of the License, or
   8:quantum/rgb_matrix/rgb_matrix.c ****  * (at your option) any later version.
   9:quantum/rgb_matrix/rgb_matrix.c ****  *
  10:quantum/rgb_matrix/rgb_matrix.c ****  * This program is distributed in the hope that it will be useful,
  11:quantum/rgb_matrix/rgb_matrix.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:quantum/rgb_matrix/rgb_matrix.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:quantum/rgb_matrix/rgb_matrix.c ****  * GNU General Public License for more details.
  14:quantum/rgb_matrix/rgb_matrix.c ****  *
  15:quantum/rgb_matrix/rgb_matrix.c ****  * You should have received a copy of the GNU General Public License
  16:quantum/rgb_matrix/rgb_matrix.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:quantum/rgb_matrix/rgb_matrix.c ****  */
  18:quantum/rgb_matrix/rgb_matrix.c **** 
  19:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix.h"
  20:quantum/rgb_matrix/rgb_matrix.c **** #include "progmem.h"
  21:quantum/rgb_matrix/rgb_matrix.c **** #include "config.h"
  22:quantum/rgb_matrix/rgb_matrix.c **** #include "eeprom.h"
  23:quantum/rgb_matrix/rgb_matrix.c **** #include <string.h>
  24:quantum/rgb_matrix/rgb_matrix.c **** #include <math.h>
  25:quantum/rgb_matrix/rgb_matrix.c **** 
  26:quantum/rgb_matrix/rgb_matrix.c **** #include <lib/lib8tion/lib8tion.h>
  27:quantum/rgb_matrix/rgb_matrix.c **** 
  28:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_MATRIX_CENTER
  29:quantum/rgb_matrix/rgb_matrix.c **** const led_point_t k_rgb_matrix_center = {112, 32};
  30:quantum/rgb_matrix/rgb_matrix.c **** #else
  31:quantum/rgb_matrix/rgb_matrix.c **** const led_point_t k_rgb_matrix_center = RGB_MATRIX_CENTER;
  32:quantum/rgb_matrix/rgb_matrix.c **** #endif
  33:quantum/rgb_matrix/rgb_matrix.c **** 
  34:quantum/rgb_matrix/rgb_matrix.c **** // clang-format off
  35:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_MATRIX_IMMEDIATE_EEPROM
  36:quantum/rgb_matrix/rgb_matrix.c **** #    define rgb_eeconfig_update(v) rgb_update_eeprom |= v
  37:quantum/rgb_matrix/rgb_matrix.c **** #else
  38:quantum/rgb_matrix/rgb_matrix.c **** #    define rgb_eeconfig_update(v) if (v) eeconfig_update_rgb_matrix()
  39:quantum/rgb_matrix/rgb_matrix.c **** #endif
  40:quantum/rgb_matrix/rgb_matrix.c **** // clang-format on
  41:quantum/rgb_matrix/rgb_matrix.c **** 
  42:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) RGB rgb_matrix_hsv_to_rgb(HSV hsv) { return hsv_to_rgb(hsv); }
 1841              		.loc 23 42 58 is_stmt 1 view -0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 16
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
 1846              		.loc 23 42 60 view .LVU482
 1847              		.loc 23 42 58 is_stmt 0 view .LVU483
 1848 0000 84B0     		sub	sp, sp, #16
 1849              		.cfi_def_cfa_offset 16
 1850              		.loc 23 42 84 view .LVU484
 1851 0002 04B0     		add	sp, sp, #16
 1852              		.cfi_def_cfa_offset 0
 1853              		@ sp needed
 1854              		.loc 23 42 67 view .LVU485
 1855 0004 FFF7FEBF 		b	hsv_to_rgb
 1856              	.LVL139:
 1857              		.cfi_endproc
 1858              	.LFE363:
 1860              		.section	.text.eeconfig_read_rgb_matrix,"ax",%progbits
 1861              		.align	1
 1862              		.global	eeconfig_read_rgb_matrix
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1866              		.fpu fpv4-sp-d16
 1868              	eeconfig_read_rgb_matrix:
 1869              	.LFB416:
  43:quantum/rgb_matrix/rgb_matrix.c **** 
  44:quantum/rgb_matrix/rgb_matrix.c **** // Generic effect runners
  45:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix_runners.inc"
  46:quantum/rgb_matrix/rgb_matrix.c **** 
  47:quantum/rgb_matrix/rgb_matrix.c **** // ------------------------------------------
  48:quantum/rgb_matrix/rgb_matrix.c **** // -----Begin rgb effect includes macros-----
  49:quantum/rgb_matrix/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name)
  50:quantum/rgb_matrix/rgb_matrix.c **** #define RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  51:quantum/rgb_matrix/rgb_matrix.c **** 
  52:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix_effects.inc"
  53:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_KB
  54:quantum/rgb_matrix/rgb_matrix.c **** #    include "rgb_matrix_kb.inc"
  55:quantum/rgb_matrix/rgb_matrix.c **** #endif
  56:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_USER
  57:quantum/rgb_matrix/rgb_matrix.c **** #    include "rgb_matrix_user.inc"
  58:quantum/rgb_matrix/rgb_matrix.c **** #endif
  59:quantum/rgb_matrix/rgb_matrix.c **** 
  60:quantum/rgb_matrix/rgb_matrix.c **** #undef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  61:quantum/rgb_matrix/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
  62:quantum/rgb_matrix/rgb_matrix.c **** // -----End rgb effect includes macros-------
  63:quantum/rgb_matrix/rgb_matrix.c **** // ------------------------------------------
  64:quantum/rgb_matrix/rgb_matrix.c **** 
  65:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_DISABLE_AFTER_TIMEOUT) && !defined(RGB_DISABLE_TIMEOUT)
  66:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_DISABLE_TIMEOUT (RGB_DISABLE_AFTER_TIMEOUT * 1200UL)
  67:quantum/rgb_matrix/rgb_matrix.c **** #endif
  68:quantum/rgb_matrix/rgb_matrix.c **** 
  69:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_DISABLE_TIMEOUT
  70:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_DISABLE_TIMEOUT 0
  71:quantum/rgb_matrix/rgb_matrix.c **** #endif
  72:quantum/rgb_matrix/rgb_matrix.c **** 
  73:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_MAXIMUM_BRIGHTNESS) || RGB_MATRIX_MAXIMUM_BRIGHTNESS > UINT8_MAX
  74:quantum/rgb_matrix/rgb_matrix.c **** #    undef RGB_MATRIX_MAXIMUM_BRIGHTNESS
  75:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_MAXIMUM_BRIGHTNESS UINT8_MAX
  76:quantum/rgb_matrix/rgb_matrix.c **** #endif
  77:quantum/rgb_matrix/rgb_matrix.c **** 
  78:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_HUE_STEP)
  79:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_HUE_STEP 8
  80:quantum/rgb_matrix/rgb_matrix.c **** #endif
  81:quantum/rgb_matrix/rgb_matrix.c **** 
  82:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_SAT_STEP)
  83:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_SAT_STEP 16
  84:quantum/rgb_matrix/rgb_matrix.c **** #endif
  85:quantum/rgb_matrix/rgb_matrix.c **** 
  86:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_VAL_STEP)
  87:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_VAL_STEP 16
  88:quantum/rgb_matrix/rgb_matrix.c **** #endif
  89:quantum/rgb_matrix/rgb_matrix.c **** 
  90:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_SPD_STEP)
  91:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_SPD_STEP 16
  92:quantum/rgb_matrix/rgb_matrix.c **** #endif
  93:quantum/rgb_matrix/rgb_matrix.c **** 
  94:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_MODE)
  95:quantum/rgb_matrix/rgb_matrix.c **** #    ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
  96:quantum/rgb_matrix/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_CYCLE_LEFT_RIGHT
  97:quantum/rgb_matrix/rgb_matrix.c **** #    else
  98:quantum/rgb_matrix/rgb_matrix.c **** // fallback to solid colors if RGB_MATRIX_CYCLE_LEFT_RIGHT is disabled in userspace
  99:quantum/rgb_matrix/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_SOLID_COLOR
 100:quantum/rgb_matrix/rgb_matrix.c **** #    endif
 101:quantum/rgb_matrix/rgb_matrix.c **** #endif
 102:quantum/rgb_matrix/rgb_matrix.c **** 
 103:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_HUE)
 104:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_HUE 0
 105:quantum/rgb_matrix/rgb_matrix.c **** #endif
 106:quantum/rgb_matrix/rgb_matrix.c **** 
 107:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SAT)
 108:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SAT UINT8_MAX
 109:quantum/rgb_matrix/rgb_matrix.c **** #endif
 110:quantum/rgb_matrix/rgb_matrix.c **** 
 111:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_VAL)
 112:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_VAL RGB_MATRIX_MAXIMUM_BRIGHTNESS
 113:quantum/rgb_matrix/rgb_matrix.c **** #endif
 114:quantum/rgb_matrix/rgb_matrix.c **** 
 115:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SPD)
 116:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SPD UINT8_MAX / 2
 117:quantum/rgb_matrix/rgb_matrix.c **** #endif
 118:quantum/rgb_matrix/rgb_matrix.c **** 
 119:quantum/rgb_matrix/rgb_matrix.c **** // globals
 120:quantum/rgb_matrix/rgb_matrix.c **** rgb_config_t rgb_matrix_config;  // TODO: would like to prefix this with g_ for global consistancy,
 121:quantum/rgb_matrix/rgb_matrix.c **** uint32_t     g_rgb_timer;
 122:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_FRAMEBUFFER_EFFECTS
 123:quantum/rgb_matrix/rgb_matrix.c **** uint8_t g_rgb_frame_buffer[MATRIX_ROWS][MATRIX_COLS] = {{0}};
 124:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_FRAMEBUFFER_EFFECTS
 125:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 126:quantum/rgb_matrix/rgb_matrix.c **** last_hit_t g_last_hit_tracker;
 127:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 128:quantum/rgb_matrix/rgb_matrix.c **** 
 129:quantum/rgb_matrix/rgb_matrix.c **** // internals
 130:quantum/rgb_matrix/rgb_matrix.c **** static bool            suspend_state     = false;
 131:quantum/rgb_matrix/rgb_matrix.c **** static bool            rgb_update_eeprom = false;
 132:quantum/rgb_matrix/rgb_matrix.c **** static uint8_t         rgb_last_enable   = UINT8_MAX;
 133:quantum/rgb_matrix/rgb_matrix.c **** static uint8_t         rgb_last_effect   = UINT8_MAX;
 134:quantum/rgb_matrix/rgb_matrix.c **** static effect_params_t rgb_effect_params = {0, LED_FLAG_ALL, false};
 135:quantum/rgb_matrix/rgb_matrix.c **** static rgb_task_states rgb_task_state    = SYNCING;
 136:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 137:quantum/rgb_matrix/rgb_matrix.c **** static uint32_t rgb_anykey_timer;
 138:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 139:quantum/rgb_matrix/rgb_matrix.c **** 
 140:quantum/rgb_matrix/rgb_matrix.c **** // double buffers
 141:quantum/rgb_matrix/rgb_matrix.c **** static uint32_t rgb_timer_buffer;
 142:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 143:quantum/rgb_matrix/rgb_matrix.c **** static last_hit_t last_hit_buffer;
 144:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 145:quantum/rgb_matrix/rgb_matrix.c **** 
 146:quantum/rgb_matrix/rgb_matrix.c **** // split rgb matrix
 147:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 148:quantum/rgb_matrix/rgb_matrix.c **** const uint8_t k_rgb_matrix_split[2] = RGB_MATRIX_SPLIT;
 149:quantum/rgb_matrix/rgb_matrix.c **** #endif
 150:quantum/rgb_matrix/rgb_matrix.c **** 
 151:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_read_rgb_matrix(void) { eeprom_read_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX, si
 1870              		.loc 23 151 37 is_stmt 1 view -0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              		@ link register save eliminated.
 1875              		.loc 23 151 39 view .LVU487
 1876 0000 0248     		ldr	r0, .L78
 1877 0002 0822     		movs	r2, #8
 1878 0004 1C21     		movs	r1, #28
 1879 0006 FFF7FEBF 		b	eeprom_read_block
 1880              	.LVL140:
 1881              	.L79:
 1882 000a 00BF     		.align	2
 1883              	.L78:
 1884 000c 00000000 		.word	rgb_matrix_config
 1885              		.cfi_endproc
 1886              	.LFE416:
 1888              		.section	.text.eeconfig_update_rgb_matrix,"ax",%progbits
 1889              		.align	1
 1890              		.global	eeconfig_update_rgb_matrix
 1891              		.syntax unified
 1892              		.thumb
 1893              		.thumb_func
 1894              		.fpu fpv4-sp-d16
 1896              	eeconfig_update_rgb_matrix:
 1897              	.LFB417:
 152:quantum/rgb_matrix/rgb_matrix.c **** 
 153:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_update_rgb_matrix(void) { eeprom_update_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX
 1898              		.loc 23 153 39 view -0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902              		@ link register save eliminated.
 1903              		.loc 23 153 41 view .LVU489
 1904 0000 0248     		ldr	r0, .L81
 1905 0002 0822     		movs	r2, #8
 1906 0004 1C21     		movs	r1, #28
 1907 0006 FFF7FEBF 		b	eeprom_update_block
 1908              	.LVL141:
 1909              	.L82:
 1910 000a 00BF     		.align	2
 1911              	.L81:
 1912 000c 00000000 		.word	rgb_matrix_config
 1913              		.cfi_endproc
 1914              	.LFE417:
 1916              		.section	.text.eeconfig_update_rgb_matrix_default,"ax",%progbits
 1917              		.align	1
 1918              		.global	eeconfig_update_rgb_matrix_default
 1919              		.syntax unified
 1920              		.thumb
 1921              		.thumb_func
 1922              		.fpu fpv4-sp-d16
 1924              	eeconfig_update_rgb_matrix_default:
 1925              	.LFB418:
 154:quantum/rgb_matrix/rgb_matrix.c **** 
 155:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_update_rgb_matrix_default(void) {
 1926              		.loc 23 155 47 view -0
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 0, uses_anonymous_args = 0
 1930              		@ link register save eliminated.
 156:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("eeconfig_update_rgb_matrix_default\n");
 1931              		.loc 23 156 52 view .LVU491
 157:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 1932              		.loc 23 157 5 view .LVU492
 158:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.mode   = RGB_MATRIX_STARTUP_MODE;
 1933              		.loc 23 158 5 view .LVU493
 157:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 1934              		.loc 23 157 30 is_stmt 0 view .LVU494
 1935 0000 074B     		ldr	r3, .L84
 1936 0002 1A46     		mov	r2, r3
 1937 0004 0521     		movs	r1, #5
 1938 0006 02F8011B 		strb	r1, [r2], #1
 159:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv    = (HSV){RGB_MATRIX_STARTUP_HUE, RGB_MATRIX_STARTUP_SAT, RGB_MATRIX_STA
 1939              		.loc 23 159 5 is_stmt 1 view .LVU495
 1940              		.loc 23 159 30 is_stmt 0 view .LVU496
 1941 000a 0649     		ldr	r1, .L84+4
 1942 000c 0888     		ldrh	r0, [r1]	@ unaligned
 1943 000e 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 1944 0010 9170     		strb	r1, [r2, #2]
 160:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 1945              		.loc 23 160 5 is_stmt 1 view .LVU497
 161:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.flags  = LED_FLAG_ALL;
 1946              		.loc 23 161 5 view .LVU498
 160:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 1947              		.loc 23 160 30 is_stmt 0 view .LVU499
 1948 0012 4FF67F72 		movw	r2, #65407
 1949 0016 9A80     		strh	r2, [r3, #4]	@ movhi
 162:quantum/rgb_matrix/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 1950              		.loc 23 162 5 is_stmt 1 view .LVU500
 159:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 1951              		.loc 23 159 30 is_stmt 0 view .LVU501
 1952 0018 A3F80100 		strh	r0, [r3, #1]	@ unaligned
 1953              		.loc 23 162 5 view .LVU502
 1954 001c FFF7FEBF 		b	eeconfig_update_rgb_matrix
 1955              	.LVL142:
 1956              	.L85:
 1957              		.align	2
 1958              	.L84:
 1959 0020 00000000 		.word	rgb_matrix_config
 1960 0024 00000000 		.word	.LANCHOR1
 1961              		.cfi_endproc
 1962              	.LFE418:
 1964              		.section	.text.eeconfig_debug_rgb_matrix,"ax",%progbits
 1965              		.align	1
 1966              		.global	eeconfig_debug_rgb_matrix
 1967              		.syntax unified
 1968              		.thumb
 1969              		.thumb_func
 1970              		.fpu fpv4-sp-d16
 1972              	eeconfig_debug_rgb_matrix:
 1973              	.LFB419:
 163:quantum/rgb_matrix/rgb_matrix.c **** }
 164:quantum/rgb_matrix/rgb_matrix.c **** 
 165:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_debug_rgb_matrix(void) {
 1974              		.loc 23 165 38 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 166:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config EEPROM\n");
 1979              		.loc 23 166 42 view .LVU504
 167:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.enable = %d\n", rgb_matrix_config.enable);
 1980              		.loc 23 167 73 view .LVU505
 168:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.mode = %d\n", rgb_matrix_config.mode);
 1981              		.loc 23 168 69 view .LVU506
 169:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.h = %d\n", rgb_matrix_config.hsv.h);
 1982              		.loc 23 169 71 view .LVU507
 170:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.s = %d\n", rgb_matrix_config.hsv.s);
 1983              		.loc 23 170 71 view .LVU508
 171:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.v = %d\n", rgb_matrix_config.hsv.v);
 1984              		.loc 23 171 71 view .LVU509
 172:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.speed = %d\n", rgb_matrix_config.speed);
 1985              		.loc 23 172 71 view .LVU510
 173:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.flags = %d\n", rgb_matrix_config.flags);
 1986              		.loc 23 173 71 view .LVU511
 174:quantum/rgb_matrix/rgb_matrix.c **** }
 1987              		.loc 23 174 1 is_stmt 0 view .LVU512
 1988 0000 7047     		bx	lr
 1989              		.cfi_endproc
 1990              	.LFE419:
 1992              		.section	.text.rgb_matrix_map_row_column_to_led_kb,"ax",%progbits
 1993              		.align	1
 1994              		.weak	rgb_matrix_map_row_column_to_led_kb
 1995              		.syntax unified
 1996              		.thumb
 1997              		.thumb_func
 1998              		.fpu fpv4-sp-d16
 2000              	rgb_matrix_map_row_column_to_led_kb:
 2001              	.LVL143:
 2002              	.LFB420:
 175:quantum/rgb_matrix/rgb_matrix.c **** 
 176:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) uint8_t rgb_matrix_map_row_column_to_led_kb(uint8_t row, uint8_t column, uint
 2003              		.loc 23 176 112 is_stmt 1 view -0
 2004              		.cfi_startproc
 2005              		@ args = 0, pretend = 0, frame = 0
 2006              		@ frame_needed = 0, uses_anonymous_args = 0
 2007              		@ link register save eliminated.
 2008              		.loc 23 176 114 view .LVU514
 2009              		.loc 23 176 124 is_stmt 0 view .LVU515
 2010 0000 0020     		movs	r0, #0
 2011              	.LVL144:
 2012              		.loc 23 176 124 view .LVU516
 2013 0002 7047     		bx	lr
 2014              		.cfi_endproc
 2015              	.LFE420:
 2017              		.section	.text.rgb_matrix_map_row_column_to_led,"ax",%progbits
 2018              		.align	1
 2019              		.global	rgb_matrix_map_row_column_to_led
 2020              		.syntax unified
 2021              		.thumb
 2022              		.thumb_func
 2023              		.fpu fpv4-sp-d16
 2025              	rgb_matrix_map_row_column_to_led:
 2026              	.LVL145:
 2027              	.LFB421:
 177:quantum/rgb_matrix/rgb_matrix.c **** 
 178:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_map_row_column_to_led(uint8_t row, uint8_t column, uint8_t *led_i) {
 2028              		.loc 23 178 87 is_stmt 1 view -0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
 179:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2032              		.loc 23 179 5 view .LVU518
 178:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2033              		.loc 23 178 87 is_stmt 0 view .LVU519
 2034 0000 70B5     		push	{r4, r5, r6, lr}
 2035              		.cfi_def_cfa_offset 16
 2036              		.cfi_offset 4, -16
 2037              		.cfi_offset 5, -12
 2038              		.cfi_offset 6, -8
 2039              		.cfi_offset 14, -4
 178:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2040              		.loc 23 178 87 view .LVU520
 2041 0002 0646     		mov	r6, r0
 2042 0004 0D46     		mov	r5, r1
 2043 0006 1446     		mov	r4, r2
 2044              		.loc 23 179 25 view .LVU521
 2045 0008 FFF7FEFF 		bl	rgb_matrix_map_row_column_to_led_kb
 2046              	.LVL146:
 180:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_index = g_led_config.matrix_co[row][column];
 2047              		.loc 23 180 5 is_stmt 1 view .LVU522
 2048              		.loc 23 180 13 is_stmt 0 view .LVU523
 2049 000c 044B     		ldr	r3, .L93
 2050 000e 03EBC603 		add	r3, r3, r6, lsl #3
 2051 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 2052              	.LVL147:
 181:quantum/rgb_matrix/rgb_matrix.c ****     if (led_index != NO_LED) {
 2053              		.loc 23 181 5 is_stmt 1 view .LVU524
 2054              		.loc 23 181 8 is_stmt 0 view .LVU525
 2055 0014 FF2B     		cmp	r3, #255
 182:quantum/rgb_matrix/rgb_matrix.c ****         led_i[led_count] = led_index;
 2056              		.loc 23 182 9 is_stmt 1 view .LVU526
 2057              		.loc 23 182 26 is_stmt 0 view .LVU527
 2058 0016 1EBF     		ittt	ne
 2059 0018 2354     		strbne	r3, [r4, r0]
 183:quantum/rgb_matrix/rgb_matrix.c ****         led_count++;
 2060              		.loc 23 183 9 is_stmt 1 view .LVU528
 2061              		.loc 23 183 18 is_stmt 0 view .LVU529
 2062 001a 0130     		addne	r0, r0, #1
 2063              	.LVL148:
 2064              		.loc 23 183 18 view .LVU530
 2065 001c C0B2     		uxtbne	r0, r0
 2066              	.LVL149:
 184:quantum/rgb_matrix/rgb_matrix.c ****     }
 185:quantum/rgb_matrix/rgb_matrix.c ****     return led_count;
 2067              		.loc 23 185 5 is_stmt 1 view .LVU531
 186:quantum/rgb_matrix/rgb_matrix.c **** }
 2068              		.loc 23 186 1 is_stmt 0 view .LVU532
 2069 001e 70BD     		pop	{r4, r5, r6, pc}
 2070              	.LVL150:
 2071              	.L94:
 2072              		.loc 23 186 1 view .LVU533
 2073              		.align	2
 2074              	.L93:
 2075 0020 00000000 		.word	g_led_config
 2076              		.cfi_endproc
 2077              	.LFE421:
 2079              		.section	.text.rgb_matrix_update_pwm_buffers,"ax",%progbits
 2080              		.align	1
 2081              		.global	rgb_matrix_update_pwm_buffers
 2082              		.syntax unified
 2083              		.thumb
 2084              		.thumb_func
 2085              		.fpu fpv4-sp-d16
 2087              	rgb_matrix_update_pwm_buffers:
 2088              	.LFB422:
 187:quantum/rgb_matrix/rgb_matrix.c **** 
 188:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_update_pwm_buffers(void) { rgb_matrix_driver.flush(); }
 2089              		.loc 23 188 42 is_stmt 1 view -0
 2090              		.cfi_startproc
 2091              		@ args = 0, pretend = 0, frame = 0
 2092              		@ frame_needed = 0, uses_anonymous_args = 0
 2093              		@ link register save eliminated.
 2094              		.loc 23 188 44 view .LVU535
 2095              		.loc 23 188 61 is_stmt 0 view .LVU536
 2096 0000 014B     		ldr	r3, .L96
 2097              		.loc 23 188 44 view .LVU537
 2098 0002 DB68     		ldr	r3, [r3, #12]
 2099 0004 1847     		bx	r3	@ indirect register sibling call
 2100              	.LVL151:
 2101              	.L97:
 2102 0006 00BF     		.align	2
 2103              	.L96:
 2104 0008 00000000 		.word	rgb_matrix_driver
 2105              		.cfi_endproc
 2106              	.LFE422:
 2108              		.section	.text.rgb_matrix_set_color,"ax",%progbits
 2109              		.align	1
 2110              		.global	rgb_matrix_set_color
 2111              		.syntax unified
 2112              		.thumb
 2113              		.thumb_func
 2114              		.fpu fpv4-sp-d16
 2116              	rgb_matrix_set_color:
 2117              	.LVL152:
 2118              	.LFB423:
 189:quantum/rgb_matrix/rgb_matrix.c **** 
 190:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_color(int index, uint8_t red, uint8_t green, uint8_t blue) {
 2119              		.loc 23 190 80 is_stmt 1 view -0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 0
 2122              		@ frame_needed = 0, uses_anonymous_args = 0
 2123              		@ link register save eliminated.
 191:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 192:quantum/rgb_matrix/rgb_matrix.c ****     if (!is_keyboard_left() && index >= k_rgb_matrix_split[0])
 193:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_driver.set_color(index - k_rgb_matrix_split[0], red, green, blue);
 194:quantum/rgb_matrix/rgb_matrix.c ****     else if (is_keyboard_left() && index < k_rgb_matrix_split[0])
 195:quantum/rgb_matrix/rgb_matrix.c **** #endif
 196:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_driver.set_color(index, red, green, blue);
 2124              		.loc 23 196 9 view .LVU539
 190:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 2125              		.loc 23 190 80 is_stmt 0 view .LVU540
 2126 0000 10B4     		push	{r4}
 2127              		.cfi_def_cfa_offset 4
 2128              		.cfi_offset 4, -4
 2129              		.loc 23 196 26 view .LVU541
 2130 0002 034C     		ldr	r4, .L99
 2131              		.loc 23 196 9 view .LVU542
 2132 0004 6468     		ldr	r4, [r4, #4]
 2133 0006 A446     		mov	ip, r4
 197:quantum/rgb_matrix/rgb_matrix.c **** }
 2134              		.loc 23 197 1 view .LVU543
 2135 0008 5DF8044B 		ldr	r4, [sp], #4
 2136              		.cfi_restore 4
 2137              		.cfi_def_cfa_offset 0
 196:quantum/rgb_matrix/rgb_matrix.c **** }
 2138              		.loc 23 196 9 view .LVU544
 2139 000c 6047     		bx	ip	@ indirect register sibling call
 2140              	.LVL153:
 2141              	.L100:
 196:quantum/rgb_matrix/rgb_matrix.c **** }
 2142              		.loc 23 196 9 view .LVU545
 2143 000e 00BF     		.align	2
 2144              	.L99:
 2145 0010 00000000 		.word	rgb_matrix_driver
 2146              		.cfi_endproc
 2147              	.LFE423:
 2149              		.section	.text.effect_runner_dx_dy_dist,"ax",%progbits
 2150              		.align	1
 2151              		.global	effect_runner_dx_dy_dist
 2152              		.syntax unified
 2153              		.thumb
 2154              		.thumb_func
 2155              		.fpu fpv4-sp-d16
 2157              	effect_runner_dx_dy_dist:
 2158              	.LVL154:
 2159              	.LFB364:
 2160              		.file 24 "quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** typedef HSV (*dx_dy_dist_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** bool effect_runner_dx_dy_dist(effect_params_t* params, dx_dy_dist_f effect_func) {
 2161              		.loc 24 5 82 is_stmt 1 view -0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 24
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2165              		.loc 24 6 5 view .LVU547
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2166              		.loc 24 5 82 is_stmt 0 view .LVU548
 2167 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2168              		.cfi_def_cfa_offset 36
 2169              		.cfi_offset 4, -36
 2170              		.cfi_offset 5, -32
 2171              		.cfi_offset 6, -28
 2172              		.cfi_offset 7, -24
 2173              		.cfi_offset 8, -20
 2174              		.cfi_offset 9, -16
 2175              		.cfi_offset 10, -12
 2176              		.cfi_offset 11, -8
 2177              		.cfi_offset 14, -4
   7:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     uint8_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 2);
 2178              		.loc 24 8 61 view .LVU549
 2179 0004 DFF8DC90 		ldr	r9, .L106+8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2180              		.loc 24 6 5 view .LVU550
 2181 0008 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 2182              	.LBB168:
 2183              	.LBB169:
  27:./lib/lib8tion/scale8.h **** #endif
  28:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
  29:./lib/lib8tion/scale8.h **** #if defined(LIB8_ATTINY)
  30:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  31:./lib/lib8tion/scale8.h ****     uint8_t work=i;
  32:./lib/lib8tion/scale8.h **** #else
  33:./lib/lib8tion/scale8.h ****     uint8_t work=0;
  34:./lib/lib8tion/scale8.h **** #endif
  35:./lib/lib8tion/scale8.h ****     uint8_t cnt=0x80;
  36:./lib/lib8tion/scale8.h ****     asm volatile(
  37:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  38:./lib/lib8tion/scale8.h ****         "  inc %[scale]                 \n\t"
  39:./lib/lib8tion/scale8.h ****         "  breq DONE_%=                 \n\t"
  40:./lib/lib8tion/scale8.h ****         "  clr %[work]                  \n\t"
  41:./lib/lib8tion/scale8.h **** #endif
  42:./lib/lib8tion/scale8.h ****         "LOOP_%=:                       \n\t"
  43:./lib/lib8tion/scale8.h ****         /*"  sbrc %[scale], 0             \n\t"
  44:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  45:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  46:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  47:./lib/lib8tion/scale8.h ****         "  clc                          \n\t"*/
  48:./lib/lib8tion/scale8.h ****         "  sbrc %[scale], 0             \n\t"
  49:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  50:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  51:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  52:./lib/lib8tion/scale8.h ****         "  lsr %[cnt]                   \n\t"
  53:./lib/lib8tion/scale8.h ****         "brcc LOOP_%=                   \n\t"
  54:./lib/lib8tion/scale8.h ****         "DONE_%=:                       \n\t"
  55:./lib/lib8tion/scale8.h ****         : [work] "+r" (work), [cnt] "+r" (cnt)
  56:./lib/lib8tion/scale8.h ****         : [scale] "r" (scale), [i] "r" (i)
  57:./lib/lib8tion/scale8.h ****         :
  58:./lib/lib8tion/scale8.h ****       );
  59:./lib/lib8tion/scale8.h ****     return work;
  60:./lib/lib8tion/scale8.h **** #else
  61:./lib/lib8tion/scale8.h ****     asm volatile(
  62:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
  63:./lib/lib8tion/scale8.h ****         // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
  64:./lib/lib8tion/scale8.h ****         "mul %0, %1          \n\t"
  65:./lib/lib8tion/scale8.h ****         // Add i to r0, possibly setting the carry flag
  66:./lib/lib8tion/scale8.h ****         "add r0, %0         \n\t"
  67:./lib/lib8tion/scale8.h ****         // load the immediate 0 into i (note, this does _not_ touch any flags)
  68:./lib/lib8tion/scale8.h ****         "ldi %0, 0x00       \n\t"
  69:./lib/lib8tion/scale8.h ****         // walk and chew gum at the same time
  70:./lib/lib8tion/scale8.h ****         "adc %0, r1          \n\t"
  71:./lib/lib8tion/scale8.h **** #else
  72:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
  73:./lib/lib8tion/scale8.h ****          "mul %0, %1          \n\t"
  74:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
  75:./lib/lib8tion/scale8.h ****          "mov %0, r1          \n\t"
  76:./lib/lib8tion/scale8.h ****          /* Restore r1 to "0"; it's expected to always be that */
  77:./lib/lib8tion/scale8.h **** #endif
  78:./lib/lib8tion/scale8.h ****          "clr __zero_reg__    \n\t"
  79:./lib/lib8tion/scale8.h **** 
  80:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
  81:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
  82:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
  83:./lib/lib8tion/scale8.h **** 
  84:./lib/lib8tion/scale8.h ****     /* Return the result */
  85:./lib/lib8tion/scale8.h ****     return i;
  86:./lib/lib8tion/scale8.h **** #endif
  87:./lib/lib8tion/scale8.h **** #else
  88:./lib/lib8tion/scale8.h **** #error "No implementation for scale8 available."
  89:./lib/lib8tion/scale8.h **** #endif
  90:./lib/lib8tion/scale8.h **** }
  91:./lib/lib8tion/scale8.h **** 
  92:./lib/lib8tion/scale8.h **** 
  93:./lib/lib8tion/scale8.h **** ///  The "video" version of scale8 guarantees that the output will
  94:./lib/lib8tion/scale8.h **** ///  be only be zero if one or both of the inputs are zero.  If both
  95:./lib/lib8tion/scale8.h **** ///  inputs are non-zero, the output is guaranteed to be non-zero.
  96:./lib/lib8tion/scale8.h **** ///  This makes for better 'video'/LED dimming, at the cost of
  97:./lib/lib8tion/scale8.h **** ///  several additional cycles.
  98:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video( uint8_t i, fract8 scale)
  99:./lib/lib8tion/scale8.h **** {
 100:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 101:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 102:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 103:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 104:./lib/lib8tion/scale8.h ****     return j;
 105:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 106:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 107:./lib/lib8tion/scale8.h ****     asm volatile(
 108:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 109:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 110:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 111:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 112:./lib/lib8tion/scale8.h ****         "  clr __zero_reg__\n\t"
 113:./lib/lib8tion/scale8.h ****         "  cpse %[scale], r1\n\t"
 114:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 115:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 116:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 117:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 118:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 119:./lib/lib8tion/scale8.h **** 
 120:./lib/lib8tion/scale8.h ****     return j;
 121:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 122:./lib/lib8tion/scale8.h ****     // asm volatile(
 123:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 124:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 125:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 126:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 127:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 128:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 129:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 130:./lib/lib8tion/scale8.h **** 
 131:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 132:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 133:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 134:./lib/lib8tion/scale8.h **** 
 135:./lib/lib8tion/scale8.h ****     // // Return the result
 136:./lib/lib8tion/scale8.h ****     // return i;
 137:./lib/lib8tion/scale8.h **** #else
 138:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video available."
 139:./lib/lib8tion/scale8.h **** #endif
 140:./lib/lib8tion/scale8.h **** }
 141:./lib/lib8tion/scale8.h **** 
 142:./lib/lib8tion/scale8.h **** 
 143:./lib/lib8tion/scale8.h **** /// This version of scale8 does not clean up the R1 register on AVR
 144:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8's in a row, use this, and
 145:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 146:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 147:./lib/lib8tion/scale8.h **** {
 148:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
 149:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
 150:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * ((uint16_t)(scale)+1)) >> 8;
 151:./lib/lib8tion/scale8.h **** #else
 152:./lib/lib8tion/scale8.h ****     return ((int)i * (int)(scale) ) >> 8;
 153:./lib/lib8tion/scale8.h **** #endif
 154:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 155:./lib/lib8tion/scale8.h ****     asm volatile(
 156:./lib/lib8tion/scale8.h ****       #if (FASTLED_SCALE8_FIXED==1)
 157:./lib/lib8tion/scale8.h ****               // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
 158:./lib/lib8tion/scale8.h ****               "mul %0, %1          \n\t"
 159:./lib/lib8tion/scale8.h ****               // Add i to r0, possibly setting the carry flag
 160:./lib/lib8tion/scale8.h ****               "add r0, %0         \n\t"
 161:./lib/lib8tion/scale8.h ****               // load the immediate 0 into i (note, this does _not_ touch any flags)
 162:./lib/lib8tion/scale8.h ****               "ldi %0, 0x00       \n\t"
 163:./lib/lib8tion/scale8.h ****               // walk and chew gum at the same time
 164:./lib/lib8tion/scale8.h ****               "adc %0, r1          \n\t"
 165:./lib/lib8tion/scale8.h ****       #else
 166:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
 167:./lib/lib8tion/scale8.h ****          "mul %0, %1    \n\t"
 168:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
 169:./lib/lib8tion/scale8.h ****          "mov %0, r1    \n\t"
 170:./lib/lib8tion/scale8.h ****       #endif
 171:./lib/lib8tion/scale8.h ****          /* R1 IS LEFT DIRTY HERE; YOU MUST ZERO IT OUT YOURSELF  */
 172:./lib/lib8tion/scale8.h ****          /* "clr __zero_reg__    \n\t" */
 173:./lib/lib8tion/scale8.h **** 
 174:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
 175:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
 176:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
 177:./lib/lib8tion/scale8.h **** 
 178:./lib/lib8tion/scale8.h ****     // Return the result
 179:./lib/lib8tion/scale8.h ****     return i;
 180:./lib/lib8tion/scale8.h **** #else
 181:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_LEAVING_R1_DIRTY available."
 182:./lib/lib8tion/scale8.h **** #endif
 183:./lib/lib8tion/scale8.h **** }
 184:./lib/lib8tion/scale8.h **** 
 185:./lib/lib8tion/scale8.h **** 
 186:./lib/lib8tion/scale8.h **** /// This version of scale8_video does not clean up the R1 register on AVR
 187:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8_video's in a row, use this, and
 188:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 189:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 190:./lib/lib8tion/scale8.h **** {
 191:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 192:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 193:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 194:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 195:./lib/lib8tion/scale8.h ****     return j;
 196:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 197:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 198:./lib/lib8tion/scale8.h ****     asm volatile(
 199:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 200:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 201:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 202:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 203:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 204:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 205:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 206:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 207:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 208:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 209:./lib/lib8tion/scale8.h **** 
 210:./lib/lib8tion/scale8.h ****     return j;
 211:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 212:./lib/lib8tion/scale8.h ****     // asm volatile(
 213:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 214:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 215:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 216:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 217:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 218:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 219:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 220:./lib/lib8tion/scale8.h **** 
 221:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 222:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 223:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 224:./lib/lib8tion/scale8.h **** 
 225:./lib/lib8tion/scale8.h ****     // // Return the result
 226:./lib/lib8tion/scale8.h ****     // return i;
 227:./lib/lib8tion/scale8.h **** #else
 228:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video_LEAVING_R1_DIRTY available."
 229:./lib/lib8tion/scale8.h **** #endif
 230:./lib/lib8tion/scale8.h **** }
 231:./lib/lib8tion/scale8.h **** 
 232:./lib/lib8tion/scale8.h **** /// Clean up the r1 register after a series of *LEAVING_R1_DIRTY calls
 233:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE void cleanup_R1(void)
 234:./lib/lib8tion/scale8.h **** {
 235:./lib/lib8tion/scale8.h **** #if CLEANUP_R1_AVRASM == 1
 236:./lib/lib8tion/scale8.h ****     // Restore r1 to "0"; it's expected to always be that
 237:./lib/lib8tion/scale8.h ****     asm volatile( "clr __zero_reg__  \n\t" : : : "r1" );
 238:./lib/lib8tion/scale8.h **** #endif
 239:./lib/lib8tion/scale8.h **** }
 240:./lib/lib8tion/scale8.h **** 
 241:./lib/lib8tion/scale8.h **** 
 242:./lib/lib8tion/scale8.h **** /// scale a 16-bit unsigned value by an 8-bit value,
 243:./lib/lib8tion/scale8.h **** ///         considered as numerator of a fraction whose denominator
 244:./lib/lib8tion/scale8.h **** ///         is 256. In other words, it computes i * (scale / 256)
 245:./lib/lib8tion/scale8.h **** 
 246:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t scale16by8( uint16_t i, fract8 scale )
 247:./lib/lib8tion/scale8.h **** {
 248:./lib/lib8tion/scale8.h **** #if SCALE16BY8_C == 1
 249:./lib/lib8tion/scale8.h ****     uint16_t result;
 250:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 251:./lib/lib8tion/scale8.h ****     result = (i * (1+((uint16_t)scale))) >> 8;
 252:./lib/lib8tion/scale8.h **** #else
 253:./lib/lib8tion/scale8.h ****     result = (i * scale) / 256;
 2184              		.loc 4 253 17 view .LVU551
 2185 000a 344B     		ldr	r3, .L106
 2186              	.LBE169:
 2187              	.LBE168:
 2188              		.loc 24 8 20 view .LVU552
 2189 000c 99F80450 		ldrb	r5, [r9, #4]	@ zero_extendqisi2
 2190              	.LBB174:
 2191              	.LBB170:
 2192              		.loc 4 253 17 view .LVU553
 2193 0010 1B88     		ldrh	r3, [r3]
 2194              	.LBE170:
 2195              	.LBE174:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2196              		.loc 24 6 5 view .LVU554
 2197 0012 04EB8404 		add	r4, r4, r4, lsl #2
 2198 0016 A400     		lsls	r4, r4, #2
 2199              	.LBB175:
 2200              	.LBB171:
 2201              		.loc 4 253 17 view .LVU555
 2202 0018 6D08     		lsrs	r5, r5, #1
 2203              	.LBE171:
 2204              	.LBE175:
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2205              		.loc 24 5 82 view .LVU556
 2206 001a 89B0     		sub	sp, sp, #36
 2207              		.cfi_def_cfa_offset 72
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2208              		.loc 24 6 5 view .LVU557
 2209 001c E4B2     		uxtb	r4, r4
 2210              	.LVL155:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2211              		.loc 24 6 5 is_stmt 1 view .LVU558
 2212              	.LBB176:
 2213              	.LBB172:
 2214              		.loc 4 253 17 is_stmt 0 view .LVU559
 2215 001e 5D43     		muls	r5, r3, r5
 2216              	.LBE172:
 2217              	.LBE176:
 2218              		.loc 24 8 13 view .LVU560
 2219 0020 C5F30723 		ubfx	r3, r5, #8, #8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2220              		.loc 24 6 5 view .LVU561
 2221 0024 04F11406 		add	r6, r4, #20
 2222 0028 F6B2     		uxtb	r6, r6
 2223              	.LVL156:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2224              		.loc 24 6 5 is_stmt 1 view .LVU562
 2225              		.loc 24 8 13 is_stmt 0 view .LVU563
 2226 002a 0293     		str	r3, [sp, #8]
 2227 002c 2C4B     		ldr	r3, .L106+4
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2228              		.loc 24 5 82 view .LVU564
 2229 002e 0391     		str	r1, [sp, #12]
 2230 0030 622E     		cmp	r6, #98
 2231 0032 B346     		mov	fp, r6
 2232 0034 8046     		mov	r8, r0
 2233 0036 28BF     		it	cs
 2234 0038 4FF0620B 		movcs	fp, #98
 2235              	.LVL157:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2236              		.loc 24 6 44 is_stmt 1 view .LVU565
 2237              		.loc 24 8 5 view .LVU566
 2238              	.LBB177:
 2239              	.LBI168:
 246:./lib/lib8tion/scale8.h **** {
 2240              		.loc 4 246 35 view .LVU567
 2241              	.LBB173:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 2242              		.loc 4 249 5 view .LVU568
 2243              		.loc 4 253 5 view .LVU569
 254:./lib/lib8tion/scale8.h **** #endif
 255:./lib/lib8tion/scale8.h ****     return result;
 2244              		.loc 4 255 5 view .LVU570
 2245              		.loc 4 255 5 is_stmt 0 view .LVU571
 2246              	.LBE173:
 2247              	.LBE177:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2248              		.loc 24 9 5 is_stmt 1 view .LVU572
 2249              	.LBB178:
 2250              		.loc 24 9 10 view .LVU573
 2251              		.loc 24 9 10 is_stmt 0 view .LVU574
 2252 003c 03EB4407 		add	r7, r3, r4, lsl #1
 2253              	.LBB179:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2254              		.loc 24 10 9 view .LVU575
 2255 0040 03F58E7A 		add	r10, r3, #284
 2256              	.LVL158:
 2257              	.L102:
 2258              		.loc 24 10 9 view .LVU576
 2259              	.LBE179:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2260              		.loc 24 9 31 is_stmt 1 discriminator 1 view .LVU577
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2261              		.loc 24 9 5 is_stmt 0 discriminator 1 view .LVU578
 2262 0044 E3B2     		uxtb	r3, r4
 2263 0046 9B45     		cmp	fp, r3
 2264 0048 06D8     		bhi	.L105
 2265              	.LBE178:
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  16:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     }
  17:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     return led_max < DRIVER_LED_TOTAL;
 2266              		.loc 24 17 5 is_stmt 1 view .LVU579
  18:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** }
 2267              		.loc 24 18 1 is_stmt 0 view .LVU580
 2268 004a 612E     		cmp	r6, #97
 2269 004c 8CBF     		ite	hi
 2270 004e 0020     		movhi	r0, #0
 2271 0050 0120     		movls	r0, #1
 2272 0052 09B0     		add	sp, sp, #36
 2273              		.cfi_remember_state
 2274              		.cfi_def_cfa_offset 36
 2275              		@ sp needed
 2276 0054 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2277              	.LVL159:
 2278              	.L105:
 2279              		.cfi_restore_state
 2280              	.LBB181:
 2281              	.LBB180:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2282              		.loc 24 10 9 is_stmt 1 view .LVU581
 2283 0058 14F80A20 		ldrb	r2, [r4, r10]	@ zero_extendqisi2
 2284 005c 98F80130 		ldrb	r3, [r8, #1]	@ zero_extendqisi2
 2285 0060 1A42     		tst	r2, r3
 2286 0062 38D0     		beq	.L104
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2287              		.loc 24 11 9 view .LVU582
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2288              		.loc 24 12 45 is_stmt 0 view .LVU583
 2289 0064 97F85930 		ldrb	r3, [r7, #89]	@ zero_extendqisi2
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2290              		.loc 24 11 45 view .LVU584
 2291 0068 97F85800 		ldrb	r0, [r7, #88]	@ zero_extendqisi2
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2292              		.loc 24 12 48 view .LVU585
 2293 006c 203B     		subs	r3, r3, #32
 2294 006e 9AB2     		uxth	r2, r3
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2295              		.loc 24 11 48 view .LVU586
 2296 0070 7038     		subs	r0, r0, #112
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2297              		.loc 24 13 44 view .LVU587
 2298 0072 13FB03F3 		smulbb	r3, r3, r3
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2299              		.loc 24 11 48 view .LVU588
 2300 0076 81B2     		uxth	r1, r0
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2301              		.loc 24 13 24 view .LVU589
 2302 0078 00FB0030 		mla	r0, r0, r0, r3
 2303 007c 80B2     		uxth	r0, r0
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2304              		.loc 24 11 48 view .LVU590
 2305 007e 0591     		str	r1, [sp, #20]
 2306              	.LVL160:
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2307              		.loc 24 12 9 is_stmt 1 view .LVU591
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2308              		.loc 24 12 48 is_stmt 0 view .LVU592
 2309 0080 0492     		str	r2, [sp, #16]
 2310              	.LVL161:
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2311              		.loc 24 13 9 is_stmt 1 view .LVU593
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2312              		.loc 24 13 24 is_stmt 0 view .LVU594
 2313 0082 FFF7FEFF 		bl	sqrt16
 2314              	.LVL162:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2315              		.loc 24 14 24 view .LVU595
 2316 0086 029A     		ldr	r2, [sp, #8]
 2317 0088 99F801C0 		ldrb	ip, [r9, #1]	@ zero_extendqisi2
 2318 008c 99F803E0 		ldrb	lr, [r9, #3]	@ zero_extendqisi2
 2319 0090 0599     		ldr	r1, [sp, #20]
 2320 0092 0092     		str	r2, [sp]
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2321              		.loc 24 13 24 view .LVU596
 2322 0094 0346     		mov	r3, r0
 2323              	.LVL163:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2324              		.loc 24 14 9 is_stmt 1 view .LVU597
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2325              		.loc 24 14 24 is_stmt 0 view .LVU598
 2326 0096 99F80200 		ldrb	r0, [r9, #2]	@ zero_extendqisi2
 2327 009a 049A     		ldr	r2, [sp, #16]
 2328 009c 039D     		ldr	r5, [sp, #12]
 2329 009e 4CEA0020 		orr	r0, ip, r0, lsl #8
 2330 00a2 12B2     		sxth	r2, r2
 2331 00a4 09B2     		sxth	r1, r1
 2332 00a6 40EA0E40 		orr	r0, r0, lr, lsl #16
 2333 00aa A847     		blx	r5
 2334              	.LVL164:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2335              		.loc 24 14 24 view .LVU599
 2336 00ac C0F30723 		ubfx	r3, r0, #8, #8
 2337 00b0 8DF81C00 		strb	r0, [sp, #28]
 2338 00b4 C0F30740 		ubfx	r0, r0, #16, #8
 2339 00b8 8DF81D30 		strb	r3, [sp, #29]
 2340 00bc 8DF81E00 		strb	r0, [sp, #30]
 2341 00c0 0798     		ldr	r0, [sp, #28]
 2342 00c2 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 2343              	.LVL165:
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     }
 2344              		.loc 24 15 9 is_stmt 1 view .LVU600
 2345 00c6 C0F30743 		ubfx	r3, r0, #16, #8
 2346 00ca C2B2     		uxtb	r2, r0
 2347 00cc C0F30721 		ubfx	r1, r0, #8, #8
 2348 00d0 2046     		mov	r0, r4
 2349 00d2 FFF7FEFF 		bl	rgb_matrix_set_color
 2350              	.LVL166:
 2351              	.L104:
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     }
 2352              		.loc 24 15 9 is_stmt 0 view .LVU601
 2353              	.LBE180:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2354              		.loc 24 9 44 is_stmt 1 discriminator 2 view .LVU602
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2355              		.loc 24 9 44 is_stmt 0 discriminator 2 view .LVU603
 2356 00d6 0237     		adds	r7, r7, #2
 2357 00d8 0134     		adds	r4, r4, #1
 2358              	.LVL167:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2359              		.loc 24 9 44 discriminator 2 view .LVU604
 2360 00da B3E7     		b	.L102
 2361              	.L107:
 2362              		.align	2
 2363              	.L106:
 2364 00dc 00000000 		.word	g_rgb_timer
 2365 00e0 00000000 		.word	g_led_config
 2366 00e4 00000000 		.word	rgb_matrix_config
 2367              	.LBE181:
 2368              		.cfi_endproc
 2369              	.LFE364:
 2371              		.section	.text.BAND_SPIRAL_SAT,"ax",%progbits
 2372              		.align	1
 2373              		.global	BAND_SPIRAL_SAT
 2374              		.syntax unified
 2375              		.thumb
 2376              		.thumb_func
 2377              		.fpu fpv4-sp-d16
 2379              	BAND_SPIRAL_SAT:
 2380              	.LVL168:
 2381              	.LFB382:
   9:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** bool BAND_SPIRAL_SAT(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2382              		.loc 19 10 47 is_stmt 1 view -0
 2383              		.cfi_startproc
 2384              		@ args = 0, pretend = 0, frame = 0
 2385              		@ frame_needed = 0, uses_anonymous_args = 0
 2386              		@ link register save eliminated.
 2387              		.loc 19 10 49 view .LVU606
 2388              		.loc 19 10 56 is_stmt 0 view .LVU607
 2389 0000 0149     		ldr	r1, .L109
 2390 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2391              	.LVL169:
 2392              	.L110:
 2393              		.loc 19 10 56 view .LVU608
 2394 0006 00BF     		.align	2
 2395              	.L109:
 2396 0008 00000000 		.word	BAND_SPIRAL_SAT_math
 2397              		.cfi_endproc
 2398              	.LFE382:
 2400              		.section	.text.BAND_SPIRAL_VAL,"ax",%progbits
 2401              		.align	1
 2402              		.global	BAND_SPIRAL_VAL
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu fpv4-sp-d16
 2408              	BAND_SPIRAL_VAL:
 2409              	.LVL170:
 2410              	.LFB384:
   9:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** bool BAND_SPIRAL_VAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2411              		.loc 20 10 47 is_stmt 1 view -0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
 2415              		@ link register save eliminated.
 2416              		.loc 20 10 49 view .LVU610
 2417              		.loc 20 10 56 is_stmt 0 view .LVU611
 2418 0000 0149     		ldr	r1, .L112
 2419 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2420              	.LVL171:
 2421              	.L113:
 2422              		.loc 20 10 56 view .LVU612
 2423 0006 00BF     		.align	2
 2424              	.L112:
 2425 0008 00000000 		.word	BAND_SPIRAL_VAL_math
 2426              		.cfi_endproc
 2427              	.LFE384:
 2429              		.section	.text.CYCLE_OUT_IN,"ax",%progbits
 2430              		.align	1
 2431              		.global	CYCLE_OUT_IN
 2432              		.syntax unified
 2433              		.thumb
 2434              		.thumb_func
 2435              		.fpu fpv4-sp-d16
 2437              	CYCLE_OUT_IN:
 2438              	.LVL172:
 2439              	.LFB394:
   9:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** bool CYCLE_OUT_IN(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_OUT_IN_
 2440              		.loc 10 10 44 is_stmt 1 view -0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              		@ link register save eliminated.
 2445              		.loc 10 10 46 view .LVU614
 2446              		.loc 10 10 53 is_stmt 0 view .LVU615
 2447 0000 0149     		ldr	r1, .L115
 2448 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2449              	.LVL173:
 2450              	.L116:
 2451              		.loc 10 10 53 view .LVU616
 2452 0006 00BF     		.align	2
 2453              	.L115:
 2454 0008 00000000 		.word	CYCLE_OUT_IN_math
 2455              		.cfi_endproc
 2456              	.LFE394:
 2458              		.section	.text.CYCLE_SPIRAL,"ax",%progbits
 2459              		.align	1
 2460              		.global	CYCLE_SPIRAL
 2461              		.syntax unified
 2462              		.thumb
 2463              		.thumb_func
 2464              		.fpu fpv4-sp-d16
 2466              	CYCLE_SPIRAL:
 2467              	.LVL174:
 2468              	.LFB400:
   9:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** bool CYCLE_SPIRAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_SPIRAL_
 2469              		.loc 22 10 44 is_stmt 1 view -0
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 0
 2472              		@ frame_needed = 0, uses_anonymous_args = 0
 2473              		@ link register save eliminated.
 2474              		.loc 22 10 46 view .LVU618
 2475              		.loc 22 10 53 is_stmt 0 view .LVU619
 2476 0000 0149     		ldr	r1, .L118
 2477 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2478              	.LVL175:
 2479              	.L119:
 2480              		.loc 22 10 53 view .LVU620
 2481 0006 00BF     		.align	2
 2482              	.L118:
 2483 0008 00000000 		.word	CYCLE_SPIRAL_math
 2484              		.cfi_endproc
 2485              	.LFE400:
 2487              		.section	.text.effect_runner_dx_dy,"ax",%progbits
 2488              		.align	1
 2489              		.global	effect_runner_dx_dy
 2490              		.syntax unified
 2491              		.thumb
 2492              		.thumb_func
 2493              		.fpu fpv4-sp-d16
 2495              	effect_runner_dx_dy:
 2496              	.LVL176:
 2497              	.LFB365:
 2498              		.file 25 "quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** typedef HSV (*dx_dy_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** bool effect_runner_dx_dy(effect_params_t* params, dx_dy_f effect_func) {
 2499              		.loc 25 5 72 is_stmt 1 view -0
 2500              		.cfi_startproc
 2501              		@ args = 0, pretend = 0, frame = 16
 2502              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2503              		.loc 25 6 5 view .LVU622
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2504              		.loc 25 5 72 is_stmt 0 view .LVU623
 2505 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2506              		.cfi_def_cfa_offset 36
 2507              		.cfi_offset 4, -36
 2508              		.cfi_offset 5, -32
 2509              		.cfi_offset 6, -28
 2510              		.cfi_offset 7, -24
 2511              		.cfi_offset 8, -20
 2512              		.cfi_offset 9, -16
 2513              		.cfi_offset 10, -12
 2514              		.cfi_offset 11, -8
 2515              		.cfi_offset 14, -4
 2516 0004 2DED028B 		vpush.64	{d8}
 2517              		.cfi_def_cfa_offset 44
 2518              		.cfi_offset 80, -44
 2519              		.cfi_offset 81, -40
 2520              	.LBB182:
 2521              	.LBB183:
 253:./lib/lib8tion/scale8.h **** #endif
 2522              		.loc 4 253 17 view .LVU624
 2523 0008 2F4B     		ldr	r3, .L125
 2524              	.LBE183:
 2525              	.LBE182:
   7:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     uint8_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 2);
 2526              		.loc 25 8 61 view .LVU625
 2527 000a DFF8C490 		ldr	r9, .L125+8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2528              		.loc 25 6 5 view .LVU626
 2529 000e 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 2530              	.LBB188:
 2531              	.LBB184:
 253:./lib/lib8tion/scale8.h **** #endif
 2532              		.loc 4 253 17 view .LVU627
 2533 0010 1D88     		ldrh	r5, [r3]
 2534              	.LBE184:
 2535              	.LBE188:
 2536              		.loc 25 8 20 view .LVU628
 2537 0012 99F80430 		ldrb	r3, [r9, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2538              		.loc 25 6 5 view .LVU629
 2539 0016 04EB8404 		add	r4, r4, r4, lsl #2
 2540              	.LBB189:
 2541              	.LBB185:
 253:./lib/lib8tion/scale8.h **** #endif
 2542              		.loc 4 253 17 view .LVU630
 2543 001a 5B08     		lsrs	r3, r3, #1
 2544              	.LBE185:
 2545              	.LBE189:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2546              		.loc 25 6 5 view .LVU631
 2547 001c A400     		lsls	r4, r4, #2
 2548 001e E4B2     		uxtb	r4, r4
 2549              	.LVL177:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2550              		.loc 25 6 5 is_stmt 1 view .LVU632
 2551              	.LBB190:
 2552              	.LBB186:
 253:./lib/lib8tion/scale8.h **** #endif
 2553              		.loc 4 253 17 is_stmt 0 view .LVU633
 2554 0020 5D43     		muls	r5, r3, r5
 2555              	.LBE186:
 2556              	.LBE190:
 2557              		.loc 25 8 13 view .LVU634
 2558 0022 C5F30723 		ubfx	r3, r5, #8, #8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2559              		.loc 25 6 5 view .LVU635
 2560 0026 04F11406 		add	r6, r4, #20
 2561 002a F6B2     		uxtb	r6, r6
 2562              	.LVL178:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2563              		.loc 25 6 5 is_stmt 1 view .LVU636
 2564              		.loc 25 8 13 is_stmt 0 view .LVU637
 2565 002c 08EE103A 		vmov	s16, r3	@ int
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2566              		.loc 25 5 72 view .LVU638
 2567 0030 85B0     		sub	sp, sp, #20
 2568              		.cfi_def_cfa_offset 64
 2569 0032 264B     		ldr	r3, .L125+4
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2570              		.loc 25 5 72 view .LVU639
 2571 0034 0191     		str	r1, [sp, #4]
 2572 0036 622E     		cmp	r6, #98
 2573 0038 B346     		mov	fp, r6
 2574 003a 8046     		mov	r8, r0
 2575 003c 28BF     		it	cs
 2576 003e 4FF0620B 		movcs	fp, #98
 2577              	.LVL179:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2578              		.loc 25 6 44 is_stmt 1 view .LVU640
 2579              		.loc 25 8 5 view .LVU641
 2580              	.LBB191:
 2581              	.LBI182:
 246:./lib/lib8tion/scale8.h **** {
 2582              		.loc 4 246 35 view .LVU642
 2583              	.LBB187:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 2584              		.loc 4 249 5 view .LVU643
 253:./lib/lib8tion/scale8.h **** #endif
 2585              		.loc 4 253 5 view .LVU644
 2586              		.loc 4 255 5 view .LVU645
 2587              		.loc 4 255 5 is_stmt 0 view .LVU646
 2588              	.LBE187:
 2589              	.LBE191:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2590              		.loc 25 9 5 is_stmt 1 view .LVU647
 2591              	.LBB192:
 2592              		.loc 25 9 10 view .LVU648
 2593              		.loc 25 9 10 is_stmt 0 view .LVU649
 2594 0042 03EB4407 		add	r7, r3, r4, lsl #1
 2595              	.LBB193:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2596              		.loc 25 10 9 view .LVU650
 2597 0046 03F58E7A 		add	r10, r3, #284
 2598              	.LVL180:
 2599              	.L121:
 2600              		.loc 25 10 9 view .LVU651
 2601              	.LBE193:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2602              		.loc 25 9 31 is_stmt 1 discriminator 1 view .LVU652
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2603              		.loc 25 9 5 is_stmt 0 discriminator 1 view .LVU653
 2604 004a E3B2     		uxtb	r3, r4
 2605 004c 9B45     		cmp	fp, r3
 2606 004e 08D8     		bhi	.L124
 2607              	.LBE192:
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dx  = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB     rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     }
  16:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     return led_max < DRIVER_LED_TOTAL;
 2608              		.loc 25 16 5 is_stmt 1 view .LVU654
  17:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** }
 2609              		.loc 25 17 1 is_stmt 0 view .LVU655
 2610 0050 612E     		cmp	r6, #97
 2611 0052 8CBF     		ite	hi
 2612 0054 0020     		movhi	r0, #0
 2613 0056 0120     		movls	r0, #1
 2614 0058 05B0     		add	sp, sp, #20
 2615              		.cfi_remember_state
 2616              		.cfi_def_cfa_offset 44
 2617              		@ sp needed
 2618 005a BDEC028B 		vldm	sp!, {d8}
 2619              		.cfi_restore 80
 2620              		.cfi_restore 81
 2621              		.cfi_def_cfa_offset 36
 2622              	.LVL181:
 2623              		.loc 25 17 1 view .LVU656
 2624 005e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2625              	.LVL182:
 2626              	.L124:
 2627              		.cfi_restore_state
 2628              	.LBB195:
 2629              	.LBB194:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2630              		.loc 25 10 9 is_stmt 1 view .LVU657
 2631 0062 14F80A20 		ldrb	r2, [r4, r10]	@ zero_extendqisi2
 2632 0066 98F80130 		ldrb	r3, [r8, #1]	@ zero_extendqisi2
 2633 006a 1A42     		tst	r2, r3
 2634 006c 28D0     		beq	.L123
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dx  = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2635              		.loc 25 11 9 view .LVU658
 2636              	.LVL183:
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB     rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 2637              		.loc 25 12 9 view .LVU659
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2638              		.loc 25 13 9 view .LVU660
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2639              		.loc 25 13 23 is_stmt 0 view .LVU661
 2640 006e 99F80230 		ldrb	r3, [r9, #2]	@ zero_extendqisi2
 2641 0072 99F80100 		ldrb	r0, [r9, #1]	@ zero_extendqisi2
 2642 0076 99F803C0 		ldrb	ip, [r9, #3]	@ zero_extendqisi2
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB     rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 2643              		.loc 25 12 44 view .LVU662
 2644 007a 97F85920 		ldrb	r2, [r7, #89]	@ zero_extendqisi2
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2645              		.loc 25 11 44 view .LVU663
 2646 007e 97F85810 		ldrb	r1, [r7, #88]	@ zero_extendqisi2
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2647              		.loc 25 13 23 view .LVU664
 2648 0082 019D     		ldr	r5, [sp, #4]
 2649 0084 40EA0320 		orr	r0, r0, r3, lsl #8
 2650 0088 203A     		subs	r2, r2, #32
 2651 008a 7039     		subs	r1, r1, #112
 2652 008c 18EE103A 		vmov	r3, s16	@ int
 2653 0090 40EA0C40 		orr	r0, r0, ip, lsl #16
 2654 0094 A847     		blx	r5
 2655              	.LVL184:
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2656              		.loc 25 13 23 view .LVU665
 2657 0096 C0F30723 		ubfx	r3, r0, #8, #8
 2658 009a 8DF80C00 		strb	r0, [sp, #12]
 2659 009e C0F30740 		ubfx	r0, r0, #16, #8
 2660 00a2 8DF80D30 		strb	r3, [sp, #13]
 2661 00a6 8DF80E00 		strb	r0, [sp, #14]
 2662 00aa 0398     		ldr	r0, [sp, #12]
 2663 00ac FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 2664              	.LVL185:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     }
 2665              		.loc 25 14 9 is_stmt 1 view .LVU666
 2666 00b0 C0F30743 		ubfx	r3, r0, #16, #8
 2667 00b4 C2B2     		uxtb	r2, r0
 2668 00b6 C0F30721 		ubfx	r1, r0, #8, #8
 2669 00ba 2046     		mov	r0, r4
 2670 00bc FFF7FEFF 		bl	rgb_matrix_set_color
 2671              	.LVL186:
 2672              	.L123:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     }
 2673              		.loc 25 14 9 is_stmt 0 view .LVU667
 2674              	.LBE194:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2675              		.loc 25 9 44 is_stmt 1 discriminator 2 view .LVU668
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2676              		.loc 25 9 44 is_stmt 0 discriminator 2 view .LVU669
 2677 00c0 0237     		adds	r7, r7, #2
 2678 00c2 0134     		adds	r4, r4, #1
 2679              	.LVL187:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2680              		.loc 25 9 44 discriminator 2 view .LVU670
 2681 00c4 C1E7     		b	.L121
 2682              	.L126:
 2683 00c6 00BF     		.align	2
 2684              	.L125:
 2685 00c8 00000000 		.word	g_rgb_timer
 2686 00cc 00000000 		.word	g_led_config
 2687 00d0 00000000 		.word	rgb_matrix_config
 2688              	.LBE195:
 2689              		.cfi_endproc
 2690              	.LFE365:
 2692              		.section	.text.BAND_PINWHEEL_SAT,"ax",%progbits
 2693              		.align	1
 2694              		.global	BAND_PINWHEEL_SAT
 2695              		.syntax unified
 2696              		.thumb
 2697              		.thumb_func
 2698              		.fpu fpv4-sp-d16
 2700              	BAND_PINWHEEL_SAT:
 2701              	.LVL188:
 2702              	.LFB378:
   9:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** bool BAND_PINWHEEL_SAT(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 2703              		.loc 17 10 49 is_stmt 1 view -0
 2704              		.cfi_startproc
 2705              		@ args = 0, pretend = 0, frame = 0
 2706              		@ frame_needed = 0, uses_anonymous_args = 0
 2707              		@ link register save eliminated.
 2708              		.loc 17 10 51 view .LVU672
 2709              		.loc 17 10 58 is_stmt 0 view .LVU673
 2710 0000 0149     		ldr	r1, .L128
 2711 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2712              	.LVL189:
 2713              	.L129:
 2714              		.loc 17 10 58 view .LVU674
 2715 0006 00BF     		.align	2
 2716              	.L128:
 2717 0008 00000000 		.word	BAND_PINWHEEL_SAT_math
 2718              		.cfi_endproc
 2719              	.LFE378:
 2721              		.section	.text.BAND_PINWHEEL_VAL,"ax",%progbits
 2722              		.align	1
 2723              		.global	BAND_PINWHEEL_VAL
 2724              		.syntax unified
 2725              		.thumb
 2726              		.thumb_func
 2727              		.fpu fpv4-sp-d16
 2729              	BAND_PINWHEEL_VAL:
 2730              	.LVL190:
 2731              	.LFB380:
   9:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** bool BAND_PINWHEEL_VAL(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 2732              		.loc 18 10 49 is_stmt 1 view -0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 0
 2735              		@ frame_needed = 0, uses_anonymous_args = 0
 2736              		@ link register save eliminated.
 2737              		.loc 18 10 51 view .LVU676
 2738              		.loc 18 10 58 is_stmt 0 view .LVU677
 2739 0000 0149     		ldr	r1, .L131
 2740 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2741              	.LVL191:
 2742              	.L132:
 2743              		.loc 18 10 58 view .LVU678
 2744 0006 00BF     		.align	2
 2745              	.L131:
 2746 0008 00000000 		.word	BAND_PINWHEEL_VAL_math
 2747              		.cfi_endproc
 2748              	.LFE380:
 2750              		.section	.text.CYCLE_OUT_IN_DUAL,"ax",%progbits
 2751              		.align	1
 2752              		.global	CYCLE_OUT_IN_DUAL
 2753              		.syntax unified
 2754              		.thumb
 2755              		.thumb_func
 2756              		.fpu fpv4-sp-d16
 2758              	CYCLE_OUT_IN_DUAL:
 2759              	.LVL192:
 2760              	.LFB396:
  11:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** 
  12:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** bool CYCLE_OUT_IN_DUAL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_OUT_IN_
 2761              		.loc 11 12 49 is_stmt 1 view -0
 2762              		.cfi_startproc
 2763              		@ args = 0, pretend = 0, frame = 0
 2764              		@ frame_needed = 0, uses_anonymous_args = 0
 2765              		@ link register save eliminated.
 2766              		.loc 11 12 51 view .LVU680
 2767              		.loc 11 12 58 is_stmt 0 view .LVU681
 2768 0000 0149     		ldr	r1, .L134
 2769 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2770              	.LVL193:
 2771              	.L135:
 2772              		.loc 11 12 58 view .LVU682
 2773 0006 00BF     		.align	2
 2774              	.L134:
 2775 0008 00000000 		.word	CYCLE_OUT_IN_DUAL_math
 2776              		.cfi_endproc
 2777              	.LFE396:
 2779              		.section	.text.CYCLE_PINWHEEL,"ax",%progbits
 2780              		.align	1
 2781              		.global	CYCLE_PINWHEEL
 2782              		.syntax unified
 2783              		.thumb
 2784              		.thumb_func
 2785              		.fpu fpv4-sp-d16
 2787              	CYCLE_PINWHEEL:
 2788              	.LVL194:
 2789              	.LFB398:
   9:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** bool CYCLE_PINWHEEL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_PINWHEEL_m
 2790              		.loc 21 10 46 is_stmt 1 view -0
 2791              		.cfi_startproc
 2792              		@ args = 0, pretend = 0, frame = 0
 2793              		@ frame_needed = 0, uses_anonymous_args = 0
 2794              		@ link register save eliminated.
 2795              		.loc 21 10 48 view .LVU684
 2796              		.loc 21 10 55 is_stmt 0 view .LVU685
 2797 0000 0149     		ldr	r1, .L137
 2798 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2799              	.LVL195:
 2800              	.L138:
 2801              		.loc 21 10 55 view .LVU686
 2802 0006 00BF     		.align	2
 2803              	.L137:
 2804 0008 00000000 		.word	CYCLE_PINWHEEL_math
 2805              		.cfi_endproc
 2806              	.LFE398:
 2808              		.section	.text.effect_runner_i,"ax",%progbits
 2809              		.align	1
 2810              		.global	effect_runner_i
 2811              		.syntax unified
 2812              		.thumb
 2813              		.thumb_func
 2814              		.fpu fpv4-sp-d16
 2816              	effect_runner_i:
 2817              	.LVL196:
 2818              	.LFB366:
 2819              		.file 26 "quantum/rgb_matrix/animations/runners/effect_runner_i.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** typedef HSV (*i_f)(HSV hsv, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** bool effect_runner_i(effect_params_t* params, i_f effect_func) {
 2820              		.loc 26 5 64 is_stmt 1 view -0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 8
 2823              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2824              		.loc 26 6 5 view .LVU688
   5:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2825              		.loc 26 5 64 is_stmt 0 view .LVU689
 2826 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2827              		.cfi_def_cfa_offset 48
 2828              		.cfi_offset 4, -36
 2829              		.cfi_offset 5, -32
 2830              		.cfi_offset 6, -28
 2831              		.cfi_offset 7, -24
 2832              		.cfi_offset 8, -20
 2833              		.cfi_offset 9, -16
 2834              		.cfi_offset 10, -12
 2835              		.cfi_offset 11, -8
 2836              		.cfi_offset 14, -4
 2837              		.loc 26 6 5 view .LVU690
 2838 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     uint8_t time = scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed / 4, 1));
 2839              		.loc 26 8 67 view .LVU691
 2840 0006 DFF8A490 		ldr	r9, .L144+4
 2841              	.LBB196:
 2842              	.LBB197:
 253:./lib/lib8tion/scale8.h **** #endif
 2843              		.loc 4 253 17 view .LVU692
 2844 000a 274A     		ldr	r2, .L144
 2845              	.LBE197:
 2846              	.LBE196:
 2847              		.loc 26 8 20 view .LVU693
 2848 000c 99F80450 		ldrb	r5, [r9, #4]	@ zero_extendqisi2
 2849              	.LBB201:
 2850              	.LBB202:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  10:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2851              		.loc 26 10 9 view .LVU694
 2852 0010 DFF89CB0 		ldr	fp, .L144+8
 2853              	.LBE202:
 2854              	.LBE201:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 2855              		.loc 26 6 5 view .LVU695
 2856 0014 04EB8404 		add	r4, r4, r4, lsl #2
 2857 0018 A400     		lsls	r4, r4, #2
 2858 001a E4B2     		uxtb	r4, r4
 2859              	.LVL197:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 2860              		.loc 26 6 5 is_stmt 1 view .LVU696
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2861              		.loc 26 8 20 is_stmt 0 view .LVU697
 2862 001c AB08     		lsrs	r3, r5, #2
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 2863              		.loc 26 6 5 view .LVU698
 2864 001e 04F11408 		add	r8, r4, #20
 2865              	.LBB204:
 2866              	.LBB198:
 253:./lib/lib8tion/scale8.h **** #endif
 2867              		.loc 4 253 17 view .LVU699
 2868 0022 1588     		ldrh	r5, [r2]
 2869              	.LBE198:
 2870              	.LBE204:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 2871              		.loc 26 6 5 view .LVU700
 2872 0024 5FFA88F8 		uxtb	r8, r8
 2873              	.LVL198:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 2874              		.loc 26 6 5 is_stmt 1 view .LVU701
 2875 0028 B8F1620F 		cmp	r8, #98
 2876              	.LBB205:
 2877              	.LBB199:
 253:./lib/lib8tion/scale8.h **** #endif
 2878              		.loc 4 253 17 is_stmt 0 view .LVU702
 2879 002c 03FB0555 		mla	r5, r3, r5, r5
 2880 0030 C246     		mov	r10, r8
 2881              	.LBE199:
 2882              	.LBE205:
   5:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2883              		.loc 26 5 64 view .LVU703
 2884 0032 0646     		mov	r6, r0
 2885 0034 0F46     		mov	r7, r1
 2886 0036 28BF     		it	cs
 2887 0038 4FF0620A 		movcs	r10, #98
 2888              	.LVL199:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 2889              		.loc 26 6 44 is_stmt 1 view .LVU704
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2890              		.loc 26 8 5 view .LVU705
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 2891              		.loc 1 26 5 view .LVU706
  27:./lib/lib8tion/math8.h ****     return t;
 2892              		.loc 1 27 5 view .LVU707
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 2893              		.loc 1 28 5 view .LVU708
 2894              	.LBB206:
 2895              	.LBI196:
 246:./lib/lib8tion/scale8.h **** {
 2896              		.loc 4 246 35 view .LVU709
 2897              	.LBB200:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 2898              		.loc 4 249 5 view .LVU710
 253:./lib/lib8tion/scale8.h **** #endif
 2899              		.loc 4 253 5 view .LVU711
 2900              		.loc 4 255 5 view .LVU712
 2901              		.loc 4 255 5 is_stmt 0 view .LVU713
 2902              	.LBE200:
 2903              	.LBE206:
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2904              		.loc 26 8 13 view .LVU714
 2905 003c C5F30725 		ubfx	r5, r5, #8, #8
 2906              	.LVL200:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2907              		.loc 26 9 5 is_stmt 1 view .LVU715
 2908              	.LBB207:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2909              		.loc 26 9 10 view .LVU716
 2910              	.L140:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2911              		.loc 26 9 10 is_stmt 0 view .LVU717
 2912 0040 E1B2     		uxtb	r1, r4
 2913              	.LVL201:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2914              		.loc 26 9 31 is_stmt 1 discriminator 1 view .LVU718
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2915              		.loc 26 9 5 is_stmt 0 discriminator 1 view .LVU719
 2916 0042 8A45     		cmp	r10, r1
 2917 0044 07D8     		bhi	.L143
 2918              	.LBE207:
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
  12:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  13:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     }
  14:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     return led_max < DRIVER_LED_TOTAL;
 2919              		.loc 26 14 5 is_stmt 1 view .LVU720
  15:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** }
 2920              		.loc 26 15 1 is_stmt 0 view .LVU721
 2921 0046 B8F1610F 		cmp	r8, #97
 2922 004a 8CBF     		ite	hi
 2923 004c 0020     		movhi	r0, #0
 2924 004e 0120     		movls	r0, #1
 2925 0050 03B0     		add	sp, sp, #12
 2926              		.cfi_remember_state
 2927              		.cfi_def_cfa_offset 36
 2928              		@ sp needed
 2929 0052 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2930              	.LVL202:
 2931              	.L143:
 2932              		.cfi_restore_state
 2933              	.LBB208:
 2934              	.LBB203:
  10:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 2935              		.loc 26 10 9 is_stmt 1 view .LVU722
 2936 0056 14F80B20 		ldrb	r2, [r4, fp]	@ zero_extendqisi2
 2937 005a 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 2938 005c 1A42     		tst	r2, r3
 2939 005e 20D0     		beq	.L142
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 2940              		.loc 26 11 9 view .LVU723
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 2941              		.loc 26 11 19 is_stmt 0 view .LVU724
 2942 0060 99F80200 		ldrb	r0, [r9, #2]	@ zero_extendqisi2
 2943 0064 99F80130 		ldrb	r3, [r9, #1]	@ zero_extendqisi2
 2944 0068 43EA0023 		orr	r3, r3, r0, lsl #8
 2945 006c 99F80300 		ldrb	r0, [r9, #3]	@ zero_extendqisi2
 2946 0070 2A46     		mov	r2, r5
 2947 0072 43EA0040 		orr	r0, r3, r0, lsl #16
 2948 0076 B847     		blx	r7
 2949              	.LVL203:
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 2950              		.loc 26 11 19 view .LVU725
 2951 0078 C0F30723 		ubfx	r3, r0, #8, #8
 2952 007c 8DF80400 		strb	r0, [sp, #4]
 2953 0080 C0F30740 		ubfx	r0, r0, #16, #8
 2954 0084 8DF80530 		strb	r3, [sp, #5]
 2955 0088 8DF80600 		strb	r0, [sp, #6]
 2956 008c 0198     		ldr	r0, [sp, #4]
 2957 008e FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 2958              	.LVL204:
  12:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     }
 2959              		.loc 26 12 9 is_stmt 1 view .LVU726
 2960 0092 C0F30743 		ubfx	r3, r0, #16, #8
 2961 0096 C2B2     		uxtb	r2, r0
 2962 0098 C0F30721 		ubfx	r1, r0, #8, #8
 2963 009c 2046     		mov	r0, r4
 2964 009e FFF7FEFF 		bl	rgb_matrix_set_color
 2965              	.LVL205:
 2966              	.L142:
 2967              	.LBE203:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2968              		.loc 26 9 44 discriminator 2 view .LVU727
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2969              		.loc 26 9 44 is_stmt 0 discriminator 2 view .LVU728
 2970 00a2 0134     		adds	r4, r4, #1
 2971              	.LVL206:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2972              		.loc 26 9 44 discriminator 2 view .LVU729
 2973 00a4 CCE7     		b	.L140
 2974              	.L145:
 2975 00a6 00BF     		.align	2
 2976              	.L144:
 2977 00a8 00000000 		.word	g_rgb_timer
 2978 00ac 00000000 		.word	rgb_matrix_config
 2979 00b0 1C010000 		.word	g_led_config+284
 2980              	.LBE208:
 2981              		.cfi_endproc
 2982              	.LFE366:
 2984              		.section	.text.BAND_SAT,"ax",%progbits
 2985              		.align	1
 2986              		.global	BAND_SAT
 2987              		.syntax unified
 2988              		.thumb
 2989              		.thumb_func
 2990              		.fpu fpv4-sp-d16
 2992              	BAND_SAT:
 2993              	.LVL207:
 2994              	.LFB374:
  10:quantum/rgb_matrix/animations/colorband_sat_anim.h **** 
  11:quantum/rgb_matrix/animations/colorband_sat_anim.h **** bool BAND_SAT(effect_params_t* params) { return effect_runner_i(params, &BAND_SAT_math); }
 2995              		.loc 3 11 40 is_stmt 1 view -0
 2996              		.cfi_startproc
 2997              		@ args = 0, pretend = 0, frame = 0
 2998              		@ frame_needed = 0, uses_anonymous_args = 0
 2999              		@ link register save eliminated.
 3000              		.loc 3 11 42 view .LVU731
 3001              		.loc 3 11 49 is_stmt 0 view .LVU732
 3002 0000 0149     		ldr	r1, .L147
 3003 0002 FFF7FEBF 		b	effect_runner_i
 3004              	.LVL208:
 3005              	.L148:
 3006              		.loc 3 11 49 view .LVU733
 3007 0006 00BF     		.align	2
 3008              	.L147:
 3009 0008 00000000 		.word	BAND_SAT_math
 3010              		.cfi_endproc
 3011              	.LFE374:
 3013              		.section	.text.BAND_VAL,"ax",%progbits
 3014              		.align	1
 3015              		.global	BAND_VAL
 3016              		.syntax unified
 3017              		.thumb
 3018              		.thumb_func
 3019              		.fpu fpv4-sp-d16
 3021              	BAND_VAL:
 3022              	.LVL209:
 3023              	.LFB376:
  10:quantum/rgb_matrix/animations/colorband_val_anim.h **** 
  11:quantum/rgb_matrix/animations/colorband_val_anim.h **** bool BAND_VAL(effect_params_t* params) { return effect_runner_i(params, &BAND_VAL_math); }
 3024              		.loc 5 11 40 is_stmt 1 view -0
 3025              		.cfi_startproc
 3026              		@ args = 0, pretend = 0, frame = 0
 3027              		@ frame_needed = 0, uses_anonymous_args = 0
 3028              		@ link register save eliminated.
 3029              		.loc 5 11 42 view .LVU735
 3030              		.loc 5 11 49 is_stmt 0 view .LVU736
 3031 0000 0149     		ldr	r1, .L150
 3032 0002 FFF7FEBF 		b	effect_runner_i
 3033              	.LVL210:
 3034              	.L151:
 3035              		.loc 5 11 49 view .LVU737
 3036 0006 00BF     		.align	2
 3037              	.L150:
 3038 0008 00000000 		.word	BAND_VAL_math
 3039              		.cfi_endproc
 3040              	.LFE376:
 3042              		.section	.text.CYCLE_ALL,"ax",%progbits
 3043              		.align	1
 3044              		.global	CYCLE_ALL
 3045              		.syntax unified
 3046              		.thumb
 3047              		.thumb_func
 3048              		.fpu fpv4-sp-d16
 3050              	CYCLE_ALL:
 3051              	.LVL211:
 3052              	.LFB386:
   9:quantum/rgb_matrix/animations/cycle_all_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_all_anim.h **** bool CYCLE_ALL(effect_params_t* params) { return effect_runner_i(params, &CYCLE_ALL_math); }
 3053              		.loc 6 10 41 is_stmt 1 view -0
 3054              		.cfi_startproc
 3055              		@ args = 0, pretend = 0, frame = 0
 3056              		@ frame_needed = 0, uses_anonymous_args = 0
 3057              		@ link register save eliminated.
 3058              		.loc 6 10 43 view .LVU739
 3059              		.loc 6 10 50 is_stmt 0 view .LVU740
 3060 0000 0149     		ldr	r1, .L153
 3061 0002 FFF7FEBF 		b	effect_runner_i
 3062              	.LVL212:
 3063              	.L154:
 3064              		.loc 6 10 50 view .LVU741
 3065 0006 00BF     		.align	2
 3066              	.L153:
 3067 0008 00000000 		.word	CYCLE_ALL_math
 3068              		.cfi_endproc
 3069              	.LFE386:
 3071              		.section	.text.CYCLE_LEFT_RIGHT,"ax",%progbits
 3072              		.align	1
 3073              		.global	CYCLE_LEFT_RIGHT
 3074              		.syntax unified
 3075              		.thumb
 3076              		.thumb_func
 3077              		.fpu fpv4-sp-d16
 3079              	CYCLE_LEFT_RIGHT:
 3080              	.LVL213:
 3081              	.LFB388:
   9:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** bool CYCLE_LEFT_RIGHT(effect_params_t* params) { return effect_runner_i(params, &CYCLE_LEFT_RIGHT_m
 3082              		.loc 7 10 48 is_stmt 1 view -0
 3083              		.cfi_startproc
 3084              		@ args = 0, pretend = 0, frame = 0
 3085              		@ frame_needed = 0, uses_anonymous_args = 0
 3086              		@ link register save eliminated.
 3087              		.loc 7 10 50 view .LVU743
 3088              		.loc 7 10 57 is_stmt 0 view .LVU744
 3089 0000 0149     		ldr	r1, .L156
 3090 0002 FFF7FEBF 		b	effect_runner_i
 3091              	.LVL214:
 3092              	.L157:
 3093              		.loc 7 10 57 view .LVU745
 3094 0006 00BF     		.align	2
 3095              	.L156:
 3096 0008 00000000 		.word	CYCLE_LEFT_RIGHT_math
 3097              		.cfi_endproc
 3098              	.LFE388:
 3100              		.section	.text.CYCLE_UP_DOWN,"ax",%progbits
 3101              		.align	1
 3102              		.global	CYCLE_UP_DOWN
 3103              		.syntax unified
 3104              		.thumb
 3105              		.thumb_func
 3106              		.fpu fpv4-sp-d16
 3108              	CYCLE_UP_DOWN:
 3109              	.LVL215:
 3110              	.LFB390:
   9:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** bool CYCLE_UP_DOWN(effect_params_t* params) { return effect_runner_i(params, &CYCLE_UP_DOWN_math); 
 3111              		.loc 8 10 45 is_stmt 1 view -0
 3112              		.cfi_startproc
 3113              		@ args = 0, pretend = 0, frame = 0
 3114              		@ frame_needed = 0, uses_anonymous_args = 0
 3115              		@ link register save eliminated.
 3116              		.loc 8 10 47 view .LVU747
 3117              		.loc 8 10 54 is_stmt 0 view .LVU748
 3118 0000 0149     		ldr	r1, .L159
 3119 0002 FFF7FEBF 		b	effect_runner_i
 3120              	.LVL216:
 3121              	.L160:
 3122              		.loc 8 10 54 view .LVU749
 3123 0006 00BF     		.align	2
 3124              	.L159:
 3125 0008 00000000 		.word	CYCLE_UP_DOWN_math
 3126              		.cfi_endproc
 3127              	.LFE390:
 3129              		.section	.text.RAINBOW_MOVING_CHEVRON,"ax",%progbits
 3130              		.align	1
 3131              		.global	RAINBOW_MOVING_CHEVRON
 3132              		.syntax unified
 3133              		.thumb
 3134              		.thumb_func
 3135              		.fpu fpv4-sp-d16
 3137              	RAINBOW_MOVING_CHEVRON:
 3138              	.LVL217:
 3139              	.LFB392:
   9:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** 
  10:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** bool RAINBOW_MOVING_CHEVRON(effect_params_t* params) { return effect_runner_i(params, &RAINBOW_MOVI
 3140              		.loc 9 10 54 is_stmt 1 view -0
 3141              		.cfi_startproc
 3142              		@ args = 0, pretend = 0, frame = 0
 3143              		@ frame_needed = 0, uses_anonymous_args = 0
 3144              		@ link register save eliminated.
 3145              		.loc 9 10 56 view .LVU751
 3146              		.loc 9 10 63 is_stmt 0 view .LVU752
 3147 0000 0149     		ldr	r1, .L162
 3148 0002 FFF7FEBF 		b	effect_runner_i
 3149              	.LVL218:
 3150              	.L163:
 3151              		.loc 9 10 63 view .LVU753
 3152 0006 00BF     		.align	2
 3153              	.L162:
 3154 0008 00000000 		.word	RAINBOW_MOVING_CHEVRON_math
 3155              		.cfi_endproc
 3156              	.LFE392:
 3158              		.section	.text.HUE_PENDULUM,"ax",%progbits
 3159              		.align	1
 3160              		.global	HUE_PENDULUM
 3161              		.syntax unified
 3162              		.thumb
 3163              		.thumb_func
 3164              		.fpu fpv4-sp-d16
 3166              	HUE_PENDULUM:
 3167              	.LVL219:
 3168              	.LFB413:
  13:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** 
  14:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** bool HUE_PENDULUM(effect_params_t* params) { return effect_runner_i(params, &HUE_PENDULUM_math); }
 3169              		.loc 15 14 44 is_stmt 1 view -0
 3170              		.cfi_startproc
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 0, uses_anonymous_args = 0
 3173              		@ link register save eliminated.
 3174              		.loc 15 14 46 view .LVU755
 3175              		.loc 15 14 53 is_stmt 0 view .LVU756
 3176 0000 0149     		ldr	r1, .L165
 3177 0002 FFF7FEBF 		b	effect_runner_i
 3178              	.LVL220:
 3179              	.L166:
 3180              		.loc 15 14 53 view .LVU757
 3181 0006 00BF     		.align	2
 3182              	.L165:
 3183 0008 00000000 		.word	HUE_PENDULUM_math
 3184              		.cfi_endproc
 3185              	.LFE413:
 3187              		.section	.text.HUE_WAVE,"ax",%progbits
 3188              		.align	1
 3189              		.global	HUE_WAVE
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3193              		.fpu fpv4-sp-d16
 3195              	HUE_WAVE:
 3196              	.LVL221:
 3197              	.LFB415:
  13:quantum/rgb_matrix/animations/hue_wave_anim.h **** 
  14:quantum/rgb_matrix/animations/hue_wave_anim.h **** bool HUE_WAVE(effect_params_t* params) { return effect_runner_i(params, &HUE_WAVE_math); }
 3198              		.loc 16 14 40 is_stmt 1 view -0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              		@ link register save eliminated.
 3203              		.loc 16 14 42 view .LVU759
 3204              		.loc 16 14 49 is_stmt 0 view .LVU760
 3205 0000 0149     		ldr	r1, .L168
 3206 0002 FFF7FEBF 		b	effect_runner_i
 3207              	.LVL222:
 3208              	.L169:
 3209              		.loc 16 14 49 view .LVU761
 3210 0006 00BF     		.align	2
 3211              	.L168:
 3212 0008 00000000 		.word	HUE_WAVE_math
 3213              		.cfi_endproc
 3214              	.LFE415:
 3216              		.section	.text.effect_runner_sin_cos_i,"ax",%progbits
 3217              		.align	1
 3218              		.global	effect_runner_sin_cos_i
 3219              		.syntax unified
 3220              		.thumb
 3221              		.thumb_func
 3222              		.fpu fpv4-sp-d16
 3224              	effect_runner_sin_cos_i:
 3225              	.LVL223:
 3226              	.LFB367:
 3227              		.file 27 "quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** typedef HSV (*sin_cos_i_f)(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** bool effect_runner_sin_cos_i(effect_params_t* params, sin_cos_i_f effect_func) {
 3228              		.loc 27 5 80 is_stmt 1 view -0
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 16
 3231              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3232              		.loc 27 6 5 view .LVU763
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3233              		.loc 27 5 80 is_stmt 0 view .LVU764
 3234 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3235              		.cfi_def_cfa_offset 36
 3236              		.cfi_offset 4, -36
 3237              		.cfi_offset 5, -32
 3238              		.cfi_offset 6, -28
 3239              		.cfi_offset 7, -24
 3240              		.cfi_offset 8, -20
 3241              		.cfi_offset 9, -16
 3242              		.cfi_offset 10, -12
 3243              		.cfi_offset 11, -8
 3244              		.cfi_offset 14, -4
 3245 0004 2DED028B 		vpush.64	{d8}
 3246              		.cfi_def_cfa_offset 44
 3247              		.cfi_offset 80, -44
 3248              		.cfi_offset 81, -40
   7:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     uint16_t time      = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 4);
 3249              		.loc 27 8 67 view .LVU765
 3250 0008 DFF8CCA0 		ldr	r10, .L175+8
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3251              		.loc 27 6 5 view .LVU766
 3252 000c 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 3253              	.LBB215:
 3254              	.LBB216:
 253:./lib/lib8tion/scale8.h **** #endif
 3255              		.loc 4 253 17 view .LVU767
 3256 000e 304B     		ldr	r3, .L175
 3257              	.LBE216:
 3258              	.LBE215:
 3259              		.loc 27 8 26 view .LVU768
 3260 0010 9AF80450 		ldrb	r5, [r10, #4]	@ zero_extendqisi2
 3261              	.LBB220:
 3262              	.LBB217:
 253:./lib/lib8tion/scale8.h **** #endif
 3263              		.loc 4 253 17 view .LVU769
 3264 0014 1B88     		ldrh	r3, [r3]
 3265              	.LBE217:
 3266              	.LBE220:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3267              		.loc 27 6 5 view .LVU770
 3268 0016 04EB8404 		add	r4, r4, r4, lsl #2
 3269 001a A400     		lsls	r4, r4, #2
 3270              	.LBB221:
 3271              	.LBB218:
 253:./lib/lib8tion/scale8.h **** #endif
 3272              		.loc 4 253 17 view .LVU771
 3273 001c AD08     		lsrs	r5, r5, #2
 3274 001e 5D43     		muls	r5, r3, r5
 3275              	.LBE218:
 3276              	.LBE221:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3277              		.loc 27 6 5 view .LVU772
 3278 0020 E4B2     		uxtb	r4, r4
 3279              	.LVL224:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3280              		.loc 27 6 5 is_stmt 1 view .LVU773
   9:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   cos_value = cos8(time) - 128;
 3281              		.loc 27 9 26 is_stmt 0 view .LVU774
 3282 0022 C5F30725 		ubfx	r5, r5, #8, #8
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3283              		.loc 27 6 5 view .LVU775
 3284 0026 04F11408 		add	r8, r4, #20
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3285              		.loc 27 5 80 view .LVU776
 3286 002a 87B0     		sub	sp, sp, #28
 3287              		.cfi_def_cfa_offset 72
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3288              		.loc 27 6 5 view .LVU777
 3289 002c 5FFA88F8 		uxtb	r8, r8
 3290              	.LVL225:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3291              		.loc 27 6 5 is_stmt 1 view .LVU778
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3292              		.loc 27 5 80 is_stmt 0 view .LVU779
 3293 0030 8146     		mov	r9, r0
 3294              	.LBB222:
 3295              	.LBB223:
 255:./lib/lib8tion/trig8.h **** }
 3296              		.loc 2 255 12 view .LVU780
 3297 0032 05F14000 		add	r0, r5, #64
 3298              	.LVL226:
 255:./lib/lib8tion/trig8.h **** }
 3299              		.loc 2 255 12 view .LVU781
 3300 0036 B8F1620F 		cmp	r8, #98
 3301 003a C0B2     		uxtb	r0, r0
 3302              	.LBE223:
 3303              	.LBE222:
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3304              		.loc 27 5 80 view .LVU782
 3305 003c 0391     		str	r1, [sp, #12]
 3306 003e C346     		mov	fp, r8
 3307 0040 28BF     		it	cs
 3308 0042 4FF0620B 		movcs	fp, #98
 3309              	.LVL227:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3310              		.loc 27 6 44 is_stmt 1 view .LVU783
   8:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   cos_value = cos8(time) - 128;
 3311              		.loc 27 8 5 view .LVU784
 3312              	.LBB225:
 3313              	.LBI215:
 246:./lib/lib8tion/scale8.h **** {
 3314              		.loc 4 246 35 view .LVU785
 3315              	.LBB219:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 3316              		.loc 4 249 5 view .LVU786
 253:./lib/lib8tion/scale8.h **** #endif
 3317              		.loc 4 253 5 view .LVU787
 3318              		.loc 4 255 5 view .LVU788
 3319              		.loc 4 255 5 is_stmt 0 view .LVU789
 3320              	.LBE219:
 3321              	.LBE225:
 3322              		.loc 27 9 5 is_stmt 1 view .LVU790
 3323              	.LBB226:
 3324              	.LBI222:
 253:./lib/lib8tion/trig8.h **** {
 3325              		.loc 2 253 20 view .LVU791
 3326              	.LBB224:
 255:./lib/lib8tion/trig8.h **** }
 3327              		.loc 2 255 5 view .LVU792
 255:./lib/lib8tion/trig8.h **** }
 3328              		.loc 2 255 12 is_stmt 0 view .LVU793
 3329 0046 FFF7FEFF 		bl	sin8_C
 3330              	.LVL228:
 255:./lib/lib8tion/trig8.h **** }
 3331              		.loc 2 255 12 view .LVU794
 3332              	.LBE224:
 3333              	.LBE226:
 3334              		.loc 27 9 37 view .LVU795
 3335 004a 8038     		subs	r0, r0, #128
 3336              		.loc 27 9 14 view .LVU796
 3337 004c 43B2     		sxtb	r3, r0
  10:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   sin_value = sin8(time) - 128;
 3338              		.loc 27 10 26 view .LVU797
 3339 004e 2846     		mov	r0, r5
   9:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   sin_value = sin8(time) - 128;
 3340              		.loc 27 9 14 view .LVU798
 3341 0050 08EE103A 		vmov	s16, r3	@ int
 3342              	.LVL229:
 3343              		.loc 27 10 5 is_stmt 1 view .LVU799
 3344              		.loc 27 10 26 is_stmt 0 view .LVU800
 3345 0054 FFF7FEFF 		bl	sin8_C
 3346              	.LVL230:
 3347              		.loc 27 10 37 view .LVU801
 3348 0058 8038     		subs	r0, r0, #128
 3349              		.loc 27 10 14 view .LVU802
 3350 005a 47B2     		sxtb	r7, r0
 3351              	.LVL231:
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3352              		.loc 27 11 5 is_stmt 1 view .LVU803
 3353              	.LBB227:
 3354              		.loc 27 11 10 view .LVU804
 3355              	.L171:
 3356              		.loc 27 11 10 is_stmt 0 view .LVU805
 3357 005c E3B2     		uxtb	r3, r4
 3358              	.LVL232:
 3359              		.loc 27 11 31 is_stmt 1 discriminator 1 view .LVU806
 3360              		.loc 27 11 5 is_stmt 0 discriminator 1 view .LVU807
 3361 005e 9B45     		cmp	fp, r3
 3362 0060 09D8     		bhi	.L174
 3363              	.LBE227:
  12:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, cos_value, sin_value, i,
  14:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     }
  16:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     return led_max < DRIVER_LED_TOTAL;
 3364              		.loc 27 16 5 is_stmt 1 view .LVU808
  17:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** }
 3365              		.loc 27 17 1 is_stmt 0 view .LVU809
 3366 0062 B8F1610F 		cmp	r8, #97
 3367 0066 8CBF     		ite	hi
 3368 0068 0020     		movhi	r0, #0
 3369 006a 0120     		movls	r0, #1
 3370 006c 07B0     		add	sp, sp, #28
 3371              		.cfi_remember_state
 3372              		.cfi_def_cfa_offset 44
 3373              		@ sp needed
 3374 006e BDEC028B 		vldm	sp!, {d8}
 3375              		.cfi_restore 80
 3376              		.cfi_restore 81
 3377              		.cfi_def_cfa_offset 36
 3378              	.LVL233:
 3379              		.loc 27 17 1 view .LVU810
 3380 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3381              	.LVL234:
 3382              	.L174:
 3383              		.cfi_restore_state
 3384              	.LBB229:
 3385              	.LBB228:
  12:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3386              		.loc 27 12 9 is_stmt 1 view .LVU811
 3387 0076 174A     		ldr	r2, .L175+4
 3388 0078 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 3389 007a 99F80120 		ldrb	r2, [r9, #1]	@ zero_extendqisi2
 3390 007e 1142     		tst	r1, r2
 3391 0080 24D0     		beq	.L173
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3392              		.loc 27 13 9 view .LVU812
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3393              		.loc 27 13 19 is_stmt 0 view .LVU813
 3394 0082 9AF80220 		ldrb	r2, [r10, #2]	@ zero_extendqisi2
 3395 0086 9AF80100 		ldrb	r0, [r10, #1]	@ zero_extendqisi2
 3396 008a 9AF803C0 		ldrb	ip, [r10, #3]	@ zero_extendqisi2
 3397 008e 039E     		ldr	r6, [sp, #12]
 3398 0090 0095     		str	r5, [sp]
 3399 0092 40EA0220 		orr	r0, r0, r2, lsl #8
 3400 0096 18EE101A 		vmov	r1, s16	@ int
 3401 009a 3A46     		mov	r2, r7
 3402 009c 40EA0C40 		orr	r0, r0, ip, lsl #16
 3403 00a0 B047     		blx	r6
 3404              	.LVL235:
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3405              		.loc 27 13 19 view .LVU814
 3406 00a2 C0F30723 		ubfx	r3, r0, #8, #8
 3407 00a6 8DF81400 		strb	r0, [sp, #20]
 3408 00aa C0F30740 		ubfx	r0, r0, #16, #8
 3409 00ae 8DF81530 		strb	r3, [sp, #21]
 3410 00b2 8DF81600 		strb	r0, [sp, #22]
 3411 00b6 0598     		ldr	r0, [sp, #20]
 3412 00b8 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3413              	.LVL236:
  14:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     }
 3414              		.loc 27 14 9 is_stmt 1 view .LVU815
 3415 00bc C0F30743 		ubfx	r3, r0, #16, #8
 3416 00c0 C2B2     		uxtb	r2, r0
 3417 00c2 C0F30721 		ubfx	r1, r0, #8, #8
 3418 00c6 2046     		mov	r0, r4
 3419 00c8 FFF7FEFF 		bl	rgb_matrix_set_color
 3420              	.LVL237:
 3421              	.L173:
  14:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     }
 3422              		.loc 27 14 9 is_stmt 0 view .LVU816
 3423              	.LBE228:
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3424              		.loc 27 11 44 is_stmt 1 discriminator 2 view .LVU817
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3425              		.loc 27 11 44 is_stmt 0 discriminator 2 view .LVU818
 3426 00cc 0134     		adds	r4, r4, #1
 3427              	.LVL238:
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3428              		.loc 27 11 44 discriminator 2 view .LVU819
 3429 00ce C5E7     		b	.L171
 3430              	.L176:
 3431              		.align	2
 3432              	.L175:
 3433 00d0 00000000 		.word	g_rgb_timer
 3434 00d4 1C010000 		.word	g_led_config+284
 3435 00d8 00000000 		.word	rgb_matrix_config
 3436              	.LBE229:
 3437              		.cfi_endproc
 3438              	.LFE367:
 3440              		.section	.text.DUAL_BEACON,"ax",%progbits
 3441              		.align	1
 3442              		.global	DUAL_BEACON
 3443              		.syntax unified
 3444              		.thumb
 3445              		.thumb_func
 3446              		.fpu fpv4-sp-d16
 3448              	DUAL_BEACON:
 3449              	.LVL239:
 3450              	.LFB402:
   9:quantum/rgb_matrix/animations/dual_beacon_anim.h **** 
  10:quantum/rgb_matrix/animations/dual_beacon_anim.h **** bool DUAL_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &DUAL_BEACON_mat
 3451              		.loc 12 10 43 is_stmt 1 view -0
 3452              		.cfi_startproc
 3453              		@ args = 0, pretend = 0, frame = 0
 3454              		@ frame_needed = 0, uses_anonymous_args = 0
 3455              		@ link register save eliminated.
 3456              		.loc 12 10 45 view .LVU821
 3457              		.loc 12 10 52 is_stmt 0 view .LVU822
 3458 0000 0149     		ldr	r1, .L178
 3459 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3460              	.LVL240:
 3461              	.L179:
 3462              		.loc 12 10 52 view .LVU823
 3463 0006 00BF     		.align	2
 3464              	.L178:
 3465 0008 00000000 		.word	DUAL_BEACON_math
 3466              		.cfi_endproc
 3467              	.LFE402:
 3469              		.section	.text.RAINBOW_BEACON,"ax",%progbits
 3470              		.align	1
 3471              		.global	RAINBOW_BEACON
 3472              		.syntax unified
 3473              		.thumb
 3474              		.thumb_func
 3475              		.fpu fpv4-sp-d16
 3477              	RAINBOW_BEACON:
 3478              	.LVL241:
 3479              	.LFB404:
   9:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** 
  10:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** bool RAINBOW_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_BEAC
 3480              		.loc 13 10 46 is_stmt 1 view -0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 0
 3483              		@ frame_needed = 0, uses_anonymous_args = 0
 3484              		@ link register save eliminated.
 3485              		.loc 13 10 48 view .LVU825
 3486              		.loc 13 10 55 is_stmt 0 view .LVU826
 3487 0000 0149     		ldr	r1, .L181
 3488 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3489              	.LVL242:
 3490              	.L182:
 3491              		.loc 13 10 55 view .LVU827
 3492 0006 00BF     		.align	2
 3493              	.L181:
 3494 0008 00000000 		.word	RAINBOW_BEACON_math
 3495              		.cfi_endproc
 3496              	.LFE404:
 3498              		.section	.text.RAINBOW_PINWHEELS,"ax",%progbits
 3499              		.align	1
 3500              		.global	RAINBOW_PINWHEELS
 3501              		.syntax unified
 3502              		.thumb
 3503              		.thumb_func
 3504              		.fpu fpv4-sp-d16
 3506              	RAINBOW_PINWHEELS:
 3507              	.LVL243:
 3508              	.LFB406:
   9:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** 
  10:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** bool RAINBOW_PINWHEELS(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_P
 3509              		.loc 14 10 49 is_stmt 1 view -0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 0
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
 3513              		@ link register save eliminated.
 3514              		.loc 14 10 51 view .LVU829
 3515              		.loc 14 10 58 is_stmt 0 view .LVU830
 3516 0000 0149     		ldr	r1, .L184
 3517 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3518              	.LVL244:
 3519              	.L185:
 3520              		.loc 14 10 58 view .LVU831
 3521 0006 00BF     		.align	2
 3522              	.L184:
 3523 0008 00000000 		.word	RAINBOW_PINWHEELS_math
 3524              		.cfi_endproc
 3525              	.LFE406:
 3527              		.section	.text.SOLID_COLOR,"ax",%progbits
 3528              		.align	1
 3529              		.global	SOLID_COLOR
 3530              		.syntax unified
 3531              		.thumb
 3532              		.thumb_func
 3533              		.fpu fpv4-sp-d16
 3535              	SOLID_COLOR:
 3536              	.LVL245:
 3537              	.LFB368:
 3538              		.file 28 "quantum/rgb_matrix/animations/solid_color_anim.h"
   1:quantum/rgb_matrix/animations/solid_color_anim.h **** RGB_MATRIX_EFFECT(SOLID_COLOR)
   2:quantum/rgb_matrix/animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   3:quantum/rgb_matrix/animations/solid_color_anim.h **** 
   4:quantum/rgb_matrix/animations/solid_color_anim.h **** bool SOLID_COLOR(effect_params_t* params) {
 3539              		.loc 28 4 43 is_stmt 1 view -0
 3540              		.cfi_startproc
 3541              		@ args = 0, pretend = 0, frame = 8
 3542              		@ frame_needed = 0, uses_anonymous_args = 0
   5:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3543              		.loc 28 5 5 view .LVU833
   4:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3544              		.loc 28 4 43 is_stmt 0 view .LVU834
 3545 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3546              		.cfi_def_cfa_offset 32
 3547              		.cfi_offset 4, -24
 3548              		.cfi_offset 5, -20
 3549              		.cfi_offset 6, -16
 3550              		.cfi_offset 7, -12
 3551              		.cfi_offset 8, -8
 3552              		.cfi_offset 14, -4
 3553              		.loc 28 5 5 view .LVU835
 3554 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/solid_color_anim.h **** 
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(rgb_matrix_config.hsv);
 3555              		.loc 28 7 15 view .LVU836
 3556 0006 1E4A     		ldr	r2, .L193
 3557              	.LBB230:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
   9:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3558              		.loc 28 9 9 view .LVU837
 3559 0008 DFF87880 		ldr	r8, .L193+4
 3560              	.LBE230:
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3561              		.loc 28 7 15 view .LVU838
 3562 000c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3563              		.loc 28 5 5 view .LVU839
 3564 000e 04EB8404 		add	r4, r4, r4, lsl #2
   4:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3565              		.loc 28 4 43 view .LVU840
 3566 0012 0546     		mov	r5, r0
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3567              		.loc 28 5 5 view .LVU841
 3568 0014 A400     		lsls	r4, r4, #2
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3569              		.loc 28 7 15 view .LVU842
 3570 0016 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 3571              	.LVL246:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3572              		.loc 28 5 5 view .LVU843
 3573 0018 E4B2     		uxtb	r4, r4
 3574              	.LVL247:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3575              		.loc 28 5 5 is_stmt 1 view .LVU844
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3576              		.loc 28 7 15 is_stmt 0 view .LVU845
 3577 001a 43EA0023 		orr	r3, r3, r0, lsl #8
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3578              		.loc 28 5 5 view .LVU846
 3579 001e 04F11406 		add	r6, r4, #20
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3580              		.loc 28 7 15 view .LVU847
 3581 0022 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3582              		.loc 28 5 5 view .LVU848
 3583 0024 F6B2     		uxtb	r6, r6
 3584              	.LVL248:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3585              		.loc 28 5 5 is_stmt 1 view .LVU849
 3586 0026 622E     		cmp	r6, #98
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3587              		.loc 28 7 15 is_stmt 0 view .LVU850
 3588 0028 43EA0040 		orr	r0, r3, r0, lsl #16
 3589 002c 3746     		mov	r7, r6
 3590 002e 28BF     		it	cs
 3591 0030 6227     		movcs	r7, #98
 3592              	.LVL249:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3593              		.loc 28 5 44 is_stmt 1 view .LVU851
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3594              		.loc 28 7 5 view .LVU852
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3595              		.loc 28 7 15 is_stmt 0 view .LVU853
 3596 0032 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3597              	.LVL250:
 3598 0036 C0F30723 		ubfx	r3, r0, #8, #8
 3599 003a 8DF80530 		strb	r3, [sp, #5]
 3600 003e C0F30743 		ubfx	r3, r0, #16, #8
 3601 0042 8DF80400 		strb	r0, [sp, #4]
 3602 0046 8DF80630 		strb	r3, [sp, #6]
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3603              		.loc 28 8 5 is_stmt 1 view .LVU854
 3604              	.LBB231:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3605              		.loc 28 8 10 view .LVU855
 3606              	.LVL251:
 3607              	.L187:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3608              		.loc 28 8 31 discriminator 1 view .LVU856
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3609              		.loc 28 8 5 is_stmt 0 discriminator 1 view .LVU857
 3610 004a E3B2     		uxtb	r3, r4
 3611 004c 9F42     		cmp	r7, r3
 3612 004e 06D8     		bhi	.L189
 3613              	.LBE231:
  10:quantum/rgb_matrix/animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  11:quantum/rgb_matrix/animations/solid_color_anim.h ****     }
  12:quantum/rgb_matrix/animations/solid_color_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3614              		.loc 28 12 5 is_stmt 1 view .LVU858
  13:quantum/rgb_matrix/animations/solid_color_anim.h **** }
 3615              		.loc 28 13 1 is_stmt 0 view .LVU859
 3616 0050 612E     		cmp	r6, #97
 3617 0052 8CBF     		ite	hi
 3618 0054 0020     		movhi	r0, #0
 3619 0056 0120     		movls	r0, #1
 3620 0058 02B0     		add	sp, sp, #8
 3621              		.cfi_remember_state
 3622              		.cfi_def_cfa_offset 24
 3623              		@ sp needed
 3624 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3625              	.LVL252:
 3626              	.L189:
 3627              		.cfi_restore_state
 3628              	.LBB232:
   9:quantum/rgb_matrix/animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3629              		.loc 28 9 9 is_stmt 1 view .LVU860
 3630 005e 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 3631 0062 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3632 0064 1A42     		tst	r2, r3
 3633 0066 08D0     		beq	.L188
  10:quantum/rgb_matrix/animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3634              		.loc 28 10 9 view .LVU861
 3635 0068 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 3636 006c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 3637 0070 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 3638 0074 2046     		mov	r0, r4
 3639 0076 FFF7FEFF 		bl	rgb_matrix_set_color
 3640              	.LVL253:
 3641              	.L188:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3642              		.loc 28 8 44 discriminator 2 view .LVU862
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3643              		.loc 28 8 44 is_stmt 0 discriminator 2 view .LVU863
 3644 007a 0134     		adds	r4, r4, #1
 3645              	.LVL254:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3646              		.loc 28 8 44 discriminator 2 view .LVU864
 3647 007c E5E7     		b	.L187
 3648              	.L194:
 3649 007e 00BF     		.align	2
 3650              	.L193:
 3651 0080 00000000 		.word	rgb_matrix_config
 3652 0084 1C010000 		.word	g_led_config+284
 3653              	.LBE232:
 3654              		.cfi_endproc
 3655              	.LFE368:
 3657              		.section	.text.ALPHAS_MODS,"ax",%progbits
 3658              		.align	1
 3659              		.global	ALPHAS_MODS
 3660              		.syntax unified
 3661              		.thumb
 3662              		.thumb_func
 3663              		.fpu fpv4-sp-d16
 3665              	ALPHAS_MODS:
 3666              	.LVL255:
 3667              	.LFB369:
 3668              		.file 29 "quantum/rgb_matrix/animations/alpha_mods_anim.h"
   1:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #ifndef DISABLE_RGB_MATRIX_ALPHAS_MODS
   2:quantum/rgb_matrix/animations/alpha_mods_anim.h **** RGB_MATRIX_EFFECT(ALPHAS_MODS)
   3:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
   5:quantum/rgb_matrix/animations/alpha_mods_anim.h **** // alphas = color1, mods = color2
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h **** bool ALPHAS_MODS(effect_params_t* params) {
 3669              		.loc 29 6 43 is_stmt 1 view -0
 3670              		.cfi_startproc
 3671              		@ args = 0, pretend = 0, frame = 16
 3672              		@ frame_needed = 0, uses_anonymous_args = 0
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3673              		.loc 29 7 5 view .LVU866
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3674              		.loc 29 6 43 is_stmt 0 view .LVU867
 3675 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3676              		.cfi_def_cfa_offset 28
 3677              		.cfi_offset 4, -28
 3678              		.cfi_offset 5, -24
 3679              		.cfi_offset 6, -20
 3680              		.cfi_offset 7, -16
 3681              		.cfi_offset 8, -12
 3682              		.cfi_offset 9, -8
 3683              		.cfi_offset 14, -4
 3684              		.loc 29 7 5 view .LVU868
 3685 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   8:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
   9:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     HSV hsv  = rgb_matrix_config.hsv;
 3686              		.loc 29 9 9 view .LVU869
 3687 0006 DFF8B880 		ldr	r8, .L204
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3688              		.loc 29 7 5 view .LVU870
 3689 000a 04EB8404 		add	r4, r4, r4, lsl #2
 3690 000e A400     		lsls	r4, r4, #2
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3691              		.loc 29 6 43 view .LVU871
 3692 0010 85B0     		sub	sp, sp, #20
 3693              		.cfi_def_cfa_offset 48
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3694              		.loc 29 7 5 view .LVU872
 3695 0012 E4B2     		uxtb	r4, r4
 3696              	.LVL256:
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3697              		.loc 29 7 5 is_stmt 1 view .LVU873
 3698              		.loc 29 9 9 is_stmt 0 view .LVU874
 3699 0014 B8F80120 		ldrh	r2, [r8, #1]	@ unaligned
 3700 0018 98F80330 		ldrb	r3, [r8, #3]	@ zero_extendqisi2
 3701 001c ADF80420 		strh	r2, [sp, #4]	@ unaligned
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3702              		.loc 29 7 5 view .LVU875
 3703 0020 04F11405 		add	r5, r4, #20
 3704              		.loc 29 9 9 view .LVU876
 3705 0024 8DF80630 		strb	r3, [sp, #6]
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3706              		.loc 29 7 5 view .LVU877
 3707 0028 EDB2     		uxtb	r5, r5
 3708              	.LVL257:
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3709              		.loc 29 7 5 is_stmt 1 view .LVU878
 3710 002a 622D     		cmp	r5, #98
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3711              		.loc 29 6 43 is_stmt 0 view .LVU879
 3712 002c 0646     		mov	r6, r0
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3713              		.loc 29 10 16 view .LVU880
 3714 002e 0198     		ldr	r0, [sp, #4]
 3715              	.LVL258:
   9:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3716              		.loc 29 9 9 view .LVU881
 3717 0030 98F80190 		ldrb	r9, [r8, #1]	@ zero_extendqisi2
 3718 0034 2F46     		mov	r7, r5
 3719 0036 28BF     		it	cs
 3720 0038 6227     		movcs	r7, #98
 3721              	.LVL259:
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3722              		.loc 29 7 44 is_stmt 1 view .LVU882
   9:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3723              		.loc 29 9 5 view .LVU883
 3724              		.loc 29 10 5 view .LVU884
 3725              		.loc 29 10 16 is_stmt 0 view .LVU885
 3726 003a FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3727              	.LVL260:
 3728 003e C0F30723 		ubfx	r3, r0, #8, #8
 3729 0042 8DF80930 		strb	r3, [sp, #9]
  11:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3730              		.loc 29 11 11 view .LVU886
 3731 0046 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3732              		.loc 29 10 16 view .LVU887
 3733 004a 8DF80800 		strb	r0, [sp, #8]
 3734              		.loc 29 11 11 view .LVU888
 3735 004e 9944     		add	r9, r9, r3
 3736              	.LVL261:
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3737              		.loc 29 10 16 view .LVU889
 3738 0050 C0F30740 		ubfx	r0, r0, #16, #8
  12:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb2 = rgb_matrix_hsv_to_rgb(hsv);
 3739              		.loc 29 12 16 view .LVU890
 3740 0054 8DF80490 		strb	r9, [sp, #4]
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3741              		.loc 29 10 16 view .LVU891
 3742 0058 8DF80A00 		strb	r0, [sp, #10]
  11:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3743              		.loc 29 11 5 is_stmt 1 view .LVU892
 3744              		.loc 29 12 5 view .LVU893
 3745              		.loc 29 12 16 is_stmt 0 view .LVU894
 3746 005c 0198     		ldr	r0, [sp, #4]
 3747              	.LBB233:
  13:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  15:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3748              		.loc 29 15 9 view .LVU895
 3749 005e DFF86480 		ldr	r8, .L204+4
 3750              	.LBE233:
  12:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3751              		.loc 29 12 16 view .LVU896
 3752 0062 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3753              	.LVL262:
 3754 0066 C0F30723 		ubfx	r3, r0, #8, #8
 3755 006a 8DF80D30 		strb	r3, [sp, #13]
 3756 006e C0F30743 		ubfx	r3, r0, #16, #8
 3757 0072 8DF80C00 		strb	r0, [sp, #12]
 3758 0076 8DF80E30 		strb	r3, [sp, #14]
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3759              		.loc 29 14 5 is_stmt 1 view .LVU897
 3760              	.LBB234:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3761              		.loc 29 14 10 view .LVU898
 3762              	.LVL263:
 3763              	.L196:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3764              		.loc 29 14 31 discriminator 1 view .LVU899
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3765              		.loc 29 14 5 is_stmt 0 discriminator 1 view .LVU900
 3766 007a E3B2     		uxtb	r3, r4
 3767 007c 9F42     		cmp	r7, r3
 3768 007e 06D8     		bhi	.L199
 3769              	.LBE234:
  16:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
  17:quantum/rgb_matrix/animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb2.r, rgb2.g, rgb2.b);
  18:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         } else {
  19:quantum/rgb_matrix/animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb1.r, rgb1.g, rgb1.b);
  20:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         }
  21:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     }
  22:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3770              		.loc 29 22 5 is_stmt 1 view .LVU901
  23:quantum/rgb_matrix/animations/alpha_mods_anim.h **** }
 3771              		.loc 29 23 1 is_stmt 0 view .LVU902
 3772 0080 612D     		cmp	r5, #97
 3773 0082 8CBF     		ite	hi
 3774 0084 0020     		movhi	r0, #0
 3775 0086 0120     		movls	r0, #1
 3776 0088 05B0     		add	sp, sp, #20
 3777              		.cfi_remember_state
 3778              		.cfi_def_cfa_offset 28
 3779              		@ sp needed
 3780 008a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3781              	.LVL264:
 3782              	.L199:
 3783              		.cfi_restore_state
 3784              	.LBB235:
  15:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 3785              		.loc 29 15 9 is_stmt 1 view .LVU903
 3786 008e 14F80830 		ldrb	r3, [r4, r8]	@ zero_extendqisi2
 3787 0092 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3788 0094 1342     		tst	r3, r2
 3789 0096 11D0     		beq	.L197
  16:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 3790              		.loc 29 16 9 view .LVU904
  16:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 3791              		.loc 29 16 12 is_stmt 0 view .LVU905
 3792 0098 DB07     		lsls	r3, r3, #31
  17:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         } else {
 3793              		.loc 29 17 13 is_stmt 1 view .LVU906
 3794 009a 43BF     		ittte	mi
 3795 009c 9DF80E30 		ldrbmi	r3, [sp, #14]	@ zero_extendqisi2
 3796 00a0 9DF80C20 		ldrbmi	r2, [sp, #12]	@ zero_extendqisi2
 3797 00a4 9DF80D10 		ldrbmi	r1, [sp, #13]	@ zero_extendqisi2
  19:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         }
 3798              		.loc 29 19 13 view .LVU907
 3799 00a8 9DF80A30 		ldrbpl	r3, [sp, #10]	@ zero_extendqisi2
 3800 00ac 5CBF     		itt	pl
 3801 00ae 9DF80820 		ldrbpl	r2, [sp, #8]	@ zero_extendqisi2
 3802 00b2 9DF80910 		ldrbpl	r1, [sp, #9]	@ zero_extendqisi2
 3803 00b6 2046     		mov	r0, r4
 3804 00b8 FFF7FEFF 		bl	rgb_matrix_set_color
 3805              	.LVL265:
 3806              	.L197:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3807              		.loc 29 14 44 discriminator 2 view .LVU908
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3808              		.loc 29 14 44 is_stmt 0 discriminator 2 view .LVU909
 3809 00bc 0134     		adds	r4, r4, #1
 3810              	.LVL266:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3811              		.loc 29 14 44 discriminator 2 view .LVU910
 3812 00be DCE7     		b	.L196
 3813              	.L205:
 3814              		.align	2
 3815              	.L204:
 3816 00c0 00000000 		.word	rgb_matrix_config
 3817 00c4 1C010000 		.word	g_led_config+284
 3818              	.LBE235:
 3819              		.cfi_endproc
 3820              	.LFE369:
 3822              		.section	.text.GRADIENT_UP_DOWN,"ax",%progbits
 3823              		.align	1
 3824              		.global	GRADIENT_UP_DOWN
 3825              		.syntax unified
 3826              		.thumb
 3827              		.thumb_func
 3828              		.fpu fpv4-sp-d16
 3830              	GRADIENT_UP_DOWN:
 3831              	.LVL267:
 3832              	.LFB370:
 3833              		.file 30 "quantum/rgb_matrix/animations/gradient_up_down_anim.h"
   1:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_UP_DOWN
   2:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_UP_DOWN)
   3:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
   5:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** bool GRADIENT_UP_DOWN(effect_params_t* params) {
 3834              		.loc 30 5 48 is_stmt 1 view -0
 3835              		.cfi_startproc
 3836              		@ args = 0, pretend = 0, frame = 8
 3837              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3838              		.loc 30 6 5 view .LVU912
   5:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3839              		.loc 30 5 48 is_stmt 0 view .LVU913
 3840 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3841              		.cfi_def_cfa_offset 48
 3842              		.cfi_offset 4, -36
 3843              		.cfi_offset 5, -32
 3844              		.cfi_offset 6, -28
 3845              		.cfi_offset 7, -24
 3846              		.cfi_offset 8, -20
 3847              		.cfi_offset 9, -16
 3848              		.cfi_offset 10, -12
 3849              		.cfi_offset 11, -8
 3850              		.cfi_offset 14, -4
 3851              		.loc 30 6 5 view .LVU914
 3852 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 3853              		.loc 30 8 13 view .LVU915
 3854 0006 204F     		ldr	r7, .L211
 3855              	.LBB236:
 3856              	.LBB237:
   9:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  11:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3857              		.loc 30 11 9 view .LVU916
 3858 0008 DFF88090 		ldr	r9, .L211+4
 3859              	.LBE237:
 3860              	.LBE236:
 3861              	.LBB240:
 3862              	.LBB241:
  26:./lib/lib8tion/scale8.h **** #endif
 3863              		.loc 4 26 25 view .LVU917
 3864 000c 97F80480 		ldrb	r8, [r7, #4]	@ zero_extendqisi2
 3865              	.LBE241:
 3866              	.LBE240:
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 3867              		.loc 30 8 13 view .LVU918
 3868 0010 B7F80120 		ldrh	r2, [r7, #1]	@ unaligned
 3869 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3870 0016 ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 3871              		.loc 30 6 5 view .LVU919
 3872 001a 04EB8404 		add	r4, r4, r4, lsl #2
 3873 001e A400     		lsls	r4, r4, #2
 3874 0020 E4B2     		uxtb	r4, r4
 3875              	.LVL268:
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 3876              		.loc 30 6 5 is_stmt 1 view .LVU920
 3877 0022 04F11405 		add	r5, r4, #20
 3878 0026 EDB2     		uxtb	r5, r5
 3879              	.LVL269:
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 3880              		.loc 30 6 5 view .LVU921
 3881 0028 622D     		cmp	r5, #98
 3882 002a AA46     		mov	r10, r5
   5:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3883              		.loc 30 5 48 is_stmt 0 view .LVU922
 3884 002c 0646     		mov	r6, r0
 3885 002e 28BF     		it	cs
 3886 0030 4FF0620A 		movcs	r10, #98
 3887              	.LVL270:
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 3888              		.loc 30 6 44 is_stmt 1 view .LVU923
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 3889              		.loc 30 8 5 view .LVU924
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 3890              		.loc 30 8 13 is_stmt 0 view .LVU925
 3891 0034 8DF80230 		strb	r3, [sp, #2]
   9:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3892              		.loc 30 9 5 is_stmt 1 view .LVU926
 3893              	.LVL271:
 3894              	.LBB243:
 3895              	.LBI240:
  20:./lib/lib8tion/scale8.h **** {
 3896              		.loc 4 20 34 view .LVU927
 3897              	.LBB242:
  26:./lib/lib8tion/scale8.h **** #endif
 3898              		.loc 4 26 5 view .LVU928
  26:./lib/lib8tion/scale8.h **** #endif
 3899              		.loc 4 26 47 is_stmt 0 view .LVU929
 3900 0038 4FEA9808 		lsr	r8, r8, #2
 3901              	.LVL272:
  26:./lib/lib8tion/scale8.h **** #endif
 3902              		.loc 4 26 47 view .LVU930
 3903              	.LBE242:
 3904              	.LBE243:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3905              		.loc 30 10 5 is_stmt 1 view .LVU931
 3906              	.LBB244:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3907              		.loc 30 10 10 view .LVU932
 3908              	.LBB238:
  12:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         // The y range will be 0..64, map this to 0..4
  13:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + scale * (g_led_config.point[i].y >> 4);
 3909              		.loc 30 14 75 is_stmt 0 view .LVU933
 3910 003c A9F1C30B 		sub	fp, r9, #195
 3911              	.LVL273:
 3912              	.L207:
 3913              		.loc 30 14 75 view .LVU934
 3914              	.LBE238:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3915              		.loc 30 10 31 is_stmt 1 discriminator 1 view .LVU935
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3916              		.loc 30 10 5 is_stmt 0 discriminator 1 view .LVU936
 3917 0040 E3B2     		uxtb	r3, r4
 3918 0042 9A45     		cmp	r10, r3
 3919 0044 06D8     		bhi	.L210
 3920              	.LBE244:
  15:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
  16:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     }
  18:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3921              		.loc 30 18 5 is_stmt 1 view .LVU937
  19:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** }
 3922              		.loc 30 19 1 is_stmt 0 view .LVU938
 3923 0046 612D     		cmp	r5, #97
 3924 0048 8CBF     		ite	hi
 3925 004a 0020     		movhi	r0, #0
 3926 004c 0120     		movls	r0, #1
 3927 004e 03B0     		add	sp, sp, #12
 3928              		.cfi_remember_state
 3929              		.cfi_def_cfa_offset 36
 3930              		@ sp needed
 3931 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3932              	.LVL274:
 3933              	.L210:
 3934              		.cfi_restore_state
 3935              	.LBB245:
 3936              	.LBB239:
  11:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         // The y range will be 0..64, map this to 0..4
 3937              		.loc 30 11 9 is_stmt 1 view .LVU939
 3938 0054 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 3939 0058 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3940 005a 1A42     		tst	r2, r3
 3941 005c 12D0     		beq	.L209
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 3942              		.loc 30 14 9 view .LVU940
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 3943              		.loc 30 14 51 is_stmt 0 view .LVU941
 3944 005e 1BF81430 		ldrb	r3, [fp, r4, lsl #1]	@ zero_extendqisi2
 3945 0062 1A09     		lsrs	r2, r3, #4
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 3946              		.loc 30 14 43 view .LVU942
 3947 0064 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3948 0066 02FB0833 		mla	r3, r2, r8, r3
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 3949              		.loc 30 14 17 view .LVU943
 3950 006a 8DF80030 		strb	r3, [sp]
  15:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3951              		.loc 30 15 9 is_stmt 1 view .LVU944
  15:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3952              		.loc 30 15 19 is_stmt 0 view .LVU945
 3953 006e 0098     		ldr	r0, [sp]
 3954 0070 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3955              	.LVL275:
  16:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     }
 3956              		.loc 30 16 9 is_stmt 1 view .LVU946
 3957 0074 C0F30743 		ubfx	r3, r0, #16, #8
 3958 0078 C2B2     		uxtb	r2, r0
 3959 007a C0F30721 		ubfx	r1, r0, #8, #8
 3960 007e 2046     		mov	r0, r4
 3961 0080 FFF7FEFF 		bl	rgb_matrix_set_color
 3962              	.LVL276:
 3963              	.L209:
 3964              	.LBE239:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3965              		.loc 30 10 44 discriminator 2 view .LVU947
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3966              		.loc 30 10 44 is_stmt 0 discriminator 2 view .LVU948
 3967 0084 0134     		adds	r4, r4, #1
 3968              	.LVL277:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3969              		.loc 30 10 44 discriminator 2 view .LVU949
 3970 0086 DBE7     		b	.L207
 3971              	.L212:
 3972              		.align	2
 3973              	.L211:
 3974 0088 00000000 		.word	rgb_matrix_config
 3975 008c 1C010000 		.word	g_led_config+284
 3976              	.LBE245:
 3977              		.cfi_endproc
 3978              	.LFE370:
 3980              		.section	.text.GRADIENT_LEFT_RIGHT,"ax",%progbits
 3981              		.align	1
 3982              		.global	GRADIENT_LEFT_RIGHT
 3983              		.syntax unified
 3984              		.thumb
 3985              		.thumb_func
 3986              		.fpu fpv4-sp-d16
 3988              	GRADIENT_LEFT_RIGHT:
 3989              	.LVL278:
 3990              	.LFB371:
 3991              		.file 31 "quantum/rgb_matrix/animations/gradient_left_right_anim.h"
   1:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_LEFT_RIGHT
   2:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_LEFT_RIGHT)
   3:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
   5:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** bool GRADIENT_LEFT_RIGHT(effect_params_t* params) {
 3992              		.loc 31 5 51 is_stmt 1 view -0
 3993              		.cfi_startproc
 3994              		@ args = 0, pretend = 0, frame = 8
 3995              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3996              		.loc 31 6 5 view .LVU951
   5:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3997              		.loc 31 5 51 is_stmt 0 view .LVU952
 3998 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3999              		.cfi_def_cfa_offset 48
 4000              		.cfi_offset 4, -36
 4001              		.cfi_offset 5, -32
 4002              		.cfi_offset 6, -28
 4003              		.cfi_offset 7, -24
 4004              		.cfi_offset 8, -20
 4005              		.cfi_offset 9, -16
 4006              		.cfi_offset 10, -12
 4007              		.cfi_offset 11, -8
 4008              		.cfi_offset 14, -4
 4009              		.loc 31 6 5 view .LVU953
 4010 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 4011              		.loc 31 8 13 view .LVU954
 4012 0006 214F     		ldr	r7, .L218
 4013              	.LBB246:
 4014              	.LBB247:
   9:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  11:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4015              		.loc 31 11 9 view .LVU955
 4016 0008 DFF88490 		ldr	r9, .L218+4
 4017              	.LBE247:
 4018              	.LBE246:
 4019              	.LBB250:
 4020              	.LBB251:
  26:./lib/lib8tion/scale8.h **** #endif
 4021              		.loc 4 26 25 view .LVU956
 4022 000c 97F80480 		ldrb	r8, [r7, #4]	@ zero_extendqisi2
 4023              	.LBE251:
 4024              	.LBE250:
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4025              		.loc 31 8 13 view .LVU957
 4026 0010 B7F80120 		ldrh	r2, [r7, #1]	@ unaligned
 4027 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4028 0016 ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4029              		.loc 31 6 5 view .LVU958
 4030 001a 04EB8404 		add	r4, r4, r4, lsl #2
 4031 001e A400     		lsls	r4, r4, #2
 4032 0020 E4B2     		uxtb	r4, r4
 4033              	.LVL279:
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4034              		.loc 31 6 5 is_stmt 1 view .LVU959
 4035 0022 04F11405 		add	r5, r4, #20
 4036 0026 EDB2     		uxtb	r5, r5
 4037              	.LVL280:
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4038              		.loc 31 6 5 view .LVU960
 4039 0028 622D     		cmp	r5, #98
 4040 002a AA46     		mov	r10, r5
   5:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4041              		.loc 31 5 51 is_stmt 0 view .LVU961
 4042 002c 0646     		mov	r6, r0
 4043 002e 28BF     		it	cs
 4044 0030 4FF0620A 		movcs	r10, #98
 4045              	.LVL281:
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4046              		.loc 31 6 44 is_stmt 1 view .LVU962
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4047              		.loc 31 8 5 view .LVU963
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4048              		.loc 31 8 13 is_stmt 0 view .LVU964
 4049 0034 8DF80230 		strb	r3, [sp, #2]
   9:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4050              		.loc 31 9 5 is_stmt 1 view .LVU965
 4051              	.LVL282:
 4052              	.LBB253:
 4053              	.LBI250:
  20:./lib/lib8tion/scale8.h **** {
 4054              		.loc 4 20 34 view .LVU966
 4055              	.LBB252:
  26:./lib/lib8tion/scale8.h **** #endif
 4056              		.loc 4 26 5 view .LVU967
  26:./lib/lib8tion/scale8.h **** #endif
 4057              		.loc 4 26 47 is_stmt 0 view .LVU968
 4058 0038 4FEA9808 		lsr	r8, r8, #2
 4059              	.LVL283:
  26:./lib/lib8tion/scale8.h **** #endif
 4060              		.loc 4 26 47 view .LVU969
 4061              	.LBE252:
 4062              	.LBE253:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4063              		.loc 31 10 5 is_stmt 1 view .LVU970
 4064              	.LBB254:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4065              		.loc 31 10 10 view .LVU971
 4066              	.LBB248:
  12:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         // The x range will be 0..224, map this to 0..7
  13:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + (scale * g_led_config.point[i].x >> 5);
 4067              		.loc 31 14 75 is_stmt 0 view .LVU972
 4068 003c A9F1C40B 		sub	fp, r9, #196
 4069              	.LVL284:
 4070              	.L214:
 4071              		.loc 31 14 75 view .LVU973
 4072              	.LBE248:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4073              		.loc 31 10 31 is_stmt 1 discriminator 1 view .LVU974
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4074              		.loc 31 10 5 is_stmt 0 discriminator 1 view .LVU975
 4075 0040 E3B2     		uxtb	r3, r4
 4076 0042 9A45     		cmp	r10, r3
 4077 0044 06D8     		bhi	.L217
 4078              	.LBE254:
  15:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
  16:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     }
  18:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 4079              		.loc 31 18 5 is_stmt 1 view .LVU976
  19:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** }
 4080              		.loc 31 19 1 is_stmt 0 view .LVU977
 4081 0046 612D     		cmp	r5, #97
 4082 0048 8CBF     		ite	hi
 4083 004a 0020     		movhi	r0, #0
 4084 004c 0120     		movls	r0, #1
 4085 004e 03B0     		add	sp, sp, #12
 4086              		.cfi_remember_state
 4087              		.cfi_def_cfa_offset 36
 4088              		@ sp needed
 4089 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4090              	.LVL285:
 4091              	.L217:
 4092              		.cfi_restore_state
 4093              	.LBB255:
 4094              	.LBB249:
  11:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         // The x range will be 0..224, map this to 0..7
 4095              		.loc 31 11 9 is_stmt 1 view .LVU978
 4096 0054 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 4097 0058 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 4098 005a 1A42     		tst	r2, r3
 4099 005c 13D0     		beq	.L216
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4100              		.loc 31 14 9 view .LVU979
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4101              		.loc 31 14 75 is_stmt 0 view .LVU980
 4102 005e 1BF81430 		ldrb	r3, [fp, r4, lsl #1]	@ zero_extendqisi2
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4103              		.loc 31 14 52 view .LVU981
 4104 0062 08FB03F2 		mul	r2, r8, r3
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4105              		.loc 31 14 43 view .LVU982
 4106 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4107 0068 03EB5213 		add	r3, r3, r2, lsr #5
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4108              		.loc 31 14 17 view .LVU983
 4109 006c 8DF80030 		strb	r3, [sp]
  15:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4110              		.loc 31 15 9 is_stmt 1 view .LVU984
  15:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4111              		.loc 31 15 19 is_stmt 0 view .LVU985
 4112 0070 0098     		ldr	r0, [sp]
 4113 0072 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4114              	.LVL286:
  16:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     }
 4115              		.loc 31 16 9 is_stmt 1 view .LVU986
 4116 0076 C0F30743 		ubfx	r3, r0, #16, #8
 4117 007a C2B2     		uxtb	r2, r0
 4118 007c C0F30721 		ubfx	r1, r0, #8, #8
 4119 0080 2046     		mov	r0, r4
 4120 0082 FFF7FEFF 		bl	rgb_matrix_set_color
 4121              	.LVL287:
 4122              	.L216:
 4123              	.LBE249:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4124              		.loc 31 10 44 discriminator 2 view .LVU987
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4125              		.loc 31 10 44 is_stmt 0 discriminator 2 view .LVU988
 4126 0086 0134     		adds	r4, r4, #1
 4127              	.LVL288:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4128              		.loc 31 10 44 discriminator 2 view .LVU989
 4129 0088 DAE7     		b	.L214
 4130              	.L219:
 4131 008a 00BF     		.align	2
 4132              	.L218:
 4133 008c 00000000 		.word	rgb_matrix_config
 4134 0090 1C010000 		.word	g_led_config+284
 4135              	.LBE255:
 4136              		.cfi_endproc
 4137              	.LFE371:
 4139              		.section	.text.BREATHING,"ax",%progbits
 4140              		.align	1
 4141              		.global	BREATHING
 4142              		.syntax unified
 4143              		.thumb
 4144              		.thumb_func
 4145              		.fpu fpv4-sp-d16
 4147              	BREATHING:
 4148              	.LVL289:
 4149              	.LFB372:
 4150              		.file 32 "quantum/rgb_matrix/animations/breathing_anim.h"
   1:quantum/rgb_matrix/animations/breathing_anim.h **** #ifndef DISABLE_RGB_MATRIX_BREATHING
   2:quantum/rgb_matrix/animations/breathing_anim.h **** RGB_MATRIX_EFFECT(BREATHING)
   3:quantum/rgb_matrix/animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/breathing_anim.h **** 
   5:quantum/rgb_matrix/animations/breathing_anim.h **** bool BREATHING(effect_params_t* params) {
 4151              		.loc 32 5 41 is_stmt 1 view -0
 4152              		.cfi_startproc
 4153              		@ args = 0, pretend = 0, frame = 8
 4154              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4155              		.loc 32 6 5 view .LVU991
   5:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4156              		.loc 32 5 41 is_stmt 0 view .LVU992
 4157 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 4158              		.cfi_def_cfa_offset 32
 4159              		.cfi_offset 4, -24
 4160              		.cfi_offset 5, -20
 4161              		.cfi_offset 6, -16
 4162              		.cfi_offset 7, -12
 4163              		.cfi_offset 8, -8
 4164              		.cfi_offset 14, -4
   7:quantum/rgb_matrix/animations/breathing_anim.h **** 
   8:quantum/rgb_matrix/animations/breathing_anim.h ****     HSV      hsv  = rgb_matrix_config.hsv;
 4165              		.loc 32 8 14 view .LVU993
 4166 0004 2A4B     		ldr	r3, .L228
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4167              		.loc 32 6 5 view .LVU994
 4168 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 4169              		.loc 32 8 14 view .LVU995
 4170 0008 B3F80120 		ldrh	r2, [r3, #1]	@ unaligned
 4171 000c ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4172              		.loc 32 6 5 view .LVU996
 4173 0010 04EB8404 		add	r4, r4, r4, lsl #2
 4174              	.LBB256:
 4175              	.LBB257:
 253:./lib/lib8tion/scale8.h **** #endif
 4176              		.loc 4 253 17 view .LVU997
 4177 0014 274A     		ldr	r2, .L228+4
 4178              	.LBE257:
 4179              	.LBE256:
 4180              		.loc 32 8 14 view .LVU998
 4181 0016 93F80380 		ldrb	r8, [r3, #3]	@ zero_extendqisi2
   9:quantum/rgb_matrix/animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 4182              		.loc 32 9 21 view .LVU999
 4183 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4184              		.loc 32 6 5 view .LVU1000
 4185 001c A400     		lsls	r4, r4, #2
   5:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4186              		.loc 32 5 41 view .LVU1001
 4187 001e 0646     		mov	r6, r0
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4188              		.loc 32 6 5 view .LVU1002
 4189 0020 E4B2     		uxtb	r4, r4
 4190              	.LVL290:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4191              		.loc 32 6 5 is_stmt 1 view .LVU1003
 4192              	.LBB261:
 4193              	.LBB258:
 253:./lib/lib8tion/scale8.h **** #endif
 4194              		.loc 4 253 17 is_stmt 0 view .LVU1004
 4195 0022 1088     		ldrh	r0, [r2]
 4196              	.LVL291:
 253:./lib/lib8tion/scale8.h **** #endif
 4197              		.loc 4 253 17 view .LVU1005
 4198 0024 DB08     		lsrs	r3, r3, #3
 4199              	.LBE258:
 4200              	.LBE261:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4201              		.loc 32 6 5 view .LVU1006
 4202 0026 04F11405 		add	r5, r4, #20
 4203              	.LBB262:
 4204              	.LBB259:
 253:./lib/lib8tion/scale8.h **** #endif
 4205              		.loc 4 253 17 view .LVU1007
 4206 002a 5843     		muls	r0, r3, r0
 4207              	.LBE259:
 4208              	.LBE262:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4209              		.loc 32 6 5 view .LVU1008
 4210 002c EDB2     		uxtb	r5, r5
 4211              	.LVL292:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4212              		.loc 32 6 5 is_stmt 1 view .LVU1009
 4213 002e 622D     		cmp	r5, #98
  10:quantum/rgb_matrix/animations/breathing_anim.h ****     hsv.v         = scale8(abs8(sin8(time) - 128) * 2, hsv.v);
 4214              		.loc 32 10 33 is_stmt 0 view .LVU1010
 4215 0030 C0F30720 		ubfx	r0, r0, #8, #8
 4216 0034 2F46     		mov	r7, r5
 4217 0036 28BF     		it	cs
 4218 0038 6227     		movcs	r7, #98
 4219              	.LVL293:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4220              		.loc 32 6 44 is_stmt 1 view .LVU1011
   8:quantum/rgb_matrix/animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 4221              		.loc 32 8 5 view .LVU1012
   9:quantum/rgb_matrix/animations/breathing_anim.h ****     hsv.v         = scale8(abs8(sin8(time) - 128) * 2, hsv.v);
 4222              		.loc 32 9 5 view .LVU1013
 4223              	.LBB263:
 4224              	.LBI256:
 246:./lib/lib8tion/scale8.h **** {
 4225              		.loc 4 246 35 view .LVU1014
 4226              	.LBB260:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4227              		.loc 4 249 5 view .LVU1015
 253:./lib/lib8tion/scale8.h **** #endif
 4228              		.loc 4 253 5 view .LVU1016
 4229              		.loc 4 255 5 view .LVU1017
 4230              		.loc 4 255 5 is_stmt 0 view .LVU1018
 4231              	.LBE260:
 4232              	.LBE263:
 4233              		.loc 32 10 5 is_stmt 1 view .LVU1019
 4234              		.loc 32 10 33 is_stmt 0 view .LVU1020
 4235 003a FFF7FEFF 		bl	sin8_C
 4236              	.LVL294:
 4237              		.loc 32 10 44 view .LVU1021
 4238 003e A0F18003 		sub	r3, r0, #128
 4239              		.loc 32 10 28 view .LVU1022
 4240 0042 5BB2     		sxtb	r3, r3
 4241              	.LVL295:
 4242              	.LBB264:
 4243              	.LBI264:
 404:./lib/lib8tion/math8.h **** {
 4244              		.loc 1 404 33 is_stmt 1 view .LVU1023
 4245              	.LBB265:
 407:./lib/lib8tion/math8.h ****     return i;
 4246              		.loc 1 407 5 view .LVU1024
 407:./lib/lib8tion/math8.h ****     return i;
 4247              		.loc 1 407 7 is_stmt 0 view .LVU1025
 4248 0044 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 4249              		.loc 1 407 16 is_stmt 1 view .LVU1026
 407:./lib/lib8tion/math8.h ****     return i;
 4250              		.loc 1 407 18 is_stmt 0 view .LVU1027
 4251 0046 BCBF     		itt	lt
 4252 0048 C0F18000 		rsblt	r0, r0, #128
 4253 004c 43B2     		sxtblt	r3, r0
 4254              	.LVL296:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 4255              		.loc 1 408 5 is_stmt 1 view .LVU1028
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 4256              		.loc 1 408 5 is_stmt 0 view .LVU1029
 4257              	.LBE265:
 4258              	.LBE264:
 4259              	.LBB266:
 4260              	.LBI266:
  20:./lib/lib8tion/scale8.h **** {
 4261              		.loc 4 20 34 is_stmt 1 view .LVU1030
 4262              	.LBB267:
  26:./lib/lib8tion/scale8.h **** #endif
 4263              		.loc 4 26 5 view .LVU1031
  26:./lib/lib8tion/scale8.h **** #endif
 4264              		.loc 4 26 5 is_stmt 0 view .LVU1032
 4265              	.LBE267:
 4266              	.LBE266:
  11:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB rgb       = rgb_matrix_hsv_to_rgb(hsv);
 4267              		.loc 32 11 5 is_stmt 1 view .LVU1033
  10:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB rgb       = rgb_matrix_hsv_to_rgb(hsv);
 4268              		.loc 32 10 21 is_stmt 0 view .LVU1034
 4269 004e 5B00     		lsls	r3, r3, #1
 4270              	.LVL297:
 4271              	.LBB269:
 4272              	.LBB268:
  26:./lib/lib8tion/scale8.h **** #endif
 4273              		.loc 4 26 25 view .LVU1035
 4274 0050 DBB2     		uxtb	r3, r3
 4275 0052 13FB08F3 		smulbb	r3, r3, r8
  26:./lib/lib8tion/scale8.h **** #endif
 4276              		.loc 4 26 47 view .LVU1036
 4277 0056 1B12     		asrs	r3, r3, #8
 4278 0058 8DF80230 		strb	r3, [sp, #2]
 4279              	.LBE268:
 4280              	.LBE269:
 4281              		.loc 32 11 21 view .LVU1037
 4282 005c 0098     		ldr	r0, [sp]
 4283              	.LBB270:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  13:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4284              		.loc 32 13 9 view .LVU1038
 4285 005e DFF85880 		ldr	r8, .L228+8
 4286              	.LBE270:
  11:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4287              		.loc 32 11 21 view .LVU1039
 4288 0062 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4289              	.LVL298:
  11:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4290              		.loc 32 11 21 view .LVU1040
 4291 0066 C0F30723 		ubfx	r3, r0, #8, #8
 4292 006a 8DF80400 		strb	r0, [sp, #4]
 4293 006e C0F30740 		ubfx	r0, r0, #16, #8
 4294 0072 8DF80530 		strb	r3, [sp, #5]
 4295 0076 8DF80600 		strb	r0, [sp, #6]
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4296              		.loc 32 12 5 is_stmt 1 view .LVU1041
 4297              	.LBB271:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4298              		.loc 32 12 10 view .LVU1042
 4299              	.LVL299:
 4300              	.L222:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4301              		.loc 32 12 31 discriminator 1 view .LVU1043
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4302              		.loc 32 12 5 is_stmt 0 discriminator 1 view .LVU1044
 4303 007a E3B2     		uxtb	r3, r4
 4304 007c 9F42     		cmp	r7, r3
 4305 007e 06D8     		bhi	.L224
 4306              	.LBE271:
  14:quantum/rgb_matrix/animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix/animations/breathing_anim.h ****     }
  16:quantum/rgb_matrix/animations/breathing_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 4307              		.loc 32 16 5 is_stmt 1 view .LVU1045
  17:quantum/rgb_matrix/animations/breathing_anim.h **** }
 4308              		.loc 32 17 1 is_stmt 0 view .LVU1046
 4309 0080 612D     		cmp	r5, #97
 4310 0082 8CBF     		ite	hi
 4311 0084 0020     		movhi	r0, #0
 4312 0086 0120     		movls	r0, #1
 4313 0088 02B0     		add	sp, sp, #8
 4314              		.cfi_remember_state
 4315              		.cfi_def_cfa_offset 24
 4316              		@ sp needed
 4317 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4318              	.LVL300:
 4319              	.L224:
 4320              		.cfi_restore_state
 4321              	.LBB272:
  13:quantum/rgb_matrix/animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4322              		.loc 32 13 9 is_stmt 1 view .LVU1047
 4323 008e 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 4324 0092 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 4325 0094 1A42     		tst	r2, r3
 4326 0096 08D0     		beq	.L223
  14:quantum/rgb_matrix/animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4327              		.loc 32 14 9 view .LVU1048
 4328 0098 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 4329 009c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 4330 00a0 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 4331 00a4 2046     		mov	r0, r4
 4332 00a6 FFF7FEFF 		bl	rgb_matrix_set_color
 4333              	.LVL301:
 4334              	.L223:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4335              		.loc 32 12 44 discriminator 2 view .LVU1049
  12:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4336              		.loc 32 12 44 is_stmt 0 discriminator 2 view .LVU1050
 4337 00aa 0134     		adds	r4, r4, #1
 4338              	.LVL302:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4339              		.loc 32 12 44 discriminator 2 view .LVU1051
 4340 00ac E5E7     		b	.L222
 4341              	.L229:
 4342 00ae 00BF     		.align	2
 4343              	.L228:
 4344 00b0 00000000 		.word	rgb_matrix_config
 4345 00b4 00000000 		.word	g_rgb_timer
 4346 00b8 1C010000 		.word	g_led_config+284
 4347              	.LBE272:
 4348              		.cfi_endproc
 4349              	.LFE372:
 4351              		.section	.text.raindrops_set_color.isra.0,"ax",%progbits
 4352              		.align	1
 4353              		.syntax unified
 4354              		.thumb
 4355              		.thumb_func
 4356              		.fpu fpv4-sp-d16
 4358              	raindrops_set_color.isra.0:
 4359              	.LVL303:
 4360              	.LFB508:
 4361              		.file 33 "quantum/rgb_matrix/animations/raindrops_anim.h"
   1:quantum/rgb_matrix/animations/raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINDROPS
   2:quantum/rgb_matrix/animations/raindrops_anim.h **** RGB_MATRIX_EFFECT(RAINDROPS)
   3:quantum/rgb_matrix/animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/raindrops_anim.h **** 
   5:quantum/rgb_matrix/animations/raindrops_anim.h **** static void raindrops_set_color(int i, effect_params_t* params) {
 4362              		.loc 33 5 13 is_stmt 1 view -0
 4363              		.cfi_startproc
 4364              		@ args = 0, pretend = 0, frame = 8
 4365              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4366              		.loc 33 6 5 view .LVU1053
   5:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4367              		.loc 33 5 13 is_stmt 0 view .LVU1054
 4368 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 4369              		.cfi_def_cfa_offset 24
 4370              		.cfi_offset 4, -12
 4371              		.cfi_offset 5, -8
 4372              		.cfi_offset 14, -4
 4373              		.loc 33 6 10 view .LVU1055
 4374 0002 1A4B     		ldr	r3, .L233
 4375 0004 0344     		add	r3, r3, r0
   5:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4376              		.loc 33 5 13 view .LVU1056
 4377 0006 0546     		mov	r5, r0
 4378              		.loc 33 6 9 view .LVU1057
 4379 0008 93F81C31 		ldrb	r3, [r3, #284]	@ zero_extendqisi2
 4380              		.loc 33 6 8 view .LVU1058
 4381 000c 1942     		tst	r1, r3
 4382 000e 2AD0     		beq	.L230
 4383              	.LVL304:
 4384              	.LBB275:
 4385              	.LBI275:
   5:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4386              		.loc 33 5 13 is_stmt 1 view .LVU1059
 4387              	.LBB276:
   7:quantum/rgb_matrix/animations/raindrops_anim.h ****     HSV hsv = {0, rgb_matrix_config.hsv.s, rgb_matrix_config.hsv.v};
 4388              		.loc 33 7 5 view .LVU1060
 4389              		.loc 33 7 40 is_stmt 0 view .LVU1061
 4390 0010 174B     		ldr	r3, .L233+4
   8:quantum/rgb_matrix/animations/raindrops_anim.h **** 
   9:quantum/rgb_matrix/animations/raindrops_anim.h ****     // Take the shortest path between hues
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     int16_t deltaH = ((rgb_matrix_config.hsv.h + 180) % 360 - rgb_matrix_config.hsv.h) / 4;
 4391              		.loc 33 10 45 view .LVU1062
 4392 0012 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/raindrops_anim.h ****     HSV hsv = {0, rgb_matrix_config.hsv.s, rgb_matrix_config.hsv.v};
 4393              		.loc 33 7 9 view .LVU1063
 4394 0014 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 4395 0016 8DF80120 		strb	r2, [sp, #1]
 4396 001a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4397 001c 8DF80220 		strb	r2, [sp, #2]
 4398              		.loc 33 10 5 is_stmt 1 view .LVU1064
 4399              	.LVL305:
  11:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4400              		.loc 33 11 5 view .LVU1065
  12:quantum/rgb_matrix/animations/raindrops_anim.h ****         deltaH -= 256;
  13:quantum/rgb_matrix/animations/raindrops_anim.h ****     } else if (deltaH < -127) {
 4401              		.loc 33 13 12 view .LVU1066
  14:quantum/rgb_matrix/animations/raindrops_anim.h ****         deltaH += 256;
  15:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
  16:quantum/rgb_matrix/animations/raindrops_anim.h **** 
  17:quantum/rgb_matrix/animations/raindrops_anim.h ****     hsv.h   = rgb_matrix_config.hsv.h + (deltaH * (rand() & 0x03));
 4402              		.loc 33 17 5 view .LVU1067
 4403              		.loc 33 17 52 is_stmt 0 view .LVU1068
 4404 0020 FFF7FEFF 		bl	rand
 4405              	.LVL306:
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4406              		.loc 33 10 55 view .LVU1069
 4407 0024 4FF4B472 		mov	r2, #360
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4408              		.loc 33 10 48 view .LVU1070
 4409 0028 04F1B403 		add	r3, r4, #180
 4410              	.LVL307:
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4411              		.loc 33 10 55 view .LVU1071
 4412 002c B3FBF2F1 		udiv	r1, r3, r2
 4413 0030 02FB1133 		mls	r3, r2, r1, r3
 4414              	.LVL308:
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4415              		.loc 33 10 88 view .LVU1072
 4416 0034 1B1B     		subs	r3, r3, r4
 4417 0036 48BF     		it	mi
 4418 0038 0333     		addmi	r3, r3, #3
 4419              		.loc 33 17 39 view .LVU1073
 4420 003a 00F00300 		and	r0, r0, #3
 4421 003e 43F38F03 		sbfx	r3, r3, #2, #16
 4422 0042 03FB0043 		mla	r3, r3, r0, r4
 4423              		.loc 33 17 13 view .LVU1074
 4424 0046 8DF80030 		strb	r3, [sp]
  18:quantum/rgb_matrix/animations/raindrops_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4425              		.loc 33 18 5 is_stmt 1 view .LVU1075
 4426              		.loc 33 18 15 is_stmt 0 view .LVU1076
 4427 004a 0098     		ldr	r0, [sp]
 4428 004c FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4429              	.LVL309:
  19:quantum/rgb_matrix/animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4430              		.loc 33 19 5 is_stmt 1 view .LVU1077
 4431 0050 C0F30743 		ubfx	r3, r0, #16, #8
 4432 0054 C2B2     		uxtb	r2, r0
 4433 0056 C0F30721 		ubfx	r1, r0, #8, #8
 4434 005a 2846     		mov	r0, r5
 4435              	.LBE276:
 4436              	.LBE275:
  20:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4437              		.loc 33 20 1 is_stmt 0 view .LVU1078
 4438 005c 03B0     		add	sp, sp, #12
 4439              		.cfi_remember_state
 4440              		.cfi_def_cfa_offset 12
 4441              		@ sp needed
 4442 005e BDE83040 		pop	{r4, r5, lr}
 4443              		.cfi_restore 14
 4444              		.cfi_restore 5
 4445              		.cfi_restore 4
 4446              		.cfi_def_cfa_offset 0
 4447              	.LVL310:
 4448              	.LBB278:
 4449              	.LBB277:
  19:quantum/rgb_matrix/animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4450              		.loc 33 19 5 view .LVU1079
 4451 0062 FFF7FEBF 		b	rgb_matrix_set_color
 4452              	.LVL311:
 4453              	.L230:
 4454              		.cfi_restore_state
  19:quantum/rgb_matrix/animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4455              		.loc 33 19 5 view .LVU1080
 4456              	.LBE277:
 4457              	.LBE278:
 4458              		.loc 33 20 1 view .LVU1081
 4459 0066 03B0     		add	sp, sp, #12
 4460              		.cfi_def_cfa_offset 12
 4461              		@ sp needed
 4462 0068 30BD     		pop	{r4, r5, pc}
 4463              	.L234:
 4464 006a 00BF     		.align	2
 4465              	.L233:
 4466 006c 00000000 		.word	g_led_config
 4467 0070 00000000 		.word	rgb_matrix_config
 4468              		.cfi_endproc
 4469              	.LFE508:
 4471              		.section	.text.RAINDROPS,"ax",%progbits
 4472              		.align	1
 4473              		.global	RAINDROPS
 4474              		.syntax unified
 4475              		.thumb
 4476              		.thumb_func
 4477              		.fpu fpv4-sp-d16
 4479              	RAINDROPS:
 4480              	.LVL312:
 4481              	.LFB408:
  21:quantum/rgb_matrix/animations/raindrops_anim.h **** 
  22:quantum/rgb_matrix/animations/raindrops_anim.h **** bool RAINDROPS(effect_params_t* params) {
 4482              		.loc 33 22 41 is_stmt 1 view -0
 4483              		.cfi_startproc
 4484              		@ args = 0, pretend = 0, frame = 0
 4485              		@ frame_needed = 0, uses_anonymous_args = 0
  23:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4486              		.loc 33 23 5 view .LVU1083
  22:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4487              		.loc 33 22 41 is_stmt 0 view .LVU1084
 4488 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4489              		.cfi_def_cfa_offset 24
 4490              		.cfi_offset 3, -24
 4491              		.cfi_offset 4, -20
 4492              		.cfi_offset 5, -16
 4493              		.cfi_offset 6, -12
 4494              		.cfi_offset 7, -8
 4495              		.cfi_offset 14, -4
 4496              		.loc 33 23 16 view .LVU1085
 4497 0002 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
  22:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4498              		.loc 33 22 41 view .LVU1086
 4499 0004 0546     		mov	r5, r0
 4500              		.loc 33 23 8 view .LVU1087
 4501 0006 EEB9     		cbnz	r6, .L236
 4502              	.LVL313:
 4503              	.LBB287:
 4504              	.LBI287:
  22:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4505              		.loc 33 22 6 is_stmt 1 view .LVU1088
 4506              	.LBB288:
  24:quantum/rgb_matrix/animations/raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  25:quantum/rgb_matrix/animations/raindrops_anim.h ****         if (scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed, 16)) % 10 == 0) {
 4507              		.loc 33 25 9 view .LVU1089
 4508              	.LBB289:
 4509              	.LBI289:
  23:./lib/lib8tion/math8.h **** {
 4510              		.loc 1 23 34 view .LVU1090
 4511              	.LBB290:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4512              		.loc 1 26 5 view .LVU1091
 4513              	.LBE290:
 4514              	.LBE289:
 4515              		.loc 33 25 13 is_stmt 0 view .LVU1092
 4516 0008 1B4B     		ldr	r3, .L240
 4517              	.LBB294:
 4518              	.LBB295:
 253:./lib/lib8tion/scale8.h **** #endif
 4519              		.loc 4 253 17 view .LVU1093
 4520 000a 1C4A     		ldr	r2, .L240+4
 4521              	.LBE295:
 4522              	.LBE294:
 4523              	.LBB298:
 4524              	.LBB291:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4525              		.loc 1 26 20 view .LVU1094
 4526 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4527              	.LBE291:
 4528              	.LBE298:
 4529              	.LBB299:
 4530              	.LBB296:
 253:./lib/lib8tion/scale8.h **** #endif
 4531              		.loc 4 253 17 view .LVU1095
 4532 000e 1288     		ldrh	r2, [r2]
 4533              	.LBE296:
 4534              	.LBE299:
 4535              	.LBB300:
 4536              	.LBB292:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4537              		.loc 1 26 14 view .LVU1096
 4538 0010 1033     		adds	r3, r3, #16
 4539              	.LVL314:
  27:./lib/lib8tion/math8.h ****     return t;
 4540              		.loc 1 27 5 is_stmt 1 view .LVU1097
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4541              		.loc 1 28 5 view .LVU1098
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4542              		.loc 1 28 5 is_stmt 0 view .LVU1099
 4543              	.LBE292:
 4544              	.LBE300:
 4545              	.LBB301:
 4546              	.LBI294:
 246:./lib/lib8tion/scale8.h **** {
 4547              		.loc 4 246 35 is_stmt 1 view .LVU1100
 4548              	.LBB297:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4549              		.loc 4 249 5 view .LVU1101
 253:./lib/lib8tion/scale8.h **** #endif
 4550              		.loc 4 253 5 view .LVU1102
 4551              		.loc 4 255 5 view .LVU1103
 253:./lib/lib8tion/scale8.h **** #endif
 4552              		.loc 4 253 17 is_stmt 0 view .LVU1104
 4553 0012 FF2B     		cmp	r3, #255
 4554 0014 28BF     		it	cs
 4555 0016 FF23     		movcs	r3, #255
 4556 0018 5343     		muls	r3, r2, r3
 4557              	.LBE297:
 4558              	.LBE301:
 4559              	.LBB302:
 4560              	.LBB293:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4561              		.loc 1 26 14 view .LVU1105
 4562 001a C3F30F23 		ubfx	r3, r3, #8, #16
 4563 001e 0A22     		movs	r2, #10
 4564 0020 B3FBF2F1 		udiv	r1, r3, r2
 4565 0024 02FB1133 		mls	r3, r2, r1, r3
 4566              	.LBE293:
 4567              	.LBE302:
 4568              		.loc 33 25 12 view .LVU1106
 4569 0028 9BB2     		uxth	r3, r3
 4570 002a 4BB9     		cbnz	r3, .L237
  26:quantum/rgb_matrix/animations/raindrops_anim.h ****             raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 4571              		.loc 33 26 13 is_stmt 1 view .LVU1107
 4572              		.loc 33 26 33 is_stmt 0 view .LVU1108
 4573 002c FFF7FEFF 		bl	rand
 4574              	.LVL315:
 4575              		.loc 33 26 13 view .LVU1109
 4576 0030 6223     		movs	r3, #98
 4577 0032 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 4578 0034 90FBF3F2 		sdiv	r2, r0, r3
 4579 0038 02FB1300 		mls	r0, r2, r3, r0
 4580 003c FFF7FEFF 		bl	raindrops_set_color.isra.0
 4581              	.LVL316:
 4582              	.L237:
 4583              		.loc 33 26 13 view .LVU1110
 4584              	.LBE288:
 4585              	.LBE287:
  27:quantum/rgb_matrix/animations/raindrops_anim.h ****         }
  28:quantum/rgb_matrix/animations/raindrops_anim.h ****         return false;
  29:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
  30:quantum/rgb_matrix/animations/raindrops_anim.h **** 
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  33:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
  34:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
  35:quantum/rgb_matrix/animations/raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  36:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4586              		.loc 33 36 1 view .LVU1111
 4587 0040 3046     		mov	r0, r6
 4588 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4589              	.LVL317:
 4590              	.L236:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4591              		.loc 33 31 5 is_stmt 1 view .LVU1112
 4592 0044 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 4593 0046 04EB8404 		add	r4, r4, r4, lsl #2
 4594 004a A400     		lsls	r4, r4, #2
 4595 004c E4B2     		uxtb	r4, r4
 4596              	.LVL318:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4597              		.loc 33 31 5 view .LVU1113
 4598 004e 04F11406 		add	r6, r4, #20
 4599 0052 F6B2     		uxtb	r6, r6
 4600              	.LVL319:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4601              		.loc 33 31 5 view .LVU1114
 4602 0054 622E     		cmp	r6, #98
 4603 0056 3746     		mov	r7, r6
 4604 0058 28BF     		it	cs
 4605 005a 6227     		movcs	r7, #98
 4606              	.LVL320:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4607              		.loc 33 31 44 view .LVU1115
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4608              		.loc 33 32 5 view .LVU1116
 4609              	.LBB303:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4610              		.loc 33 32 10 view .LVU1117
 4611              	.L238:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4612              		.loc 33 32 27 discriminator 1 view .LVU1118
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4613              		.loc 33 32 5 is_stmt 0 discriminator 1 view .LVU1119
 4614 005c A742     		cmp	r7, r4
 4615 005e 04DC     		bgt	.L239
 4616              	.LBE303:
  35:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4617              		.loc 33 35 5 is_stmt 1 view .LVU1120
 4618 0060 612E     		cmp	r6, #97
 4619 0062 8CBF     		ite	hi
 4620 0064 0026     		movhi	r6, #0
 4621 0066 0126     		movls	r6, #1
  35:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4622              		.loc 33 35 20 is_stmt 0 view .LVU1121
 4623 0068 EAE7     		b	.L237
 4624              	.L239:
 4625              	.LBB304:
  33:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
 4626              		.loc 33 33 9 is_stmt 1 discriminator 3 view .LVU1122
 4627 006a 2046     		mov	r0, r4
 4628 006c 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 4629 006e FFF7FEFF 		bl	raindrops_set_color.isra.0
 4630              	.LVL321:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4631              		.loc 33 32 40 discriminator 3 view .LVU1123
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4632              		.loc 33 32 41 is_stmt 0 discriminator 3 view .LVU1124
 4633 0072 0134     		adds	r4, r4, #1
 4634              	.LVL322:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4635              		.loc 33 32 41 discriminator 3 view .LVU1125
 4636 0074 F2E7     		b	.L238
 4637              	.L241:
 4638 0076 00BF     		.align	2
 4639              	.L240:
 4640 0078 00000000 		.word	rgb_matrix_config
 4641 007c 00000000 		.word	g_rgb_timer
 4642              	.LBE304:
 4643              		.cfi_endproc
 4644              	.LFE408:
 4646              		.section	.text.jellybean_raindrops_set_color.isra.0,"ax",%progbits
 4647              		.align	1
 4648              		.syntax unified
 4649              		.thumb
 4650              		.thumb_func
 4651              		.fpu fpv4-sp-d16
 4653              	jellybean_raindrops_set_color.isra.0:
 4654              	.LVL323:
 4655              	.LFB509:
 4656              		.file 34 "quantum/rgb_matrix/animations/jellybean_raindrops_anim.h"
   1:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_JELLYBEAN_RAINDROPS
   2:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** RGB_MATRIX_EFFECT(JELLYBEAN_RAINDROPS)
   3:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** 
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** static void jellybean_raindrops_set_color(int i, effect_params_t* params) {
 4657              		.loc 34 5 13 is_stmt 1 view -0
 4658              		.cfi_startproc
 4659              		@ args = 0, pretend = 0, frame = 8
 4660              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4661              		.loc 34 6 5 view .LVU1127
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4662              		.loc 34 5 13 is_stmt 0 view .LVU1128
 4663 0000 13B5     		push	{r0, r1, r4, lr}
 4664              		.cfi_def_cfa_offset 16
 4665              		.cfi_offset 4, -8
 4666              		.cfi_offset 14, -4
 4667              		.loc 34 6 10 view .LVU1129
 4668 0002 124B     		ldr	r3, .L244
 4669 0004 0344     		add	r3, r3, r0
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4670              		.loc 34 5 13 view .LVU1130
 4671 0006 0446     		mov	r4, r0
 4672              		.loc 34 6 9 view .LVU1131
 4673 0008 93F81C31 		ldrb	r3, [r3, #284]	@ zero_extendqisi2
 4674              		.loc 34 6 8 view .LVU1132
 4675 000c 1942     		tst	r1, r3
 4676 000e 1BD0     		beq	.L242
 4677              	.LVL324:
 4678              	.LBB309:
 4679              	.LBI309:
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4680              		.loc 34 5 13 is_stmt 1 view .LVU1133
 4681              	.LBB310:
   7:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     HSV hsv = {rand() & 0xFF, qadd8(rand() & 0x7F, 0x80), rgb_matrix_config.hsv.v};
 4682              		.loc 34 7 5 view .LVU1134
 4683              		.loc 34 7 16 is_stmt 0 view .LVU1135
 4684 0010 FFF7FEFF 		bl	rand
 4685              	.LVL325:
 4686              		.loc 34 7 9 view .LVU1136
 4687 0014 8DF80000 		strb	r0, [sp]
 4688              		.loc 34 7 37 view .LVU1137
 4689 0018 FFF7FEFF 		bl	rand
 4690              	.LVL326:
 4691              		.loc 34 7 37 view .LVU1138
 4692              	.LBE310:
 4693              	.LBE309:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4694              		.loc 1 26 5 is_stmt 1 view .LVU1139
  27:./lib/lib8tion/math8.h ****     return t;
 4695              		.loc 1 27 5 view .LVU1140
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4696              		.loc 1 28 5 view .LVU1141
 4697              	.LBB313:
 4698              	.LBB311:
 4699              		.loc 34 7 80 is_stmt 0 view .LVU1142
 4700 001c 0C4B     		ldr	r3, .L244+4
 4701              		.loc 34 7 9 view .LVU1143
 4702 001e 60F07F00 		orn	r0, r0, #127
 4703 0022 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4704 0024 8DF80230 		strb	r3, [sp, #2]
   8:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4705              		.loc 34 8 5 is_stmt 1 view .LVU1144
   7:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4706              		.loc 34 7 9 is_stmt 0 view .LVU1145
 4707 0028 8DF80100 		strb	r0, [sp, #1]
 4708              		.loc 34 8 15 view .LVU1146
 4709 002c 0098     		ldr	r0, [sp]
 4710 002e FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4711              	.LVL327:
   9:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4712              		.loc 34 9 5 is_stmt 1 view .LVU1147
 4713 0032 C0F30743 		ubfx	r3, r0, #16, #8
 4714 0036 C2B2     		uxtb	r2, r0
 4715 0038 C0F30721 		ubfx	r1, r0, #8, #8
 4716 003c 2046     		mov	r0, r4
 4717              	.LBE311:
 4718              	.LBE313:
  10:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 4719              		.loc 34 10 1 is_stmt 0 view .LVU1148
 4720 003e 02B0     		add	sp, sp, #8
 4721              		.cfi_remember_state
 4722              		.cfi_def_cfa_offset 8
 4723              		@ sp needed
 4724 0040 BDE81040 		pop	{r4, lr}
 4725              		.cfi_restore 14
 4726              		.cfi_restore 4
 4727              		.cfi_def_cfa_offset 0
 4728              	.LVL328:
 4729              	.LBB314:
 4730              	.LBB312:
   9:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4731              		.loc 34 9 5 view .LVU1149
 4732 0044 FFF7FEBF 		b	rgb_matrix_set_color
 4733              	.LVL329:
 4734              	.L242:
 4735              		.cfi_restore_state
   9:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4736              		.loc 34 9 5 view .LVU1150
 4737              	.LBE312:
 4738              	.LBE314:
 4739              		.loc 34 10 1 view .LVU1151
 4740 0048 02B0     		add	sp, sp, #8
 4741              		.cfi_def_cfa_offset 8
 4742              		@ sp needed
 4743 004a 10BD     		pop	{r4, pc}
 4744              	.L245:
 4745              		.align	2
 4746              	.L244:
 4747 004c 00000000 		.word	g_led_config
 4748 0050 00000000 		.word	rgb_matrix_config
 4749              		.cfi_endproc
 4750              	.LFE509:
 4752              		.section	.text.JELLYBEAN_RAINDROPS,"ax",%progbits
 4753              		.align	1
 4754              		.global	JELLYBEAN_RAINDROPS
 4755              		.syntax unified
 4756              		.thumb
 4757              		.thumb_func
 4758              		.fpu fpv4-sp-d16
 4760              	JELLYBEAN_RAINDROPS:
 4761              	.LVL330:
 4762              	.LFB410:
  11:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** 
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** bool JELLYBEAN_RAINDROPS(effect_params_t* params) {
 4763              		.loc 34 12 51 is_stmt 1 view -0
 4764              		.cfi_startproc
 4765              		@ args = 0, pretend = 0, frame = 0
 4766              		@ frame_needed = 0, uses_anonymous_args = 0
  13:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4767              		.loc 34 13 5 view .LVU1153
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4768              		.loc 34 12 51 is_stmt 0 view .LVU1154
 4769 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4770              		.cfi_def_cfa_offset 24
 4771              		.cfi_offset 3, -24
 4772              		.cfi_offset 4, -20
 4773              		.cfi_offset 5, -16
 4774              		.cfi_offset 6, -12
 4775              		.cfi_offset 7, -8
 4776              		.cfi_offset 14, -4
 4777              		.loc 34 13 16 view .LVU1155
 4778 0002 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4779              		.loc 34 12 51 view .LVU1156
 4780 0004 0546     		mov	r5, r0
 4781              		.loc 34 13 8 view .LVU1157
 4782 0006 F6B9     		cbnz	r6, .L247
 4783              	.LVL331:
 4784              	.LBB323:
 4785              	.LBI323:
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4786              		.loc 34 12 6 is_stmt 1 view .LVU1158
 4787              	.LBB324:
  14:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  15:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         if (scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed, 16)) % 5 == 0) {
 4788              		.loc 34 15 9 view .LVU1159
 4789              	.LBB325:
 4790              	.LBI325:
  23:./lib/lib8tion/math8.h **** {
 4791              		.loc 1 23 34 view .LVU1160
 4792              	.LBB326:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4793              		.loc 1 26 5 view .LVU1161
 4794              	.LBE326:
 4795              	.LBE325:
 4796              		.loc 34 15 13 is_stmt 0 view .LVU1162
 4797 0008 1B4B     		ldr	r3, .L251
 4798              	.LBB330:
 4799              	.LBB331:
 253:./lib/lib8tion/scale8.h **** #endif
 4800              		.loc 4 253 17 view .LVU1163
 4801 000a 1C4A     		ldr	r2, .L251+4
 4802              	.LBE331:
 4803              	.LBE330:
 4804              	.LBB334:
 4805              	.LBB327:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4806              		.loc 1 26 20 view .LVU1164
 4807 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4808              	.LBE327:
 4809              	.LBE334:
 4810              	.LBB335:
 4811              	.LBB332:
 253:./lib/lib8tion/scale8.h **** #endif
 4812              		.loc 4 253 17 view .LVU1165
 4813 000e 1288     		ldrh	r2, [r2]
 4814              	.LBE332:
 4815              	.LBE335:
 4816              	.LBB336:
 4817              	.LBB328:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4818              		.loc 1 26 14 view .LVU1166
 4819 0010 1033     		adds	r3, r3, #16
 4820              	.LVL332:
  27:./lib/lib8tion/math8.h ****     return t;
 4821              		.loc 1 27 5 is_stmt 1 view .LVU1167
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4822              		.loc 1 28 5 view .LVU1168
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4823              		.loc 1 28 5 is_stmt 0 view .LVU1169
 4824              	.LBE328:
 4825              	.LBE336:
 4826              	.LBB337:
 4827              	.LBI330:
 246:./lib/lib8tion/scale8.h **** {
 4828              		.loc 4 246 35 is_stmt 1 view .LVU1170
 4829              	.LBB333:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4830              		.loc 4 249 5 view .LVU1171
 253:./lib/lib8tion/scale8.h **** #endif
 4831              		.loc 4 253 5 view .LVU1172
 4832              		.loc 4 255 5 view .LVU1173
 253:./lib/lib8tion/scale8.h **** #endif
 4833              		.loc 4 253 17 is_stmt 0 view .LVU1174
 4834 0012 FF2B     		cmp	r3, #255
 4835 0014 28BF     		it	cs
 4836 0016 FF23     		movcs	r3, #255
 4837 0018 5343     		muls	r3, r2, r3
 4838              	.LBE333:
 4839              	.LBE337:
 4840              	.LBB338:
 4841              	.LBB329:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4842              		.loc 1 26 14 view .LVU1175
 4843 001a C3F30F23 		ubfx	r3, r3, #8, #16
 4844 001e 0522     		movs	r2, #5
 4845 0020 B3FBF2F2 		udiv	r2, r3, r2
 4846 0024 02EB8202 		add	r2, r2, r2, lsl #2
 4847 0028 9B1A     		subs	r3, r3, r2
 4848              	.LBE329:
 4849              	.LBE338:
 4850              		.loc 34 15 12 view .LVU1176
 4851 002a 9BB2     		uxth	r3, r3
 4852 002c 4BB9     		cbnz	r3, .L248
  16:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****             jellybean_raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 4853              		.loc 34 16 13 is_stmt 1 view .LVU1177
 4854              		.loc 34 16 43 is_stmt 0 view .LVU1178
 4855 002e FFF7FEFF 		bl	rand
 4856              	.LVL333:
 4857              		.loc 34 16 13 view .LVU1179
 4858 0032 6223     		movs	r3, #98
 4859 0034 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 4860 0036 90FBF3F2 		sdiv	r2, r0, r3
 4861 003a 02FB1300 		mls	r0, r2, r3, r0
 4862 003e FFF7FEFF 		bl	jellybean_raindrops_set_color.isra.0
 4863              	.LVL334:
 4864              	.L248:
 4865              		.loc 34 16 13 view .LVU1180
 4866              	.LBE324:
 4867              	.LBE323:
  17:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         }
  18:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         return false;
  19:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     }
  20:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** 
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  23:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
  24:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     }
  25:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  26:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 4868              		.loc 34 26 1 view .LVU1181
 4869 0042 3046     		mov	r0, r6
 4870 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4871              	.LVL335:
 4872              	.L247:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4873              		.loc 34 21 5 is_stmt 1 view .LVU1182
 4874 0046 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 4875 0048 04EB8404 		add	r4, r4, r4, lsl #2
 4876 004c A400     		lsls	r4, r4, #2
 4877 004e E4B2     		uxtb	r4, r4
 4878              	.LVL336:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4879              		.loc 34 21 5 view .LVU1183
 4880 0050 04F11406 		add	r6, r4, #20
 4881 0054 F6B2     		uxtb	r6, r6
 4882              	.LVL337:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4883              		.loc 34 21 5 view .LVU1184
 4884 0056 622E     		cmp	r6, #98
 4885 0058 3746     		mov	r7, r6
 4886 005a 28BF     		it	cs
 4887 005c 6227     		movcs	r7, #98
 4888              	.LVL338:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4889              		.loc 34 21 44 view .LVU1185
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4890              		.loc 34 22 5 view .LVU1186
 4891              	.LBB339:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4892              		.loc 34 22 10 view .LVU1187
 4893              	.L249:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4894              		.loc 34 22 27 discriminator 1 view .LVU1188
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4895              		.loc 34 22 5 is_stmt 0 discriminator 1 view .LVU1189
 4896 005e A742     		cmp	r7, r4
 4897 0060 04DC     		bgt	.L250
 4898              	.LBE339:
  25:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 4899              		.loc 34 25 5 is_stmt 1 view .LVU1190
 4900 0062 612E     		cmp	r6, #97
 4901 0064 8CBF     		ite	hi
 4902 0066 0026     		movhi	r6, #0
 4903 0068 0126     		movls	r6, #1
  25:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 4904              		.loc 34 25 20 is_stmt 0 view .LVU1191
 4905 006a EAE7     		b	.L248
 4906              	.L250:
 4907              	.LBB340:
  23:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     }
 4908              		.loc 34 23 9 is_stmt 1 discriminator 3 view .LVU1192
 4909 006c 2046     		mov	r0, r4
 4910 006e 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 4911 0070 FFF7FEFF 		bl	jellybean_raindrops_set_color.isra.0
 4912              	.LVL339:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4913              		.loc 34 22 40 discriminator 3 view .LVU1193
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4914              		.loc 34 22 41 is_stmt 0 discriminator 3 view .LVU1194
 4915 0074 0134     		adds	r4, r4, #1
 4916              	.LVL340:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 4917              		.loc 34 22 41 discriminator 3 view .LVU1195
 4918 0076 F2E7     		b	.L249
 4919              	.L252:
 4920              		.align	2
 4921              	.L251:
 4922 0078 00000000 		.word	rgb_matrix_config
 4923 007c 00000000 		.word	g_rgb_timer
 4924              	.LBE340:
 4925              		.cfi_endproc
 4926              	.LFE410:
 4928              		.section	.text.HUE_BREATHING,"ax",%progbits
 4929              		.align	1
 4930              		.global	HUE_BREATHING
 4931              		.syntax unified
 4932              		.thumb
 4933              		.thumb_func
 4934              		.fpu fpv4-sp-d16
 4936              	HUE_BREATHING:
 4937              	.LVL341:
 4938              	.LFB411:
 4939              		.file 35 "quantum/rgb_matrix/animations/hue_breathing_anim.h"
   1:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #ifndef DISABLE_RGB_MATRIX_HUE_BREATHING
   2:quantum/rgb_matrix/animations/hue_breathing_anim.h **** RGB_MATRIX_EFFECT(HUE_BREATHING)
   3:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/hue_breathing_anim.h **** 
   5:quantum/rgb_matrix/animations/hue_breathing_anim.h **** // Change huedelta to adjust range of hue change. 0-255.
   6:quantum/rgb_matrix/animations/hue_breathing_anim.h **** // Hue Breathing - All LED's light up
   7:quantum/rgb_matrix/animations/hue_breathing_anim.h **** bool HUE_BREATHING(effect_params_t* params) {
 4940              		.loc 35 7 45 is_stmt 1 view -0
 4941              		.cfi_startproc
 4942              		@ args = 0, pretend = 0, frame = 8
 4943              		@ frame_needed = 0, uses_anonymous_args = 0
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4944              		.loc 35 8 5 view .LVU1197
   7:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4945              		.loc 35 7 45 is_stmt 0 view .LVU1198
 4946 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 4947              		.cfi_def_cfa_offset 32
 4948              		.cfi_offset 4, -24
 4949              		.cfi_offset 5, -20
 4950              		.cfi_offset 6, -16
 4951              		.cfi_offset 7, -12
 4952              		.cfi_offset 8, -8
 4953              		.cfi_offset 14, -4
   9:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
  10:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     HSV      hsv      = rgb_matrix_config.hsv;
 4954              		.loc 35 10 14 view .LVU1199
 4955 0004 2C4B     		ldr	r3, .L261
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 4956              		.loc 35 8 5 view .LVU1200
 4957 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 4958              		.loc 35 10 14 view .LVU1201
 4959 0008 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4960 000a 8DF80220 		strb	r2, [sp, #2]
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 4961              		.loc 35 8 5 view .LVU1202
 4962 000e 04EB8404 		add	r4, r4, r4, lsl #2
 4963              	.LBB341:
 4964              	.LBB342:
 253:./lib/lib8tion/scale8.h **** #endif
 4965              		.loc 4 253 17 view .LVU1203
 4966 0012 2A4A     		ldr	r2, .L261+4
 4967              	.LBE342:
 4968              	.LBE341:
 4969              		.loc 35 10 14 view .LVU1204
 4970 0014 B3F80110 		ldrh	r1, [r3, #1]	@ unaligned
 4971 0018 93F80180 		ldrb	r8, [r3, #1]	@ zero_extendqisi2
  11:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint16_t time     = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 4972              		.loc 35 11 25 view .LVU1205
 4973 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  10:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint16_t time     = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 4974              		.loc 35 10 14 view .LVU1206
 4975 001e ADF80010 		strh	r1, [sp]	@ unaligned
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 4976              		.loc 35 8 5 view .LVU1207
 4977 0022 A400     		lsls	r4, r4, #2
   7:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4978              		.loc 35 7 45 view .LVU1208
 4979 0024 0646     		mov	r6, r0
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 4980              		.loc 35 8 5 view .LVU1209
 4981 0026 E4B2     		uxtb	r4, r4
 4982              	.LVL342:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 4983              		.loc 35 8 5 is_stmt 1 view .LVU1210
 4984              	.LBB346:
 4985              	.LBB343:
 253:./lib/lib8tion/scale8.h **** #endif
 4986              		.loc 4 253 17 is_stmt 0 view .LVU1211
 4987 0028 1088     		ldrh	r0, [r2]
 4988              	.LVL343:
 253:./lib/lib8tion/scale8.h **** #endif
 4989              		.loc 4 253 17 view .LVU1212
 4990 002a DB08     		lsrs	r3, r3, #3
 4991              	.LBE343:
 4992              	.LBE346:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 4993              		.loc 35 8 5 view .LVU1213
 4994 002c 04F11405 		add	r5, r4, #20
 4995              	.LBB347:
 4996              	.LBB344:
 253:./lib/lib8tion/scale8.h **** #endif
 4997              		.loc 4 253 17 view .LVU1214
 4998 0030 5843     		muls	r0, r3, r0
 4999              	.LBE344:
 5000              	.LBE347:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5001              		.loc 35 8 5 view .LVU1215
 5002 0032 EDB2     		uxtb	r5, r5
 5003              	.LVL344:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5004              		.loc 35 8 5 is_stmt 1 view .LVU1216
 5005 0034 622D     		cmp	r5, #98
  12:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     hsv.h             = hsv.h + scale8(abs8(sin8(time) - 128) * 2, huedelta);
 5006              		.loc 35 12 45 is_stmt 0 view .LVU1217
 5007 0036 C0F30720 		ubfx	r0, r0, #8, #8
 5008 003a 2F46     		mov	r7, r5
 5009 003c 28BF     		it	cs
 5010 003e 6227     		movcs	r7, #98
 5011              	.LVL345:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5012              		.loc 35 8 44 is_stmt 1 view .LVU1218
   9:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     HSV      hsv      = rgb_matrix_config.hsv;
 5013              		.loc 35 9 5 view .LVU1219
  10:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint16_t time     = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5014              		.loc 35 10 5 view .LVU1220
  11:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     hsv.h             = hsv.h + scale8(abs8(sin8(time) - 128) * 2, huedelta);
 5015              		.loc 35 11 5 view .LVU1221
 5016              	.LBB348:
 5017              	.LBI341:
 246:./lib/lib8tion/scale8.h **** {
 5018              		.loc 4 246 35 view .LVU1222
 5019              	.LBB345:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 5020              		.loc 4 249 5 view .LVU1223
 253:./lib/lib8tion/scale8.h **** #endif
 5021              		.loc 4 253 5 view .LVU1224
 5022              		.loc 4 255 5 view .LVU1225
 5023              		.loc 4 255 5 is_stmt 0 view .LVU1226
 5024              	.LBE345:
 5025              	.LBE348:
 5026              		.loc 35 12 5 is_stmt 1 view .LVU1227
 5027              		.loc 35 12 45 is_stmt 0 view .LVU1228
 5028 0040 FFF7FEFF 		bl	sin8_C
 5029              	.LVL346:
 5030              		.loc 35 12 56 view .LVU1229
 5031 0044 A0F18003 		sub	r3, r0, #128
 5032              		.loc 35 12 40 view .LVU1230
 5033 0048 5BB2     		sxtb	r3, r3
 5034              	.LVL347:
 5035              	.LBB349:
 5036              	.LBI349:
 404:./lib/lib8tion/math8.h **** {
 5037              		.loc 1 404 33 is_stmt 1 view .LVU1231
 5038              	.LBB350:
 407:./lib/lib8tion/math8.h ****     return i;
 5039              		.loc 1 407 5 view .LVU1232
 407:./lib/lib8tion/math8.h ****     return i;
 5040              		.loc 1 407 7 is_stmt 0 view .LVU1233
 5041 004a 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 5042              		.loc 1 407 16 is_stmt 1 view .LVU1234
 407:./lib/lib8tion/math8.h ****     return i;
 5043              		.loc 1 407 18 is_stmt 0 view .LVU1235
 5044 004c BCBF     		itt	lt
 5045 004e C0F18000 		rsblt	r0, r0, #128
 5046 0052 43B2     		sxtblt	r3, r0
 5047              	.LVL348:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 5048              		.loc 1 408 5 is_stmt 1 view .LVU1236
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 5049              		.loc 1 408 5 is_stmt 0 view .LVU1237
 5050              	.LBE350:
 5051              	.LBE349:
 5052              	.LBB351:
 5053              	.LBI351:
  20:./lib/lib8tion/scale8.h **** {
 5054              		.loc 4 20 34 is_stmt 1 view .LVU1238
 5055              	.LBB352:
  26:./lib/lib8tion/scale8.h **** #endif
 5056              		.loc 4 26 5 view .LVU1239
  26:./lib/lib8tion/scale8.h **** #endif
 5057              		.loc 4 26 5 is_stmt 0 view .LVU1240
 5058              	.LBE352:
 5059              	.LBE351:
  13:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB rgb           = hsv_to_rgb(hsv);
 5060              		.loc 35 13 5 is_stmt 1 view .LVU1241
  12:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB rgb           = hsv_to_rgb(hsv);
 5061              		.loc 35 12 33 is_stmt 0 view .LVU1242
 5062 0054 5B00     		lsls	r3, r3, #1
 5063              	.LVL349:
 5064              	.LBB354:
 5065              	.LBB353:
  26:./lib/lib8tion/scale8.h **** #endif
 5066              		.loc 4 26 25 view .LVU1243
 5067 0056 03F0FE03 		and	r3, r3, #254
 5068 005a 03EB4303 		add	r3, r3, r3, lsl #1
 5069              	.LBE353:
 5070              	.LBE354:
  12:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB rgb           = hsv_to_rgb(hsv);
 5071              		.loc 35 12 31 view .LVU1244
 5072 005e 08EB9313 		add	r3, r8, r3, lsr #6
 5073              		.loc 35 13 25 view .LVU1245
 5074 0062 8DF80030 		strb	r3, [sp]
 5075 0066 0098     		ldr	r0, [sp]
 5076              	.LBB355:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  15:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5077              		.loc 35 15 9 view .LVU1246
 5078 0068 DFF85480 		ldr	r8, .L261+8
 5079              	.LBE355:
  13:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5080              		.loc 35 13 25 view .LVU1247
 5081 006c FFF7FEFF 		bl	hsv_to_rgb
 5082              	.LVL350:
  13:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5083              		.loc 35 13 25 view .LVU1248
 5084 0070 C0F30723 		ubfx	r3, r0, #8, #8
 5085 0074 8DF80400 		strb	r0, [sp, #4]
 5086 0078 C0F30740 		ubfx	r0, r0, #16, #8
 5087 007c 8DF80530 		strb	r3, [sp, #5]
 5088 0080 8DF80600 		strb	r0, [sp, #6]
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5089              		.loc 35 14 5 is_stmt 1 view .LVU1249
 5090              	.LBB356:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5091              		.loc 35 14 10 view .LVU1250
 5092              	.LVL351:
 5093              	.L255:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5094              		.loc 35 14 31 discriminator 1 view .LVU1251
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5095              		.loc 35 14 5 is_stmt 0 discriminator 1 view .LVU1252
 5096 0084 E3B2     		uxtb	r3, r4
 5097 0086 9F42     		cmp	r7, r3
 5098 0088 06D8     		bhi	.L257
 5099              	.LBE356:
  16:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     }
  18:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 5100              		.loc 35 18 5 is_stmt 1 view .LVU1253
  19:quantum/rgb_matrix/animations/hue_breathing_anim.h **** }
 5101              		.loc 35 19 1 is_stmt 0 view .LVU1254
 5102 008a 612D     		cmp	r5, #97
 5103 008c 8CBF     		ite	hi
 5104 008e 0020     		movhi	r0, #0
 5105 0090 0120     		movls	r0, #1
 5106 0092 02B0     		add	sp, sp, #8
 5107              		.cfi_remember_state
 5108              		.cfi_def_cfa_offset 24
 5109              		@ sp needed
 5110 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5111              	.LVL352:
 5112              	.L257:
 5113              		.cfi_restore_state
 5114              	.LBB357:
  15:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5115              		.loc 35 15 9 is_stmt 1 view .LVU1255
 5116 0098 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 5117 009c 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 5118 009e 1A42     		tst	r2, r3
 5119 00a0 08D0     		beq	.L256
  16:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5120              		.loc 35 16 9 view .LVU1256
 5121 00a2 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 5122 00a6 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 5123 00aa 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 5124 00ae 2046     		mov	r0, r4
 5125 00b0 FFF7FEFF 		bl	rgb_matrix_set_color
 5126              	.LVL353:
 5127              	.L256:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5128              		.loc 35 14 44 discriminator 2 view .LVU1257
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5129              		.loc 35 14 44 is_stmt 0 discriminator 2 view .LVU1258
 5130 00b4 0134     		adds	r4, r4, #1
 5131              	.LVL354:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5132              		.loc 35 14 44 discriminator 2 view .LVU1259
 5133 00b6 E5E7     		b	.L255
 5134              	.L262:
 5135              		.align	2
 5136              	.L261:
 5137 00b8 00000000 		.word	rgb_matrix_config
 5138 00bc 00000000 		.word	g_rgb_timer
 5139 00c0 1C010000 		.word	g_led_config+284
 5140              	.LBE357:
 5141              		.cfi_endproc
 5142              	.LFE411:
 5144              		.section	.text.rgb_matrix_set_color_all,"ax",%progbits
 5145              		.align	1
 5146              		.global	rgb_matrix_set_color_all
 5147              		.syntax unified
 5148              		.thumb
 5149              		.thumb_func
 5150              		.fpu fpv4-sp-d16
 5152              	rgb_matrix_set_color_all:
 5153              	.LVL355:
 5154              	.LFB424:
 198:quantum/rgb_matrix/rgb_matrix.c **** 
 199:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_color_all(uint8_t red, uint8_t green, uint8_t blue) {
 5155              		.loc 23 199 73 is_stmt 1 view -0
 5156              		.cfi_startproc
 5157              		@ args = 0, pretend = 0, frame = 0
 5158              		@ frame_needed = 0, uses_anonymous_args = 0
 5159              		@ link register save eliminated.
 200:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 201:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < DRIVER_LED_TOTAL; i++) rgb_matrix_set_color(i, red, green, blue);
 202:quantum/rgb_matrix/rgb_matrix.c **** #else
 203:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_driver.set_color_all(red, green, blue);
 5160              		.loc 23 203 5 view .LVU1261
 5161              		.loc 23 203 22 is_stmt 0 view .LVU1262
 5162 0000 014B     		ldr	r3, .L264
 5163              		.loc 23 203 5 view .LVU1263
 5164 0002 9B68     		ldr	r3, [r3, #8]
 5165 0004 1847     		bx	r3	@ indirect register sibling call
 5166              	.LVL356:
 5167              	.L265:
 5168              		.loc 23 203 5 view .LVU1264
 5169 0006 00BF     		.align	2
 5170              	.L264:
 5171 0008 00000000 		.word	rgb_matrix_driver
 5172              		.cfi_endproc
 5173              	.LFE424:
 5175              		.section	.text.process_rgb_matrix,"ax",%progbits
 5176              		.align	1
 5177              		.global	process_rgb_matrix
 5178              		.syntax unified
 5179              		.thumb
 5180              		.thumb_func
 5181              		.fpu fpv4-sp-d16
 5183              	process_rgb_matrix:
 5184              	.LVL357:
 5185              	.LFB425:
 204:quantum/rgb_matrix/rgb_matrix.c **** #endif
 205:quantum/rgb_matrix/rgb_matrix.c **** }
 206:quantum/rgb_matrix/rgb_matrix.c **** 
 207:quantum/rgb_matrix/rgb_matrix.c **** void process_rgb_matrix(uint8_t row, uint8_t col, bool pressed) {
 5186              		.loc 23 207 65 is_stmt 1 view -0
 5187              		.cfi_startproc
 5188              		@ args = 0, pretend = 0, frame = 0
 5189              		@ frame_needed = 0, uses_anonymous_args = 0
 5190              		@ link register save eliminated.
 208:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_MATRIX_SPLIT
 209:quantum/rgb_matrix/rgb_matrix.c ****     if (!is_keyboard_master()) return;
 5191              		.loc 23 209 5 view .LVU1266
 5192              		.loc 23 209 10 is_stmt 0 view .LVU1267
 5193 0000 FFF7FEBF 		b	is_keyboard_master
 5194              	.LVL358:
 5195              		.loc 23 209 10 view .LVU1268
 5196              		.cfi_endproc
 5197              	.LFE425:
 5199              		.section	.text.rgb_matrix_test,"ax",%progbits
 5200              		.align	1
 5201              		.global	rgb_matrix_test
 5202              		.syntax unified
 5203              		.thumb
 5204              		.thumb_func
 5205              		.fpu fpv4-sp-d16
 5207              	rgb_matrix_test:
 5208              	.LFB426:
 210:quantum/rgb_matrix/rgb_matrix.c **** #endif
 211:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 212:quantum/rgb_matrix/rgb_matrix.c ****     rgb_anykey_timer = 0;
 213:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 214:quantum/rgb_matrix/rgb_matrix.c **** 
 215:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 216:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led[LED_HITS_TO_REMEMBER];
 217:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = 0;
 218:quantum/rgb_matrix/rgb_matrix.c **** 
 219:quantum/rgb_matrix/rgb_matrix.c **** #    if defined(RGB_MATRIX_KEYRELEASES)
 220:quantum/rgb_matrix/rgb_matrix.c ****     if (!pressed)
 221:quantum/rgb_matrix/rgb_matrix.c **** #    elif defined(RGB_MATRIX_KEYPRESSES)
 222:quantum/rgb_matrix/rgb_matrix.c ****     if (pressed)
 223:quantum/rgb_matrix/rgb_matrix.c **** #    endif  // defined(RGB_MATRIX_KEYRELEASES)
 224:quantum/rgb_matrix/rgb_matrix.c ****     {
 225:quantum/rgb_matrix/rgb_matrix.c ****         led_count = rgb_matrix_map_row_column_to_led(row, col, led);
 226:quantum/rgb_matrix/rgb_matrix.c ****     }
 227:quantum/rgb_matrix/rgb_matrix.c **** 
 228:quantum/rgb_matrix/rgb_matrix.c ****     if (last_hit_buffer.count + led_count > LED_HITS_TO_REMEMBER) {
 229:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.x[0], &last_hit_buffer.x[led_count], LED_HITS_TO_REMEMBER - led_cou
 230:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.y[0], &last_hit_buffer.y[led_count], LED_HITS_TO_REMEMBER - led_cou
 231:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.tick[0], &last_hit_buffer.tick[led_count], (LED_HITS_TO_REMEMBER - 
 232:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.index[0], &last_hit_buffer.index[led_count], LED_HITS_TO_REMEMBER -
 233:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.count = LED_HITS_TO_REMEMBER - led_count;
 234:quantum/rgb_matrix/rgb_matrix.c ****     }
 235:quantum/rgb_matrix/rgb_matrix.c **** 
 236:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < led_count; i++) {
 237:quantum/rgb_matrix/rgb_matrix.c ****         uint8_t index                = last_hit_buffer.count;
 238:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.x[index]     = g_led_config.point[led[i]].x;
 239:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 240:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.index[index] = led[i];
 241:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.tick[index]  = 0;
 242:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.count++;
 243:quantum/rgb_matrix/rgb_matrix.c ****     }
 244:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 245:quantum/rgb_matrix/rgb_matrix.c **** 
 246:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 247:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_matrix_config.mode == RGB_MATRIX_TYPING_HEATMAP) {
 248:quantum/rgb_matrix/rgb_matrix.c ****         process_rgb_matrix_typing_heatmap(row, col);
 249:quantum/rgb_matrix/rgb_matrix.c ****     }
 250:quantum/rgb_matrix/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 251:quantum/rgb_matrix/rgb_matrix.c **** }
 252:quantum/rgb_matrix/rgb_matrix.c **** 
 253:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_test(void) {
 5209              		.loc 23 253 28 is_stmt 1 view -0
 5210              		.cfi_startproc
 5211              		@ args = 0, pretend = 0, frame = 0
 5212              		@ frame_needed = 0, uses_anonymous_args = 0
 5213              		@ link register save eliminated.
 254:quantum/rgb_matrix/rgb_matrix.c ****     // Mask out bits 4 and 5
 255:quantum/rgb_matrix/rgb_matrix.c ****     // Increase the factor to make the test animation slower (and reduce to make it faster)
 256:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t factor = 10;
 5214              		.loc 23 256 5 view .LVU1270
 5215              	.LVL359:
 257:quantum/rgb_matrix/rgb_matrix.c ****     switch ((g_rgb_timer & (0b11 << factor)) >> factor) {
 5216              		.loc 23 257 5 view .LVU1271
 5217              		.loc 23 257 26 is_stmt 0 view .LVU1272
 5218 0000 0C4B     		ldr	r3, .L273
 5219              		.loc 23 257 46 view .LVU1273
 5220 0002 1B68     		ldr	r3, [r3]
 5221 0004 C3F38123 		ubfx	r3, r3, #10, #2
 5222              		.loc 23 257 5 view .LVU1274
 5223 0008 022B     		cmp	r3, #2
 5224 000a 0CD0     		beq	.L268
 5225 000c 032B     		cmp	r3, #3
 5226 000e 0ED0     		beq	.L269
 5227 0010 012B     		cmp	r3, #1
 258:quantum/rgb_matrix/rgb_matrix.c ****         case 0: {
 259:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 0, 0);
 5228              		.loc 23 259 13 view .LVU1275
 5229 0012 4FF00002 		mov	r2, #0
 257:quantum/rgb_matrix/rgb_matrix.c ****     switch ((g_rgb_timer & (0b11 << factor)) >> factor) {
 5230              		.loc 23 257 5 view .LVU1276
 5231 0016 03D0     		beq	.L270
 5232              	.L271:
 5233              		.loc 23 259 13 is_stmt 1 view .LVU1277
 5234 0018 1146     		mov	r1, r2
 5235 001a 1420     		movs	r0, #20
 5236              	.L272:
 260:quantum/rgb_matrix/rgb_matrix.c ****             break;
 261:quantum/rgb_matrix/rgb_matrix.c ****         }
 262:quantum/rgb_matrix/rgb_matrix.c ****         case 1: {
 263:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 20, 0);
 264:quantum/rgb_matrix/rgb_matrix.c ****             break;
 265:quantum/rgb_matrix/rgb_matrix.c ****         }
 266:quantum/rgb_matrix/rgb_matrix.c ****         case 2: {
 267:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 0, 20);
 5237              		.loc 23 267 13 is_stmt 0 view .LVU1278
 5238 001c FFF7FEBF 		b	rgb_matrix_set_color_all
 5239              	.LVL360:
 5240              	.L270:
 263:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5241              		.loc 23 263 13 is_stmt 1 view .LVU1279
 5242 0020 1421     		movs	r1, #20
 5243 0022 1046     		mov	r0, r2
 5244 0024 FAE7     		b	.L272
 5245              	.L268:
 5246              		.loc 23 267 13 view .LVU1280
 5247 0026 0021     		movs	r1, #0
 5248 0028 1422     		movs	r2, #20
 5249 002a 0846     		mov	r0, r1
 5250 002c F6E7     		b	.L272
 5251              	.L269:
 268:quantum/rgb_matrix/rgb_matrix.c ****             break;
 269:quantum/rgb_matrix/rgb_matrix.c ****         }
 270:quantum/rgb_matrix/rgb_matrix.c ****         case 3: {
 271:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 20, 20);
 5252              		.loc 23 271 13 view .LVU1281
 5253 002e 1422     		movs	r2, #20
 5254 0030 F2E7     		b	.L271
 5255              	.L274:
 5256 0032 00BF     		.align	2
 5257              	.L273:
 5258 0034 00000000 		.word	g_rgb_timer
 5259              		.cfi_endproc
 5260              	.LFE426:
 5262              		.section	.text.rgb_matrix_indicators_kb,"ax",%progbits
 5263              		.align	1
 5264              		.weak	rgb_matrix_indicators_kb
 5265              		.syntax unified
 5266              		.thumb
 5267              		.thumb_func
 5268              		.fpu fpv4-sp-d16
 5270              	rgb_matrix_indicators_kb:
 5271              	.LFB435:
 272:quantum/rgb_matrix/rgb_matrix.c ****             break;
 273:quantum/rgb_matrix/rgb_matrix.c ****         }
 274:quantum/rgb_matrix/rgb_matrix.c ****     }
 275:quantum/rgb_matrix/rgb_matrix.c **** }
 276:quantum/rgb_matrix/rgb_matrix.c **** 
 277:quantum/rgb_matrix/rgb_matrix.c **** static bool rgb_matrix_none(effect_params_t *params) {
 278:quantum/rgb_matrix/rgb_matrix.c ****     if (!params->init) {
 279:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 280:quantum/rgb_matrix/rgb_matrix.c ****     }
 281:quantum/rgb_matrix/rgb_matrix.c **** 
 282:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_set_color_all(0, 0, 0);
 283:quantum/rgb_matrix/rgb_matrix.c ****     return false;
 284:quantum/rgb_matrix/rgb_matrix.c **** }
 285:quantum/rgb_matrix/rgb_matrix.c **** 
 286:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_timers(void) {
 287:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 288:quantum/rgb_matrix/rgb_matrix.c ****     uint32_t deltaTime = sync_timer_elapsed32(rgb_timer_buffer);
 289:quantum/rgb_matrix/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 290:quantum/rgb_matrix/rgb_matrix.c ****     rgb_timer_buffer = sync_timer_read32();
 291:quantum/rgb_matrix/rgb_matrix.c **** 
 292:quantum/rgb_matrix/rgb_matrix.c ****     // Update double buffer timers
 293:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 294:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_anykey_timer < UINT32_MAX) {
 295:quantum/rgb_matrix/rgb_matrix.c ****         if (UINT32_MAX - deltaTime < rgb_anykey_timer) {
 296:quantum/rgb_matrix/rgb_matrix.c ****             rgb_anykey_timer = UINT32_MAX;
 297:quantum/rgb_matrix/rgb_matrix.c ****         } else {
 298:quantum/rgb_matrix/rgb_matrix.c ****             rgb_anykey_timer += deltaTime;
 299:quantum/rgb_matrix/rgb_matrix.c ****         }
 300:quantum/rgb_matrix/rgb_matrix.c ****     }
 301:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 302:quantum/rgb_matrix/rgb_matrix.c **** 
 303:quantum/rgb_matrix/rgb_matrix.c ****     // Update double buffer last hit timers
 304:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 305:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t count = last_hit_buffer.count;
 306:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 307:quantum/rgb_matrix/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 308:quantum/rgb_matrix/rgb_matrix.c ****             last_hit_buffer.count--;
 309:quantum/rgb_matrix/rgb_matrix.c ****             continue;
 310:quantum/rgb_matrix/rgb_matrix.c ****         }
 311:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.tick[i] += deltaTime;
 312:quantum/rgb_matrix/rgb_matrix.c ****     }
 313:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 314:quantum/rgb_matrix/rgb_matrix.c **** }
 315:quantum/rgb_matrix/rgb_matrix.c **** 
 316:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_sync(void) {
 317:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 318:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_update_eeprom) eeconfig_update_rgb_matrix();
 319:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 320:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 321:quantum/rgb_matrix/rgb_matrix.c **** }
 322:quantum/rgb_matrix/rgb_matrix.c **** 
 323:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_start(void) {
 324:quantum/rgb_matrix/rgb_matrix.c ****     // reset iter
 325:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.iter = 0;
 326:quantum/rgb_matrix/rgb_matrix.c **** 
 327:quantum/rgb_matrix/rgb_matrix.c ****     // update double buffers
 328:quantum/rgb_matrix/rgb_matrix.c ****     g_rgb_timer = rgb_timer_buffer;
 329:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 330:quantum/rgb_matrix/rgb_matrix.c ****     g_last_hit_tracker = last_hit_buffer;
 331:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 332:quantum/rgb_matrix/rgb_matrix.c **** 
 333:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 334:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = RENDERING;
 335:quantum/rgb_matrix/rgb_matrix.c **** }
 336:quantum/rgb_matrix/rgb_matrix.c **** 
 337:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_render(uint8_t effect) {
 338:quantum/rgb_matrix/rgb_matrix.c ****     bool rendering         = false;
 339:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 340:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 341:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 342:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);
 343:quantum/rgb_matrix/rgb_matrix.c ****     }
 344:quantum/rgb_matrix/rgb_matrix.c **** 
 345:quantum/rgb_matrix/rgb_matrix.c ****     // each effect can opt to do calculations
 346:quantum/rgb_matrix/rgb_matrix.c ****     // and/or request PWM buffer updates.
 347:quantum/rgb_matrix/rgb_matrix.c ****     switch (effect) {
 348:quantum/rgb_matrix/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 349:quantum/rgb_matrix/rgb_matrix.c ****             rendering = rgb_matrix_none(&rgb_effect_params);
 350:quantum/rgb_matrix/rgb_matrix.c ****             break;
 351:quantum/rgb_matrix/rgb_matrix.c **** 
 352:quantum/rgb_matrix/rgb_matrix.c **** // ---------------------------------------------
 353:quantum/rgb_matrix/rgb_matrix.c **** // -----Begin rgb effect switch case macros-----
 354:quantum/rgb_matrix/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name, ...)          \
 355:quantum/rgb_matrix/rgb_matrix.c ****     case RGB_MATRIX_##name:                   \
 356:quantum/rgb_matrix/rgb_matrix.c ****         rendering = name(&rgb_effect_params); \
 357:quantum/rgb_matrix/rgb_matrix.c ****         break;
 358:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix_effects.inc"
 359:quantum/rgb_matrix/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
 360:quantum/rgb_matrix/rgb_matrix.c **** 
 361:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_CUSTOM_KB) || defined(RGB_MATRIX_CUSTOM_USER)
 362:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_EFFECT(name, ...)          \
 363:quantum/rgb_matrix/rgb_matrix.c ****         case RGB_MATRIX_CUSTOM_##name:            \
 364:quantum/rgb_matrix/rgb_matrix.c ****             rendering = name(&rgb_effect_params); \
 365:quantum/rgb_matrix/rgb_matrix.c ****             break;
 366:quantum/rgb_matrix/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_KB
 367:quantum/rgb_matrix/rgb_matrix.c **** #        include "rgb_matrix_kb.inc"
 368:quantum/rgb_matrix/rgb_matrix.c **** #    endif
 369:quantum/rgb_matrix/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_USER
 370:quantum/rgb_matrix/rgb_matrix.c **** #        include "rgb_matrix_user.inc"
 371:quantum/rgb_matrix/rgb_matrix.c **** #    endif
 372:quantum/rgb_matrix/rgb_matrix.c **** #    undef RGB_MATRIX_EFFECT
 373:quantum/rgb_matrix/rgb_matrix.c **** #endif
 374:quantum/rgb_matrix/rgb_matrix.c ****             // -----End rgb effect switch case macros-------
 375:quantum/rgb_matrix/rgb_matrix.c ****             // ---------------------------------------------
 376:quantum/rgb_matrix/rgb_matrix.c **** 
 377:quantum/rgb_matrix/rgb_matrix.c ****         // Factory default magic value
 378:quantum/rgb_matrix/rgb_matrix.c ****         case UINT8_MAX: {
 379:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_test();
 380:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_state = FLUSHING;
 381:quantum/rgb_matrix/rgb_matrix.c ****         }
 382:quantum/rgb_matrix/rgb_matrix.c ****             return;
 383:quantum/rgb_matrix/rgb_matrix.c ****     }
 384:quantum/rgb_matrix/rgb_matrix.c **** 
 385:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.iter++;
 386:quantum/rgb_matrix/rgb_matrix.c **** 
 387:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 388:quantum/rgb_matrix/rgb_matrix.c ****     if (!rendering) {
 389:quantum/rgb_matrix/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 390:quantum/rgb_matrix/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 391:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 392:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_state = SYNCING;
 393:quantum/rgb_matrix/rgb_matrix.c ****         }
 394:quantum/rgb_matrix/rgb_matrix.c ****     }
 395:quantum/rgb_matrix/rgb_matrix.c **** }
 396:quantum/rgb_matrix/rgb_matrix.c **** 
 397:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_flush(uint8_t effect) {
 398:quantum/rgb_matrix/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_effect = effect;
 400:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 401:quantum/rgb_matrix/rgb_matrix.c **** 
 402:quantum/rgb_matrix/rgb_matrix.c ****     // update pwm buffers
 403:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_update_pwm_buffers();
 404:quantum/rgb_matrix/rgb_matrix.c **** 
 405:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 406:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = SYNCING;
 407:quantum/rgb_matrix/rgb_matrix.c **** }
 408:quantum/rgb_matrix/rgb_matrix.c **** 
 409:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_task(void) {
 410:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_timers();
 411:quantum/rgb_matrix/rgb_matrix.c **** 
 412:quantum/rgb_matrix/rgb_matrix.c ****     // Ideally we would also stop sending zeros to the LED driver PWM buffers
 413:quantum/rgb_matrix/rgb_matrix.c ****     // while suspended and just do a software shutdown. This is a cheap hack for now.
 414:quantum/rgb_matrix/rgb_matrix.c ****     bool suspend_backlight = suspend_state ||
 415:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 416:quantum/rgb_matrix/rgb_matrix.c ****                              (rgb_anykey_timer > (uint32_t)RGB_DISABLE_TIMEOUT) ||
 417:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 418:quantum/rgb_matrix/rgb_matrix.c ****                              false;
 419:quantum/rgb_matrix/rgb_matrix.c **** 
 420:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t effect = suspend_backlight || !rgb_matrix_config.enable ? 0 : rgb_matrix_config.mode;
 421:quantum/rgb_matrix/rgb_matrix.c **** 
 422:quantum/rgb_matrix/rgb_matrix.c ****     switch (rgb_task_state) {
 423:quantum/rgb_matrix/rgb_matrix.c ****         case STARTING:
 424:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_start();
 425:quantum/rgb_matrix/rgb_matrix.c ****             break;
 426:quantum/rgb_matrix/rgb_matrix.c ****         case RENDERING:
 427:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_render(effect);
 428:quantum/rgb_matrix/rgb_matrix.c ****             if (effect) {
 429:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 430:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators_advanced(&rgb_effect_params);
 431:quantum/rgb_matrix/rgb_matrix.c ****             }
 432:quantum/rgb_matrix/rgb_matrix.c ****             break;
 433:quantum/rgb_matrix/rgb_matrix.c ****         case FLUSHING:
 434:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_flush(effect);
 435:quantum/rgb_matrix/rgb_matrix.c ****             break;
 436:quantum/rgb_matrix/rgb_matrix.c ****         case SYNCING:
 437:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_sync();
 438:quantum/rgb_matrix/rgb_matrix.c ****             break;
 439:quantum/rgb_matrix/rgb_matrix.c ****     }
 440:quantum/rgb_matrix/rgb_matrix.c **** }
 441:quantum/rgb_matrix/rgb_matrix.c **** 
 442:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_indicators(void) {
 443:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 444:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_user();
 445:quantum/rgb_matrix/rgb_matrix.c **** }
 446:quantum/rgb_matrix/rgb_matrix.c **** 
 447:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_kb(void) {}
 5272              		.loc 23 447 59 view -0
 5273              		.cfi_startproc
 5274              		@ args = 0, pretend = 0, frame = 0
 5275              		@ frame_needed = 0, uses_anonymous_args = 0
 5276              		@ link register save eliminated.
 5277              		.loc 23 447 60 view .LVU1283
 5278 0000 7047     		bx	lr
 5279              		.cfi_endproc
 5280              	.LFE435:
 5282              		.section	.text.rgb_matrix_indicators_user,"ax",%progbits
 5283              		.align	1
 5284              		.weak	rgb_matrix_indicators_user
 5285              		.syntax unified
 5286              		.thumb
 5287              		.thumb_func
 5288              		.fpu fpv4-sp-d16
 5290              	rgb_matrix_indicators_user:
 5291              	.LFB505:
 5292              		.cfi_startproc
 5293              		@ args = 0, pretend = 0, frame = 0
 5294              		@ frame_needed = 0, uses_anonymous_args = 0
 5295              		@ link register save eliminated.
 5296 0000 7047     		bx	lr
 5297              		.cfi_endproc
 5298              	.LFE505:
 5300              		.section	.text.rgb_matrix_indicators,"ax",%progbits
 5301              		.align	1
 5302              		.global	rgb_matrix_indicators
 5303              		.syntax unified
 5304              		.thumb
 5305              		.thumb_func
 5306              		.fpu fpv4-sp-d16
 5308              	rgb_matrix_indicators:
 5309              	.LFB434:
 442:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 5310              		.loc 23 442 34 view -0
 5311              		.cfi_startproc
 5312              		@ args = 0, pretend = 0, frame = 0
 5313              		@ frame_needed = 0, uses_anonymous_args = 0
 443:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_user();
 5314              		.loc 23 443 5 view .LVU1285
 442:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 5315              		.loc 23 442 34 is_stmt 0 view .LVU1286
 5316 0000 08B5     		push	{r3, lr}
 5317              		.cfi_def_cfa_offset 8
 5318              		.cfi_offset 3, -8
 5319              		.cfi_offset 14, -4
 443:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_user();
 5320              		.loc 23 443 5 view .LVU1287
 5321 0002 FFF7FEFF 		bl	rgb_matrix_indicators_kb
 5322              	.LVL361:
 444:quantum/rgb_matrix/rgb_matrix.c **** }
 5323              		.loc 23 444 5 is_stmt 1 view .LVU1288
 5324 0006 FFF7FEFF 		bl	rgb_matrix_indicators_user
 5325              	.LVL362:
 445:quantum/rgb_matrix/rgb_matrix.c **** 
 5326              		.loc 23 445 1 is_stmt 0 view .LVU1289
 5327 000a 08BD     		pop	{r3, pc}
 5328              		.cfi_endproc
 5329              	.LFE434:
 5331              		.section	.text.rgb_matrix_indicators_advanced_kb,"ax",%progbits
 5332              		.align	1
 5333              		.weak	rgb_matrix_indicators_advanced_kb
 5334              		.syntax unified
 5335              		.thumb
 5336              		.thumb_func
 5337              		.fpu fpv4-sp-d16
 5339              	rgb_matrix_indicators_advanced_kb:
 5340              	.LVL363:
 5341              	.LFB438:
 448:quantum/rgb_matrix/rgb_matrix.c **** 
 449:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_user(void) {}
 450:quantum/rgb_matrix/rgb_matrix.c **** 
 451:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_indicators_advanced(effect_params_t *params) {
 452:quantum/rgb_matrix/rgb_matrix.c ****     /* special handling is needed for "params->iter", since it's already been incremented.
 453:quantum/rgb_matrix/rgb_matrix.c ****      * Could move the invocations to rgb_task_render, but then it's missing a few checks
 454:quantum/rgb_matrix/rgb_matrix.c ****      * and not sure which would be better. Otherwise, this should be called from
 455:quantum/rgb_matrix/rgb_matrix.c ****      * rgb_task_render, right before the iter++ line.
 456:quantum/rgb_matrix/rgb_matrix.c ****      */
 457:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_LED_PROCESS_LIMIT) && RGB_MATRIX_LED_PROCESS_LIMIT > 0 && RGB_MATRIX_LED_PRO
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t min = RGB_MATRIX_LED_PROCESS_LIMIT * (params->iter - 1);
 459:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 460:quantum/rgb_matrix/rgb_matrix.c ****     if (max > DRIVER_LED_TOTAL) max = DRIVER_LED_TOTAL;
 461:quantum/rgb_matrix/rgb_matrix.c **** #else
 462:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t min = 0;
 463:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = DRIVER_LED_TOTAL;
 464:quantum/rgb_matrix/rgb_matrix.c **** #endif
 465:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_advanced_kb(min, max);
 466:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_advanced_user(min, max);
 467:quantum/rgb_matrix/rgb_matrix.c **** }
 468:quantum/rgb_matrix/rgb_matrix.c **** 
 469:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_advanced_kb(uint8_t led_min, uint8_t led_max) {}
 5342              		.loc 23 469 96 is_stmt 1 view -0
 5343              		.cfi_startproc
 5344              		@ args = 0, pretend = 0, frame = 0
 5345              		@ frame_needed = 0, uses_anonymous_args = 0
 5346              		@ link register save eliminated.
 5347              		.loc 23 469 97 view .LVU1291
 5348 0000 7047     		bx	lr
 5349              		.cfi_endproc
 5350              	.LFE438:
 5352              		.section	.text.rgb_matrix_indicators_advanced_user,"ax",%progbits
 5353              		.align	1
 5354              		.weak	rgb_matrix_indicators_advanced_user
 5355              		.syntax unified
 5356              		.thumb
 5357              		.thumb_func
 5358              		.fpu fpv4-sp-d16
 5360              	rgb_matrix_indicators_advanced_user:
 5361              	.LFB507:
 5362              		.cfi_startproc
 5363              		@ args = 0, pretend = 0, frame = 0
 5364              		@ frame_needed = 0, uses_anonymous_args = 0
 5365              		@ link register save eliminated.
 5366 0000 7047     		bx	lr
 5367              		.cfi_endproc
 5368              	.LFE507:
 5370              		.section	.text.rgb_matrix_indicators_advanced,"ax",%progbits
 5371              		.align	1
 5372              		.global	rgb_matrix_indicators_advanced
 5373              		.syntax unified
 5374              		.thumb
 5375              		.thumb_func
 5376              		.fpu fpv4-sp-d16
 5378              	rgb_matrix_indicators_advanced:
 5379              	.LVL364:
 5380              	.LFB437:
 451:quantum/rgb_matrix/rgb_matrix.c ****     /* special handling is needed for "params->iter", since it's already been incremented.
 5381              		.loc 23 451 62 view -0
 5382              		.cfi_startproc
 5383              		@ args = 0, pretend = 0, frame = 8
 5384              		@ frame_needed = 0, uses_anonymous_args = 0
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 5385              		.loc 23 458 5 view .LVU1293
 451:quantum/rgb_matrix/rgb_matrix.c ****     /* special handling is needed for "params->iter", since it's already been incremented.
 5386              		.loc 23 451 62 is_stmt 0 view .LVU1294
 5387 0000 07B5     		push	{r0, r1, r2, lr}
 5388              		.cfi_def_cfa_offset 16
 5389              		.cfi_offset 14, -4
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 5390              		.loc 23 458 13 view .LVU1295
 5391 0002 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 5392 0004 01EB8101 		add	r1, r1, r1, lsl #2
 5393 0008 8900     		lsls	r1, r1, #2
 5394 000a C9B2     		uxtb	r1, r1
 5395 000c 6229     		cmp	r1, #98
 5396 000e A1F11400 		sub	r0, r1, #20
 5397              	.LVL365:
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 5398              		.loc 23 458 13 view .LVU1296
 5399 0012 C0B2     		uxtb	r0, r0
 5400              	.LVL366:
 459:quantum/rgb_matrix/rgb_matrix.c ****     if (max > DRIVER_LED_TOTAL) max = DRIVER_LED_TOTAL;
 5401              		.loc 23 459 5 is_stmt 1 view .LVU1297
 460:quantum/rgb_matrix/rgb_matrix.c **** #else
 5402              		.loc 23 460 5 view .LVU1298
 5403 0014 28BF     		it	cs
 5404 0016 6221     		movcs	r1, #98
 5405              	.LVL367:
 465:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_advanced_user(min, max);
 5406              		.loc 23 465 5 view .LVU1299
 5407 0018 CDE90001 		strd	r0, r1, [sp]
 5408 001c FFF7FEFF 		bl	rgb_matrix_indicators_advanced_kb
 5409              	.LVL368:
 466:quantum/rgb_matrix/rgb_matrix.c **** }
 5410              		.loc 23 466 5 view .LVU1300
 5411 0020 DDE90001 		ldrd	r0, r1, [sp]
 5412 0024 FFF7FEFF 		bl	rgb_matrix_indicators_advanced_user
 5413              	.LVL369:
 467:quantum/rgb_matrix/rgb_matrix.c **** 
 5414              		.loc 23 467 1 is_stmt 0 view .LVU1301
 5415 0028 03B0     		add	sp, sp, #12
 5416              		.cfi_def_cfa_offset 4
 5417              	.LVL370:
 467:quantum/rgb_matrix/rgb_matrix.c **** 
 5418              		.loc 23 467 1 view .LVU1302
 5419              		@ sp needed
 5420 002a 5DF804FB 		ldr	pc, [sp], #4
 467:quantum/rgb_matrix/rgb_matrix.c **** 
 5421              		.loc 23 467 1 view .LVU1303
 5422              		.cfi_endproc
 5423              	.LFE437:
 5425              		.section	.text.rgb_matrix_task,"ax",%progbits
 5426              		.align	1
 5427              		.global	rgb_matrix_task
 5428              		.syntax unified
 5429              		.thumb
 5430              		.thumb_func
 5431              		.fpu fpv4-sp-d16
 5433              	rgb_matrix_task:
 5434              	.LFB433:
 409:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_timers();
 5435              		.loc 23 409 28 is_stmt 1 view -0
 5436              		.cfi_startproc
 5437              		@ args = 0, pretend = 0, frame = 0
 5438              		@ frame_needed = 0, uses_anonymous_args = 0
 410:quantum/rgb_matrix/rgb_matrix.c **** 
 5439              		.loc 23 410 5 view .LVU1305
 5440              	.LBB370:
 5441              	.LBI370:
 286:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 5442              		.loc 23 286 13 view .LVU1306
 5443              	.LBB371:
 290:quantum/rgb_matrix/rgb_matrix.c **** 
 5444              		.loc 23 290 5 view .LVU1307
 5445              	.LBE371:
 5446              	.LBE370:
 409:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_timers();
 5447              		.loc 23 409 28 is_stmt 0 view .LVU1308
 5448 0000 70B5     		push	{r4, r5, r6, lr}
 5449              		.cfi_def_cfa_offset 16
 5450              		.cfi_offset 4, -16
 5451              		.cfi_offset 5, -12
 5452              		.cfi_offset 6, -8
 5453              		.cfi_offset 14, -4
 5454              	.LBB373:
 5455              	.LBB372:
 290:quantum/rgb_matrix/rgb_matrix.c **** 
 5456              		.loc 23 290 24 view .LVU1309
 5457 0002 FFF7FEFF 		bl	timer_read32
 5458              	.LVL371:
 290:quantum/rgb_matrix/rgb_matrix.c **** 
 5459              		.loc 23 290 22 view .LVU1310
 5460 0006 794B     		ldr	r3, .L339
 5461 0008 1860     		str	r0, [r3]
 5462              	.LBE372:
 5463              	.LBE373:
 414:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 5464              		.loc 23 414 5 is_stmt 1 view .LVU1311
 5465              	.LVL372:
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5466              		.loc 23 420 5 view .LVU1312
 414:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 5467              		.loc 23 414 44 is_stmt 0 view .LVU1313
 5468 000a 794B     		ldr	r3, .L339+4
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5469              		.loc 23 420 13 view .LVU1314
 5470 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5471 000e 7BB9     		cbnz	r3, .L326
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5472              		.loc 23 420 43 discriminator 1 view .LVU1315
 5473 0010 784B     		ldr	r3, .L339+8
 5474 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5475              		.loc 23 420 40 discriminator 1 view .LVU1316
 5476 0014 13F00304 		ands	r4, r3, #3
 5477 0018 00D0     		beq	.L282
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5478              		.loc 23 420 13 discriminator 3 view .LVU1317
 5479 001a 9C08     		lsrs	r4, r3, #2
 5480              	.L282:
 5481              	.LVL373:
 422:quantum/rgb_matrix/rgb_matrix.c ****         case STARTING:
 5482              		.loc 23 422 5 is_stmt 1 discriminator 6 view .LVU1318
 5483 001c 764E     		ldr	r6, .L339+12
 5484 001e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 5485 0020 032B     		cmp	r3, #3
 5486 0022 0ED8     		bhi	.L281
 5487 0024 DFE813F0 		tbh	[pc, r3, lsl #1]
 5488              	.L285:
 5489 0028 0600     		.2byte	(.L288-.L285)/2
 5490 002a 0E00     		.2byte	(.L287-.L285)/2
 5491 002c C600     		.2byte	(.L286-.L285)/2
 5492 002e D200     		.2byte	(.L284-.L285)/2
 5493              	.LVL374:
 5494              		.p2align 1
 5495              	.L326:
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5496              		.loc 23 420 13 is_stmt 0 view .LVU1319
 5497 0030 0024     		movs	r4, #0
 5498 0032 F3E7     		b	.L282
 5499              	.LVL375:
 5500              	.L288:
 424:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5501              		.loc 23 424 13 is_stmt 1 view .LVU1320
 5502              	.LBB374:
 5503              	.LBI374:
 323:quantum/rgb_matrix/rgb_matrix.c ****     // reset iter
 5504              		.loc 23 323 13 view .LVU1321
 5505              	.LBB375:
 325:quantum/rgb_matrix/rgb_matrix.c **** 
 5506              		.loc 23 325 5 view .LVU1322
 325:quantum/rgb_matrix/rgb_matrix.c **** 
 5507              		.loc 23 325 28 is_stmt 0 view .LVU1323
 5508 0034 714B     		ldr	r3, .L339+16
 5509 0036 0022     		movs	r2, #0
 5510 0038 1A70     		strb	r2, [r3]
 328:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 5511              		.loc 23 328 5 is_stmt 1 view .LVU1324
 328:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 5512              		.loc 23 328 17 is_stmt 0 view .LVU1325
 5513 003a 714B     		ldr	r3, .L339+20
 5514 003c 1860     		str	r0, [r3]
 334:quantum/rgb_matrix/rgb_matrix.c **** }
 5515              		.loc 23 334 5 is_stmt 1 view .LVU1326
 334:quantum/rgb_matrix/rgb_matrix.c **** }
 5516              		.loc 23 334 20 is_stmt 0 view .LVU1327
 5517 003e 0123     		movs	r3, #1
 5518              	.LVL376:
 5519              	.L338:
 334:quantum/rgb_matrix/rgb_matrix.c **** }
 5520              		.loc 23 334 20 view .LVU1328
 5521              	.LBE375:
 5522              	.LBE374:
 5523              	.LBB376:
 5524              	.LBB377:
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 5525              		.loc 23 392 28 view .LVU1329
 5526 0040 3370     		strb	r3, [r6]
 5527              	.LBE377:
 5528              	.LBE376:
 428:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 5529              		.loc 23 428 13 is_stmt 1 view .LVU1330
 5530              	.LVL377:
 5531              	.L281:
 440:quantum/rgb_matrix/rgb_matrix.c **** 
 5532              		.loc 23 440 1 is_stmt 0 view .LVU1331
 5533 0042 70BD     		pop	{r4, r5, r6, pc}
 5534              	.LVL378:
 5535              	.L287:
 427:quantum/rgb_matrix/rgb_matrix.c ****             if (effect) {
 5536              		.loc 23 427 13 is_stmt 1 view .LVU1332
 5537              	.LBB383:
 5538              	.LBI376:
 337:quantum/rgb_matrix/rgb_matrix.c ****     bool rendering         = false;
 5539              		.loc 23 337 13 view .LVU1333
 5540              	.LBB380:
 338:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 5541              		.loc 23 338 5 view .LVU1334
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5542              		.loc 23 339 5 view .LVU1335
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5543              		.loc 23 339 38 is_stmt 0 view .LVU1336
 5544 0044 6F4B     		ldr	r3, .L339+24
 5545 0046 6B4A     		ldr	r2, .L339+8
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5546              		.loc 23 339 58 view .LVU1337
 5547 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5548 004a A342     		cmp	r3, r4
 5549 004c 25D1     		bne	.L327
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5550              		.loc 23 339 87 view .LVU1338
 5551 004e 6E49     		ldr	r1, .L339+28
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5552              		.loc 23 339 79 view .LVU1339
 5553 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5554              		.loc 23 339 87 view .LVU1340
 5555 0052 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5556              		.loc 23 339 79 view .LVU1341
 5557 0054 03F00303 		and	r3, r3, #3
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5558              		.loc 23 339 58 view .LVU1342
 5559 0058 5B1A     		subs	r3, r3, r1
 5560 005a 18BF     		it	ne
 5561 005c 0123     		movne	r3, #1
 5562              	.L289:
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5563              		.loc 23 339 28 view .LVU1343
 5564 005e 674D     		ldr	r5, .L339+16
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5565              		.loc 23 339 58 view .LVU1344
 5566 0060 AB70     		strb	r3, [r5, #2]
 340:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 5567              		.loc 23 340 5 is_stmt 1 view .LVU1345
 340:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 5568              		.loc 23 340 53 is_stmt 0 view .LVU1346
 5569 0062 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 340:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 5570              		.loc 23 340 8 view .LVU1347
 5571 0064 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 5572 0066 9A42     		cmp	r2, r3
 5573 0068 05D0     		beq	.L290
 341:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);
 5574              		.loc 23 341 9 is_stmt 1 view .LVU1348
 342:quantum/rgb_matrix/rgb_matrix.c ****     }
 5575              		.loc 23 342 9 is_stmt 0 view .LVU1349
 5576 006a 0022     		movs	r2, #0
 5577 006c 1146     		mov	r1, r2
 5578 006e 1046     		mov	r0, r2
 341:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);
 5579              		.loc 23 341 33 view .LVU1350
 5580 0070 6B70     		strb	r3, [r5, #1]
 342:quantum/rgb_matrix/rgb_matrix.c ****     }
 5581              		.loc 23 342 9 is_stmt 1 view .LVU1351
 5582 0072 FFF7FEFF 		bl	rgb_matrix_set_color_all
 5583              	.LVL379:
 5584              	.L290:
 347:quantum/rgb_matrix/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 5585              		.loc 23 347 5 view .LVU1352
 5586 0076 1B2C     		cmp	r4, #27
 5587 0078 18D8     		bhi	.L328
 5588 007a DFE804F0 		tbb	[pc, r4]
 5589              	.L293:
 5590 007e 10       		.byte	(.L320-.L293)/2
 5591 007f 19       		.byte	(.L319-.L293)/2
 5592 0080 2F       		.byte	(.L318-.L293)/2
 5593 0081 33       		.byte	(.L317-.L293)/2
 5594 0082 37       		.byte	(.L316-.L293)/2
 5595 0083 3B       		.byte	(.L315-.L293)/2
 5596 0084 3F       		.byte	(.L314-.L293)/2
 5597 0085 43       		.byte	(.L313-.L293)/2
 5598 0086 47       		.byte	(.L312-.L293)/2
 5599 0087 4B       		.byte	(.L311-.L293)/2
 5600 0088 4F       		.byte	(.L310-.L293)/2
 5601 0089 53       		.byte	(.L309-.L293)/2
 5602 008a 57       		.byte	(.L308-.L293)/2
 5603 008b 5B       		.byte	(.L307-.L293)/2
 5604 008c 5F       		.byte	(.L306-.L293)/2
 5605 008d 63       		.byte	(.L305-.L293)/2
 5606 008e 67       		.byte	(.L304-.L293)/2
 5607 008f 6B       		.byte	(.L303-.L293)/2
 5608 0090 6F       		.byte	(.L302-.L293)/2
 5609 0091 73       		.byte	(.L301-.L293)/2
 5610 0092 77       		.byte	(.L300-.L293)/2
 5611 0093 7B       		.byte	(.L299-.L293)/2
 5612 0094 7F       		.byte	(.L298-.L293)/2
 5613 0095 83       		.byte	(.L297-.L293)/2
 5614 0096 87       		.byte	(.L296-.L293)/2
 5615 0097 8B       		.byte	(.L295-.L293)/2
 5616 0098 8F       		.byte	(.L294-.L293)/2
 5617 0099 93       		.byte	(.L292-.L293)/2
 5618              	.LVL380:
 5619              		.p2align 1
 5620              	.L327:
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5621              		.loc 23 339 58 is_stmt 0 view .LVU1353
 5622 009a 0123     		movs	r3, #1
 5623 009c DFE7     		b	.L289
 5624              	.LVL381:
 5625              	.L320:
 349:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5626              		.loc 23 349 13 is_stmt 1 view .LVU1354
 5627              	.LBB378:
 5628              	.LBI378:
 277:quantum/rgb_matrix/rgb_matrix.c ****     if (!params->init) {
 5629              		.loc 23 277 13 view .LVU1355
 5630              	.LBB379:
 278:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 5631              		.loc 23 278 5 view .LVU1356
 278:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 5632              		.loc 23 278 16 is_stmt 0 view .LVU1357
 5633 009e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 278:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 5634              		.loc 23 278 8 view .LVU1358
 5635 00a0 48B1     		cbz	r0, .L291
 282:quantum/rgb_matrix/rgb_matrix.c ****     return false;
 5636              		.loc 23 282 5 is_stmt 1 view .LVU1359
 5637 00a2 0022     		movs	r2, #0
 5638 00a4 1146     		mov	r1, r2
 5639 00a6 1046     		mov	r0, r2
 5640 00a8 FFF7FEFF 		bl	rgb_matrix_set_color_all
 5641              	.LVL382:
 283:quantum/rgb_matrix/rgb_matrix.c **** }
 5642              		.loc 23 283 5 view .LVU1360
 5643              	.L328:
 283:quantum/rgb_matrix/rgb_matrix.c **** }
 5644              		.loc 23 283 5 is_stmt 0 view .LVU1361
 5645              	.LBE379:
 5646              	.LBE378:
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5647              		.loc 23 339 58 view .LVU1362
 5648 00ac 0020     		movs	r0, #0
 5649 00ae 02E0     		b	.L291
 5650              	.L319:
   1:quantum/rgb_matrix/animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5651              		.loc 28 1 1 is_stmt 1 view .LVU1363
 5652 00b0 5248     		ldr	r0, .L339+16
 5653 00b2 FFF7FEFF 		bl	SOLID_COLOR
 5654              	.LVL383:
   1:quantum/rgb_matrix/animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5655              		.loc 28 1 1 view .LVU1364
 5656              	.L291:
 385:quantum/rgb_matrix/rgb_matrix.c **** 
 5657              		.loc 23 385 5 view .LVU1365
 385:quantum/rgb_matrix/rgb_matrix.c **** 
 5658              		.loc 23 385 27 is_stmt 0 view .LVU1366
 5659 00b6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5660 00b8 0133     		adds	r3, r3, #1
 5661 00ba 2B70     		strb	r3, [r5]
 388:quantum/rgb_matrix/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 5662              		.loc 23 388 5 is_stmt 1 view .LVU1367
 388:quantum/rgb_matrix/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 5663              		.loc 23 388 8 is_stmt 0 view .LVU1368
 5664 00bc 0028     		cmp	r0, #0
 5665 00be 75D1     		bne	.L321
 5666              	.LVL384:
 389:quantum/rgb_matrix/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 5667              		.loc 23 389 9 is_stmt 1 view .LVU1369
 389:quantum/rgb_matrix/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 5668              		.loc 23 389 24 is_stmt 0 view .LVU1370
 5669 00c0 0223     		movs	r3, #2
 5670 00c2 3370     		strb	r3, [r6]
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5671              		.loc 23 390 9 is_stmt 1 view .LVU1371
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5672              		.loc 23 390 12 is_stmt 0 view .LVU1372
 5673 00c4 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 5674 00c6 002B     		cmp	r3, #0
 5675 00c8 70D1     		bne	.L321
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5676              		.loc 23 390 37 view .LVU1373
 5677 00ca 002C     		cmp	r4, #0
 5678 00cc 7CD0     		beq	.L322
 5679              	.LVL385:
 5680              	.L323:
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5681              		.loc 23 390 37 view .LVU1374
 5682              	.LBE380:
 5683              	.LBE383:
 429:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators_advanced(&rgb_effect_params);
 5684              		.loc 23 429 17 is_stmt 1 view .LVU1375
 5685 00ce FFF7FEFF 		bl	rgb_matrix_indicators
 5686              	.LVL386:
 430:quantum/rgb_matrix/rgb_matrix.c ****             }
 5687              		.loc 23 430 17 view .LVU1376
 440:quantum/rgb_matrix/rgb_matrix.c **** 
 5688              		.loc 23 440 1 is_stmt 0 view .LVU1377
 5689 00d2 BDE87040 		pop	{r4, r5, r6, lr}
 5690              		.cfi_remember_state
 5691              		.cfi_restore 14
 5692              		.cfi_restore 6
 5693              		.cfi_restore 5
 5694              		.cfi_restore 4
 5695              		.cfi_def_cfa_offset 0
 5696              	.LVL387:
 430:quantum/rgb_matrix/rgb_matrix.c ****             }
 5697              		.loc 23 430 17 view .LVU1378
 5698 00d6 4948     		ldr	r0, .L339+16
 5699 00d8 FFF7FEBF 		b	rgb_matrix_indicators_advanced
 5700              	.LVL388:
 5701              	.L318:
 5702              		.cfi_restore_state
 5703              	.LBB384:
 5704              	.LBB381:
   2:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5705              		.loc 29 2 1 is_stmt 1 view .LVU1379
 5706 00dc 4748     		ldr	r0, .L339+16
 5707 00de FFF7FEFF 		bl	ALPHAS_MODS
 5708              	.LVL389:
   2:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5709              		.loc 29 2 1 view .LVU1380
 5710 00e2 E8E7     		b	.L291
 5711              	.LVL390:
 5712              	.L317:
   2:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5713              		.loc 30 2 1 view .LVU1381
 5714 00e4 4548     		ldr	r0, .L339+16
 5715 00e6 FFF7FEFF 		bl	GRADIENT_UP_DOWN
 5716              	.LVL391:
   2:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5717              		.loc 30 2 1 view .LVU1382
 5718 00ea E4E7     		b	.L291
 5719              	.LVL392:
 5720              	.L316:
   2:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5721              		.loc 31 2 1 view .LVU1383
 5722 00ec 4348     		ldr	r0, .L339+16
 5723 00ee FFF7FEFF 		bl	GRADIENT_LEFT_RIGHT
 5724              	.LVL393:
   2:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5725              		.loc 31 2 1 view .LVU1384
 5726 00f2 E0E7     		b	.L291
 5727              	.LVL394:
 5728              	.L315:
   2:quantum/rgb_matrix/animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5729              		.loc 32 2 1 view .LVU1385
 5730 00f4 4148     		ldr	r0, .L339+16
 5731 00f6 FFF7FEFF 		bl	BREATHING
 5732              	.LVL395:
   2:quantum/rgb_matrix/animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5733              		.loc 32 2 1 view .LVU1386
 5734 00fa DCE7     		b	.L291
 5735              	.LVL396:
 5736              	.L314:
   2:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5737              		.loc 3 2 1 view .LVU1387
 5738 00fc 3F48     		ldr	r0, .L339+16
 5739 00fe FFF7FEFF 		bl	BAND_SAT
 5740              	.LVL397:
   2:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5741              		.loc 3 2 1 view .LVU1388
 5742 0102 D8E7     		b	.L291
 5743              	.LVL398:
 5744              	.L313:
   2:quantum/rgb_matrix/animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5745              		.loc 5 2 1 view .LVU1389
 5746 0104 3D48     		ldr	r0, .L339+16
 5747 0106 FFF7FEFF 		bl	BAND_VAL
 5748              	.LVL399:
   2:quantum/rgb_matrix/animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5749              		.loc 5 2 1 view .LVU1390
 5750 010a D4E7     		b	.L291
 5751              	.LVL400:
 5752              	.L312:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5753              		.loc 17 2 1 view .LVU1391
 5754 010c 3B48     		ldr	r0, .L339+16
 5755 010e FFF7FEFF 		bl	BAND_PINWHEEL_SAT
 5756              	.LVL401:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5757              		.loc 17 2 1 view .LVU1392
 5758 0112 D0E7     		b	.L291
 5759              	.LVL402:
 5760              	.L311:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5761              		.loc 18 2 1 view .LVU1393
 5762 0114 3948     		ldr	r0, .L339+16
 5763 0116 FFF7FEFF 		bl	BAND_PINWHEEL_VAL
 5764              	.LVL403:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5765              		.loc 18 2 1 view .LVU1394
 5766 011a CCE7     		b	.L291
 5767              	.LVL404:
 5768              	.L310:
   2:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5769              		.loc 19 2 1 view .LVU1395
 5770 011c 3748     		ldr	r0, .L339+16
 5771 011e FFF7FEFF 		bl	BAND_SPIRAL_SAT
 5772              	.LVL405:
   2:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5773              		.loc 19 2 1 view .LVU1396
 5774 0122 C8E7     		b	.L291
 5775              	.LVL406:
 5776              	.L309:
   2:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5777              		.loc 20 2 1 view .LVU1397
 5778 0124 3548     		ldr	r0, .L339+16
 5779 0126 FFF7FEFF 		bl	BAND_SPIRAL_VAL
 5780              	.LVL407:
   2:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5781              		.loc 20 2 1 view .LVU1398
 5782 012a C4E7     		b	.L291
 5783              	.LVL408:
 5784              	.L308:
   2:quantum/rgb_matrix/animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5785              		.loc 6 2 1 view .LVU1399
 5786 012c 3348     		ldr	r0, .L339+16
 5787 012e FFF7FEFF 		bl	CYCLE_ALL
 5788              	.LVL409:
   2:quantum/rgb_matrix/animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5789              		.loc 6 2 1 view .LVU1400
 5790 0132 C0E7     		b	.L291
 5791              	.LVL410:
 5792              	.L307:
   2:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5793              		.loc 7 2 1 view .LVU1401
 5794 0134 3148     		ldr	r0, .L339+16
 5795 0136 FFF7FEFF 		bl	CYCLE_LEFT_RIGHT
 5796              	.LVL411:
   2:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5797              		.loc 7 2 1 view .LVU1402
 5798 013a BCE7     		b	.L291
 5799              	.LVL412:
 5800              	.L306:
   2:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5801              		.loc 8 2 1 view .LVU1403
 5802 013c 2F48     		ldr	r0, .L339+16
 5803 013e FFF7FEFF 		bl	CYCLE_UP_DOWN
 5804              	.LVL413:
   2:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5805              		.loc 8 2 1 view .LVU1404
 5806 0142 B8E7     		b	.L291
 5807              	.LVL414:
 5808              	.L305:
   2:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5809              		.loc 9 2 1 view .LVU1405
 5810 0144 2D48     		ldr	r0, .L339+16
 5811 0146 FFF7FEFF 		bl	RAINBOW_MOVING_CHEVRON
 5812              	.LVL415:
   2:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5813              		.loc 9 2 1 view .LVU1406
 5814 014a B4E7     		b	.L291
 5815              	.LVL416:
 5816              	.L304:
   2:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5817              		.loc 10 2 1 view .LVU1407
 5818 014c 2B48     		ldr	r0, .L339+16
 5819 014e FFF7FEFF 		bl	CYCLE_OUT_IN
 5820              	.LVL417:
   2:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5821              		.loc 10 2 1 view .LVU1408
 5822 0152 B0E7     		b	.L291
 5823              	.LVL418:
 5824              	.L303:
   2:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5825              		.loc 11 2 1 view .LVU1409
 5826 0154 2948     		ldr	r0, .L339+16
 5827 0156 FFF7FEFF 		bl	CYCLE_OUT_IN_DUAL
 5828              	.LVL419:
   2:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5829              		.loc 11 2 1 view .LVU1410
 5830 015a ACE7     		b	.L291
 5831              	.LVL420:
 5832              	.L302:
   2:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5833              		.loc 21 2 1 view .LVU1411
 5834 015c 2748     		ldr	r0, .L339+16
 5835 015e FFF7FEFF 		bl	CYCLE_PINWHEEL
 5836              	.LVL421:
   2:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5837              		.loc 21 2 1 view .LVU1412
 5838 0162 A8E7     		b	.L291
 5839              	.LVL422:
 5840              	.L301:
   2:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5841              		.loc 22 2 1 view .LVU1413
 5842 0164 2548     		ldr	r0, .L339+16
 5843 0166 FFF7FEFF 		bl	CYCLE_SPIRAL
 5844              	.LVL423:
   2:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5845              		.loc 22 2 1 view .LVU1414
 5846 016a A4E7     		b	.L291
 5847              	.LVL424:
 5848              	.L300:
   2:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5849              		.loc 12 2 1 view .LVU1415
 5850 016c 2348     		ldr	r0, .L339+16
 5851 016e FFF7FEFF 		bl	DUAL_BEACON
 5852              	.LVL425:
   2:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5853              		.loc 12 2 1 view .LVU1416
 5854 0172 A0E7     		b	.L291
 5855              	.LVL426:
 5856              	.L299:
   2:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5857              		.loc 13 2 1 view .LVU1417
 5858 0174 2148     		ldr	r0, .L339+16
 5859 0176 FFF7FEFF 		bl	RAINBOW_BEACON
 5860              	.LVL427:
   2:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5861              		.loc 13 2 1 view .LVU1418
 5862 017a 9CE7     		b	.L291
 5863              	.LVL428:
 5864              	.L298:
   2:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5865              		.loc 14 2 1 view .LVU1419
 5866 017c 1F48     		ldr	r0, .L339+16
 5867 017e FFF7FEFF 		bl	RAINBOW_PINWHEELS
 5868              	.LVL429:
   2:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5869              		.loc 14 2 1 view .LVU1420
 5870 0182 98E7     		b	.L291
 5871              	.LVL430:
 5872              	.L297:
   2:quantum/rgb_matrix/animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5873              		.loc 33 2 1 view .LVU1421
 5874 0184 1D48     		ldr	r0, .L339+16
 5875 0186 FFF7FEFF 		bl	RAINDROPS
 5876              	.LVL431:
   2:quantum/rgb_matrix/animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5877              		.loc 33 2 1 view .LVU1422
 5878 018a 94E7     		b	.L291
 5879              	.LVL432:
 5880              	.L296:
   2:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5881              		.loc 34 2 1 view .LVU1423
 5882 018c 1B48     		ldr	r0, .L339+16
 5883 018e FFF7FEFF 		bl	JELLYBEAN_RAINDROPS
 5884              	.LVL433:
   2:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5885              		.loc 34 2 1 view .LVU1424
 5886 0192 90E7     		b	.L291
 5887              	.LVL434:
 5888              	.L295:
   2:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5889              		.loc 35 2 1 view .LVU1425
 5890 0194 1948     		ldr	r0, .L339+16
 5891 0196 FFF7FEFF 		bl	HUE_BREATHING
 5892              	.LVL435:
   2:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5893              		.loc 35 2 1 view .LVU1426
 5894 019a 8CE7     		b	.L291
 5895              	.LVL436:
 5896              	.L294:
   2:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5897              		.loc 15 2 1 view .LVU1427
 5898 019c 1748     		ldr	r0, .L339+16
 5899 019e FFF7FEFF 		bl	HUE_PENDULUM
 5900              	.LVL437:
   2:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5901              		.loc 15 2 1 view .LVU1428
 5902 01a2 88E7     		b	.L291
 5903              	.LVL438:
 5904              	.L292:
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5905              		.loc 16 2 1 view .LVU1429
 5906 01a4 1548     		ldr	r0, .L339+16
 5907 01a6 FFF7FEFF 		bl	HUE_WAVE
 5908              	.LVL439:
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5909              		.loc 16 2 1 view .LVU1430
 5910 01aa 84E7     		b	.L291
 5911              	.LVL440:
 5912              	.L321:
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5913              		.loc 16 2 1 is_stmt 0 view .LVU1431
 5914              	.LBE381:
 5915              	.LBE384:
 428:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 5916              		.loc 23 428 13 is_stmt 1 view .LVU1432
 428:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 5917              		.loc 23 428 16 is_stmt 0 view .LVU1433
 5918 01ac 002C     		cmp	r4, #0
 5919 01ae 3FF448AF 		beq	.L281
 5920 01b2 8CE7     		b	.L323
 5921              	.LVL441:
 5922              	.L286:
 434:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5923              		.loc 23 434 13 is_stmt 1 view .LVU1434
 5924              	.LBB385:
 5925              	.LBI385:
 397:quantum/rgb_matrix/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 5926              		.loc 23 397 13 view .LVU1435
 5927              	.LBB386:
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 5928              		.loc 23 399 5 view .LVU1436
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 5929              		.loc 23 399 21 is_stmt 0 view .LVU1437
 5930 01b4 134B     		ldr	r3, .L339+24
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 5931              		.loc 23 400 21 view .LVU1438
 5932 01b6 144A     		ldr	r2, .L339+28
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 5933              		.loc 23 399 21 view .LVU1439
 5934 01b8 1C70     		strb	r4, [r3]
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 5935              		.loc 23 400 5 is_stmt 1 view .LVU1440
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 5936              		.loc 23 400 40 is_stmt 0 view .LVU1441
 5937 01ba 0E4B     		ldr	r3, .L339+8
 5938 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5939 01be C3F30103 		ubfx	r3, r3, #0, #2
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 5940              		.loc 23 400 21 view .LVU1442
 5941 01c2 1370     		strb	r3, [r2]
 403:quantum/rgb_matrix/rgb_matrix.c **** 
 5942              		.loc 23 403 5 is_stmt 1 view .LVU1443
 5943 01c4 FFF7FEFF 		bl	rgb_matrix_update_pwm_buffers
 5944              	.LVL442:
 406:quantum/rgb_matrix/rgb_matrix.c **** }
 5945              		.loc 23 406 5 view .LVU1444
 5946              	.L322:
 406:quantum/rgb_matrix/rgb_matrix.c **** }
 5947              		.loc 23 406 5 is_stmt 0 view .LVU1445
 5948              	.LBE386:
 5949              	.LBE385:
 5950              	.LBB387:
 5951              	.LBB382:
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 5952              		.loc 23 392 13 is_stmt 1 view .LVU1446
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 5953              		.loc 23 392 28 is_stmt 0 view .LVU1447
 5954 01c8 0323     		movs	r3, #3
 5955 01ca 39E7     		b	.L338
 5956              	.LVL443:
 5957              	.L284:
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 5958              		.loc 23 392 28 view .LVU1448
 5959              	.LBE382:
 5960              	.LBE387:
 437:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5961              		.loc 23 437 13 is_stmt 1 view .LVU1449
 5962              	.LBB388:
 5963              	.LBI388:
 316:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 5964              		.loc 23 316 13 view .LVU1450
 5965              	.LBB389:
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 5966              		.loc 23 318 5 view .LVU1451
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 5967              		.loc 23 318 9 is_stmt 0 view .LVU1452
 5968 01cc 0F4D     		ldr	r5, .L339+32
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 5969              		.loc 23 318 8 view .LVU1453
 5970 01ce 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5971 01d0 0BB1     		cbz	r3, .L324
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 5972              		.loc 23 318 28 is_stmt 1 view .LVU1454
 5973 01d2 FFF7FEFF 		bl	eeconfig_update_rgb_matrix
 5974              	.LVL444:
 5975              	.L324:
 319:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 5976              		.loc 23 319 5 view .LVU1455
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 5977              		.loc 23 320 9 is_stmt 0 view .LVU1456
 5978 01d6 0A4B     		ldr	r3, .L339+20
 319:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 5979              		.loc 23 319 23 view .LVU1457
 5980 01d8 0024     		movs	r4, #0
 5981              	.LVL445:
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 5982              		.loc 23 320 9 view .LVU1458
 5983 01da 1868     		ldr	r0, [r3]
 319:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 5984              		.loc 23 319 23 view .LVU1459
 5985 01dc 2C70     		strb	r4, [r5]
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 5986              		.loc 23 320 5 is_stmt 1 view .LVU1460
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 5987              		.loc 23 320 9 is_stmt 0 view .LVU1461
 5988 01de FFF7FEFF 		bl	timer_elapsed32
 5989              	.LVL446:
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 5990              		.loc 23 320 8 view .LVU1462
 5991 01e2 0F28     		cmp	r0, #15
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 5992              		.loc 23 320 74 is_stmt 1 view .LVU1463
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 5993              		.loc 23 320 89 is_stmt 0 view .LVU1464
 5994 01e4 88BF     		it	hi
 5995 01e6 3470     		strbhi	r4, [r6]
 5996              	.LBE389:
 5997              	.LBE388:
 440:quantum/rgb_matrix/rgb_matrix.c **** 
 5998              		.loc 23 440 1 view .LVU1465
 5999 01e8 2BE7     		b	.L281
 6000              	.L340:
 6001 01ea 00BF     		.align	2
 6002              	.L339:
 6003 01ec 00000000 		.word	.LANCHOR2
 6004 01f0 00000000 		.word	.LANCHOR3
 6005 01f4 00000000 		.word	rgb_matrix_config
 6006 01f8 00000000 		.word	.LANCHOR4
 6007 01fc 00000000 		.word	.LANCHOR5
 6008 0200 00000000 		.word	g_rgb_timer
 6009 0204 00000000 		.word	.LANCHOR6
 6010 0208 00000000 		.word	.LANCHOR7
 6011 020c 00000000 		.word	.LANCHOR8
 6012              		.cfi_endproc
 6013              	.LFE433:
 6015              		.section	.text.rgb_matrix_init,"ax",%progbits
 6016              		.align	1
 6017              		.global	rgb_matrix_init
 6018              		.syntax unified
 6019              		.thumb
 6020              		.thumb_func
 6021              		.fpu fpv4-sp-d16
 6023              	rgb_matrix_init:
 6024              	.LFB440:
 470:quantum/rgb_matrix/rgb_matrix.c **** 
 471:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_advanced_user(uint8_t led_min, uint8_t led_max) {}
 472:quantum/rgb_matrix/rgb_matrix.c **** 
 473:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_init(void) {
 6025              		.loc 23 473 28 is_stmt 1 view -0
 6026              		.cfi_startproc
 6027              		@ args = 0, pretend = 0, frame = 0
 6028              		@ frame_needed = 0, uses_anonymous_args = 0
 474:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_driver.init();
 6029              		.loc 23 474 5 view .LVU1467
 473:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_driver.init();
 6030              		.loc 23 473 28 is_stmt 0 view .LVU1468
 6031 0000 08B5     		push	{r3, lr}
 6032              		.cfi_def_cfa_offset 8
 6033              		.cfi_offset 3, -8
 6034              		.cfi_offset 14, -4
 6035              		.loc 23 474 22 view .LVU1469
 6036 0002 0B4B     		ldr	r3, .L344
 6037              		.loc 23 474 5 view .LVU1470
 6038 0004 1B68     		ldr	r3, [r3]
 6039 0006 9847     		blx	r3
 6040              	.LVL447:
 475:quantum/rgb_matrix/rgb_matrix.c **** 
 476:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 477:quantum/rgb_matrix/rgb_matrix.c ****     g_last_hit_tracker.count = 0;
 478:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 479:quantum/rgb_matrix/rgb_matrix.c ****         g_last_hit_tracker.tick[i] = UINT16_MAX;
 480:quantum/rgb_matrix/rgb_matrix.c ****     }
 481:quantum/rgb_matrix/rgb_matrix.c **** 
 482:quantum/rgb_matrix/rgb_matrix.c ****     last_hit_buffer.count = 0;
 483:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 484:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.tick[i] = UINT16_MAX;
 485:quantum/rgb_matrix/rgb_matrix.c ****     }
 486:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 487:quantum/rgb_matrix/rgb_matrix.c **** 
 488:quantum/rgb_matrix/rgb_matrix.c ****     if (!eeconfig_is_enabled()) {
 6041              		.loc 23 488 5 is_stmt 1 view .LVU1471
 6042              		.loc 23 488 10 is_stmt 0 view .LVU1472
 6043 0008 FFF7FEFF 		bl	eeconfig_is_enabled
 6044              	.LVL448:
 6045              		.loc 23 488 8 view .LVU1473
 6046 000c 18B9     		cbnz	r0, .L342
 489:quantum/rgb_matrix/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers eeconfig is not enabled.\n");
 6047              		.loc 23 489 70 is_stmt 1 view .LVU1474
 490:quantum/rgb_matrix/rgb_matrix.c ****         eeconfig_init();
 6048              		.loc 23 490 9 view .LVU1475
 6049 000e FFF7FEFF 		bl	eeconfig_init
 6050              	.LVL449:
 491:quantum/rgb_matrix/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 6051              		.loc 23 491 9 view .LVU1476
 6052 0012 FFF7FEFF 		bl	eeconfig_update_rgb_matrix_default
 6053              	.LVL450:
 6054              	.L342:
 492:quantum/rgb_matrix/rgb_matrix.c ****     }
 493:quantum/rgb_matrix/rgb_matrix.c **** 
 494:quantum/rgb_matrix/rgb_matrix.c ****     eeconfig_read_rgb_matrix();
 6055              		.loc 23 494 5 view .LVU1477
 6056 0016 FFF7FEFF 		bl	eeconfig_read_rgb_matrix
 6057              	.LVL451:
 495:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.mode) {
 6058              		.loc 23 495 5 view .LVU1478
 6059              		.loc 23 495 9 is_stmt 0 view .LVU1479
 6060 001a 064B     		ldr	r3, .L344+4
 6061 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6062              		.loc 23 495 8 view .LVU1480
 6063 001e 13F0FC0F 		tst	r3, #252
 6064 0022 03D1     		bne	.L341
 496:quantum/rgb_matrix/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers rgb_matrix_config.mode = 0. Write default values to EEPROM
 6065              		.loc 23 496 105 is_stmt 1 view .LVU1481
 497:quantum/rgb_matrix/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 6066              		.loc 23 497 9 view .LVU1482
 498:quantum/rgb_matrix/rgb_matrix.c ****     }
 499:quantum/rgb_matrix/rgb_matrix.c ****     eeconfig_debug_rgb_matrix();  // display current eeprom values
 500:quantum/rgb_matrix/rgb_matrix.c **** }
 6067              		.loc 23 500 1 is_stmt 0 view .LVU1483
 6068 0024 BDE80840 		pop	{r3, lr}
 6069              		.cfi_remember_state
 6070              		.cfi_restore 14
 6071              		.cfi_restore 3
 6072              		.cfi_def_cfa_offset 0
 497:quantum/rgb_matrix/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 6073              		.loc 23 497 9 view .LVU1484
 6074 0028 FFF7FEBF 		b	eeconfig_update_rgb_matrix_default
 6075              	.LVL452:
 6076              	.L341:
 6077              		.cfi_restore_state
 6078              		.loc 23 500 1 view .LVU1485
 6079 002c 08BD     		pop	{r3, pc}
 6080              	.L345:
 6081 002e 00BF     		.align	2
 6082              	.L344:
 6083 0030 00000000 		.word	rgb_matrix_driver
 6084 0034 00000000 		.word	rgb_matrix_config
 6085              		.cfi_endproc
 6086              	.LFE440:
 6088              		.section	.text.rgb_matrix_set_suspend_state,"ax",%progbits
 6089              		.align	1
 6090              		.global	rgb_matrix_set_suspend_state
 6091              		.syntax unified
 6092              		.thumb
 6093              		.thumb_func
 6094              		.fpu fpv4-sp-d16
 6096              	rgb_matrix_set_suspend_state:
 6097              	.LVL453:
 6098              	.LFB441:
 501:quantum/rgb_matrix/rgb_matrix.c **** 
 502:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_suspend_state(bool state) {
 6099              		.loc 23 502 47 is_stmt 1 view -0
 6100              		.cfi_startproc
 6101              		@ args = 0, pretend = 0, frame = 0
 6102              		@ frame_needed = 0, uses_anonymous_args = 0
 503:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_DISABLE_WHEN_USB_SUSPENDED
 504:quantum/rgb_matrix/rgb_matrix.c ****     if (state) {
 6103              		.loc 23 504 5 view .LVU1487
 502:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_DISABLE_WHEN_USB_SUSPENDED
 6104              		.loc 23 502 47 is_stmt 0 view .LVU1488
 6105 0000 10B5     		push	{r4, lr}
 6106              		.cfi_def_cfa_offset 8
 6107              		.cfi_offset 4, -8
 6108              		.cfi_offset 14, -4
 6109              		.loc 23 504 8 view .LVU1489
 6110 0002 0446     		mov	r4, r0
 6111 0004 20B1     		cbz	r0, .L347
 505:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);  // turn off all LEDs when suspending
 6112              		.loc 23 505 9 is_stmt 1 view .LVU1490
 6113 0006 0022     		movs	r2, #0
 6114 0008 1146     		mov	r1, r2
 6115 000a 1046     		mov	r0, r2
 6116              	.LVL454:
 6117              		.loc 23 505 9 is_stmt 0 view .LVU1491
 6118 000c FFF7FEFF 		bl	rgb_matrix_set_color_all
 6119              	.LVL455:
 6120              	.L347:
 506:quantum/rgb_matrix/rgb_matrix.c ****     }
 507:quantum/rgb_matrix/rgb_matrix.c ****     suspend_state = state;
 6121              		.loc 23 507 5 is_stmt 1 view .LVU1492
 6122              		.loc 23 507 19 is_stmt 0 view .LVU1493
 6123 0010 014B     		ldr	r3, .L351
 6124 0012 1C70     		strb	r4, [r3]
 508:quantum/rgb_matrix/rgb_matrix.c **** #endif
 509:quantum/rgb_matrix/rgb_matrix.c **** }
 6125              		.loc 23 509 1 view .LVU1494
 6126 0014 10BD     		pop	{r4, pc}
 6127              	.L352:
 6128 0016 00BF     		.align	2
 6129              	.L351:
 6130 0018 00000000 		.word	.LANCHOR3
 6131              		.cfi_endproc
 6132              	.LFE441:
 6134              		.section	.text.rgb_matrix_get_suspend_state,"ax",%progbits
 6135              		.align	1
 6136              		.global	rgb_matrix_get_suspend_state
 6137              		.syntax unified
 6138              		.thumb
 6139              		.thumb_func
 6140              		.fpu fpv4-sp-d16
 6142              	rgb_matrix_get_suspend_state:
 6143              	.LFB442:
 510:quantum/rgb_matrix/rgb_matrix.c **** 
 511:quantum/rgb_matrix/rgb_matrix.c **** bool rgb_matrix_get_suspend_state(void) { return suspend_state; }
 6144              		.loc 23 511 41 is_stmt 1 view -0
 6145              		.cfi_startproc
 6146              		@ args = 0, pretend = 0, frame = 0
 6147              		@ frame_needed = 0, uses_anonymous_args = 0
 6148              		@ link register save eliminated.
 6149              		.loc 23 511 43 view .LVU1496
 6150              		.loc 23 511 65 is_stmt 0 view .LVU1497
 6151 0000 014B     		ldr	r3, .L354
 6152 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6153 0004 7047     		bx	lr
 6154              	.L355:
 6155 0006 00BF     		.align	2
 6156              	.L354:
 6157 0008 00000000 		.word	.LANCHOR3
 6158              		.cfi_endproc
 6159              	.LFE442:
 6161              		.section	.text.rgb_matrix_toggle_eeprom_helper,"ax",%progbits
 6162              		.align	1
 6163              		.global	rgb_matrix_toggle_eeprom_helper
 6164              		.syntax unified
 6165              		.thumb
 6166              		.thumb_func
 6167              		.fpu fpv4-sp-d16
 6169              	rgb_matrix_toggle_eeprom_helper:
 6170              	.LVL456:
 6171              	.LFB443:
 512:quantum/rgb_matrix/rgb_matrix.c **** 
 513:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_toggle_eeprom_helper(bool write_to_eeprom) {
 6172              		.loc 23 513 60 is_stmt 1 view -0
 6173              		.cfi_startproc
 6174              		@ args = 0, pretend = 0, frame = 0
 6175              		@ frame_needed = 0, uses_anonymous_args = 0
 6176              		@ link register save eliminated.
 514:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable ^= 1;
 6177              		.loc 23 514 5 view .LVU1499
 6178              		.loc 23 514 30 is_stmt 0 view .LVU1500
 6179 0000 064A     		ldr	r2, .L357
 6180 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6181 0004 83F00103 		eor	r3, r3, #1
 6182 0008 1370     		strb	r3, [r2]
 515:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = STARTING;
 6183              		.loc 23 515 5 is_stmt 1 view .LVU1501
 6184              		.loc 23 515 20 is_stmt 0 view .LVU1502
 6185 000a 054B     		ldr	r3, .L357+4
 6186 000c 0022     		movs	r2, #0
 6187 000e 1A70     		strb	r2, [r3]
 516:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 6188              		.loc 23 516 5 is_stmt 1 view .LVU1503
 6189 0010 044B     		ldr	r3, .L357+8
 6190 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6191 0014 1043     		orrs	r0, r0, r2
 6192              	.LVL457:
 6193              		.loc 23 516 5 is_stmt 0 view .LVU1504
 6194 0016 1870     		strb	r0, [r3]
 517:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix toggle [%s]: rgb_matrix_config.enable = %u\n", (write_to_eeprom) ? "EEPROM"
 6195              		.loc 23 517 140 is_stmt 1 view .LVU1505
 518:quantum/rgb_matrix/rgb_matrix.c **** }
 6196              		.loc 23 518 1 is_stmt 0 view .LVU1506
 6197 0018 7047     		bx	lr
 6198              	.L358:
 6199 001a 00BF     		.align	2
 6200              	.L357:
 6201 001c 00000000 		.word	rgb_matrix_config
 6202 0020 00000000 		.word	.LANCHOR4
 6203 0024 00000000 		.word	.LANCHOR8
 6204              		.cfi_endproc
 6205              	.LFE443:
 6207              		.section	.text.rgb_matrix_toggle_noeeprom,"ax",%progbits
 6208              		.align	1
 6209              		.global	rgb_matrix_toggle_noeeprom
 6210              		.syntax unified
 6211              		.thumb
 6212              		.thumb_func
 6213              		.fpu fpv4-sp-d16
 6215              	rgb_matrix_toggle_noeeprom:
 6216              	.LFB444:
 519:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_toggle_noeeprom(void) { rgb_matrix_toggle_eeprom_helper(false); }
 6217              		.loc 23 519 39 is_stmt 1 view -0
 6218              		.cfi_startproc
 6219              		@ args = 0, pretend = 0, frame = 0
 6220              		@ frame_needed = 0, uses_anonymous_args = 0
 6221              		@ link register save eliminated.
 6222              		.loc 23 519 41 view .LVU1508
 6223 0000 0020     		movs	r0, #0
 6224 0002 FFF7FEBF 		b	rgb_matrix_toggle_eeprom_helper
 6225              	.LVL458:
 6226              		.cfi_endproc
 6227              	.LFE444:
 6229              		.section	.text.rgb_matrix_toggle,"ax",%progbits
 6230              		.align	1
 6231              		.global	rgb_matrix_toggle
 6232              		.syntax unified
 6233              		.thumb
 6234              		.thumb_func
 6235              		.fpu fpv4-sp-d16
 6237              	rgb_matrix_toggle:
 6238              	.LFB445:
 520:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_toggle(void) { rgb_matrix_toggle_eeprom_helper(true); }
 6239              		.loc 23 520 30 view -0
 6240              		.cfi_startproc
 6241              		@ args = 0, pretend = 0, frame = 0
 6242              		@ frame_needed = 0, uses_anonymous_args = 0
 6243              		@ link register save eliminated.
 6244              		.loc 23 520 32 view .LVU1510
 6245 0000 0120     		movs	r0, #1
 6246 0002 FFF7FEBF 		b	rgb_matrix_toggle_eeprom_helper
 6247              	.LVL459:
 6248              		.cfi_endproc
 6249              	.LFE445:
 6251              		.section	.text.rgb_matrix_enable_noeeprom,"ax",%progbits
 6252              		.align	1
 6253              		.global	rgb_matrix_enable_noeeprom
 6254              		.syntax unified
 6255              		.thumb
 6256              		.thumb_func
 6257              		.fpu fpv4-sp-d16
 6259              	rgb_matrix_enable_noeeprom:
 6260              	.LFB447:
 521:quantum/rgb_matrix/rgb_matrix.c **** 
 522:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_enable(void) {
 523:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 524:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 525:quantum/rgb_matrix/rgb_matrix.c **** }
 526:quantum/rgb_matrix/rgb_matrix.c **** 
 527:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_enable_noeeprom(void) {
 6261              		.loc 23 527 39 view -0
 6262              		.cfi_startproc
 6263              		@ args = 0, pretend = 0, frame = 0
 6264              		@ frame_needed = 0, uses_anonymous_args = 0
 6265              		@ link register save eliminated.
 528:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) rgb_task_state = STARTING;
 6266              		.loc 23 528 5 view .LVU1512
 6267              		.loc 23 528 9 is_stmt 0 view .LVU1513
 6268 0000 064A     		ldr	r2, .L363
 6269 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6270              		.loc 23 528 8 view .LVU1514
 6271 0004 13F00303 		ands	r3, r3, #3
 6272              		.loc 23 528 36 is_stmt 1 view .LVU1515
 6273              		.loc 23 528 51 is_stmt 0 view .LVU1516
 6274 0008 04BF     		itt	eq
 6275 000a 0549     		ldreq	r1, .L363+4
 6276 000c 0B70     		strbeq	r3, [r1]
 529:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 6277              		.loc 23 529 5 is_stmt 1 view .LVU1517
 6278              		.loc 23 529 30 is_stmt 0 view .LVU1518
 6279 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6280 0010 0121     		movs	r1, #1
 6281 0012 61F30103 		bfi	r3, r1, #0, #2
 6282 0016 1370     		strb	r3, [r2]
 530:quantum/rgb_matrix/rgb_matrix.c **** }
 6283              		.loc 23 530 1 view .LVU1519
 6284 0018 7047     		bx	lr
 6285              	.L364:
 6286 001a 00BF     		.align	2
 6287              	.L363:
 6288 001c 00000000 		.word	rgb_matrix_config
 6289 0020 00000000 		.word	.LANCHOR4
 6290              		.cfi_endproc
 6291              	.LFE447:
 6293              		.section	.text.rgb_matrix_enable,"ax",%progbits
 6294              		.align	1
 6295              		.global	rgb_matrix_enable
 6296              		.syntax unified
 6297              		.thumb
 6298              		.thumb_func
 6299              		.fpu fpv4-sp-d16
 6301              	rgb_matrix_enable:
 6302              	.LFB446:
 522:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 6303              		.loc 23 522 30 is_stmt 1 view -0
 6304              		.cfi_startproc
 6305              		@ args = 0, pretend = 0, frame = 0
 6306              		@ frame_needed = 0, uses_anonymous_args = 0
 523:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6307              		.loc 23 523 5 view .LVU1521
 522:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 6308              		.loc 23 522 30 is_stmt 0 view .LVU1522
 6309 0000 08B5     		push	{r3, lr}
 6310              		.cfi_def_cfa_offset 8
 6311              		.cfi_offset 3, -8
 6312              		.cfi_offset 14, -4
 523:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6313              		.loc 23 523 5 view .LVU1523
 6314 0002 FFF7FEFF 		bl	rgb_matrix_enable_noeeprom
 6315              	.LVL460:
 524:quantum/rgb_matrix/rgb_matrix.c **** }
 6316              		.loc 23 524 5 is_stmt 1 view .LVU1524
 6317 0006 024B     		ldr	r3, .L366
 6318 0008 0122     		movs	r2, #1
 6319 000a 1A70     		strb	r2, [r3]
 525:quantum/rgb_matrix/rgb_matrix.c **** 
 6320              		.loc 23 525 1 is_stmt 0 view .LVU1525
 6321 000c 08BD     		pop	{r3, pc}
 6322              	.L367:
 6323 000e 00BF     		.align	2
 6324              	.L366:
 6325 0010 00000000 		.word	.LANCHOR8
 6326              		.cfi_endproc
 6327              	.LFE446:
 6329              		.section	.text.rgb_matrix_disable_noeeprom,"ax",%progbits
 6330              		.align	1
 6331              		.global	rgb_matrix_disable_noeeprom
 6332              		.syntax unified
 6333              		.thumb
 6334              		.thumb_func
 6335              		.fpu fpv4-sp-d16
 6337              	rgb_matrix_disable_noeeprom:
 6338              	.LFB449:
 531:quantum/rgb_matrix/rgb_matrix.c **** 
 532:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_disable(void) {
 533:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 534:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 535:quantum/rgb_matrix/rgb_matrix.c **** }
 536:quantum/rgb_matrix/rgb_matrix.c **** 
 537:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_disable_noeeprom(void) {
 6339              		.loc 23 537 40 is_stmt 1 view -0
 6340              		.cfi_startproc
 6341              		@ args = 0, pretend = 0, frame = 0
 6342              		@ frame_needed = 0, uses_anonymous_args = 0
 6343              		@ link register save eliminated.
 538:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_matrix_config.enable) rgb_task_state = STARTING;
 6344              		.loc 23 538 5 view .LVU1527
 6345              		.loc 23 538 9 is_stmt 0 view .LVU1528
 6346 0000 054B     		ldr	r3, .L373
 6347 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6348              		.loc 23 538 8 view .LVU1529
 6349 0004 9207     		lsls	r2, r2, #30
 6350              		.loc 23 538 35 is_stmt 1 view .LVU1530
 6351              		.loc 23 538 50 is_stmt 0 view .LVU1531
 6352 0006 1EBF     		ittt	ne
 6353 0008 044A     		ldrne	r2, .L373+4
 6354 000a 0021     		movne	r1, #0
 6355 000c 1170     		strbne	r1, [r2]
 539:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 0;
 6356              		.loc 23 539 5 is_stmt 1 view .LVU1532
 6357              		.loc 23 539 30 is_stmt 0 view .LVU1533
 6358 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6359 0010 6FF30102 		bfc	r2, #0, #2
 6360 0014 1A70     		strb	r2, [r3]
 540:quantum/rgb_matrix/rgb_matrix.c **** }
 6361              		.loc 23 540 1 view .LVU1534
 6362 0016 7047     		bx	lr
 6363              	.L374:
 6364              		.align	2
 6365              	.L373:
 6366 0018 00000000 		.word	rgb_matrix_config
 6367 001c 00000000 		.word	.LANCHOR4
 6368              		.cfi_endproc
 6369              	.LFE449:
 6371              		.section	.text.rgb_matrix_disable,"ax",%progbits
 6372              		.align	1
 6373              		.global	rgb_matrix_disable
 6374              		.syntax unified
 6375              		.thumb
 6376              		.thumb_func
 6377              		.fpu fpv4-sp-d16
 6379              	rgb_matrix_disable:
 6380              	.LFB448:
 532:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 6381              		.loc 23 532 31 is_stmt 1 view -0
 6382              		.cfi_startproc
 6383              		@ args = 0, pretend = 0, frame = 0
 6384              		@ frame_needed = 0, uses_anonymous_args = 0
 533:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6385              		.loc 23 533 5 view .LVU1536
 532:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 6386              		.loc 23 532 31 is_stmt 0 view .LVU1537
 6387 0000 08B5     		push	{r3, lr}
 6388              		.cfi_def_cfa_offset 8
 6389              		.cfi_offset 3, -8
 6390              		.cfi_offset 14, -4
 533:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6391              		.loc 23 533 5 view .LVU1538
 6392 0002 FFF7FEFF 		bl	rgb_matrix_disable_noeeprom
 6393              	.LVL461:
 534:quantum/rgb_matrix/rgb_matrix.c **** }
 6394              		.loc 23 534 5 is_stmt 1 view .LVU1539
 6395 0006 024B     		ldr	r3, .L376
 6396 0008 0122     		movs	r2, #1
 6397 000a 1A70     		strb	r2, [r3]
 535:quantum/rgb_matrix/rgb_matrix.c **** 
 6398              		.loc 23 535 1 is_stmt 0 view .LVU1540
 6399 000c 08BD     		pop	{r3, pc}
 6400              	.L377:
 6401 000e 00BF     		.align	2
 6402              	.L376:
 6403 0010 00000000 		.word	.LANCHOR8
 6404              		.cfi_endproc
 6405              	.LFE448:
 6407              		.section	.text.rgb_matrix_is_enabled,"ax",%progbits
 6408              		.align	1
 6409              		.global	rgb_matrix_is_enabled
 6410              		.syntax unified
 6411              		.thumb
 6412              		.thumb_func
 6413              		.fpu fpv4-sp-d16
 6415              	rgb_matrix_is_enabled:
 6416              	.LFB450:
 541:quantum/rgb_matrix/rgb_matrix.c **** 
 542:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_is_enabled(void) { return rgb_matrix_config.enable; }
 6417              		.loc 23 542 37 is_stmt 1 view -0
 6418              		.cfi_startproc
 6419              		@ args = 0, pretend = 0, frame = 0
 6420              		@ frame_needed = 0, uses_anonymous_args = 0
 6421              		@ link register save eliminated.
 6422              		.loc 23 542 39 view .LVU1542
 6423              		.loc 23 542 63 is_stmt 0 view .LVU1543
 6424 0000 024B     		ldr	r3, .L379
 6425 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6426              		.loc 23 542 72 view .LVU1544
 6427 0004 00F00300 		and	r0, r0, #3
 6428 0008 7047     		bx	lr
 6429              	.L380:
 6430 000a 00BF     		.align	2
 6431              	.L379:
 6432 000c 00000000 		.word	rgb_matrix_config
 6433              		.cfi_endproc
 6434              	.LFE450:
 6436              		.section	.text.rgb_matrix_mode_eeprom_helper,"ax",%progbits
 6437              		.align	1
 6438              		.global	rgb_matrix_mode_eeprom_helper
 6439              		.syntax unified
 6440              		.thumb
 6441              		.thumb_func
 6442              		.fpu fpv4-sp-d16
 6444              	rgb_matrix_mode_eeprom_helper:
 6445              	.LVL462:
 6446              	.LFB451:
 543:quantum/rgb_matrix/rgb_matrix.c **** 
 544:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 6447              		.loc 23 544 72 is_stmt 1 view -0
 6448              		.cfi_startproc
 6449              		@ args = 0, pretend = 0, frame = 0
 6450              		@ frame_needed = 0, uses_anonymous_args = 0
 6451              		@ link register save eliminated.
 545:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 6452              		.loc 23 545 5 view .LVU1546
 6453              		.loc 23 545 9 is_stmt 0 view .LVU1547
 6454 0000 0A4A     		ldr	r2, .L389
 6455 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6456              		.loc 23 545 8 view .LVU1548
 6457 0004 13F0030F 		tst	r3, #3
 6458 0008 0BD0     		beq	.L381
 6459              	.LVL463:
 6460              	.LBB392:
 6461              	.LBI392:
 544:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 6462              		.loc 23 544 6 is_stmt 1 view .LVU1549
 6463              	.LBB393:
 546:quantum/rgb_matrix/rgb_matrix.c ****         return;
 547:quantum/rgb_matrix/rgb_matrix.c ****     }
 548:quantum/rgb_matrix/rgb_matrix.c ****     if (mode < 1) {
 6464              		.loc 23 548 5 view .LVU1550
 6465              		.loc 23 548 8 is_stmt 0 view .LVU1551
 6466 000a 58B9     		cbnz	r0, .L383
 549:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = 1;
 6467              		.loc 23 549 9 is_stmt 1 view .LVU1552
 6468              		.loc 23 549 32 is_stmt 0 view .LVU1553
 6469 000c 0120     		movs	r0, #1
 6470              	.LVL464:
 6471              	.L385:
 550:quantum/rgb_matrix/rgb_matrix.c ****     } else if (mode >= RGB_MATRIX_EFFECT_MAX) {
 551:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 552:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 553:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = mode;
 6472              		.loc 23 553 9 is_stmt 1 view .LVU1554
 6473              		.loc 23 553 32 is_stmt 0 view .LVU1555
 6474 000e 60F38703 		bfi	r3, r0, #2, #6
 6475 0012 1370     		strb	r3, [r2]
 554:quantum/rgb_matrix/rgb_matrix.c ****     }
 555:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = STARTING;
 6476              		.loc 23 555 5 is_stmt 1 view .LVU1556
 6477              		.loc 23 555 20 is_stmt 0 view .LVU1557
 6478 0014 064B     		ldr	r3, .L389+4
 6479 0016 0022     		movs	r2, #0
 6480 0018 1A70     		strb	r2, [r3]
 556:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 6481              		.loc 23 556 5 is_stmt 1 view .LVU1558
 6482 001a 064B     		ldr	r3, .L389+8
 6483 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6484 001e 1143     		orrs	r1, r1, r2
 6485              	.LVL465:
 6486              		.loc 23 556 5 is_stmt 0 view .LVU1559
 6487 0020 1970     		strb	r1, [r3]
 557:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix mode [%s]: %u\n", (write_to_eeprom) ? "EEPROM" : "NOEEPROM", rgb_matrix_con
 6488              		.loc 23 557 109 is_stmt 1 view .LVU1560
 6489              	.LVL466:
 6490              		.loc 23 557 109 is_stmt 0 view .LVU1561
 6491              	.LBE393:
 6492              	.LBE392:
 6493              		.loc 23 557 109 is_stmt 1 view .LVU1562
 6494              	.L381:
 558:quantum/rgb_matrix/rgb_matrix.c **** }
 6495              		.loc 23 558 1 is_stmt 0 view .LVU1563
 6496 0022 7047     		bx	lr
 6497              	.LVL467:
 6498              	.L383:
 6499              	.LBB395:
 6500              	.LBB394:
 550:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 6501              		.loc 23 550 12 is_stmt 1 view .LVU1564
 550:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 6502              		.loc 23 550 15 is_stmt 0 view .LVU1565
 6503 0024 1B28     		cmp	r0, #27
 551:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 6504              		.loc 23 551 9 is_stmt 1 view .LVU1566
 551:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 6505              		.loc 23 551 32 is_stmt 0 view .LVU1567
 6506 0026 88BF     		it	hi
 6507 0028 1B20     		movhi	r0, #27
 6508              	.LVL468:
 551:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 6509              		.loc 23 551 32 view .LVU1568
 6510 002a F0E7     		b	.L385
 6511              	.L390:
 6512              		.align	2
 6513              	.L389:
 6514 002c 00000000 		.word	rgb_matrix_config
 6515 0030 00000000 		.word	.LANCHOR4
 6516 0034 00000000 		.word	.LANCHOR8
 6517              	.LBE394:
 6518              	.LBE395:
 6519              		.cfi_endproc
 6520              	.LFE451:
 6522              		.section	.text.rgb_matrix_mode_noeeprom,"ax",%progbits
 6523              		.align	1
 6524              		.global	rgb_matrix_mode_noeeprom
 6525              		.syntax unified
 6526              		.thumb
 6527              		.thumb_func
 6528              		.fpu fpv4-sp-d16
 6530              	rgb_matrix_mode_noeeprom:
 6531              	.LVL469:
 6532              	.LFB452:
 559:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_mode_noeeprom(uint8_t mode) { rgb_matrix_mode_eeprom_helper(mode, false); }
 6533              		.loc 23 559 45 is_stmt 1 view -0
 6534              		.cfi_startproc
 6535              		@ args = 0, pretend = 0, frame = 0
 6536              		@ frame_needed = 0, uses_anonymous_args = 0
 6537              		@ link register save eliminated.
 6538              		.loc 23 559 47 view .LVU1570
 6539 0000 0021     		movs	r1, #0
 6540 0002 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6541              	.LVL470:
 6542              		.loc 23 559 47 is_stmt 0 view .LVU1571
 6543              		.cfi_endproc
 6544              	.LFE452:
 6546              		.section	.text.rgb_matrix_mode,"ax",%progbits
 6547              		.align	1
 6548              		.global	rgb_matrix_mode
 6549              		.syntax unified
 6550              		.thumb
 6551              		.thumb_func
 6552              		.fpu fpv4-sp-d16
 6554              	rgb_matrix_mode:
 6555              	.LVL471:
 6556              	.LFB453:
 560:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_mode(uint8_t mode) { rgb_matrix_mode_eeprom_helper(mode, true); }
 6557              		.loc 23 560 36 is_stmt 1 view -0
 6558              		.cfi_startproc
 6559              		@ args = 0, pretend = 0, frame = 0
 6560              		@ frame_needed = 0, uses_anonymous_args = 0
 6561              		@ link register save eliminated.
 6562              		.loc 23 560 38 view .LVU1573
 6563 0000 0121     		movs	r1, #1
 6564 0002 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6565              	.LVL472:
 6566              		.loc 23 560 38 is_stmt 0 view .LVU1574
 6567              		.cfi_endproc
 6568              	.LFE453:
 6570              		.section	.text.rgb_matrix_get_mode,"ax",%progbits
 6571              		.align	1
 6572              		.global	rgb_matrix_get_mode
 6573              		.syntax unified
 6574              		.thumb
 6575              		.thumb_func
 6576              		.fpu fpv4-sp-d16
 6578              	rgb_matrix_get_mode:
 6579              	.LFB454:
 561:quantum/rgb_matrix/rgb_matrix.c **** 
 562:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_mode(void) { return rgb_matrix_config.mode; }
 6580              		.loc 23 562 35 is_stmt 1 view -0
 6581              		.cfi_startproc
 6582              		@ args = 0, pretend = 0, frame = 0
 6583              		@ frame_needed = 0, uses_anonymous_args = 0
 6584              		@ link register save eliminated.
 6585              		.loc 23 562 37 view .LVU1576
 6586              		.loc 23 562 61 is_stmt 0 view .LVU1577
 6587 0000 014B     		ldr	r3, .L394
 6588 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6589              		.loc 23 562 68 view .LVU1578
 6590 0004 8008     		lsrs	r0, r0, #2
 6591 0006 7047     		bx	lr
 6592              	.L395:
 6593              		.align	2
 6594              	.L394:
 6595 0008 00000000 		.word	rgb_matrix_config
 6596              		.cfi_endproc
 6597              	.LFE454:
 6599              		.section	.text.rgb_matrix_step_helper,"ax",%progbits
 6600              		.align	1
 6601              		.global	rgb_matrix_step_helper
 6602              		.syntax unified
 6603              		.thumb
 6604              		.thumb_func
 6605              		.fpu fpv4-sp-d16
 6607              	rgb_matrix_step_helper:
 6608              	.LVL473:
 6609              	.LFB455:
 563:quantum/rgb_matrix/rgb_matrix.c **** 
 564:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_helper(bool write_to_eeprom) {
 6610              		.loc 23 564 51 is_stmt 1 view -0
 6611              		.cfi_startproc
 6612              		@ args = 0, pretend = 0, frame = 0
 6613              		@ frame_needed = 0, uses_anonymous_args = 0
 6614              		@ link register save eliminated.
 565:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode + 1;
 6615              		.loc 23 565 5 view .LVU1580
 6616              		.loc 23 565 37 is_stmt 0 view .LVU1581
 6617 0000 054B     		ldr	r3, .L399
 6618 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6619              		.loc 23 565 13 view .LVU1582
 6620 0004 9B08     		lsrs	r3, r3, #2
 6621 0006 0133     		adds	r3, r3, #1
 6622              	.LVL474:
 566:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_mode_eeprom_helper((mode < RGB_MATRIX_EFFECT_MAX) ? mode : 1, write_to_eeprom);
 6623              		.loc 23 566 5 is_stmt 1 view .LVU1583
 6624 0008 1C2B     		cmp	r3, #28
 564:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode + 1;
 6625              		.loc 23 564 51 is_stmt 0 view .LVU1584
 6626 000a 0146     		mov	r1, r0
 6627              		.loc 23 566 5 view .LVU1585
 6628 000c 34BF     		ite	cc
 6629 000e 1846     		movcc	r0, r3
 6630              	.LVL475:
 6631              		.loc 23 566 5 view .LVU1586
 6632 0010 0120     		movcs	r0, #1
 6633 0012 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6634              	.LVL476:
 6635              	.L400:
 6636              		.loc 23 566 5 view .LVU1587
 6637 0016 00BF     		.align	2
 6638              	.L399:
 6639 0018 00000000 		.word	rgb_matrix_config
 6640              		.cfi_endproc
 6641              	.LFE455:
 6643              		.section	.text.rgb_matrix_step_noeeprom,"ax",%progbits
 6644              		.align	1
 6645              		.global	rgb_matrix_step_noeeprom
 6646              		.syntax unified
 6647              		.thumb
 6648              		.thumb_func
 6649              		.fpu fpv4-sp-d16
 6651              	rgb_matrix_step_noeeprom:
 6652              	.LFB456:
 567:quantum/rgb_matrix/rgb_matrix.c **** }
 568:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_noeeprom(void) { rgb_matrix_step_helper(false); }
 6653              		.loc 23 568 37 is_stmt 1 view -0
 6654              		.cfi_startproc
 6655              		@ args = 0, pretend = 0, frame = 0
 6656              		@ frame_needed = 0, uses_anonymous_args = 0
 6657              		@ link register save eliminated.
 6658              		.loc 23 568 39 view .LVU1589
 6659 0000 0020     		movs	r0, #0
 6660 0002 FFF7FEBF 		b	rgb_matrix_step_helper
 6661              	.LVL477:
 6662              		.cfi_endproc
 6663              	.LFE456:
 6665              		.section	.text.rgb_matrix_step,"ax",%progbits
 6666              		.align	1
 6667              		.global	rgb_matrix_step
 6668              		.syntax unified
 6669              		.thumb
 6670              		.thumb_func
 6671              		.fpu fpv4-sp-d16
 6673              	rgb_matrix_step:
 6674              	.LFB457:
 569:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step(void) { rgb_matrix_step_helper(true); }
 6675              		.loc 23 569 28 view -0
 6676              		.cfi_startproc
 6677              		@ args = 0, pretend = 0, frame = 0
 6678              		@ frame_needed = 0, uses_anonymous_args = 0
 6679              		@ link register save eliminated.
 6680              		.loc 23 569 30 view .LVU1591
 6681 0000 0120     		movs	r0, #1
 6682 0002 FFF7FEBF 		b	rgb_matrix_step_helper
 6683              	.LVL478:
 6684              		.cfi_endproc
 6685              	.LFE457:
 6687              		.section	.text.rgb_matrix_step_reverse_helper,"ax",%progbits
 6688              		.align	1
 6689              		.global	rgb_matrix_step_reverse_helper
 6690              		.syntax unified
 6691              		.thumb
 6692              		.thumb_func
 6693              		.fpu fpv4-sp-d16
 6695              	rgb_matrix_step_reverse_helper:
 6696              	.LVL479:
 6697              	.LFB458:
 570:quantum/rgb_matrix/rgb_matrix.c **** 
 571:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_reverse_helper(bool write_to_eeprom) {
 6698              		.loc 23 571 59 view -0
 6699              		.cfi_startproc
 6700              		@ args = 0, pretend = 0, frame = 0
 6701              		@ frame_needed = 0, uses_anonymous_args = 0
 6702              		@ link register save eliminated.
 572:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode - 1;
 6703              		.loc 23 572 5 view .LVU1593
 6704              		.loc 23 572 37 is_stmt 0 view .LVU1594
 6705 0000 064B     		ldr	r3, .L405
 6706 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6707 0004 C3F38503 		ubfx	r3, r3, #2, #6
 6708              		.loc 23 572 13 view .LVU1595
 6709 0008 013B     		subs	r3, r3, #1
 6710              	.LVL480:
 573:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_mode_eeprom_helper((mode < 1) ? RGB_MATRIX_EFFECT_MAX - 1 : mode, write_to_eeprom);
 6711              		.loc 23 573 5 is_stmt 1 view .LVU1596
 6712 000a 13F0FF03 		ands	r3, r3, #255
 6713              	.LVL481:
 571:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode - 1;
 6714              		.loc 23 571 59 is_stmt 0 view .LVU1597
 6715 000e 0146     		mov	r1, r0
 6716              		.loc 23 573 5 view .LVU1598
 6717 0010 14BF     		ite	ne
 6718 0012 1846     		movne	r0, r3
 6719              	.LVL482:
 6720              		.loc 23 573 5 view .LVU1599
 6721 0014 1B20     		moveq	r0, #27
 6722 0016 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6723              	.LVL483:
 6724              	.L406:
 6725              		.loc 23 573 5 view .LVU1600
 6726 001a 00BF     		.align	2
 6727              	.L405:
 6728 001c 00000000 		.word	rgb_matrix_config
 6729              		.cfi_endproc
 6730              	.LFE458:
 6732              		.section	.text.rgb_matrix_step_reverse_noeeprom,"ax",%progbits
 6733              		.align	1
 6734              		.global	rgb_matrix_step_reverse_noeeprom
 6735              		.syntax unified
 6736              		.thumb
 6737              		.thumb_func
 6738              		.fpu fpv4-sp-d16
 6740              	rgb_matrix_step_reverse_noeeprom:
 6741              	.LFB459:
 574:quantum/rgb_matrix/rgb_matrix.c **** }
 575:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_reverse_noeeprom(void) { rgb_matrix_step_reverse_helper(false); }
 6742              		.loc 23 575 45 is_stmt 1 view -0
 6743              		.cfi_startproc
 6744              		@ args = 0, pretend = 0, frame = 0
 6745              		@ frame_needed = 0, uses_anonymous_args = 0
 6746              		@ link register save eliminated.
 6747              		.loc 23 575 47 view .LVU1602
 6748 0000 0020     		movs	r0, #0
 6749 0002 FFF7FEBF 		b	rgb_matrix_step_reverse_helper
 6750              	.LVL484:
 6751              		.cfi_endproc
 6752              	.LFE459:
 6754              		.section	.text.rgb_matrix_step_reverse,"ax",%progbits
 6755              		.align	1
 6756              		.global	rgb_matrix_step_reverse
 6757              		.syntax unified
 6758              		.thumb
 6759              		.thumb_func
 6760              		.fpu fpv4-sp-d16
 6762              	rgb_matrix_step_reverse:
 6763              	.LFB460:
 576:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_reverse(void) { rgb_matrix_step_reverse_helper(true); }
 6764              		.loc 23 576 36 view -0
 6765              		.cfi_startproc
 6766              		@ args = 0, pretend = 0, frame = 0
 6767              		@ frame_needed = 0, uses_anonymous_args = 0
 6768              		@ link register save eliminated.
 6769              		.loc 23 576 38 view .LVU1604
 6770 0000 0120     		movs	r0, #1
 6771 0002 FFF7FEBF 		b	rgb_matrix_step_reverse_helper
 6772              	.LVL485:
 6773              		.cfi_endproc
 6774              	.LFE460:
 6776              		.section	.text.rgb_matrix_sethsv_eeprom_helper,"ax",%progbits
 6777              		.align	1
 6778              		.global	rgb_matrix_sethsv_eeprom_helper
 6779              		.syntax unified
 6780              		.thumb
 6781              		.thumb_func
 6782              		.fpu fpv4-sp-d16
 6784              	rgb_matrix_sethsv_eeprom_helper:
 6785              	.LVL486:
 6786              	.LFB461:
 577:quantum/rgb_matrix/rgb_matrix.c **** 
 578:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_sethsv_eeprom_helper(uint16_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) 
 6787              		.loc 23 578 100 view -0
 6788              		.cfi_startproc
 6789              		@ args = 0, pretend = 0, frame = 0
 6790              		@ frame_needed = 0, uses_anonymous_args = 0
 579:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 6791              		.loc 23 579 5 view .LVU1606
 578:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 6792              		.loc 23 578 100 is_stmt 0 view .LVU1607
 6793 0000 30B5     		push	{r4, r5, lr}
 6794              		.cfi_def_cfa_offset 12
 6795              		.cfi_offset 4, -12
 6796              		.cfi_offset 5, -8
 6797              		.cfi_offset 14, -4
 6798              		.loc 23 579 9 view .LVU1608
 6799 0002 064C     		ldr	r4, .L414
 6800 0004 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 6801              		.loc 23 579 8 view .LVU1609
 6802 0006 AD07     		lsls	r5, r5, #30
 6803 0008 06D0     		beq	.L409
 580:quantum/rgb_matrix/rgb_matrix.c ****         return;
 581:quantum/rgb_matrix/rgb_matrix.c ****     }
 582:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.h = hue;
 6804              		.loc 23 582 5 is_stmt 1 view .LVU1610
 583:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 584:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.v = (val > RGB_MATRIX_MAXIMUM_BRIGHTNESS) ? RGB_MATRIX_MAXIMUM_BRIGHTNESS
 6805              		.loc 23 584 29 is_stmt 0 view .LVU1611
 6806 000a E270     		strb	r2, [r4, #3]
 585:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 6807              		.loc 23 585 5 view .LVU1612
 6808 000c 044A     		ldr	r2, .L414+4
 6809              	.LVL487:
 583:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 6810              		.loc 23 583 29 view .LVU1613
 6811 000e A170     		strb	r1, [r4, #2]
 6812              		.loc 23 585 5 view .LVU1614
 6813 0010 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6814              	.LVL488:
 582:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 6815              		.loc 23 582 29 view .LVU1615
 6816 0012 6070     		strb	r0, [r4, #1]
 583:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 6817              		.loc 23 583 5 is_stmt 1 view .LVU1616
 584:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 6818              		.loc 23 584 5 view .LVU1617
 6819              		.loc 23 585 5 view .LVU1618
 6820 0014 0B43     		orrs	r3, r3, r1
 6821              	.LVL489:
 6822              		.loc 23 585 5 is_stmt 0 view .LVU1619
 6823 0016 1370     		strb	r3, [r2]
 586:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix set hsv [%s]: %u,%u,%u\n", (write_to_eeprom) ? "EEPROM" : "NOEEPROM", rgb_m
 6824              		.loc 23 586 169 is_stmt 1 view .LVU1620
 6825              	.LVL490:
 6826              	.L409:
 587:quantum/rgb_matrix/rgb_matrix.c **** }
 6827              		.loc 23 587 1 is_stmt 0 view .LVU1621
 6828 0018 30BD     		pop	{r4, r5, pc}
 6829              	.L415:
 6830 001a 00BF     		.align	2
 6831              	.L414:
 6832 001c 00000000 		.word	rgb_matrix_config
 6833 0020 00000000 		.word	.LANCHOR8
 6834              		.cfi_endproc
 6835              	.LFE461:
 6837              		.section	.text.rgb_matrix_sethsv_noeeprom,"ax",%progbits
 6838              		.align	1
 6839              		.global	rgb_matrix_sethsv_noeeprom
 6840              		.syntax unified
 6841              		.thumb
 6842              		.thumb_func
 6843              		.fpu fpv4-sp-d16
 6845              	rgb_matrix_sethsv_noeeprom:
 6846              	.LVL491:
 6847              	.LFB462:
 588:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_sethsv_noeeprom(uint16_t hue, uint8_t sat, uint8_t val) { rgb_matrix_sethsv_eeprom_
 6848              		.loc 23 588 73 is_stmt 1 view -0
 6849              		.cfi_startproc
 6850              		@ args = 0, pretend = 0, frame = 0
 6851              		@ frame_needed = 0, uses_anonymous_args = 0
 6852              		@ link register save eliminated.
 6853              		.loc 23 588 75 view .LVU1623
 6854 0000 0023     		movs	r3, #0
 6855 0002 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 6856              	.LVL492:
 6857              		.loc 23 588 75 is_stmt 0 view .LVU1624
 6858              		.cfi_endproc
 6859              	.LFE462:
 6861              		.section	.text.rgb_matrix_sethsv,"ax",%progbits
 6862              		.align	1
 6863              		.global	rgb_matrix_sethsv
 6864              		.syntax unified
 6865              		.thumb
 6866              		.thumb_func
 6867              		.fpu fpv4-sp-d16
 6869              	rgb_matrix_sethsv:
 6870              	.LVL493:
 6871              	.LFB463:
 589:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_sethsv(uint16_t hue, uint8_t sat, uint8_t val) { rgb_matrix_sethsv_eeprom_helper(hu
 6872              		.loc 23 589 64 is_stmt 1 view -0
 6873              		.cfi_startproc
 6874              		@ args = 0, pretend = 0, frame = 0
 6875              		@ frame_needed = 0, uses_anonymous_args = 0
 6876              		@ link register save eliminated.
 6877              		.loc 23 589 66 view .LVU1626
 6878 0000 0123     		movs	r3, #1
 6879 0002 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 6880              	.LVL494:
 6881              		.loc 23 589 66 is_stmt 0 view .LVU1627
 6882              		.cfi_endproc
 6883              	.LFE463:
 6885              		.section	.text.rgb_matrix_get_hsv,"ax",%progbits
 6886              		.align	1
 6887              		.global	rgb_matrix_get_hsv
 6888              		.syntax unified
 6889              		.thumb
 6890              		.thumb_func
 6891              		.fpu fpv4-sp-d16
 6893              	rgb_matrix_get_hsv:
 6894              	.LFB464:
 590:quantum/rgb_matrix/rgb_matrix.c **** 
 591:quantum/rgb_matrix/rgb_matrix.c **** HSV     rgb_matrix_get_hsv(void) { return rgb_matrix_config.hsv; }
 6895              		.loc 23 591 34 is_stmt 1 view -0
 6896              		.cfi_startproc
 6897              		@ args = 0, pretend = 0, frame = 8
 6898              		@ frame_needed = 0, uses_anonymous_args = 0
 6899              		@ link register save eliminated.
 6900              		.loc 23 591 36 view .LVU1629
 6901              		.loc 23 591 60 is_stmt 0 view .LVU1630
 6902 0000 094B     		ldr	r3, .L419
 6903              		.loc 23 591 34 view .LVU1631
 6904 0002 82B0     		sub	sp, sp, #8
 6905              		.cfi_def_cfa_offset 8
 6906              		.loc 23 591 60 view .LVU1632
 6907 0004 B3F80120 		ldrh	r2, [r3, #1]	@ unaligned
 6908 0008 ADF80420 		strh	r2, [sp, #4]	@ unaligned
 6909 000c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 6910 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 6911 0012 0020     		movs	r0, #0
 6912 0014 62F30700 		bfi	r0, r2, #0, #8
 6913 0018 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 6914 001c 62F30F20 		bfi	r0, r2, #8, #8
 6915 0020 63F31740 		bfi	r0, r3, #16, #8
 6916              		.loc 23 591 66 view .LVU1633
 6917 0024 02B0     		add	sp, sp, #8
 6918              		.cfi_def_cfa_offset 0
 6919              		@ sp needed
 6920 0026 7047     		bx	lr
 6921              	.L420:
 6922              		.align	2
 6923              	.L419:
 6924 0028 00000000 		.word	rgb_matrix_config
 6925              		.cfi_endproc
 6926              	.LFE464:
 6928              		.section	.text.rgb_matrix_get_hue,"ax",%progbits
 6929              		.align	1
 6930              		.global	rgb_matrix_get_hue
 6931              		.syntax unified
 6932              		.thumb
 6933              		.thumb_func
 6934              		.fpu fpv4-sp-d16
 6936              	rgb_matrix_get_hue:
 6937              	.LFB465:
 592:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_hue(void) { return rgb_matrix_config.hsv.h; }
 6938              		.loc 23 592 34 is_stmt 1 view -0
 6939              		.cfi_startproc
 6940              		@ args = 0, pretend = 0, frame = 0
 6941              		@ frame_needed = 0, uses_anonymous_args = 0
 6942              		@ link register save eliminated.
 6943              		.loc 23 592 36 view .LVU1635
 6944              		.loc 23 592 68 is_stmt 0 view .LVU1636
 6945 0000 014B     		ldr	r3, .L422
 6946 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6947 0004 7047     		bx	lr
 6948              	.L423:
 6949 0006 00BF     		.align	2
 6950              	.L422:
 6951 0008 00000000 		.word	rgb_matrix_config
 6952              		.cfi_endproc
 6953              	.LFE465:
 6955              		.section	.text.rgb_matrix_get_sat,"ax",%progbits
 6956              		.align	1
 6957              		.global	rgb_matrix_get_sat
 6958              		.syntax unified
 6959              		.thumb
 6960              		.thumb_func
 6961              		.fpu fpv4-sp-d16
 6963              	rgb_matrix_get_sat:
 6964              	.LFB466:
 593:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_sat(void) { return rgb_matrix_config.hsv.s; }
 6965              		.loc 23 593 34 is_stmt 1 view -0
 6966              		.cfi_startproc
 6967              		@ args = 0, pretend = 0, frame = 0
 6968              		@ frame_needed = 0, uses_anonymous_args = 0
 6969              		@ link register save eliminated.
 6970              		.loc 23 593 36 view .LVU1638
 6971              		.loc 23 593 68 is_stmt 0 view .LVU1639
 6972 0000 014B     		ldr	r3, .L425
 6973 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 6974 0004 7047     		bx	lr
 6975              	.L426:
 6976 0006 00BF     		.align	2
 6977              	.L425:
 6978 0008 00000000 		.word	rgb_matrix_config
 6979              		.cfi_endproc
 6980              	.LFE466:
 6982              		.section	.text.rgb_matrix_get_val,"ax",%progbits
 6983              		.align	1
 6984              		.global	rgb_matrix_get_val
 6985              		.syntax unified
 6986              		.thumb
 6987              		.thumb_func
 6988              		.fpu fpv4-sp-d16
 6990              	rgb_matrix_get_val:
 6991              	.LFB467:
 594:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_val(void) { return rgb_matrix_config.hsv.v; }
 6992              		.loc 23 594 34 is_stmt 1 view -0
 6993              		.cfi_startproc
 6994              		@ args = 0, pretend = 0, frame = 0
 6995              		@ frame_needed = 0, uses_anonymous_args = 0
 6996              		@ link register save eliminated.
 6997              		.loc 23 594 36 view .LVU1641
 6998              		.loc 23 594 68 is_stmt 0 view .LVU1642
 6999 0000 014B     		ldr	r3, .L428
 7000 0002 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 7001 0004 7047     		bx	lr
 7002              	.L429:
 7003 0006 00BF     		.align	2
 7004              	.L428:
 7005 0008 00000000 		.word	rgb_matrix_config
 7006              		.cfi_endproc
 7007              	.LFE467:
 7009              		.section	.text.rgb_matrix_increase_hue_helper,"ax",%progbits
 7010              		.align	1
 7011              		.global	rgb_matrix_increase_hue_helper
 7012              		.syntax unified
 7013              		.thumb
 7014              		.thumb_func
 7015              		.fpu fpv4-sp-d16
 7017              	rgb_matrix_increase_hue_helper:
 7018              	.LVL495:
 7019              	.LFB468:
 595:quantum/rgb_matrix/rgb_matrix.c **** 
 596:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_hue_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7020              		.loc 23 596 59 is_stmt 1 view -0
 7021              		.cfi_startproc
 7022              		@ args = 0, pretend = 0, frame = 0
 7023              		@ frame_needed = 0, uses_anonymous_args = 0
 7024              		@ link register save eliminated.
 7025              		.loc 23 596 61 view .LVU1644
 7026 0000 0349     		ldr	r1, .L431
 7027              		.loc 23 596 59 is_stmt 0 view .LVU1645
 7028 0002 0346     		mov	r3, r0
 7029              		.loc 23 596 114 view .LVU1646
 7030 0004 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 7031              	.LVL496:
 7032              		.loc 23 596 61 view .LVU1647
 7033 0006 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 7034 0008 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 7035 000a 0830     		adds	r0, r0, #8
 7036 000c FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7037              	.LVL497:
 7038              	.L432:
 7039              		.align	2
 7040              	.L431:
 7041 0010 00000000 		.word	rgb_matrix_config
 7042              		.cfi_endproc
 7043              	.LFE468:
 7045              		.section	.text.rgb_matrix_increase_hue_noeeprom,"ax",%progbits
 7046              		.align	1
 7047              		.global	rgb_matrix_increase_hue_noeeprom
 7048              		.syntax unified
 7049              		.thumb
 7050              		.thumb_func
 7051              		.fpu fpv4-sp-d16
 7053              	rgb_matrix_increase_hue_noeeprom:
 7054              	.LFB469:
 597:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_hue_noeeprom(void) { rgb_matrix_increase_hue_helper(false); }
 7055              		.loc 23 597 45 is_stmt 1 view -0
 7056              		.cfi_startproc
 7057              		@ args = 0, pretend = 0, frame = 0
 7058              		@ frame_needed = 0, uses_anonymous_args = 0
 7059              		@ link register save eliminated.
 7060              		.loc 23 597 47 view .LVU1649
 7061 0000 0020     		movs	r0, #0
 7062 0002 FFF7FEBF 		b	rgb_matrix_increase_hue_helper
 7063              	.LVL498:
 7064              		.cfi_endproc
 7065              	.LFE469:
 7067              		.section	.text.rgb_matrix_increase_hue,"ax",%progbits
 7068              		.align	1
 7069              		.global	rgb_matrix_increase_hue
 7070              		.syntax unified
 7071              		.thumb
 7072              		.thumb_func
 7073              		.fpu fpv4-sp-d16
 7075              	rgb_matrix_increase_hue:
 7076              	.LFB470:
 598:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_hue(void) { rgb_matrix_increase_hue_helper(true); }
 7077              		.loc 23 598 36 view -0
 7078              		.cfi_startproc
 7079              		@ args = 0, pretend = 0, frame = 0
 7080              		@ frame_needed = 0, uses_anonymous_args = 0
 7081              		@ link register save eliminated.
 7082              		.loc 23 598 38 view .LVU1651
 7083 0000 0120     		movs	r0, #1
 7084 0002 FFF7FEBF 		b	rgb_matrix_increase_hue_helper
 7085              	.LVL499:
 7086              		.cfi_endproc
 7087              	.LFE470:
 7089              		.section	.text.rgb_matrix_decrease_hue_helper,"ax",%progbits
 7090              		.align	1
 7091              		.global	rgb_matrix_decrease_hue_helper
 7092              		.syntax unified
 7093              		.thumb
 7094              		.thumb_func
 7095              		.fpu fpv4-sp-d16
 7097              	rgb_matrix_decrease_hue_helper:
 7098              	.LVL500:
 7099              	.LFB471:
 599:quantum/rgb_matrix/rgb_matrix.c **** 
 600:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_hue_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7100              		.loc 23 600 59 view -0
 7101              		.cfi_startproc
 7102              		@ args = 0, pretend = 0, frame = 0
 7103              		@ frame_needed = 0, uses_anonymous_args = 0
 7104              		@ link register save eliminated.
 7105              		.loc 23 600 61 view .LVU1653
 7106 0000 0549     		ldr	r1, .L436
 7107              		.loc 23 600 59 is_stmt 0 view .LVU1654
 7108 0002 10B4     		push	{r4}
 7109              		.cfi_def_cfa_offset 4
 7110              		.cfi_offset 4, -4
 7111              		.loc 23 600 114 view .LVU1655
 7112 0004 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 7113              		.loc 23 600 61 view .LVU1656
 7114 0006 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 7115 0008 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 7116 000a 083C     		subs	r4, r4, #8
 7117              		.loc 23 600 59 view .LVU1657
 7118 000c 0346     		mov	r3, r0
 7119              		.loc 23 600 61 view .LVU1658
 7120 000e A0B2     		uxth	r0, r4
 7121              	.LVL501:
 7122              		.loc 23 600 208 view .LVU1659
 7123 0010 5DF8044B 		ldr	r4, [sp], #4
 7124              		.cfi_restore 4
 7125              		.cfi_def_cfa_offset 0
 7126              		.loc 23 600 61 view .LVU1660
 7127 0014 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7128              	.LVL502:
 7129              	.L437:
 7130              		.align	2
 7131              	.L436:
 7132 0018 00000000 		.word	rgb_matrix_config
 7133              		.cfi_endproc
 7134              	.LFE471:
 7136              		.section	.text.rgb_matrix_decrease_hue_noeeprom,"ax",%progbits
 7137              		.align	1
 7138              		.global	rgb_matrix_decrease_hue_noeeprom
 7139              		.syntax unified
 7140              		.thumb
 7141              		.thumb_func
 7142              		.fpu fpv4-sp-d16
 7144              	rgb_matrix_decrease_hue_noeeprom:
 7145              	.LFB472:
 601:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_hue_noeeprom(void) { rgb_matrix_decrease_hue_helper(false); }
 7146              		.loc 23 601 45 is_stmt 1 view -0
 7147              		.cfi_startproc
 7148              		@ args = 0, pretend = 0, frame = 0
 7149              		@ frame_needed = 0, uses_anonymous_args = 0
 7150              		@ link register save eliminated.
 7151              		.loc 23 601 47 view .LVU1662
 7152 0000 0020     		movs	r0, #0
 7153 0002 FFF7FEBF 		b	rgb_matrix_decrease_hue_helper
 7154              	.LVL503:
 7155              		.cfi_endproc
 7156              	.LFE472:
 7158              		.section	.text.rgb_matrix_decrease_hue,"ax",%progbits
 7159              		.align	1
 7160              		.global	rgb_matrix_decrease_hue
 7161              		.syntax unified
 7162              		.thumb
 7163              		.thumb_func
 7164              		.fpu fpv4-sp-d16
 7166              	rgb_matrix_decrease_hue:
 7167              	.LFB473:
 602:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_hue(void) { rgb_matrix_decrease_hue_helper(true); }
 7168              		.loc 23 602 36 view -0
 7169              		.cfi_startproc
 7170              		@ args = 0, pretend = 0, frame = 0
 7171              		@ frame_needed = 0, uses_anonymous_args = 0
 7172              		@ link register save eliminated.
 7173              		.loc 23 602 38 view .LVU1664
 7174 0000 0120     		movs	r0, #1
 7175 0002 FFF7FEBF 		b	rgb_matrix_decrease_hue_helper
 7176              	.LVL504:
 7177              		.cfi_endproc
 7178              	.LFE473:
 7180              		.section	.text.rgb_matrix_increase_sat_helper,"ax",%progbits
 7181              		.align	1
 7182              		.global	rgb_matrix_increase_sat_helper
 7183              		.syntax unified
 7184              		.thumb
 7185              		.thumb_func
 7186              		.fpu fpv4-sp-d16
 7188              	rgb_matrix_increase_sat_helper:
 7189              	.LVL505:
 7190              	.LFB474:
 603:quantum/rgb_matrix/rgb_matrix.c **** 
 604:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_sat_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7191              		.loc 23 604 59 view -0
 7192              		.cfi_startproc
 7193              		@ args = 0, pretend = 0, frame = 0
 7194              		@ frame_needed = 0, uses_anonymous_args = 0
 7195              		@ link register save eliminated.
 7196              		.loc 23 604 61 view .LVU1666
 7197              	.LBB396:
 7198              	.LBI396:
  23:./lib/lib8tion/math8.h **** {
 7199              		.loc 1 23 34 view .LVU1667
 7200              	.LBB397:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7201              		.loc 1 26 5 view .LVU1668
 7202              	.LBE397:
 7203              	.LBE396:
 7204              		.loc 23 604 59 is_stmt 0 view .LVU1669
 7205 0000 10B4     		push	{r4}
 7206              		.cfi_def_cfa_offset 4
 7207              		.cfi_offset 4, -4
 7208              		.loc 23 604 61 view .LVU1670
 7209 0002 074C     		ldr	r4, .L441
 7210              	.LBB400:
 7211              	.LBB398:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7212              		.loc 1 26 20 view .LVU1671
 7213 0004 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7214              	.LBE398:
 7215              	.LBE400:
 7216              		.loc 23 604 61 view .LVU1672
 7217 0006 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7218              	.LBB401:
 7219              	.LBB399:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7220              		.loc 1 26 14 view .LVU1673
 7221 0008 1031     		adds	r1, r1, #16
 7222              	.LVL506:
  27:./lib/lib8tion/math8.h ****     return t;
 7223              		.loc 1 27 5 is_stmt 1 view .LVU1674
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7224              		.loc 1 28 5 view .LVU1675
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7225              		.loc 1 28 12 is_stmt 0 view .LVU1676
 7226 000a FF29     		cmp	r1, #255
 7227 000c 28BF     		it	cs
 7228 000e FF21     		movcs	r1, #255
 7229              	.LBE399:
 7230              	.LBE401:
 7231              		.loc 23 604 59 view .LVU1677
 7232 0010 0346     		mov	r3, r0
 7233              		.loc 23 604 61 view .LVU1678
 7234 0012 C9B2     		uxtb	r1, r1
 7235 0014 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7236              	.LVL507:
 7237              		.loc 23 604 214 view .LVU1679
 7238 0016 5DF8044B 		ldr	r4, [sp], #4
 7239              		.cfi_restore 4
 7240              		.cfi_def_cfa_offset 0
 7241              		.loc 23 604 61 view .LVU1680
 7242 001a FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7243              	.LVL508:
 7244              	.L442:
 7245 001e 00BF     		.align	2
 7246              	.L441:
 7247 0020 00000000 		.word	rgb_matrix_config
 7248              		.cfi_endproc
 7249              	.LFE474:
 7251              		.section	.text.rgb_matrix_increase_sat_noeeprom,"ax",%progbits
 7252              		.align	1
 7253              		.global	rgb_matrix_increase_sat_noeeprom
 7254              		.syntax unified
 7255              		.thumb
 7256              		.thumb_func
 7257              		.fpu fpv4-sp-d16
 7259              	rgb_matrix_increase_sat_noeeprom:
 7260              	.LFB475:
 605:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_sat_noeeprom(void) { rgb_matrix_increase_sat_helper(false); }
 7261              		.loc 23 605 45 is_stmt 1 view -0
 7262              		.cfi_startproc
 7263              		@ args = 0, pretend = 0, frame = 0
 7264              		@ frame_needed = 0, uses_anonymous_args = 0
 7265              		@ link register save eliminated.
 7266              		.loc 23 605 47 view .LVU1682
 7267 0000 0020     		movs	r0, #0
 7268 0002 FFF7FEBF 		b	rgb_matrix_increase_sat_helper
 7269              	.LVL509:
 7270              		.cfi_endproc
 7271              	.LFE475:
 7273              		.section	.text.rgb_matrix_increase_sat,"ax",%progbits
 7274              		.align	1
 7275              		.global	rgb_matrix_increase_sat
 7276              		.syntax unified
 7277              		.thumb
 7278              		.thumb_func
 7279              		.fpu fpv4-sp-d16
 7281              	rgb_matrix_increase_sat:
 7282              	.LFB476:
 606:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_sat(void) { rgb_matrix_increase_sat_helper(true); }
 7283              		.loc 23 606 36 view -0
 7284              		.cfi_startproc
 7285              		@ args = 0, pretend = 0, frame = 0
 7286              		@ frame_needed = 0, uses_anonymous_args = 0
 7287              		@ link register save eliminated.
 7288              		.loc 23 606 38 view .LVU1684
 7289 0000 0120     		movs	r0, #1
 7290 0002 FFF7FEBF 		b	rgb_matrix_increase_sat_helper
 7291              	.LVL510:
 7292              		.cfi_endproc
 7293              	.LFE476:
 7295              		.section	.text.rgb_matrix_decrease_sat_helper,"ax",%progbits
 7296              		.align	1
 7297              		.global	rgb_matrix_decrease_sat_helper
 7298              		.syntax unified
 7299              		.thumb
 7300              		.thumb_func
 7301              		.fpu fpv4-sp-d16
 7303              	rgb_matrix_decrease_sat_helper:
 7304              	.LVL511:
 7305              	.LFB477:
 607:quantum/rgb_matrix/rgb_matrix.c **** 
 608:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_sat_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7306              		.loc 23 608 59 view -0
 7307              		.cfi_startproc
 7308              		@ args = 0, pretend = 0, frame = 0
 7309              		@ frame_needed = 0, uses_anonymous_args = 0
 7310              		@ link register save eliminated.
 7311              		.loc 23 608 61 view .LVU1686
 7312              	.LBB402:
 7313              	.LBI402:
  88:./lib/lib8tion/math8.h **** {
 7314              		.loc 1 88 34 view .LVU1687
 7315              	.LBB403:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7316              		.loc 1 91 5 view .LVU1688
 7317              	.LBE403:
 7318              	.LBE402:
 7319              		.loc 23 608 59 is_stmt 0 view .LVU1689
 7320 0000 10B4     		push	{r4}
 7321              		.cfi_def_cfa_offset 4
 7322              		.cfi_offset 4, -4
 7323              		.loc 23 608 61 view .LVU1690
 7324 0002 064C     		ldr	r4, .L446
 7325              	.LBB406:
 7326              	.LBB404:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7327              		.loc 1 91 19 view .LVU1691
 7328 0004 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7329              	.LBE404:
 7330              	.LBE406:
 7331              		.loc 23 608 61 view .LVU1692
 7332 0006 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7333              	.LBB407:
 7334              	.LBB405:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7335              		.loc 1 91 19 view .LVU1693
 7336 0008 1039     		subs	r1, r1, #16
 7337              	.LVL512:
  92:./lib/lib8tion/math8.h ****     return t;
 7338              		.loc 1 92 5 is_stmt 1 view .LVU1694
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7339              		.loc 1 93 5 view .LVU1695
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7340              		.loc 1 93 12 is_stmt 0 view .LVU1696
 7341 000a 21EAE171 		bic	r1, r1, r1, asr #31
 7342              	.LBE405:
 7343              	.LBE407:
 7344              		.loc 23 608 59 view .LVU1697
 7345 000e 0346     		mov	r3, r0
 7346              		.loc 23 608 61 view .LVU1698
 7347 0010 C9B2     		uxtb	r1, r1
 7348 0012 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7349              	.LVL513:
 7350              		.loc 23 608 214 view .LVU1699
 7351 0014 5DF8044B 		ldr	r4, [sp], #4
 7352              		.cfi_restore 4
 7353              		.cfi_def_cfa_offset 0
 7354              		.loc 23 608 61 view .LVU1700
 7355 0018 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7356              	.LVL514:
 7357              	.L447:
 7358              		.align	2
 7359              	.L446:
 7360 001c 00000000 		.word	rgb_matrix_config
 7361              		.cfi_endproc
 7362              	.LFE477:
 7364              		.section	.text.rgb_matrix_decrease_sat_noeeprom,"ax",%progbits
 7365              		.align	1
 7366              		.global	rgb_matrix_decrease_sat_noeeprom
 7367              		.syntax unified
 7368              		.thumb
 7369              		.thumb_func
 7370              		.fpu fpv4-sp-d16
 7372              	rgb_matrix_decrease_sat_noeeprom:
 7373              	.LFB478:
 609:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_sat_noeeprom(void) { rgb_matrix_decrease_sat_helper(false); }
 7374              		.loc 23 609 45 is_stmt 1 view -0
 7375              		.cfi_startproc
 7376              		@ args = 0, pretend = 0, frame = 0
 7377              		@ frame_needed = 0, uses_anonymous_args = 0
 7378              		@ link register save eliminated.
 7379              		.loc 23 609 47 view .LVU1702
 7380 0000 0020     		movs	r0, #0
 7381 0002 FFF7FEBF 		b	rgb_matrix_decrease_sat_helper
 7382              	.LVL515:
 7383              		.cfi_endproc
 7384              	.LFE478:
 7386              		.section	.text.rgb_matrix_decrease_sat,"ax",%progbits
 7387              		.align	1
 7388              		.global	rgb_matrix_decrease_sat
 7389              		.syntax unified
 7390              		.thumb
 7391              		.thumb_func
 7392              		.fpu fpv4-sp-d16
 7394              	rgb_matrix_decrease_sat:
 7395              	.LFB479:
 610:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_sat(void) { rgb_matrix_decrease_sat_helper(true); }
 7396              		.loc 23 610 36 view -0
 7397              		.cfi_startproc
 7398              		@ args = 0, pretend = 0, frame = 0
 7399              		@ frame_needed = 0, uses_anonymous_args = 0
 7400              		@ link register save eliminated.
 7401              		.loc 23 610 38 view .LVU1704
 7402 0000 0120     		movs	r0, #1
 7403 0002 FFF7FEBF 		b	rgb_matrix_decrease_sat_helper
 7404              	.LVL516:
 7405              		.cfi_endproc
 7406              	.LFE479:
 7408              		.section	.text.rgb_matrix_increase_val_helper,"ax",%progbits
 7409              		.align	1
 7410              		.global	rgb_matrix_increase_val_helper
 7411              		.syntax unified
 7412              		.thumb
 7413              		.thumb_func
 7414              		.fpu fpv4-sp-d16
 7416              	rgb_matrix_increase_val_helper:
 7417              	.LVL517:
 7418              	.LFB480:
 611:quantum/rgb_matrix/rgb_matrix.c **** 
 612:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_val_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7419              		.loc 23 612 59 view -0
 7420              		.cfi_startproc
 7421              		@ args = 0, pretend = 0, frame = 0
 7422              		@ frame_needed = 0, uses_anonymous_args = 0
 7423              		@ link register save eliminated.
 7424              		.loc 23 612 61 view .LVU1706
 7425              	.LBB408:
 7426              	.LBI408:
  23:./lib/lib8tion/math8.h **** {
 7427              		.loc 1 23 34 view .LVU1707
 7428              	.LBB409:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7429              		.loc 1 26 5 view .LVU1708
 7430              	.LBE409:
 7431              	.LBE408:
 7432              		.loc 23 612 59 is_stmt 0 view .LVU1709
 7433 0000 10B4     		push	{r4}
 7434              		.cfi_def_cfa_offset 4
 7435              		.cfi_offset 4, -4
 7436              		.loc 23 612 61 view .LVU1710
 7437 0002 074C     		ldr	r4, .L451
 7438              	.LBB412:
 7439              	.LBB410:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7440              		.loc 1 26 20 view .LVU1711
 7441 0004 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7442              	.LBE410:
 7443              	.LBE412:
 7444              		.loc 23 612 61 view .LVU1712
 7445 0006 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7446              	.LBB413:
 7447              	.LBB411:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7448              		.loc 1 26 14 view .LVU1713
 7449 0008 1032     		adds	r2, r2, #16
 7450              	.LVL518:
  27:./lib/lib8tion/math8.h ****     return t;
 7451              		.loc 1 27 5 is_stmt 1 view .LVU1714
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7452              		.loc 1 28 5 view .LVU1715
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7453              		.loc 1 28 12 is_stmt 0 view .LVU1716
 7454 000a FF2A     		cmp	r2, #255
 7455 000c 28BF     		it	cs
 7456 000e FF22     		movcs	r2, #255
 7457              	.LBE411:
 7458              	.LBE413:
 7459              		.loc 23 612 59 view .LVU1717
 7460 0010 0346     		mov	r3, r0
 7461              		.loc 23 612 61 view .LVU1718
 7462 0012 D2B2     		uxtb	r2, r2
 7463 0014 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7464              	.LVL519:
 7465              		.loc 23 612 214 view .LVU1719
 7466 0016 5DF8044B 		ldr	r4, [sp], #4
 7467              		.cfi_restore 4
 7468              		.cfi_def_cfa_offset 0
 7469              		.loc 23 612 61 view .LVU1720
 7470 001a FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7471              	.LVL520:
 7472              	.L452:
 7473 001e 00BF     		.align	2
 7474              	.L451:
 7475 0020 00000000 		.word	rgb_matrix_config
 7476              		.cfi_endproc
 7477              	.LFE480:
 7479              		.section	.text.rgb_matrix_increase_val_noeeprom,"ax",%progbits
 7480              		.align	1
 7481              		.global	rgb_matrix_increase_val_noeeprom
 7482              		.syntax unified
 7483              		.thumb
 7484              		.thumb_func
 7485              		.fpu fpv4-sp-d16
 7487              	rgb_matrix_increase_val_noeeprom:
 7488              	.LFB481:
 613:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_val_noeeprom(void) { rgb_matrix_increase_val_helper(false); }
 7489              		.loc 23 613 45 is_stmt 1 view -0
 7490              		.cfi_startproc
 7491              		@ args = 0, pretend = 0, frame = 0
 7492              		@ frame_needed = 0, uses_anonymous_args = 0
 7493              		@ link register save eliminated.
 7494              		.loc 23 613 47 view .LVU1722
 7495 0000 0020     		movs	r0, #0
 7496 0002 FFF7FEBF 		b	rgb_matrix_increase_val_helper
 7497              	.LVL521:
 7498              		.cfi_endproc
 7499              	.LFE481:
 7501              		.section	.text.rgb_matrix_increase_val,"ax",%progbits
 7502              		.align	1
 7503              		.global	rgb_matrix_increase_val
 7504              		.syntax unified
 7505              		.thumb
 7506              		.thumb_func
 7507              		.fpu fpv4-sp-d16
 7509              	rgb_matrix_increase_val:
 7510              	.LFB482:
 614:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_val(void) { rgb_matrix_increase_val_helper(true); }
 7511              		.loc 23 614 36 view -0
 7512              		.cfi_startproc
 7513              		@ args = 0, pretend = 0, frame = 0
 7514              		@ frame_needed = 0, uses_anonymous_args = 0
 7515              		@ link register save eliminated.
 7516              		.loc 23 614 38 view .LVU1724
 7517 0000 0120     		movs	r0, #1
 7518 0002 FFF7FEBF 		b	rgb_matrix_increase_val_helper
 7519              	.LVL522:
 7520              		.cfi_endproc
 7521              	.LFE482:
 7523              		.section	.text.rgb_matrix_decrease_val_helper,"ax",%progbits
 7524              		.align	1
 7525              		.global	rgb_matrix_decrease_val_helper
 7526              		.syntax unified
 7527              		.thumb
 7528              		.thumb_func
 7529              		.fpu fpv4-sp-d16
 7531              	rgb_matrix_decrease_val_helper:
 7532              	.LVL523:
 7533              	.LFB483:
 615:quantum/rgb_matrix/rgb_matrix.c **** 
 616:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_val_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7534              		.loc 23 616 59 view -0
 7535              		.cfi_startproc
 7536              		@ args = 0, pretend = 0, frame = 0
 7537              		@ frame_needed = 0, uses_anonymous_args = 0
 7538              		@ link register save eliminated.
 7539              		.loc 23 616 61 view .LVU1726
 7540              	.LBB414:
 7541              	.LBI414:
  88:./lib/lib8tion/math8.h **** {
 7542              		.loc 1 88 34 view .LVU1727
 7543              	.LBB415:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7544              		.loc 1 91 5 view .LVU1728
 7545              	.LBE415:
 7546              	.LBE414:
 7547              		.loc 23 616 59 is_stmt 0 view .LVU1729
 7548 0000 10B4     		push	{r4}
 7549              		.cfi_def_cfa_offset 4
 7550              		.cfi_offset 4, -4
 7551              		.loc 23 616 61 view .LVU1730
 7552 0002 064C     		ldr	r4, .L456
 7553              	.LBB418:
 7554              	.LBB416:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7555              		.loc 1 91 19 view .LVU1731
 7556 0004 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7557              	.LBE416:
 7558              	.LBE418:
 7559              		.loc 23 616 61 view .LVU1732
 7560 0006 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7561              	.LBB419:
 7562              	.LBB417:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7563              		.loc 1 91 19 view .LVU1733
 7564 0008 103A     		subs	r2, r2, #16
 7565              	.LVL524:
  92:./lib/lib8tion/math8.h ****     return t;
 7566              		.loc 1 92 5 is_stmt 1 view .LVU1734
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7567              		.loc 1 93 5 view .LVU1735
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7568              		.loc 1 93 12 is_stmt 0 view .LVU1736
 7569 000a 22EAE272 		bic	r2, r2, r2, asr #31
 7570              	.LBE417:
 7571              	.LBE419:
 7572              		.loc 23 616 59 view .LVU1737
 7573 000e 0346     		mov	r3, r0
 7574              		.loc 23 616 61 view .LVU1738
 7575 0010 D2B2     		uxtb	r2, r2
 7576 0012 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7577              	.LVL525:
 7578              		.loc 23 616 214 view .LVU1739
 7579 0014 5DF8044B 		ldr	r4, [sp], #4
 7580              		.cfi_restore 4
 7581              		.cfi_def_cfa_offset 0
 7582              		.loc 23 616 61 view .LVU1740
 7583 0018 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7584              	.LVL526:
 7585              	.L457:
 7586              		.align	2
 7587              	.L456:
 7588 001c 00000000 		.word	rgb_matrix_config
 7589              		.cfi_endproc
 7590              	.LFE483:
 7592              		.section	.text.rgb_matrix_decrease_val_noeeprom,"ax",%progbits
 7593              		.align	1
 7594              		.global	rgb_matrix_decrease_val_noeeprom
 7595              		.syntax unified
 7596              		.thumb
 7597              		.thumb_func
 7598              		.fpu fpv4-sp-d16
 7600              	rgb_matrix_decrease_val_noeeprom:
 7601              	.LFB484:
 617:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_val_noeeprom(void) { rgb_matrix_decrease_val_helper(false); }
 7602              		.loc 23 617 45 is_stmt 1 view -0
 7603              		.cfi_startproc
 7604              		@ args = 0, pretend = 0, frame = 0
 7605              		@ frame_needed = 0, uses_anonymous_args = 0
 7606              		@ link register save eliminated.
 7607              		.loc 23 617 47 view .LVU1742
 7608 0000 0020     		movs	r0, #0
 7609 0002 FFF7FEBF 		b	rgb_matrix_decrease_val_helper
 7610              	.LVL527:
 7611              		.cfi_endproc
 7612              	.LFE484:
 7614              		.section	.text.rgb_matrix_decrease_val,"ax",%progbits
 7615              		.align	1
 7616              		.global	rgb_matrix_decrease_val
 7617              		.syntax unified
 7618              		.thumb
 7619              		.thumb_func
 7620              		.fpu fpv4-sp-d16
 7622              	rgb_matrix_decrease_val:
 7623              	.LFB485:
 618:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_val(void) { rgb_matrix_decrease_val_helper(true); }
 7624              		.loc 23 618 36 view -0
 7625              		.cfi_startproc
 7626              		@ args = 0, pretend = 0, frame = 0
 7627              		@ frame_needed = 0, uses_anonymous_args = 0
 7628              		@ link register save eliminated.
 7629              		.loc 23 618 38 view .LVU1744
 7630 0000 0120     		movs	r0, #1
 7631 0002 FFF7FEBF 		b	rgb_matrix_decrease_val_helper
 7632              	.LVL528:
 7633              		.cfi_endproc
 7634              	.LFE485:
 7636              		.section	.text.rgb_matrix_set_speed_eeprom_helper,"ax",%progbits
 7637              		.align	1
 7638              		.global	rgb_matrix_set_speed_eeprom_helper
 7639              		.syntax unified
 7640              		.thumb
 7641              		.thumb_func
 7642              		.fpu fpv4-sp-d16
 7644              	rgb_matrix_set_speed_eeprom_helper:
 7645              	.LVL529:
 7646              	.LFB486:
 619:quantum/rgb_matrix/rgb_matrix.c **** 
 620:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 7647              		.loc 23 620 78 view -0
 7648              		.cfi_startproc
 7649              		@ args = 0, pretend = 0, frame = 0
 7650              		@ frame_needed = 0, uses_anonymous_args = 0
 7651              		@ link register save eliminated.
 621:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed = speed;
 7652              		.loc 23 621 5 view .LVU1746
 7653              		.loc 23 621 29 is_stmt 0 view .LVU1747
 7654 0000 034B     		ldr	r3, .L461
 7655 0002 1871     		strb	r0, [r3, #4]
 622:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 7656              		.loc 23 622 5 is_stmt 1 view .LVU1748
 7657 0004 034B     		ldr	r3, .L461+4
 7658 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7659 0008 1143     		orrs	r1, r1, r2
 7660              	.LVL530:
 7661              		.loc 23 622 5 is_stmt 0 view .LVU1749
 7662 000a 1970     		strb	r1, [r3]
 623:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix set speed [%s]: %u\n", (write_to_eeprom) ? "EEPROM" : "NOEEPROM", rgb_matri
 7663              		.loc 23 623 115 is_stmt 1 view .LVU1750
 624:quantum/rgb_matrix/rgb_matrix.c **** }
 7664              		.loc 23 624 1 is_stmt 0 view .LVU1751
 7665 000c 7047     		bx	lr
 7666              	.L462:
 7667 000e 00BF     		.align	2
 7668              	.L461:
 7669 0010 00000000 		.word	rgb_matrix_config
 7670 0014 00000000 		.word	.LANCHOR8
 7671              		.cfi_endproc
 7672              	.LFE486:
 7674              		.section	.text.rgb_matrix_set_speed_noeeprom,"ax",%progbits
 7675              		.align	1
 7676              		.global	rgb_matrix_set_speed_noeeprom
 7677              		.syntax unified
 7678              		.thumb
 7679              		.thumb_func
 7680              		.fpu fpv4-sp-d16
 7682              	rgb_matrix_set_speed_noeeprom:
 7683              	.LVL531:
 7684              	.LFB487:
 625:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_speed_noeeprom(uint8_t speed) { rgb_matrix_set_speed_eeprom_helper(speed, false
 7685              		.loc 23 625 51 is_stmt 1 view -0
 7686              		.cfi_startproc
 7687              		@ args = 0, pretend = 0, frame = 0
 7688              		@ frame_needed = 0, uses_anonymous_args = 0
 7689              		@ link register save eliminated.
 7690              		.loc 23 625 53 view .LVU1753
 7691 0000 0021     		movs	r1, #0
 7692 0002 FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 7693              	.LVL532:
 7694              		.cfi_endproc
 7695              	.LFE487:
 7697              		.section	.text.rgb_matrix_set_speed,"ax",%progbits
 7698              		.align	1
 7699              		.global	rgb_matrix_set_speed
 7700              		.syntax unified
 7701              		.thumb
 7702              		.thumb_func
 7703              		.fpu fpv4-sp-d16
 7705              	rgb_matrix_set_speed:
 7706              	.LVL533:
 7707              	.LFB488:
 626:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_speed(uint8_t speed) { rgb_matrix_set_speed_eeprom_helper(speed, true); }
 7708              		.loc 23 626 42 view -0
 7709              		.cfi_startproc
 7710              		@ args = 0, pretend = 0, frame = 0
 7711              		@ frame_needed = 0, uses_anonymous_args = 0
 7712              		@ link register save eliminated.
 7713              		.loc 23 626 44 view .LVU1755
 7714 0000 0121     		movs	r1, #1
 7715 0002 FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 7716              	.LVL534:
 7717              		.cfi_endproc
 7718              	.LFE488:
 7720              		.section	.text.rgb_matrix_get_speed,"ax",%progbits
 7721              		.align	1
 7722              		.global	rgb_matrix_get_speed
 7723              		.syntax unified
 7724              		.thumb
 7725              		.thumb_func
 7726              		.fpu fpv4-sp-d16
 7728              	rgb_matrix_get_speed:
 7729              	.LFB489:
 627:quantum/rgb_matrix/rgb_matrix.c **** 
 628:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_speed(void) { return rgb_matrix_config.speed; }
 7730              		.loc 23 628 36 view -0
 7731              		.cfi_startproc
 7732              		@ args = 0, pretend = 0, frame = 0
 7733              		@ frame_needed = 0, uses_anonymous_args = 0
 7734              		@ link register save eliminated.
 7735              		.loc 23 628 38 view .LVU1757
 7736              		.loc 23 628 70 is_stmt 0 view .LVU1758
 7737 0000 014B     		ldr	r3, .L466
 7738 0002 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 7739 0004 7047     		bx	lr
 7740              	.L467:
 7741 0006 00BF     		.align	2
 7742              	.L466:
 7743 0008 00000000 		.word	rgb_matrix_config
 7744              		.cfi_endproc
 7745              	.LFE489:
 7747              		.section	.text.rgb_matrix_increase_speed_helper,"ax",%progbits
 7748              		.align	1
 7749              		.global	rgb_matrix_increase_speed_helper
 7750              		.syntax unified
 7751              		.thumb
 7752              		.thumb_func
 7753              		.fpu fpv4-sp-d16
 7755              	rgb_matrix_increase_speed_helper:
 7756              	.LVL535:
 7757              	.LFB490:
 629:quantum/rgb_matrix/rgb_matrix.c **** 
 630:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_speed_helper(bool write_to_eeprom) { rgb_matrix_set_speed_eeprom_helper(qa
 7758              		.loc 23 630 61 is_stmt 1 view -0
 7759              		.cfi_startproc
 7760              		@ args = 0, pretend = 0, frame = 0
 7761              		@ frame_needed = 0, uses_anonymous_args = 0
 7762              		@ link register save eliminated.
 7763              		.loc 23 630 63 view .LVU1760
 7764              	.LBB420:
 7765              	.LBI420:
  23:./lib/lib8tion/math8.h **** {
 7766              		.loc 1 23 34 view .LVU1761
 7767              	.LBB421:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7768              		.loc 1 26 5 view .LVU1762
 7769              	.LBE421:
 7770              	.LBE420:
 7771              		.loc 23 630 63 is_stmt 0 view .LVU1763
 7772 0000 044B     		ldr	r3, .L469
 7773              	.LBB423:
 7774              	.LBB422:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7775              		.loc 1 26 20 view .LVU1764
 7776 0002 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7777              		.loc 1 26 14 view .LVU1765
 7778 0004 1033     		adds	r3, r3, #16
 7779              	.LVL536:
  27:./lib/lib8tion/math8.h ****     return t;
 7780              		.loc 1 27 5 is_stmt 1 view .LVU1766
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7781              		.loc 1 28 5 view .LVU1767
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7782              		.loc 1 28 12 is_stmt 0 view .LVU1768
 7783 0006 FF2B     		cmp	r3, #255
 7784 0008 28BF     		it	cs
 7785 000a FF23     		movcs	r3, #255
 7786              	.LBE422:
 7787              	.LBE423:
 7788              		.loc 23 630 61 view .LVU1769
 7789 000c 0146     		mov	r1, r0
 7790              		.loc 23 630 63 view .LVU1770
 7791 000e D8B2     		uxtb	r0, r3
 7792              	.LVL537:
 7793              		.loc 23 630 63 view .LVU1771
 7794 0010 FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 7795              	.LVL538:
 7796              	.L470:
 7797              		.align	2
 7798              	.L469:
 7799 0014 00000000 		.word	rgb_matrix_config
 7800              		.cfi_endproc
 7801              	.LFE490:
 7803              		.section	.text.rgb_matrix_increase_speed_noeeprom,"ax",%progbits
 7804              		.align	1
 7805              		.global	rgb_matrix_increase_speed_noeeprom
 7806              		.syntax unified
 7807              		.thumb
 7808              		.thumb_func
 7809              		.fpu fpv4-sp-d16
 7811              	rgb_matrix_increase_speed_noeeprom:
 7812              	.LFB491:
 631:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_speed_noeeprom(void) { rgb_matrix_increase_speed_helper(false); }
 7813              		.loc 23 631 47 is_stmt 1 view -0
 7814              		.cfi_startproc
 7815              		@ args = 0, pretend = 0, frame = 0
 7816              		@ frame_needed = 0, uses_anonymous_args = 0
 7817              		@ link register save eliminated.
 7818              		.loc 23 631 49 view .LVU1773
 7819 0000 0020     		movs	r0, #0
 7820 0002 FFF7FEBF 		b	rgb_matrix_increase_speed_helper
 7821              	.LVL539:
 7822              		.cfi_endproc
 7823              	.LFE491:
 7825              		.section	.text.rgb_matrix_increase_speed,"ax",%progbits
 7826              		.align	1
 7827              		.global	rgb_matrix_increase_speed
 7828              		.syntax unified
 7829              		.thumb
 7830              		.thumb_func
 7831              		.fpu fpv4-sp-d16
 7833              	rgb_matrix_increase_speed:
 7834              	.LFB492:
 632:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_speed(void) { rgb_matrix_increase_speed_helper(true); }
 7835              		.loc 23 632 38 view -0
 7836              		.cfi_startproc
 7837              		@ args = 0, pretend = 0, frame = 0
 7838              		@ frame_needed = 0, uses_anonymous_args = 0
 7839              		@ link register save eliminated.
 7840              		.loc 23 632 40 view .LVU1775
 7841 0000 0120     		movs	r0, #1
 7842 0002 FFF7FEBF 		b	rgb_matrix_increase_speed_helper
 7843              	.LVL540:
 7844              		.cfi_endproc
 7845              	.LFE492:
 7847              		.section	.text.rgb_matrix_decrease_speed_helper,"ax",%progbits
 7848              		.align	1
 7849              		.global	rgb_matrix_decrease_speed_helper
 7850              		.syntax unified
 7851              		.thumb
 7852              		.thumb_func
 7853              		.fpu fpv4-sp-d16
 7855              	rgb_matrix_decrease_speed_helper:
 7856              	.LVL541:
 7857              	.LFB493:
 633:quantum/rgb_matrix/rgb_matrix.c **** 
 634:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_speed_helper(bool write_to_eeprom) { rgb_matrix_set_speed_eeprom_helper(qs
 7858              		.loc 23 634 61 view -0
 7859              		.cfi_startproc
 7860              		@ args = 0, pretend = 0, frame = 0
 7861              		@ frame_needed = 0, uses_anonymous_args = 0
 7862              		@ link register save eliminated.
 7863              		.loc 23 634 63 view .LVU1777
 7864              	.LBB424:
 7865              	.LBI424:
  88:./lib/lib8tion/math8.h **** {
 7866              		.loc 1 88 34 view .LVU1778
 7867              	.LBB425:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7868              		.loc 1 91 5 view .LVU1779
 7869              	.LBE425:
 7870              	.LBE424:
 7871              		.loc 23 634 63 is_stmt 0 view .LVU1780
 7872 0000 044B     		ldr	r3, .L474
 7873              	.LBB427:
 7874              	.LBB426:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7875              		.loc 1 91 19 view .LVU1781
 7876 0002 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7877 0004 103B     		subs	r3, r3, #16
 7878              	.LVL542:
  92:./lib/lib8tion/math8.h ****     return t;
 7879              		.loc 1 92 5 is_stmt 1 view .LVU1782
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7880              		.loc 1 93 5 view .LVU1783
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7881              		.loc 1 93 12 is_stmt 0 view .LVU1784
 7882 0006 23EAE373 		bic	r3, r3, r3, asr #31
 7883              	.LBE426:
 7884              	.LBE427:
 7885              		.loc 23 634 61 view .LVU1785
 7886 000a 0146     		mov	r1, r0
 7887              		.loc 23 634 63 view .LVU1786
 7888 000c D8B2     		uxtb	r0, r3
 7889              	.LVL543:
 7890              		.loc 23 634 63 view .LVU1787
 7891 000e FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 7892              	.LVL544:
 7893              	.L475:
 7894 0012 00BF     		.align	2
 7895              	.L474:
 7896 0014 00000000 		.word	rgb_matrix_config
 7897              		.cfi_endproc
 7898              	.LFE493:
 7900              		.section	.text.rgb_matrix_decrease_speed_noeeprom,"ax",%progbits
 7901              		.align	1
 7902              		.global	rgb_matrix_decrease_speed_noeeprom
 7903              		.syntax unified
 7904              		.thumb
 7905              		.thumb_func
 7906              		.fpu fpv4-sp-d16
 7908              	rgb_matrix_decrease_speed_noeeprom:
 7909              	.LFB494:
 635:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_speed_noeeprom(void) { rgb_matrix_decrease_speed_helper(false); }
 7910              		.loc 23 635 47 is_stmt 1 view -0
 7911              		.cfi_startproc
 7912              		@ args = 0, pretend = 0, frame = 0
 7913              		@ frame_needed = 0, uses_anonymous_args = 0
 7914              		@ link register save eliminated.
 7915              		.loc 23 635 49 view .LVU1789
 7916 0000 0020     		movs	r0, #0
 7917 0002 FFF7FEBF 		b	rgb_matrix_decrease_speed_helper
 7918              	.LVL545:
 7919              		.cfi_endproc
 7920              	.LFE494:
 7922              		.section	.text.rgb_matrix_decrease_speed,"ax",%progbits
 7923              		.align	1
 7924              		.global	rgb_matrix_decrease_speed
 7925              		.syntax unified
 7926              		.thumb
 7927              		.thumb_func
 7928              		.fpu fpv4-sp-d16
 7930              	rgb_matrix_decrease_speed:
 7931              	.LFB495:
 636:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_speed(void) { rgb_matrix_decrease_speed_helper(true); }
 7932              		.loc 23 636 38 view -0
 7933              		.cfi_startproc
 7934              		@ args = 0, pretend = 0, frame = 0
 7935              		@ frame_needed = 0, uses_anonymous_args = 0
 7936              		@ link register save eliminated.
 7937              		.loc 23 636 40 view .LVU1791
 7938 0000 0120     		movs	r0, #1
 7939 0002 FFF7FEBF 		b	rgb_matrix_decrease_speed_helper
 7940              	.LVL546:
 7941              		.cfi_endproc
 7942              	.LFE495:
 7944              		.section	.text.rgb_matrix_get_flags,"ax",%progbits
 7945              		.align	1
 7946              		.global	rgb_matrix_get_flags
 7947              		.syntax unified
 7948              		.thumb
 7949              		.thumb_func
 7950              		.fpu fpv4-sp-d16
 7952              	rgb_matrix_get_flags:
 7953              	.LFB496:
 637:quantum/rgb_matrix/rgb_matrix.c **** 
 638:quantum/rgb_matrix/rgb_matrix.c **** led_flags_t rgb_matrix_get_flags(void) { return rgb_matrix_config.flags; }
 7954              		.loc 23 638 40 view -0
 7955              		.cfi_startproc
 7956              		@ args = 0, pretend = 0, frame = 0
 7957              		@ frame_needed = 0, uses_anonymous_args = 0
 7958              		@ link register save eliminated.
 7959              		.loc 23 638 42 view .LVU1793
 7960              		.loc 23 638 74 is_stmt 0 view .LVU1794
 7961 0000 014B     		ldr	r3, .L479
 7962 0002 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 7963 0004 7047     		bx	lr
 7964              	.L480:
 7965 0006 00BF     		.align	2
 7966              	.L479:
 7967 0008 00000000 		.word	rgb_matrix_config
 7968              		.cfi_endproc
 7969              	.LFE496:
 7971              		.section	.text.rgb_matrix_set_flags,"ax",%progbits
 7972              		.align	1
 7973              		.global	rgb_matrix_set_flags
 7974              		.syntax unified
 7975              		.thumb
 7976              		.thumb_func
 7977              		.fpu fpv4-sp-d16
 7979              	rgb_matrix_set_flags:
 7980              	.LVL547:
 7981              	.LFB497:
 639:quantum/rgb_matrix/rgb_matrix.c **** 
 640:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_flags(led_flags_t flags) { rgb_matrix_config.flags = flags; }
 7982              		.loc 23 640 46 is_stmt 1 view -0
 7983              		.cfi_startproc
 7984              		@ args = 0, pretend = 0, frame = 0
 7985              		@ frame_needed = 0, uses_anonymous_args = 0
 7986              		@ link register save eliminated.
 7987              		.loc 23 640 48 view .LVU1796
 7988              		.loc 23 640 72 is_stmt 0 view .LVU1797
 7989 0000 014B     		ldr	r3, .L482
 7990 0002 5871     		strb	r0, [r3, #5]
 7991              		.loc 23 640 81 view .LVU1798
 7992 0004 7047     		bx	lr
 7993              	.L483:
 7994 0006 00BF     		.align	2
 7995              	.L482:
 7996 0008 00000000 		.word	rgb_matrix_config
 7997              		.cfi_endproc
 7998              	.LFE497:
 8000              		.comm	g_rgb_timer,4,4
 8001              		.comm	rgb_matrix_config,8,4
 8002              		.global	k_rgb_matrix_center
 8003              		.section	.rodata
 8004              		.set	.LANCHOR1,. + 0
 8005              	.LC0:
 8006 0000 00       		.byte	0
 8007 0001 FF       		.byte	-1
 8008 0002 FF       		.byte	-1
 8009              		.section	.bss.rgb_timer_buffer,"aw",%nobits
 8010              		.align	2
 8011              		.set	.LANCHOR2,. + 0
 8014              	rgb_timer_buffer:
 8015 0000 00000000 		.space	4
 8016              		.section	.bss.rgb_update_eeprom,"aw",%nobits
 8017              		.set	.LANCHOR8,. + 0
 8020              	rgb_update_eeprom:
 8021 0000 00       		.space	1
 8022              		.section	.bss.suspend_state,"aw",%nobits
 8023              		.set	.LANCHOR3,. + 0
 8026              	suspend_state:
 8027 0000 00       		.space	1
 8028              		.section	.data.rgb_effect_params,"aw"
 8029              		.set	.LANCHOR5,. + 0
 8032              	rgb_effect_params:
 8033 0000 00       		.byte	0
 8034 0001 FF       		.byte	-1
 8035 0002 00       		.byte	0
 8036              		.section	.data.rgb_last_effect,"aw"
 8037              		.set	.LANCHOR6,. + 0
 8040              	rgb_last_effect:
 8041 0000 FF       		.byte	-1
 8042              		.section	.data.rgb_last_enable,"aw"
 8043              		.set	.LANCHOR7,. + 0
 8046              	rgb_last_enable:
 8047 0000 FF       		.byte	-1
 8048              		.section	.data.rgb_task_state,"aw"
 8049              		.set	.LANCHOR4,. + 0
 8052              	rgb_task_state:
 8053 0000 03       		.byte	3
 8054              		.section	.rodata.b_m16_interleave,"a"
 8055              		.set	.LANCHOR0,. + 0
 8058              	b_m16_interleave:
 8059 0000 00313129 		.ascii	"\00011)Z\033u\012"
 8059      5A1B750A 
 8060              		.section	.rodata.k_rgb_matrix_center,"a"
 8063              	k_rgb_matrix_center:
 8064 0000 70       		.byte	112
 8065 0001 20       		.byte	32
 8066              		.text
 8067              	.Letext0:
 8068              		.file 36 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 8069              		.file 37 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 8070              		.file 38 "quantum/color.h"
 8071              		.file 39 "quantum/rgb_matrix/rgb_matrix_types.h"
 8072              		.file 40 "quantum/rgb_matrix/rgb_matrix.h"
 8073              		.file 41 "./lib/lib8tion/lib8tion.h"
 8074              		.file 42 "tmk_core/common/eeconfig.h"
 8075              		.file 43 "tmk_core/common/timer.h"
 8076              		.file 44 "tmk_core/common/keyboard.h"
 8077              		.file 45 "tmk_core/common/eeprom.h"
 8078              		.file 46 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\stdlib.h"
 8079              		.file 47 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgb_matrix.c
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:18     .text.sqrt16:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:25     .text.sqrt16:0000000000000000 sqrt16
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:133    .text.sin8_C:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:139    .text.sin8_C:0000000000000000 sin8_C
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:228    .text.sin8_C:0000000000000040 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:233    .text.BAND_SAT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:239    .text.BAND_SAT_math:0000000000000000 BAND_SAT_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:331    .text.BAND_SAT_math:0000000000000054 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:336    .text.BAND_VAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:342    .text.BAND_VAL_math:0000000000000000 BAND_VAL_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:433    .text.BAND_VAL_math:0000000000000054 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:438    .text.CYCLE_ALL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:444    .text.CYCLE_ALL_math:0000000000000000 CYCLE_ALL_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:484    .text.CYCLE_LEFT_RIGHT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:490    .text.CYCLE_LEFT_RIGHT_math:0000000000000000 CYCLE_LEFT_RIGHT_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:534    .text.CYCLE_LEFT_RIGHT_math:0000000000000030 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:539    .text.CYCLE_UP_DOWN_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:545    .text.CYCLE_UP_DOWN_math:0000000000000000 CYCLE_UP_DOWN_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:589    .text.CYCLE_UP_DOWN_math:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:594    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:600    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000000 RAINBOW_MOVING_CHEVRON_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:683    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000050 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:688    .text.CYCLE_OUT_IN_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:694    .text.CYCLE_OUT_IN_math:0000000000000000 CYCLE_OUT_IN_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:740    .text.CYCLE_OUT_IN_DUAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:746    .text.CYCLE_OUT_IN_DUAL_math:0000000000000000 CYCLE_OUT_IN_DUAL_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:827    .text.DUAL_BEACON_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:833    .text.DUAL_BEACON_math:0000000000000000 DUAL_BEACON_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:902    .text.DUAL_BEACON_math:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:907    .text.RAINBOW_BEACON_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:913    .text.RAINBOW_BEACON_math:0000000000000000 RAINBOW_BEACON_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:982    .text.RAINBOW_BEACON_math:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:987    .text.RAINBOW_PINWHEELS_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:993    .text.RAINBOW_PINWHEELS_math:0000000000000000 RAINBOW_PINWHEELS_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1086   .text.RAINBOW_PINWHEELS_math:0000000000000060 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1091   .text.HUE_PENDULUM_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1097   .text.HUE_PENDULUM_math:0000000000000000 HUE_PENDULUM_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1195   .text.HUE_PENDULUM_math:000000000000005c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1200   .text.HUE_WAVE_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1206   .text.HUE_WAVE_math:0000000000000000 HUE_WAVE_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1297   .text.HUE_WAVE_math:0000000000000048 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1302   .text.atan2_8:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1308   .text.atan2_8:0000000000000000 atan2_8
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1395   .text.BAND_PINWHEEL_SAT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1401   .text.BAND_PINWHEEL_SAT_math:0000000000000000 BAND_PINWHEEL_SAT_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1475   .text.BAND_PINWHEEL_VAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1481   .text.BAND_PINWHEEL_VAL_math:0000000000000000 BAND_PINWHEEL_VAL_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1555   .text.BAND_SPIRAL_SAT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1561   .text.BAND_SPIRAL_SAT_math:0000000000000000 BAND_SPIRAL_SAT_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1636   .text.BAND_SPIRAL_VAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1642   .text.BAND_SPIRAL_VAL_math:0000000000000000 BAND_SPIRAL_VAL_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1717   .text.CYCLE_PINWHEEL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1723   .text.CYCLE_PINWHEEL_math:0000000000000000 CYCLE_PINWHEEL_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1771   .text.CYCLE_SPIRAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1777   .text.CYCLE_SPIRAL_math:0000000000000000 CYCLE_SPIRAL_math
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1831   .text.rgb_matrix_hsv_to_rgb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1838   .text.rgb_matrix_hsv_to_rgb:0000000000000000 rgb_matrix_hsv_to_rgb
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1861   .text.eeconfig_read_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1868   .text.eeconfig_read_rgb_matrix:0000000000000000 eeconfig_read_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1884   .text.eeconfig_read_rgb_matrix:000000000000000c $d
                            *COM*:0000000000000008 rgb_matrix_config
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1889   .text.eeconfig_update_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1896   .text.eeconfig_update_rgb_matrix:0000000000000000 eeconfig_update_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1912   .text.eeconfig_update_rgb_matrix:000000000000000c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1917   .text.eeconfig_update_rgb_matrix_default:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1924   .text.eeconfig_update_rgb_matrix_default:0000000000000000 eeconfig_update_rgb_matrix_default
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1959   .text.eeconfig_update_rgb_matrix_default:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1965   .text.eeconfig_debug_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1972   .text.eeconfig_debug_rgb_matrix:0000000000000000 eeconfig_debug_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:1993   .text.rgb_matrix_map_row_column_to_led_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2000   .text.rgb_matrix_map_row_column_to_led_kb:0000000000000000 rgb_matrix_map_row_column_to_led_kb
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2018   .text.rgb_matrix_map_row_column_to_led:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2025   .text.rgb_matrix_map_row_column_to_led:0000000000000000 rgb_matrix_map_row_column_to_led
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2075   .text.rgb_matrix_map_row_column_to_led:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2080   .text.rgb_matrix_update_pwm_buffers:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2087   .text.rgb_matrix_update_pwm_buffers:0000000000000000 rgb_matrix_update_pwm_buffers
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2104   .text.rgb_matrix_update_pwm_buffers:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2109   .text.rgb_matrix_set_color:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2116   .text.rgb_matrix_set_color:0000000000000000 rgb_matrix_set_color
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2145   .text.rgb_matrix_set_color:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2150   .text.effect_runner_dx_dy_dist:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2157   .text.effect_runner_dx_dy_dist:0000000000000000 effect_runner_dx_dy_dist
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2364   .text.effect_runner_dx_dy_dist:00000000000000dc $d
                            *COM*:0000000000000004 g_rgb_timer
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2372   .text.BAND_SPIRAL_SAT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2379   .text.BAND_SPIRAL_SAT:0000000000000000 BAND_SPIRAL_SAT
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2396   .text.BAND_SPIRAL_SAT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2401   .text.BAND_SPIRAL_VAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2408   .text.BAND_SPIRAL_VAL:0000000000000000 BAND_SPIRAL_VAL
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2425   .text.BAND_SPIRAL_VAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2430   .text.CYCLE_OUT_IN:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2437   .text.CYCLE_OUT_IN:0000000000000000 CYCLE_OUT_IN
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2454   .text.CYCLE_OUT_IN:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2459   .text.CYCLE_SPIRAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2466   .text.CYCLE_SPIRAL:0000000000000000 CYCLE_SPIRAL
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2483   .text.CYCLE_SPIRAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2488   .text.effect_runner_dx_dy:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2495   .text.effect_runner_dx_dy:0000000000000000 effect_runner_dx_dy
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2685   .text.effect_runner_dx_dy:00000000000000c8 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2693   .text.BAND_PINWHEEL_SAT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2700   .text.BAND_PINWHEEL_SAT:0000000000000000 BAND_PINWHEEL_SAT
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2717   .text.BAND_PINWHEEL_SAT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2722   .text.BAND_PINWHEEL_VAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2729   .text.BAND_PINWHEEL_VAL:0000000000000000 BAND_PINWHEEL_VAL
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2746   .text.BAND_PINWHEEL_VAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2751   .text.CYCLE_OUT_IN_DUAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2758   .text.CYCLE_OUT_IN_DUAL:0000000000000000 CYCLE_OUT_IN_DUAL
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2775   .text.CYCLE_OUT_IN_DUAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2780   .text.CYCLE_PINWHEEL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2787   .text.CYCLE_PINWHEEL:0000000000000000 CYCLE_PINWHEEL
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2804   .text.CYCLE_PINWHEEL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2809   .text.effect_runner_i:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2816   .text.effect_runner_i:0000000000000000 effect_runner_i
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2977   .text.effect_runner_i:00000000000000a8 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2985   .text.BAND_SAT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:2992   .text.BAND_SAT:0000000000000000 BAND_SAT
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3009   .text.BAND_SAT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3014   .text.BAND_VAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3021   .text.BAND_VAL:0000000000000000 BAND_VAL
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3038   .text.BAND_VAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3043   .text.CYCLE_ALL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3050   .text.CYCLE_ALL:0000000000000000 CYCLE_ALL
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3067   .text.CYCLE_ALL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3072   .text.CYCLE_LEFT_RIGHT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3079   .text.CYCLE_LEFT_RIGHT:0000000000000000 CYCLE_LEFT_RIGHT
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3096   .text.CYCLE_LEFT_RIGHT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3101   .text.CYCLE_UP_DOWN:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3108   .text.CYCLE_UP_DOWN:0000000000000000 CYCLE_UP_DOWN
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3125   .text.CYCLE_UP_DOWN:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3130   .text.RAINBOW_MOVING_CHEVRON:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3137   .text.RAINBOW_MOVING_CHEVRON:0000000000000000 RAINBOW_MOVING_CHEVRON
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3154   .text.RAINBOW_MOVING_CHEVRON:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3159   .text.HUE_PENDULUM:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3166   .text.HUE_PENDULUM:0000000000000000 HUE_PENDULUM
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3183   .text.HUE_PENDULUM:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3188   .text.HUE_WAVE:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3195   .text.HUE_WAVE:0000000000000000 HUE_WAVE
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3212   .text.HUE_WAVE:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3217   .text.effect_runner_sin_cos_i:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3224   .text.effect_runner_sin_cos_i:0000000000000000 effect_runner_sin_cos_i
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3433   .text.effect_runner_sin_cos_i:00000000000000d0 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3441   .text.DUAL_BEACON:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3448   .text.DUAL_BEACON:0000000000000000 DUAL_BEACON
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3465   .text.DUAL_BEACON:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3470   .text.RAINBOW_BEACON:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3477   .text.RAINBOW_BEACON:0000000000000000 RAINBOW_BEACON
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3494   .text.RAINBOW_BEACON:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3499   .text.RAINBOW_PINWHEELS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3506   .text.RAINBOW_PINWHEELS:0000000000000000 RAINBOW_PINWHEELS
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3523   .text.RAINBOW_PINWHEELS:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3528   .text.SOLID_COLOR:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3535   .text.SOLID_COLOR:0000000000000000 SOLID_COLOR
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3651   .text.SOLID_COLOR:0000000000000080 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3658   .text.ALPHAS_MODS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3665   .text.ALPHAS_MODS:0000000000000000 ALPHAS_MODS
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3816   .text.ALPHAS_MODS:00000000000000c0 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3823   .text.GRADIENT_UP_DOWN:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3830   .text.GRADIENT_UP_DOWN:0000000000000000 GRADIENT_UP_DOWN
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3974   .text.GRADIENT_UP_DOWN:0000000000000088 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3981   .text.GRADIENT_LEFT_RIGHT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:3988   .text.GRADIENT_LEFT_RIGHT:0000000000000000 GRADIENT_LEFT_RIGHT
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4133   .text.GRADIENT_LEFT_RIGHT:000000000000008c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4140   .text.BREATHING:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4147   .text.BREATHING:0000000000000000 BREATHING
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4344   .text.BREATHING:00000000000000b0 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4352   .text.raindrops_set_color.isra.0:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4358   .text.raindrops_set_color.isra.0:0000000000000000 raindrops_set_color.isra.0
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4466   .text.raindrops_set_color.isra.0:000000000000006c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4472   .text.RAINDROPS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4479   .text.RAINDROPS:0000000000000000 RAINDROPS
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4640   .text.RAINDROPS:0000000000000078 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4647   .text.jellybean_raindrops_set_color.isra.0:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4653   .text.jellybean_raindrops_set_color.isra.0:0000000000000000 jellybean_raindrops_set_color.isra.0
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4747   .text.jellybean_raindrops_set_color.isra.0:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4753   .text.JELLYBEAN_RAINDROPS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4760   .text.JELLYBEAN_RAINDROPS:0000000000000000 JELLYBEAN_RAINDROPS
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4922   .text.JELLYBEAN_RAINDROPS:0000000000000078 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4929   .text.HUE_BREATHING:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:4936   .text.HUE_BREATHING:0000000000000000 HUE_BREATHING
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5137   .text.HUE_BREATHING:00000000000000b8 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5145   .text.rgb_matrix_set_color_all:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5152   .text.rgb_matrix_set_color_all:0000000000000000 rgb_matrix_set_color_all
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5171   .text.rgb_matrix_set_color_all:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5176   .text.process_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5183   .text.process_rgb_matrix:0000000000000000 process_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5200   .text.rgb_matrix_test:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5207   .text.rgb_matrix_test:0000000000000000 rgb_matrix_test
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5258   .text.rgb_matrix_test:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5263   .text.rgb_matrix_indicators_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5270   .text.rgb_matrix_indicators_kb:0000000000000000 rgb_matrix_indicators_kb
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5283   .text.rgb_matrix_indicators_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5290   .text.rgb_matrix_indicators_user:0000000000000000 rgb_matrix_indicators_user
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5301   .text.rgb_matrix_indicators:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5308   .text.rgb_matrix_indicators:0000000000000000 rgb_matrix_indicators
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5332   .text.rgb_matrix_indicators_advanced_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5339   .text.rgb_matrix_indicators_advanced_kb:0000000000000000 rgb_matrix_indicators_advanced_kb
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5353   .text.rgb_matrix_indicators_advanced_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5360   .text.rgb_matrix_indicators_advanced_user:0000000000000000 rgb_matrix_indicators_advanced_user
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5371   .text.rgb_matrix_indicators_advanced:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5378   .text.rgb_matrix_indicators_advanced:0000000000000000 rgb_matrix_indicators_advanced
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5426   .text.rgb_matrix_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5433   .text.rgb_matrix_task:0000000000000000 rgb_matrix_task
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5489   .text.rgb_matrix_task:0000000000000028 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5494   .text.rgb_matrix_task:0000000000000030 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5590   .text.rgb_matrix_task:000000000000007e $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:5619   .text.rgb_matrix_task:000000000000009a $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6003   .text.rgb_matrix_task:00000000000001ec $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6016   .text.rgb_matrix_init:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6023   .text.rgb_matrix_init:0000000000000000 rgb_matrix_init
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6083   .text.rgb_matrix_init:0000000000000030 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6089   .text.rgb_matrix_set_suspend_state:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6096   .text.rgb_matrix_set_suspend_state:0000000000000000 rgb_matrix_set_suspend_state
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6130   .text.rgb_matrix_set_suspend_state:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6135   .text.rgb_matrix_get_suspend_state:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6142   .text.rgb_matrix_get_suspend_state:0000000000000000 rgb_matrix_get_suspend_state
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6157   .text.rgb_matrix_get_suspend_state:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6162   .text.rgb_matrix_toggle_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6169   .text.rgb_matrix_toggle_eeprom_helper:0000000000000000 rgb_matrix_toggle_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6201   .text.rgb_matrix_toggle_eeprom_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6208   .text.rgb_matrix_toggle_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6215   .text.rgb_matrix_toggle_noeeprom:0000000000000000 rgb_matrix_toggle_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6230   .text.rgb_matrix_toggle:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6237   .text.rgb_matrix_toggle:0000000000000000 rgb_matrix_toggle
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6252   .text.rgb_matrix_enable_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6259   .text.rgb_matrix_enable_noeeprom:0000000000000000 rgb_matrix_enable_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6288   .text.rgb_matrix_enable_noeeprom:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6294   .text.rgb_matrix_enable:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6301   .text.rgb_matrix_enable:0000000000000000 rgb_matrix_enable
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6325   .text.rgb_matrix_enable:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6330   .text.rgb_matrix_disable_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6337   .text.rgb_matrix_disable_noeeprom:0000000000000000 rgb_matrix_disable_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6366   .text.rgb_matrix_disable_noeeprom:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6372   .text.rgb_matrix_disable:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6379   .text.rgb_matrix_disable:0000000000000000 rgb_matrix_disable
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6403   .text.rgb_matrix_disable:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6408   .text.rgb_matrix_is_enabled:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6415   .text.rgb_matrix_is_enabled:0000000000000000 rgb_matrix_is_enabled
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6432   .text.rgb_matrix_is_enabled:000000000000000c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6437   .text.rgb_matrix_mode_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6444   .text.rgb_matrix_mode_eeprom_helper:0000000000000000 rgb_matrix_mode_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6514   .text.rgb_matrix_mode_eeprom_helper:000000000000002c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6523   .text.rgb_matrix_mode_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6530   .text.rgb_matrix_mode_noeeprom:0000000000000000 rgb_matrix_mode_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6547   .text.rgb_matrix_mode:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6554   .text.rgb_matrix_mode:0000000000000000 rgb_matrix_mode
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6571   .text.rgb_matrix_get_mode:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6578   .text.rgb_matrix_get_mode:0000000000000000 rgb_matrix_get_mode
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6595   .text.rgb_matrix_get_mode:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6600   .text.rgb_matrix_step_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6607   .text.rgb_matrix_step_helper:0000000000000000 rgb_matrix_step_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6639   .text.rgb_matrix_step_helper:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6644   .text.rgb_matrix_step_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6651   .text.rgb_matrix_step_noeeprom:0000000000000000 rgb_matrix_step_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6666   .text.rgb_matrix_step:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6673   .text.rgb_matrix_step:0000000000000000 rgb_matrix_step
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6688   .text.rgb_matrix_step_reverse_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6695   .text.rgb_matrix_step_reverse_helper:0000000000000000 rgb_matrix_step_reverse_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6728   .text.rgb_matrix_step_reverse_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6733   .text.rgb_matrix_step_reverse_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6740   .text.rgb_matrix_step_reverse_noeeprom:0000000000000000 rgb_matrix_step_reverse_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6755   .text.rgb_matrix_step_reverse:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6762   .text.rgb_matrix_step_reverse:0000000000000000 rgb_matrix_step_reverse
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6777   .text.rgb_matrix_sethsv_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6784   .text.rgb_matrix_sethsv_eeprom_helper:0000000000000000 rgb_matrix_sethsv_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6832   .text.rgb_matrix_sethsv_eeprom_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6838   .text.rgb_matrix_sethsv_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6845   .text.rgb_matrix_sethsv_noeeprom:0000000000000000 rgb_matrix_sethsv_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6862   .text.rgb_matrix_sethsv:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6869   .text.rgb_matrix_sethsv:0000000000000000 rgb_matrix_sethsv
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6886   .text.rgb_matrix_get_hsv:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6893   .text.rgb_matrix_get_hsv:0000000000000000 rgb_matrix_get_hsv
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6924   .text.rgb_matrix_get_hsv:0000000000000028 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6929   .text.rgb_matrix_get_hue:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6936   .text.rgb_matrix_get_hue:0000000000000000 rgb_matrix_get_hue
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6951   .text.rgb_matrix_get_hue:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6956   .text.rgb_matrix_get_sat:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6963   .text.rgb_matrix_get_sat:0000000000000000 rgb_matrix_get_sat
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6978   .text.rgb_matrix_get_sat:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6983   .text.rgb_matrix_get_val:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:6990   .text.rgb_matrix_get_val:0000000000000000 rgb_matrix_get_val
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7005   .text.rgb_matrix_get_val:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7010   .text.rgb_matrix_increase_hue_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7017   .text.rgb_matrix_increase_hue_helper:0000000000000000 rgb_matrix_increase_hue_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7041   .text.rgb_matrix_increase_hue_helper:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7046   .text.rgb_matrix_increase_hue_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7053   .text.rgb_matrix_increase_hue_noeeprom:0000000000000000 rgb_matrix_increase_hue_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7068   .text.rgb_matrix_increase_hue:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7075   .text.rgb_matrix_increase_hue:0000000000000000 rgb_matrix_increase_hue
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7090   .text.rgb_matrix_decrease_hue_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7097   .text.rgb_matrix_decrease_hue_helper:0000000000000000 rgb_matrix_decrease_hue_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7132   .text.rgb_matrix_decrease_hue_helper:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7137   .text.rgb_matrix_decrease_hue_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7144   .text.rgb_matrix_decrease_hue_noeeprom:0000000000000000 rgb_matrix_decrease_hue_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7159   .text.rgb_matrix_decrease_hue:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7166   .text.rgb_matrix_decrease_hue:0000000000000000 rgb_matrix_decrease_hue
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7181   .text.rgb_matrix_increase_sat_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7188   .text.rgb_matrix_increase_sat_helper:0000000000000000 rgb_matrix_increase_sat_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7247   .text.rgb_matrix_increase_sat_helper:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7252   .text.rgb_matrix_increase_sat_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7259   .text.rgb_matrix_increase_sat_noeeprom:0000000000000000 rgb_matrix_increase_sat_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7274   .text.rgb_matrix_increase_sat:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7281   .text.rgb_matrix_increase_sat:0000000000000000 rgb_matrix_increase_sat
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7296   .text.rgb_matrix_decrease_sat_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7303   .text.rgb_matrix_decrease_sat_helper:0000000000000000 rgb_matrix_decrease_sat_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7360   .text.rgb_matrix_decrease_sat_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7365   .text.rgb_matrix_decrease_sat_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7372   .text.rgb_matrix_decrease_sat_noeeprom:0000000000000000 rgb_matrix_decrease_sat_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7387   .text.rgb_matrix_decrease_sat:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7394   .text.rgb_matrix_decrease_sat:0000000000000000 rgb_matrix_decrease_sat
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7409   .text.rgb_matrix_increase_val_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7416   .text.rgb_matrix_increase_val_helper:0000000000000000 rgb_matrix_increase_val_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7475   .text.rgb_matrix_increase_val_helper:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7480   .text.rgb_matrix_increase_val_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7487   .text.rgb_matrix_increase_val_noeeprom:0000000000000000 rgb_matrix_increase_val_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7502   .text.rgb_matrix_increase_val:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7509   .text.rgb_matrix_increase_val:0000000000000000 rgb_matrix_increase_val
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7524   .text.rgb_matrix_decrease_val_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7531   .text.rgb_matrix_decrease_val_helper:0000000000000000 rgb_matrix_decrease_val_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7588   .text.rgb_matrix_decrease_val_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7593   .text.rgb_matrix_decrease_val_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7600   .text.rgb_matrix_decrease_val_noeeprom:0000000000000000 rgb_matrix_decrease_val_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7615   .text.rgb_matrix_decrease_val:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7622   .text.rgb_matrix_decrease_val:0000000000000000 rgb_matrix_decrease_val
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7637   .text.rgb_matrix_set_speed_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7644   .text.rgb_matrix_set_speed_eeprom_helper:0000000000000000 rgb_matrix_set_speed_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7669   .text.rgb_matrix_set_speed_eeprom_helper:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7675   .text.rgb_matrix_set_speed_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7682   .text.rgb_matrix_set_speed_noeeprom:0000000000000000 rgb_matrix_set_speed_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7698   .text.rgb_matrix_set_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7705   .text.rgb_matrix_set_speed:0000000000000000 rgb_matrix_set_speed
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7721   .text.rgb_matrix_get_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7728   .text.rgb_matrix_get_speed:0000000000000000 rgb_matrix_get_speed
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7743   .text.rgb_matrix_get_speed:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7748   .text.rgb_matrix_increase_speed_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7755   .text.rgb_matrix_increase_speed_helper:0000000000000000 rgb_matrix_increase_speed_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7799   .text.rgb_matrix_increase_speed_helper:0000000000000014 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7804   .text.rgb_matrix_increase_speed_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7811   .text.rgb_matrix_increase_speed_noeeprom:0000000000000000 rgb_matrix_increase_speed_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7826   .text.rgb_matrix_increase_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7833   .text.rgb_matrix_increase_speed:0000000000000000 rgb_matrix_increase_speed
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7848   .text.rgb_matrix_decrease_speed_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7855   .text.rgb_matrix_decrease_speed_helper:0000000000000000 rgb_matrix_decrease_speed_helper
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7896   .text.rgb_matrix_decrease_speed_helper:0000000000000014 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7901   .text.rgb_matrix_decrease_speed_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7908   .text.rgb_matrix_decrease_speed_noeeprom:0000000000000000 rgb_matrix_decrease_speed_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7923   .text.rgb_matrix_decrease_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7930   .text.rgb_matrix_decrease_speed:0000000000000000 rgb_matrix_decrease_speed
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7945   .text.rgb_matrix_get_flags:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7952   .text.rgb_matrix_get_flags:0000000000000000 rgb_matrix_get_flags
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7967   .text.rgb_matrix_get_flags:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7972   .text.rgb_matrix_set_flags:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7979   .text.rgb_matrix_set_flags:0000000000000000 rgb_matrix_set_flags
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:7996   .text.rgb_matrix_set_flags:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8063   .rodata.k_rgb_matrix_center:0000000000000000 k_rgb_matrix_center
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8010   .bss.rgb_timer_buffer:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8014   .bss.rgb_timer_buffer:0000000000000000 rgb_timer_buffer
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8020   .bss.rgb_update_eeprom:0000000000000000 rgb_update_eeprom
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8021   .bss.rgb_update_eeprom:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8026   .bss.suspend_state:0000000000000000 suspend_state
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8027   .bss.suspend_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8032   .data.rgb_effect_params:0000000000000000 rgb_effect_params
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8040   .data.rgb_last_effect:0000000000000000 rgb_last_effect
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8046   .data.rgb_last_enable:0000000000000000 rgb_last_enable
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8052   .data.rgb_task_state:0000000000000000 rgb_task_state
C:\Users\lhanj\AppData\Local\Temp\ccIhwAlg.s:8058   .rodata.b_m16_interleave:0000000000000000 b_m16_interleave

UNDEFINED SYMBOLS
g_led_config
hsv_to_rgb
eeprom_read_block
eeprom_update_block
rgb_matrix_driver
rand
is_keyboard_master
timer_read32
timer_elapsed32
eeconfig_is_enabled
eeconfig_init
