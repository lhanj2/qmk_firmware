   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"rgb_matrix.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.sqrt16,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	sqrt16:
  26              	.LVL0:
  27              	.LFB320:
  28              		.file 1 "./lib/lib8tion/math8.h"
   1:./lib/lib8tion/math8.h **** #ifndef __INC_LIB8TION_MATH_H
   2:./lib/lib8tion/math8.h **** #define __INC_LIB8TION_MATH_H
   3:./lib/lib8tion/math8.h **** 
   4:./lib/lib8tion/math8.h **** #include "scale8.h"
   5:./lib/lib8tion/math8.h **** 
   6:./lib/lib8tion/math8.h **** ///@ingroup lib8tion
   7:./lib/lib8tion/math8.h **** 
   8:./lib/lib8tion/math8.h **** ///@defgroup Math Basic math operations
   9:./lib/lib8tion/math8.h **** /// Fast, efficient 8-bit math functions specifically
  10:./lib/lib8tion/math8.h **** /// designed for high-performance LED programming.
  11:./lib/lib8tion/math8.h **** ///
  12:./lib/lib8tion/math8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  13:./lib/lib8tion/math8.h **** /// implementations provided, using these functions often
  14:./lib/lib8tion/math8.h **** /// results in smaller and faster code than the equivalent
  15:./lib/lib8tion/math8.h **** /// program using plain "C" arithmetic and logic.
  16:./lib/lib8tion/math8.h **** ///@{
  17:./lib/lib8tion/math8.h **** 
  18:./lib/lib8tion/math8.h **** 
  19:./lib/lib8tion/math8.h **** /// add one byte to another, saturating at 0xFF
  20:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  21:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  22:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  23:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qadd8( uint8_t i, uint8_t j)
  24:./lib/lib8tion/math8.h **** {
  25:./lib/lib8tion/math8.h **** #if QADD8_C == 1
  26:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
  27:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
  28:./lib/lib8tion/math8.h ****     return t;
  29:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
  30:./lib/lib8tion/math8.h ****     asm volatile(
  31:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the C flag */
  32:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  33:./lib/lib8tion/math8.h **** 
  34:./lib/lib8tion/math8.h ****          /* Now test the C flag.
  35:./lib/lib8tion/math8.h ****            If C is clear, we branch around a load of 0xFF into i.
  36:./lib/lib8tion/math8.h ****            If C is set, we go ahead and load 0xFF into i.
  37:./lib/lib8tion/math8.h ****          */
  38:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
  39:./lib/lib8tion/math8.h ****          "ldi %0, 0xFF  \n\t"
  40:./lib/lib8tion/math8.h ****          "L_%=: "
  41:./lib/lib8tion/math8.h ****          : "+a" (i)
  42:./lib/lib8tion/math8.h ****          : "a"  (j) );
  43:./lib/lib8tion/math8.h ****     return i;
  44:./lib/lib8tion/math8.h **** #elif QADD8_ARM_DSP_ASM == 1
  45:./lib/lib8tion/math8.h ****     asm volatile( "uqadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  46:./lib/lib8tion/math8.h ****     return i;
  47:./lib/lib8tion/math8.h **** #else
  48:./lib/lib8tion/math8.h **** #error "No implementation for qadd8 available."
  49:./lib/lib8tion/math8.h **** #endif
  50:./lib/lib8tion/math8.h **** }
  51:./lib/lib8tion/math8.h **** 
  52:./lib/lib8tion/math8.h **** /// Add one byte to another, saturating at 0x7F
  53:./lib/lib8tion/math8.h **** /// @param i - first byte to add
  54:./lib/lib8tion/math8.h **** /// @param j - second byte to add
  55:./lib/lib8tion/math8.h **** /// @returns the sum of i & j, capped at 0xFF
  56:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t qadd7( int8_t i, int8_t j)
  57:./lib/lib8tion/math8.h **** {
  58:./lib/lib8tion/math8.h **** #if QADD7_C == 1
  59:./lib/lib8tion/math8.h ****     int16_t t = i + j;
  60:./lib/lib8tion/math8.h ****     if (t > 127) t = 127;
  61:./lib/lib8tion/math8.h ****     return t;
  62:./lib/lib8tion/math8.h **** #elif QADD7_AVRASM == 1
  63:./lib/lib8tion/math8.h ****     asm volatile(
  64:./lib/lib8tion/math8.h ****          /* First, add j to i, conditioning the V flag */
  65:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
  66:./lib/lib8tion/math8.h **** 
  67:./lib/lib8tion/math8.h ****          /* Now test the V flag.
  68:./lib/lib8tion/math8.h ****           If V is clear, we branch around a load of 0x7F into i.
  69:./lib/lib8tion/math8.h ****           If V is set, we go ahead and load 0x7F into i.
  70:./lib/lib8tion/math8.h ****           */
  71:./lib/lib8tion/math8.h ****          "brvc L_%=     \n\t"
  72:./lib/lib8tion/math8.h ****          "ldi %0, 0x7F  \n\t"
  73:./lib/lib8tion/math8.h ****          "L_%=: "
  74:./lib/lib8tion/math8.h ****          : "+a" (i)
  75:./lib/lib8tion/math8.h ****          : "a"  (j) );
  76:./lib/lib8tion/math8.h **** 
  77:./lib/lib8tion/math8.h ****     return i;
  78:./lib/lib8tion/math8.h **** #elif QADD7_ARM_DSP_ASM == 1
  79:./lib/lib8tion/math8.h ****     asm volatile( "qadd8 %0, %0, %1" : "+r" (i) : "r" (j));
  80:./lib/lib8tion/math8.h ****     return i;
  81:./lib/lib8tion/math8.h **** #else
  82:./lib/lib8tion/math8.h **** #error "No implementation for qadd7 available."
  83:./lib/lib8tion/math8.h **** #endif
  84:./lib/lib8tion/math8.h **** }
  85:./lib/lib8tion/math8.h **** 
  86:./lib/lib8tion/math8.h **** /// subtract one byte from another, saturating at 0x00
  87:./lib/lib8tion/math8.h **** /// @returns i - j with a floor of 0
  88:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qsub8( uint8_t i, uint8_t j)
  89:./lib/lib8tion/math8.h **** {
  90:./lib/lib8tion/math8.h **** #if QSUB8_C == 1
  91:./lib/lib8tion/math8.h ****     int16_t t = i - j;
  92:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
  93:./lib/lib8tion/math8.h ****     return t;
  94:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
  95:./lib/lib8tion/math8.h **** 
  96:./lib/lib8tion/math8.h ****     asm volatile(
  97:./lib/lib8tion/math8.h ****          /* First, subtract j from i, conditioning the C flag */
  98:./lib/lib8tion/math8.h ****          "sub %0, %1    \n\t"
  99:./lib/lib8tion/math8.h **** 
 100:./lib/lib8tion/math8.h ****          /* Now test the C flag.
 101:./lib/lib8tion/math8.h ****           If C is clear, we branch around a load of 0x00 into i.
 102:./lib/lib8tion/math8.h ****           If C is set, we go ahead and load 0x00 into i.
 103:./lib/lib8tion/math8.h ****           */
 104:./lib/lib8tion/math8.h ****          "brcc L_%=     \n\t"
 105:./lib/lib8tion/math8.h ****          "ldi %0, 0x00  \n\t"
 106:./lib/lib8tion/math8.h ****          "L_%=: "
 107:./lib/lib8tion/math8.h ****          : "+a" (i)
 108:./lib/lib8tion/math8.h ****          : "a"  (j) );
 109:./lib/lib8tion/math8.h **** 
 110:./lib/lib8tion/math8.h ****     return i;
 111:./lib/lib8tion/math8.h **** #else
 112:./lib/lib8tion/math8.h **** #error "No implementation for qsub8 available."
 113:./lib/lib8tion/math8.h **** #endif
 114:./lib/lib8tion/math8.h **** }
 115:./lib/lib8tion/math8.h **** 
 116:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 117:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t add8( uint8_t i, uint8_t j)
 118:./lib/lib8tion/math8.h **** {
 119:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 120:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 121:./lib/lib8tion/math8.h ****     return t;
 122:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 123:./lib/lib8tion/math8.h ****     // Add j to i, period.
 124:./lib/lib8tion/math8.h ****     asm volatile( "add %0, %1" : "+a" (i) : "a" (j));
 125:./lib/lib8tion/math8.h ****     return i;
 126:./lib/lib8tion/math8.h **** #else
 127:./lib/lib8tion/math8.h **** #error "No implementation for add8 available."
 128:./lib/lib8tion/math8.h **** #endif
 129:./lib/lib8tion/math8.h **** }
 130:./lib/lib8tion/math8.h **** 
 131:./lib/lib8tion/math8.h **** /// add one byte to another, with one byte result
 132:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t add8to16( uint8_t i, uint16_t j)
 133:./lib/lib8tion/math8.h **** {
 134:./lib/lib8tion/math8.h **** #if ADD8_C == 1
 135:./lib/lib8tion/math8.h ****     uint16_t t = i + j;
 136:./lib/lib8tion/math8.h ****     return t;
 137:./lib/lib8tion/math8.h **** #elif ADD8_AVRASM == 1
 138:./lib/lib8tion/math8.h ****     // Add i(one byte) to j(two bytes)
 139:./lib/lib8tion/math8.h ****     asm volatile( "add %A[j], %[i]              \n\t"
 140:./lib/lib8tion/math8.h ****                   "adc %B[j], __zero_reg__      \n\t"
 141:./lib/lib8tion/math8.h ****                  : [j] "+a" (j)
 142:./lib/lib8tion/math8.h ****                  : [i] "a"  (i)
 143:./lib/lib8tion/math8.h ****                  );
 144:./lib/lib8tion/math8.h ****     return i;
 145:./lib/lib8tion/math8.h **** #else
 146:./lib/lib8tion/math8.h **** #error "No implementation for add8to16 available."
 147:./lib/lib8tion/math8.h **** #endif
 148:./lib/lib8tion/math8.h **** }
 149:./lib/lib8tion/math8.h **** 
 150:./lib/lib8tion/math8.h **** 
 151:./lib/lib8tion/math8.h **** /// subtract one byte from another, 8-bit result
 152:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t sub8( uint8_t i, uint8_t j)
 153:./lib/lib8tion/math8.h **** {
 154:./lib/lib8tion/math8.h **** #if SUB8_C == 1
 155:./lib/lib8tion/math8.h ****     int16_t t = i - j;
 156:./lib/lib8tion/math8.h ****     return t;
 157:./lib/lib8tion/math8.h **** #elif SUB8_AVRASM == 1
 158:./lib/lib8tion/math8.h ****     // Subtract j from i, period.
 159:./lib/lib8tion/math8.h ****     asm volatile( "sub %0, %1" : "+a" (i) : "a" (j));
 160:./lib/lib8tion/math8.h ****     return i;
 161:./lib/lib8tion/math8.h **** #else
 162:./lib/lib8tion/math8.h **** #error "No implementation for sub8 available."
 163:./lib/lib8tion/math8.h **** #endif
 164:./lib/lib8tion/math8.h **** }
 165:./lib/lib8tion/math8.h **** 
 166:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 167:./lib/lib8tion/math8.h **** ///       8-bit integer values (uint8_t).
 168:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg8(20,41) = 30
 169:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t avg8( uint8_t i, uint8_t j)
 170:./lib/lib8tion/math8.h **** {
 171:./lib/lib8tion/math8.h **** #if AVG8_C == 1
 172:./lib/lib8tion/math8.h ****     return (i + j) >> 1;
 173:./lib/lib8tion/math8.h **** #elif AVG8_AVRASM == 1
 174:./lib/lib8tion/math8.h ****     asm volatile(
 175:./lib/lib8tion/math8.h ****          /* First, add j to i, 9th bit overflows into C flag */
 176:./lib/lib8tion/math8.h ****          "add %0, %1    \n\t"
 177:./lib/lib8tion/math8.h ****          /* Divide by two, moving C flag into high 8th bit */
 178:./lib/lib8tion/math8.h ****          "ror %0        \n\t"
 179:./lib/lib8tion/math8.h ****          : "+a" (i)
 180:./lib/lib8tion/math8.h ****          : "a"  (j) );
 181:./lib/lib8tion/math8.h ****     return i;
 182:./lib/lib8tion/math8.h **** #else
 183:./lib/lib8tion/math8.h **** #error "No implementation for avg8 available."
 184:./lib/lib8tion/math8.h **** #endif
 185:./lib/lib8tion/math8.h **** }
 186:./lib/lib8tion/math8.h **** 
 187:./lib/lib8tion/math8.h **** /// Calculate an integer average of two unsigned
 188:./lib/lib8tion/math8.h **** ///       16-bit integer values (uint16_t).
 189:./lib/lib8tion/math8.h **** ///       Fractional results are rounded down, e.g. avg16(20,41) = 30
 190:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t avg16( uint16_t i, uint16_t j)
 191:./lib/lib8tion/math8.h **** {
 192:./lib/lib8tion/math8.h **** #if AVG16_C == 1
 193:./lib/lib8tion/math8.h ****     return (uint32_t)((uint32_t)(i) + (uint32_t)(j)) >> 1;
 194:./lib/lib8tion/math8.h **** #elif AVG16_AVRASM == 1
 195:./lib/lib8tion/math8.h ****     asm volatile(
 196:./lib/lib8tion/math8.h ****                  /* First, add jLo (heh) to iLo, 9th bit overflows into C flag */
 197:./lib/lib8tion/math8.h ****                  "add %A[i], %A[j]    \n\t"
 198:./lib/lib8tion/math8.h ****                  /* Now, add C + jHi to iHi, 17th bit overflows into C flag */
 199:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]    \n\t"
 200:./lib/lib8tion/math8.h ****                  /* Divide iHi by two, moving C flag into high 16th bit, old 9th bit now in C */
 201:./lib/lib8tion/math8.h ****                  "ror %B[i]        \n\t"
 202:./lib/lib8tion/math8.h ****                  /* Divide iLo by two, moving C flag into high 8th bit */
 203:./lib/lib8tion/math8.h ****                  "ror %A[i]        \n\t"
 204:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 205:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 206:./lib/lib8tion/math8.h ****     return i;
 207:./lib/lib8tion/math8.h **** #else
 208:./lib/lib8tion/math8.h **** #error "No implementation for avg16 available."
 209:./lib/lib8tion/math8.h **** #endif
 210:./lib/lib8tion/math8.h **** }
 211:./lib/lib8tion/math8.h **** 
 212:./lib/lib8tion/math8.h **** 
 213:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 7-bit
 214:./lib/lib8tion/math8.h **** ///       integers (int8_t)
 215:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 216:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 217:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t avg7( int8_t i, int8_t j)
 218:./lib/lib8tion/math8.h **** {
 219:./lib/lib8tion/math8.h **** #if AVG7_C == 1
 220:./lib/lib8tion/math8.h ****     return ((i + j) >> 1) + (i & 0x1);
 221:./lib/lib8tion/math8.h **** #elif AVG7_AVRASM == 1
 222:./lib/lib8tion/math8.h ****     asm volatile(
 223:./lib/lib8tion/math8.h ****                  "asr %1        \n\t"
 224:./lib/lib8tion/math8.h ****                  "asr %0        \n\t"
 225:./lib/lib8tion/math8.h ****                  "adc %0, %1    \n\t"
 226:./lib/lib8tion/math8.h ****                  : "+a" (i)
 227:./lib/lib8tion/math8.h ****                  : "a"  (j) );
 228:./lib/lib8tion/math8.h ****     return i;
 229:./lib/lib8tion/math8.h **** #else
 230:./lib/lib8tion/math8.h **** #error "No implementation for avg7 available."
 231:./lib/lib8tion/math8.h **** #endif
 232:./lib/lib8tion/math8.h **** }
 233:./lib/lib8tion/math8.h **** 
 234:./lib/lib8tion/math8.h **** /// Calculate an integer average of two signed 15-bit
 235:./lib/lib8tion/math8.h **** ///       integers (int16_t)
 236:./lib/lib8tion/math8.h **** ///       If the first argument is even, result is rounded down.
 237:./lib/lib8tion/math8.h **** ///       If the first argument is odd, result is result up.
 238:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int16_t avg15( int16_t i, int16_t j)
 239:./lib/lib8tion/math8.h **** {
 240:./lib/lib8tion/math8.h **** #if AVG15_C == 1
 241:./lib/lib8tion/math8.h ****     return ((int32_t)((int32_t)(i) + (int32_t)(j)) >> 1) + (i & 0x1);
 242:./lib/lib8tion/math8.h **** #elif AVG15_AVRASM == 1
 243:./lib/lib8tion/math8.h ****     asm volatile(
 244:./lib/lib8tion/math8.h ****                  /* first divide j by 2, throwing away lowest bit */
 245:./lib/lib8tion/math8.h ****                  "asr %B[j]          \n\t"
 246:./lib/lib8tion/math8.h ****                  "ror %A[j]          \n\t"
 247:./lib/lib8tion/math8.h ****                  /* now divide i by 2, with lowest bit going into C */
 248:./lib/lib8tion/math8.h ****                  "asr %B[i]          \n\t"
 249:./lib/lib8tion/math8.h ****                  "ror %A[i]          \n\t"
 250:./lib/lib8tion/math8.h ****                  /* add j + C to i */
 251:./lib/lib8tion/math8.h ****                  "adc %A[i], %A[j]   \n\t"
 252:./lib/lib8tion/math8.h ****                  "adc %B[i], %B[j]   \n\t"
 253:./lib/lib8tion/math8.h ****                  : [i] "+a" (i)
 254:./lib/lib8tion/math8.h ****                  : [j] "a"  (j) );
 255:./lib/lib8tion/math8.h ****     return i;
 256:./lib/lib8tion/math8.h **** #else
 257:./lib/lib8tion/math8.h **** #error "No implementation for avg15 available."
 258:./lib/lib8tion/math8.h **** #endif
 259:./lib/lib8tion/math8.h **** }
 260:./lib/lib8tion/math8.h **** 
 261:./lib/lib8tion/math8.h **** 
 262:./lib/lib8tion/math8.h **** ///       Calculate the remainder of one unsigned 8-bit
 263:./lib/lib8tion/math8.h **** ///       value divided by anoter, aka A % M.
 264:./lib/lib8tion/math8.h **** ///       Implemented by repeated subtraction, which is
 265:./lib/lib8tion/math8.h **** ///       very compact, and very fast if A is 'probably'
 266:./lib/lib8tion/math8.h **** ///       less than M.  If A is a large multiple of M,
 267:./lib/lib8tion/math8.h **** ///       the loop has to execute multiple times.  However,
 268:./lib/lib8tion/math8.h **** ///       even in that case, the loop is only two
 269:./lib/lib8tion/math8.h **** ///       instructions long on AVR, i.e., quick.
 270:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mod8( uint8_t a, uint8_t m)
 271:./lib/lib8tion/math8.h **** {
 272:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 273:./lib/lib8tion/math8.h ****     asm volatile (
 274:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 275:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 276:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 277:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 278:./lib/lib8tion/math8.h ****                   : [m] "r"  (m)
 279:./lib/lib8tion/math8.h ****                   );
 280:./lib/lib8tion/math8.h **** #else
 281:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 282:./lib/lib8tion/math8.h **** #endif
 283:./lib/lib8tion/math8.h ****     return a;
 284:./lib/lib8tion/math8.h **** }
 285:./lib/lib8tion/math8.h **** 
 286:./lib/lib8tion/math8.h **** ///          Add two numbers, and calculate the modulo
 287:./lib/lib8tion/math8.h **** ///          of the sum and a third number, M.
 288:./lib/lib8tion/math8.h **** ///          In other words, it returns (A+B) % M.
 289:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 290:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 291:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 292:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 293:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 294:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 295:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 296:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 297:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t addmod8( uint8_t a, uint8_t b, uint8_t m)
 298:./lib/lib8tion/math8.h **** {
 299:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 300:./lib/lib8tion/math8.h ****     asm volatile (
 301:./lib/lib8tion/math8.h ****                   "       add %[a],%[b]    \n\t"
 302:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 303:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 304:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 305:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 306:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 307:./lib/lib8tion/math8.h ****                   );
 308:./lib/lib8tion/math8.h **** #else
 309:./lib/lib8tion/math8.h ****     a += b;
 310:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 311:./lib/lib8tion/math8.h **** #endif
 312:./lib/lib8tion/math8.h ****     return a;
 313:./lib/lib8tion/math8.h **** }
 314:./lib/lib8tion/math8.h **** 
 315:./lib/lib8tion/math8.h **** ///          Subtract two numbers, and calculate the modulo
 316:./lib/lib8tion/math8.h **** ///          of the difference and a third number, M.
 317:./lib/lib8tion/math8.h **** ///          In other words, it returns (A-B) % M.
 318:./lib/lib8tion/math8.h **** ///          It is designed as a compact mechanism for
 319:./lib/lib8tion/math8.h **** ///          incrementing a 'mode' switch and wrapping
 320:./lib/lib8tion/math8.h **** ///          around back to 'mode 0' when the switch
 321:./lib/lib8tion/math8.h **** ///          goes past the end of the available range.
 322:./lib/lib8tion/math8.h **** ///          e.g. if you have seven modes, this switches
 323:./lib/lib8tion/math8.h **** ///          to the next one and wraps around if needed:
 324:./lib/lib8tion/math8.h **** ///            mode = addmod8( mode, 1, 7);
 325:./lib/lib8tion/math8.h **** ///LIB8STATIC_ALWAYS_INLINESee 'mod8' for notes on performance.
 326:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t submod8( uint8_t a, uint8_t b, uint8_t m)
 327:./lib/lib8tion/math8.h **** {
 328:./lib/lib8tion/math8.h **** #if defined(__AVR__)
 329:./lib/lib8tion/math8.h ****     asm volatile (
 330:./lib/lib8tion/math8.h ****                   "       sub %[a],%[b]    \n\t"
 331:./lib/lib8tion/math8.h ****                   "L_%=:  sub %[a],%[m]    \n\t"
 332:./lib/lib8tion/math8.h ****                   "       brcc L_%=        \n\t"
 333:./lib/lib8tion/math8.h ****                   "       add %[a],%[m]    \n\t"
 334:./lib/lib8tion/math8.h ****                   : [a] "+r" (a)
 335:./lib/lib8tion/math8.h ****                   : [b] "r"  (b), [m] "r" (m)
 336:./lib/lib8tion/math8.h ****                   );
 337:./lib/lib8tion/math8.h **** #else
 338:./lib/lib8tion/math8.h ****     a -= b;
 339:./lib/lib8tion/math8.h ****     while( a >= m) a -= m;
 340:./lib/lib8tion/math8.h **** #endif
 341:./lib/lib8tion/math8.h ****     return a;
 342:./lib/lib8tion/math8.h **** }
 343:./lib/lib8tion/math8.h **** 
 344:./lib/lib8tion/math8.h **** /// 8x8 bit multiplication, with 8 bit result
 345:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t mul8( uint8_t i, uint8_t j)
 346:./lib/lib8tion/math8.h **** {
 347:./lib/lib8tion/math8.h **** #if MUL8_C == 1
 348:./lib/lib8tion/math8.h ****     return ((uint16_t)i * (uint16_t)(j) ) & 0xFF;
 349:./lib/lib8tion/math8.h **** #elif MUL8_AVRASM == 1
 350:./lib/lib8tion/math8.h ****     asm volatile(
 351:./lib/lib8tion/math8.h ****          /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 352:./lib/lib8tion/math8.h ****          "mul %0, %1          \n\t"
 353:./lib/lib8tion/math8.h ****          /* Extract the LOW 8-bits (r0) */
 354:./lib/lib8tion/math8.h ****          "mov %0, r0          \n\t"
 355:./lib/lib8tion/math8.h ****          /* Restore r1 to "0"; it's expected to always be that */
 356:./lib/lib8tion/math8.h ****          "clr __zero_reg__    \n\t"
 357:./lib/lib8tion/math8.h ****          : "+a" (i)
 358:./lib/lib8tion/math8.h ****          : "a"  (j)
 359:./lib/lib8tion/math8.h ****          : "r0", "r1");
 360:./lib/lib8tion/math8.h **** 
 361:./lib/lib8tion/math8.h ****     return i;
 362:./lib/lib8tion/math8.h **** #else
 363:./lib/lib8tion/math8.h **** #error "No implementation for mul8 available."
 364:./lib/lib8tion/math8.h **** #endif
 365:./lib/lib8tion/math8.h **** }
 366:./lib/lib8tion/math8.h **** 
 367:./lib/lib8tion/math8.h **** 
 368:./lib/lib8tion/math8.h **** /// saturating 8x8 bit multiplication, with 8 bit result
 369:./lib/lib8tion/math8.h **** /// @returns the product of i * j, capping at 0xFF
 370:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t qmul8( uint8_t i, uint8_t j)
 371:./lib/lib8tion/math8.h **** {
 372:./lib/lib8tion/math8.h **** #if QMUL8_C == 1
 373:./lib/lib8tion/math8.h ****     int p = ((uint16_t)i * (uint16_t)(j) );
 374:./lib/lib8tion/math8.h ****     if( p > 255) p = 255;
 375:./lib/lib8tion/math8.h ****     return p;
 376:./lib/lib8tion/math8.h **** #elif QMUL8_AVRASM == 1
 377:./lib/lib8tion/math8.h ****     asm volatile(
 378:./lib/lib8tion/math8.h ****                  /* Multiply 8-bit i * 8-bit j, giving 16-bit r1,r0 */
 379:./lib/lib8tion/math8.h ****                  "  mul %0, %1          \n\t"
 380:./lib/lib8tion/math8.h ****                  /* If high byte of result is zero, all is well. */
 381:./lib/lib8tion/math8.h ****                  "  tst r1              \n\t"
 382:./lib/lib8tion/math8.h ****                  "  breq Lnospill_%=    \n\t"
 383:./lib/lib8tion/math8.h ****                  /* If high byte of result > 0, saturate low byte to 0xFF */
 384:./lib/lib8tion/math8.h ****                  "  ldi %0,0xFF         \n\t"
 385:./lib/lib8tion/math8.h ****                  "  rjmp Ldone_%=       \n\t"
 386:./lib/lib8tion/math8.h ****                  "Lnospill_%=:          \n\t"
 387:./lib/lib8tion/math8.h ****                  /* Extract the LOW 8-bits (r0) */
 388:./lib/lib8tion/math8.h ****                  "  mov %0, r0          \n\t"
 389:./lib/lib8tion/math8.h ****                  "Ldone_%=:             \n\t"
 390:./lib/lib8tion/math8.h ****                  /* Restore r1 to "0"; it's expected to always be that */
 391:./lib/lib8tion/math8.h ****                  "  clr __zero_reg__    \n\t"
 392:./lib/lib8tion/math8.h ****                  : "+a" (i)
 393:./lib/lib8tion/math8.h ****                  : "a"  (j)
 394:./lib/lib8tion/math8.h ****                  : "r0", "r1");
 395:./lib/lib8tion/math8.h **** 
 396:./lib/lib8tion/math8.h ****     return i;
 397:./lib/lib8tion/math8.h **** #else
 398:./lib/lib8tion/math8.h **** #error "No implementation for qmul8 available."
 399:./lib/lib8tion/math8.h **** #endif
 400:./lib/lib8tion/math8.h **** }
 401:./lib/lib8tion/math8.h **** 
 402:./lib/lib8tion/math8.h **** 
 403:./lib/lib8tion/math8.h **** /// take abs() of a signed 8-bit uint8_t
 404:./lib/lib8tion/math8.h **** LIB8STATIC_ALWAYS_INLINE int8_t abs8( int8_t i)
 405:./lib/lib8tion/math8.h **** {
 406:./lib/lib8tion/math8.h **** #if ABS8_C == 1
 407:./lib/lib8tion/math8.h ****     if( i < 0) i = -i;
 408:./lib/lib8tion/math8.h ****     return i;
 409:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 410:./lib/lib8tion/math8.h **** 
 411:./lib/lib8tion/math8.h **** 
 412:./lib/lib8tion/math8.h ****     asm volatile(
 413:./lib/lib8tion/math8.h ****          /* First, check the high bit, and prepare to skip if it's clear */
 414:./lib/lib8tion/math8.h ****          "sbrc %0, 7 \n"
 415:./lib/lib8tion/math8.h **** 
 416:./lib/lib8tion/math8.h ****          /* Negate the value */
 417:./lib/lib8tion/math8.h ****          "neg %0     \n"
 418:./lib/lib8tion/math8.h **** 
 419:./lib/lib8tion/math8.h ****          : "+r" (i) : "r" (i) );
 420:./lib/lib8tion/math8.h ****     return i;
 421:./lib/lib8tion/math8.h **** #else
 422:./lib/lib8tion/math8.h **** #error "No implementation for abs8 available."
 423:./lib/lib8tion/math8.h **** #endif
 424:./lib/lib8tion/math8.h **** }
 425:./lib/lib8tion/math8.h **** 
 426:./lib/lib8tion/math8.h **** ///         square root for 16-bit integers
 427:./lib/lib8tion/math8.h **** ///         About three times faster and five times smaller
 428:./lib/lib8tion/math8.h **** ///         than Arduino's general sqrt on AVR.
 429:./lib/lib8tion/math8.h **** LIB8STATIC uint8_t sqrt16(uint16_t x)
 430:./lib/lib8tion/math8.h **** {
  29              		.loc 1 430 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 431:./lib/lib8tion/math8.h ****     if( x <= 1) {
  33              		.loc 1 431 5 view .LVU1
  34              		.loc 1 431 7 is_stmt 0 view .LVU2
  35 0000 0128     		cmp	r0, #1
 430:./lib/lib8tion/math8.h ****     if( x <= 1) {
  36              		.loc 1 430 1 view .LVU3
  37 0002 30B5     		push	{r4, r5, lr}
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42              		.loc 1 431 7 view .LVU4
  43 0004 01D8     		bhi	.L2
  44              	.LVL1:
  45              	.L11:
 432:./lib/lib8tion/math8.h ****         return x;
 433:./lib/lib8tion/math8.h ****     }
 434:./lib/lib8tion/math8.h **** 
 435:./lib/lib8tion/math8.h ****     uint8_t low = 1; // lower bound
 436:./lib/lib8tion/math8.h ****     uint8_t hi, mid;
 437:./lib/lib8tion/math8.h **** 
 438:./lib/lib8tion/math8.h ****     if( x > 7904) {
 439:./lib/lib8tion/math8.h ****         hi = 255;
 440:./lib/lib8tion/math8.h ****     } else {
 441:./lib/lib8tion/math8.h ****         hi = (x >> 5) + 8; // initial estimate for upper bound
 442:./lib/lib8tion/math8.h ****     }
 443:./lib/lib8tion/math8.h **** 
 444:./lib/lib8tion/math8.h ****     do {
 445:./lib/lib8tion/math8.h ****         mid = (low + hi) >> 1;
 446:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
 447:./lib/lib8tion/math8.h ****             hi = mid - 1;
 448:./lib/lib8tion/math8.h ****         } else {
 449:./lib/lib8tion/math8.h ****             if( mid == 255) {
 450:./lib/lib8tion/math8.h ****                 return 255;
 451:./lib/lib8tion/math8.h ****             }
 452:./lib/lib8tion/math8.h ****             low = mid + 1;
 453:./lib/lib8tion/math8.h ****         }
 454:./lib/lib8tion/math8.h ****     } while (hi >= low);
 455:./lib/lib8tion/math8.h **** 
 456:./lib/lib8tion/math8.h ****     return low - 1;
  46              		.loc 1 456 16 view .LVU5
  47 0006 C0B2     		uxtb	r0, r0
  48              	.L3:
 457:./lib/lib8tion/math8.h **** }
  49              		.loc 1 457 1 view .LVU6
  50 0008 30BD     		pop	{r4, r5, pc}
  51              	.LVL2:
  52              	.L2:
 435:./lib/lib8tion/math8.h ****     uint8_t hi, mid;
  53              		.loc 1 435 5 is_stmt 1 view .LVU7
 436:./lib/lib8tion/math8.h **** 
  54              		.loc 1 436 5 view .LVU8
 438:./lib/lib8tion/math8.h ****         hi = 255;
  55              		.loc 1 438 5 view .LVU9
 438:./lib/lib8tion/math8.h ****         hi = 255;
  56              		.loc 1 438 7 is_stmt 0 view .LVU10
  57 000a B0F5F75F 		cmp	r0, #7904
 441:./lib/lib8tion/math8.h ****     }
  58              		.loc 1 441 9 is_stmt 1 view .LVU11
 441:./lib/lib8tion/math8.h ****     }
  59              		.loc 1 441 23 is_stmt 0 view .LVU12
  60 000e 9DBF     		ittte	ls
  61 0010 4209     		lsrls	r2, r0, #5
 441:./lib/lib8tion/math8.h ****     }
  62              		.loc 1 441 12 view .LVU13
  63 0012 0832     		addls	r2, r2, #8
  64 0014 D2B2     		uxtbls	r2, r2
  65              	.LVL3:
 439:./lib/lib8tion/math8.h ****     } else {
  66              		.loc 1 439 12 view .LVU14
  67 0016 FF22     		movhi	r2, #255
  68              	.LVL4:
 439:./lib/lib8tion/math8.h ****     } else {
  69              		.loc 1 439 12 view .LVU15
  70 0018 0124     		movs	r4, #1
  71              	.LVL5:
  72              	.L7:
 444:./lib/lib8tion/math8.h ****         mid = (low + hi) >> 1;
  73              		.loc 1 444 5 is_stmt 1 view .LVU16
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  74              		.loc 1 445 9 view .LVU17
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  75              		.loc 1 445 20 is_stmt 0 view .LVU18
  76 001a A318     		adds	r3, r4, r2
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  77              		.loc 1 445 26 view .LVU19
  78 001c 5910     		asrs	r1, r3, #1
 445:./lib/lib8tion/math8.h ****         if ((uint16_t)(mid * mid) > x) {
  79              		.loc 1 445 13 view .LVU20
  80 001e C3F34705 		ubfx	r5, r3, #1, #8
  81              	.LVL6:
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  82              		.loc 1 446 9 is_stmt 1 view .LVU21
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  83              		.loc 1 446 13 is_stmt 0 view .LVU22
  84 0022 C3F34F03 		ubfx	r3, r3, #1, #16
  85 0026 13FB03F3 		smulbb	r3, r3, r3
 446:./lib/lib8tion/math8.h ****             hi = mid - 1;
  86              		.loc 1 446 12 view .LVU23
  87 002a 9BB2     		uxth	r3, r3
  88 002c 8342     		cmp	r3, r0
  89 002e 05D9     		bls	.L5
 447:./lib/lib8tion/math8.h ****         } else {
  90              		.loc 1 447 13 is_stmt 1 view .LVU24
 447:./lib/lib8tion/math8.h ****         } else {
  91              		.loc 1 447 16 is_stmt 0 view .LVU25
  92 0030 6A1E     		subs	r2, r5, #1
  93              	.LVL7:
 447:./lib/lib8tion/math8.h ****         } else {
  94              		.loc 1 447 16 view .LVU26
  95 0032 D2B2     		uxtb	r2, r2
  96              	.LVL8:
  97              	.L6:
 454:./lib/lib8tion/math8.h **** 
  98              		.loc 1 454 13 is_stmt 1 view .LVU27
 454:./lib/lib8tion/math8.h **** 
  99              		.loc 1 454 5 is_stmt 0 view .LVU28
 100 0034 9442     		cmp	r4, r2
 101 0036 F0D9     		bls	.L7
 456:./lib/lib8tion/math8.h **** }
 102              		.loc 1 456 5 is_stmt 1 view .LVU29
 456:./lib/lib8tion/math8.h **** }
 103              		.loc 1 456 16 is_stmt 0 view .LVU30
 104 0038 601E     		subs	r0, r4, #1
 105              	.LVL9:
 456:./lib/lib8tion/math8.h **** }
 106              		.loc 1 456 16 view .LVU31
 107 003a E4E7     		b	.L11
 108              	.LVL10:
 109              	.L5:
 449:./lib/lib8tion/math8.h ****                 return 255;
 110              		.loc 1 449 13 is_stmt 1 view .LVU32
 449:./lib/lib8tion/math8.h ****                 return 255;
 111              		.loc 1 449 15 is_stmt 0 view .LVU33
 112 003c FF29     		cmp	r1, #255
 113 003e 02D0     		beq	.L9
 452:./lib/lib8tion/math8.h ****         }
 114              		.loc 1 452 13 is_stmt 1 view .LVU34
 452:./lib/lib8tion/math8.h ****         }
 115              		.loc 1 452 17 is_stmt 0 view .LVU35
 116 0040 6C1C     		adds	r4, r5, #1
 117              	.LVL11:
 452:./lib/lib8tion/math8.h ****         }
 118              		.loc 1 452 17 view .LVU36
 119 0042 E4B2     		uxtb	r4, r4
 120              	.LVL12:
 452:./lib/lib8tion/math8.h ****         }
 121              		.loc 1 452 17 view .LVU37
 122 0044 F6E7     		b	.L6
 123              	.L9:
 450:./lib/lib8tion/math8.h ****             }
 124              		.loc 1 450 24 view .LVU38
 125 0046 0846     		mov	r0, r1
 126              	.LVL13:
 450:./lib/lib8tion/math8.h ****             }
 127              		.loc 1 450 24 view .LVU39
 128 0048 DEE7     		b	.L3
 129              		.cfi_endproc
 130              	.LFE320:
 132              		.section	.text.sin8_C,"ax",%progbits
 133              		.align	1
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	sin8_C:
 140              	.LVL14:
 141              	.LFB335:
 142              		.file 2 "./lib/lib8tion/trig8.h"
   1:./lib/lib8tion/trig8.h **** #ifndef __INC_LIB8TION_TRIG_H
   2:./lib/lib8tion/trig8.h **** #define __INC_LIB8TION_TRIG_H
   3:./lib/lib8tion/trig8.h **** 
   4:./lib/lib8tion/trig8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/trig8.h **** 
   6:./lib/lib8tion/trig8.h **** ///@defgroup Trig Fast trig functions
   7:./lib/lib8tion/trig8.h **** /// Fast 8 and 16-bit approximations of sin(x) and cos(x).
   8:./lib/lib8tion/trig8.h **** ///        Don't use these approximations for calculating the
   9:./lib/lib8tion/trig8.h **** ///        trajectory of a rocket to Mars, but they're great
  10:./lib/lib8tion/trig8.h **** ///        for art projects and LED displays.
  11:./lib/lib8tion/trig8.h **** ///
  12:./lib/lib8tion/trig8.h **** ///        On Arduino/AVR, the 16-bit approximation is more than
  13:./lib/lib8tion/trig8.h **** ///        10X faster than floating point sin(x) and cos(x), while
  14:./lib/lib8tion/trig8.h **** /// the 8-bit approximation is more than 20X faster.
  15:./lib/lib8tion/trig8.h **** ///@{
  16:./lib/lib8tion/trig8.h **** 
  17:./lib/lib8tion/trig8.h **** #if defined(__AVR__)
  18:./lib/lib8tion/trig8.h **** #define sin16 sin16_avr
  19:./lib/lib8tion/trig8.h **** #else
  20:./lib/lib8tion/trig8.h **** #define sin16 sin16_C
  21:./lib/lib8tion/trig8.h **** #endif
  22:./lib/lib8tion/trig8.h **** 
  23:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  24:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  25:./lib/lib8tion/trig8.h **** ///
  26:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  27:./lib/lib8tion/trig8.h **** ///
  28:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  29:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  30:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_avr( uint16_t theta )
  31:./lib/lib8tion/trig8.h **** {
  32:./lib/lib8tion/trig8.h ****     static const uint8_t data[] =
  33:./lib/lib8tion/trig8.h ****     { 0,         0,         49, 0, 6393%256,   6393/256, 48, 0,
  34:./lib/lib8tion/trig8.h ****       12539%256, 12539/256, 44, 0, 18204%256, 18204/256, 38, 0,
  35:./lib/lib8tion/trig8.h ****       23170%256, 23170/256, 31, 0, 27245%256, 27245/256, 23, 0,
  36:./lib/lib8tion/trig8.h ****       30273%256, 30273/256, 14, 0, 32137%256, 32137/256,  4 /*,0*/ };
  37:./lib/lib8tion/trig8.h **** 
  38:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF);
  39:./lib/lib8tion/trig8.h **** 
  40:./lib/lib8tion/trig8.h ****     // AVR doesn't have a multi-bit shift instruction,
  41:./lib/lib8tion/trig8.h ****     // so if we say "offset >>= 3", gcc makes a tiny loop.
  42:./lib/lib8tion/trig8.h ****     // Inserting empty volatile statements between each
  43:./lib/lib8tion/trig8.h ****     // bit shift forces gcc to unroll the loop.
  44:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..8191
  45:./lib/lib8tion/trig8.h ****     asm volatile("");
  46:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..4095
  47:./lib/lib8tion/trig8.h ****     asm volatile("");
  48:./lib/lib8tion/trig8.h ****     offset >>= 1; // 0..2047
  49:./lib/lib8tion/trig8.h **** 
  50:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  51:./lib/lib8tion/trig8.h **** 
  52:./lib/lib8tion/trig8.h ****     uint8_t sectionX4;
  53:./lib/lib8tion/trig8.h ****     sectionX4 = offset / 256;
  54:./lib/lib8tion/trig8.h ****     sectionX4 *= 4;
  55:./lib/lib8tion/trig8.h **** 
  56:./lib/lib8tion/trig8.h ****     uint8_t m;
  57:./lib/lib8tion/trig8.h **** 
  58:./lib/lib8tion/trig8.h ****     union {
  59:./lib/lib8tion/trig8.h ****         uint16_t b;
  60:./lib/lib8tion/trig8.h ****         struct {
  61:./lib/lib8tion/trig8.h ****             uint8_t blo;
  62:./lib/lib8tion/trig8.h ****             uint8_t bhi;
  63:./lib/lib8tion/trig8.h ****         };
  64:./lib/lib8tion/trig8.h ****     } u;
  65:./lib/lib8tion/trig8.h **** 
  66:./lib/lib8tion/trig8.h ****     //in effect u.b = blo + (256 * bhi);
  67:./lib/lib8tion/trig8.h ****     u.blo = data[ sectionX4 ];
  68:./lib/lib8tion/trig8.h ****     u.bhi = data[ sectionX4 + 1];
  69:./lib/lib8tion/trig8.h ****     m     = data[ sectionX4 + 2];
  70:./lib/lib8tion/trig8.h **** 
  71:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
  72:./lib/lib8tion/trig8.h **** 
  73:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
  74:./lib/lib8tion/trig8.h **** 
  75:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + u.b;
  76:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
  77:./lib/lib8tion/trig8.h **** 
  78:./lib/lib8tion/trig8.h ****     return y;
  79:./lib/lib8tion/trig8.h **** }
  80:./lib/lib8tion/trig8.h **** 
  81:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of sin(x). This approximation never varies more than
  82:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
  83:./lib/lib8tion/trig8.h **** ///
  84:./lib/lib8tion/trig8.h **** ///     float s = sin(x) * 32767.0;
  85:./lib/lib8tion/trig8.h **** ///
  86:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
  87:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
  88:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t sin16_C( uint16_t theta )
  89:./lib/lib8tion/trig8.h **** {
  90:./lib/lib8tion/trig8.h ****     static const uint16_t base[] =
  91:./lib/lib8tion/trig8.h ****     { 0, 6393, 12539, 18204, 23170, 27245, 30273, 32137 };
  92:./lib/lib8tion/trig8.h ****     static const uint8_t slope[] =
  93:./lib/lib8tion/trig8.h ****     { 49, 48, 44, 38, 31, 23, 14, 4 };
  94:./lib/lib8tion/trig8.h **** 
  95:./lib/lib8tion/trig8.h ****     uint16_t offset = (theta & 0x3FFF) >> 3; // 0..2047
  96:./lib/lib8tion/trig8.h ****     if( theta & 0x4000 ) offset = 2047 - offset;
  97:./lib/lib8tion/trig8.h **** 
  98:./lib/lib8tion/trig8.h ****     uint8_t section = offset / 256; // 0..7
  99:./lib/lib8tion/trig8.h ****     uint16_t b   = base[section];
 100:./lib/lib8tion/trig8.h ****     uint8_t  m   = slope[section];
 101:./lib/lib8tion/trig8.h **** 
 102:./lib/lib8tion/trig8.h ****     uint8_t secoffset8 = (uint8_t)(offset) / 2;
 103:./lib/lib8tion/trig8.h **** 
 104:./lib/lib8tion/trig8.h ****     uint16_t mx = m * secoffset8;
 105:./lib/lib8tion/trig8.h ****     int16_t  y  = mx + b;
 106:./lib/lib8tion/trig8.h **** 
 107:./lib/lib8tion/trig8.h ****     if( theta & 0x8000 ) y = -y;
 108:./lib/lib8tion/trig8.h **** 
 109:./lib/lib8tion/trig8.h ****     return y;
 110:./lib/lib8tion/trig8.h **** }
 111:./lib/lib8tion/trig8.h **** 
 112:./lib/lib8tion/trig8.h **** 
 113:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of cos(x). This approximation never varies more than
 114:./lib/lib8tion/trig8.h **** /// 0.69% from the floating point value you'd get by doing
 115:./lib/lib8tion/trig8.h **** ///
 116:./lib/lib8tion/trig8.h **** ///     float s = cos(x) * 32767.0;
 117:./lib/lib8tion/trig8.h **** ///
 118:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-65535
 119:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between -32767 to 32767.
 120:./lib/lib8tion/trig8.h **** LIB8STATIC int16_t cos16( uint16_t theta)
 121:./lib/lib8tion/trig8.h **** {
 122:./lib/lib8tion/trig8.h ****     return sin16( theta + 16384);
 123:./lib/lib8tion/trig8.h **** }
 124:./lib/lib8tion/trig8.h **** 
 125:./lib/lib8tion/trig8.h **** ///////////////////////////////////////////////////////////////////////
 126:./lib/lib8tion/trig8.h **** 
 127:./lib/lib8tion/trig8.h **** // sin8 & cos8
 128:./lib/lib8tion/trig8.h **** //        Fast 8-bit approximations of sin(x) & cos(x).
 129:./lib/lib8tion/trig8.h **** //        Input angle is an unsigned int from 0-255.
 130:./lib/lib8tion/trig8.h **** //        Output is an unsigned int from 0 to 255.
 131:./lib/lib8tion/trig8.h **** //
 132:./lib/lib8tion/trig8.h **** //        This approximation can vary to to 2%
 133:./lib/lib8tion/trig8.h **** //        from the floating point value you'd get by doing
 134:./lib/lib8tion/trig8.h **** //          float s = (sin( x ) * 128.0) + 128;
 135:./lib/lib8tion/trig8.h **** //
 136:./lib/lib8tion/trig8.h **** //        Don't use this approximation for calculating the
 137:./lib/lib8tion/trig8.h **** //        "real" trigonometric calculations, but it's great
 138:./lib/lib8tion/trig8.h **** //        for art projects and LED displays.
 139:./lib/lib8tion/trig8.h **** //
 140:./lib/lib8tion/trig8.h **** //        On Arduino/AVR, this approximation is more than
 141:./lib/lib8tion/trig8.h **** //        20X faster than floating point sin(x) and cos(x)
 142:./lib/lib8tion/trig8.h **** 
 143:./lib/lib8tion/trig8.h **** #if defined(__AVR__) && !defined(LIB8_ATTINY)
 144:./lib/lib8tion/trig8.h **** #define sin8 sin8_avr
 145:./lib/lib8tion/trig8.h **** #else
 146:./lib/lib8tion/trig8.h **** #define sin8 sin8_C
 147:./lib/lib8tion/trig8.h **** #endif
 148:./lib/lib8tion/trig8.h **** 
 149:./lib/lib8tion/trig8.h **** 
 150:./lib/lib8tion/trig8.h **** static const uint8_t b_m16_interleave[8] = { 0, 49, 49, 41, 90, 27, 117, 10 };
 151:./lib/lib8tion/trig8.h **** 
 152:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 153:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 154:./lib/lib8tion/trig8.h **** ///
 155:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 156:./lib/lib8tion/trig8.h **** ///
 157:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 158:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 159:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t  sin8_avr( uint8_t theta)
 160:./lib/lib8tion/trig8.h **** {
 161:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 162:./lib/lib8tion/trig8.h **** 
 163:./lib/lib8tion/trig8.h ****     asm volatile(
 164:./lib/lib8tion/trig8.h ****                  "sbrc %[theta],6         \n\t"
 165:./lib/lib8tion/trig8.h ****                  "com  %[offset]           \n\t"
 166:./lib/lib8tion/trig8.h ****                  : [theta] "+r" (theta), [offset] "+r" (offset)
 167:./lib/lib8tion/trig8.h ****                  );
 168:./lib/lib8tion/trig8.h **** 
 169:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 170:./lib/lib8tion/trig8.h **** 
 171:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 172:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 173:./lib/lib8tion/trig8.h **** 
 174:./lib/lib8tion/trig8.h ****     uint8_t m16; uint8_t b;
 175:./lib/lib8tion/trig8.h **** 
 176:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 177:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 178:./lib/lib8tion/trig8.h **** 
 179:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 180:./lib/lib8tion/trig8.h ****     p += s2;
 181:./lib/lib8tion/trig8.h ****     b   = *p;
 182:./lib/lib8tion/trig8.h ****     p++;
 183:./lib/lib8tion/trig8.h ****     m16 = *p;
 184:./lib/lib8tion/trig8.h **** 
 185:./lib/lib8tion/trig8.h ****     uint8_t mx;
 186:./lib/lib8tion/trig8.h ****     uint8_t xr1;
 187:./lib/lib8tion/trig8.h ****     asm volatile(
 188:./lib/lib8tion/trig8.h ****                  "mul %[m16],%[secoffset]   \n\t"
 189:./lib/lib8tion/trig8.h ****                  "mov %[mx],r0              \n\t"
 190:./lib/lib8tion/trig8.h ****                  "mov %[xr1],r1             \n\t"
 191:./lib/lib8tion/trig8.h ****                  "eor  r1, r1               \n\t"
 192:./lib/lib8tion/trig8.h ****                  "swap %[mx]                \n\t"
 193:./lib/lib8tion/trig8.h ****                  "andi %[mx],0x0F           \n\t"
 194:./lib/lib8tion/trig8.h ****                  "swap %[xr1]               \n\t"
 195:./lib/lib8tion/trig8.h ****                  "andi %[xr1], 0xF0         \n\t"
 196:./lib/lib8tion/trig8.h ****                  "or   %[mx], %[xr1]        \n\t"
 197:./lib/lib8tion/trig8.h ****                  : [mx] "=d" (mx), [xr1] "=d" (xr1)
 198:./lib/lib8tion/trig8.h ****                  : [m16] "d" (m16), [secoffset] "d" (secoffset)
 199:./lib/lib8tion/trig8.h ****                  );
 200:./lib/lib8tion/trig8.h **** 
 201:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 202:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 203:./lib/lib8tion/trig8.h **** 
 204:./lib/lib8tion/trig8.h ****     y += 128;
 205:./lib/lib8tion/trig8.h **** 
 206:./lib/lib8tion/trig8.h ****     return y;
 207:./lib/lib8tion/trig8.h **** }
 208:./lib/lib8tion/trig8.h **** 
 209:./lib/lib8tion/trig8.h **** 
 210:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of sin(x). This approximation never varies more than
 211:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 212:./lib/lib8tion/trig8.h **** ///
 213:./lib/lib8tion/trig8.h **** ///     float s = (sin(x) * 128.0) + 128;
 214:./lib/lib8tion/trig8.h **** ///
 215:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 216:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 217:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t sin8_C( uint8_t theta)
 218:./lib/lib8tion/trig8.h **** {
 143              		.loc 2 218 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 219:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 147              		.loc 2 219 5 view .LVU41
 220:./lib/lib8tion/trig8.h ****     if( theta & 0x40 ) {
 148              		.loc 2 220 5 view .LVU42
 149              		.loc 2 220 7 is_stmt 0 view .LVU43
 150 0000 10F04003 		ands	r3, r0, #64
 221:./lib/lib8tion/trig8.h ****         offset = (uint8_t)255 - offset;
 151              		.loc 2 221 9 is_stmt 1 view .LVU44
 152              		.loc 2 221 16 is_stmt 0 view .LVU45
 153 0004 1ABF     		itte	ne
 154 0006 C243     		mvnne	r2, r0
 155 0008 D2B2     		uxtbne	r2, r2
 156              	.LVL15:
 157              		.loc 2 221 16 view .LVU46
 158 000a 0246     		moveq	r2, r0
 159              	.LVL16:
 222:./lib/lib8tion/trig8.h ****     }
 223:./lib/lib8tion/trig8.h ****     offset &= 0x3F; // 0..63
 160              		.loc 2 223 5 is_stmt 1 view .LVU47
 224:./lib/lib8tion/trig8.h **** 
 225:./lib/lib8tion/trig8.h ****     uint8_t secoffset  = offset & 0x0F; // 0..15
 161              		.loc 2 225 5 view .LVU48
 218:./lib/lib8tion/trig8.h ****     uint8_t offset = theta;
 162              		.loc 2 218 1 is_stmt 0 view .LVU49
 163 000c 10B5     		push	{r4, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167              		.loc 2 225 13 view .LVU50
 168 000e 02F00F01 		and	r1, r2, #15
 169              	.LVL17:
 226:./lib/lib8tion/trig8.h ****     if( theta & 0x40) secoffset++;
 170              		.loc 2 226 5 is_stmt 1 view .LVU51
 171              		.loc 2 226 7 is_stmt 0 view .LVU52
 172 0012 03B1     		cbz	r3, .L14
 173              		.loc 2 226 23 is_stmt 1 discriminator 1 view .LVU53
 174              		.loc 2 226 32 is_stmt 0 discriminator 1 view .LVU54
 175 0014 0131     		adds	r1, r1, #1
 176              	.LVL18:
 177              	.L14:
 227:./lib/lib8tion/trig8.h **** 
 228:./lib/lib8tion/trig8.h ****     uint8_t section = offset >> 4; // 0..3
 178              		.loc 2 228 5 is_stmt 1 view .LVU55
 229:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 179              		.loc 2 229 5 view .LVU56
 230:./lib/lib8tion/trig8.h ****     const uint8_t* p = b_m16_interleave;
 180              		.loc 2 230 5 view .LVU57
 231:./lib/lib8tion/trig8.h ****     p += s2;
 181              		.loc 2 231 5 view .LVU58
 182              		.loc 2 231 7 is_stmt 0 view .LVU59
 183 0016 0A4C     		ldr	r4, .L20
 228:./lib/lib8tion/trig8.h ****     uint8_t s2 = section * 2;
 184              		.loc 2 228 13 view .LVU60
 185 0018 C2F30112 		ubfx	r2, r2, #4, #2
 186              	.LVL19:
 187              		.loc 2 231 7 view .LVU61
 188 001c 04EB4203 		add	r3, r4, r2, lsl #1
 189              	.LVL20:
 232:./lib/lib8tion/trig8.h ****     uint8_t b   =  *p;
 190              		.loc 2 232 5 is_stmt 1 view .LVU62
 233:./lib/lib8tion/trig8.h ****     p++;
 191              		.loc 2 233 5 view .LVU63
 234:./lib/lib8tion/trig8.h ****     uint8_t m16 =  *p;
 192              		.loc 2 234 5 view .LVU64
 235:./lib/lib8tion/trig8.h **** 
 236:./lib/lib8tion/trig8.h ****     uint8_t mx = (m16 * secoffset) >> 4;
 193              		.loc 2 236 5 view .LVU65
 237:./lib/lib8tion/trig8.h **** 
 238:./lib/lib8tion/trig8.h ****     int8_t y = mx + b;
 194              		.loc 2 238 5 view .LVU66
 236:./lib/lib8tion/trig8.h **** 
 195              		.loc 2 236 23 is_stmt 0 view .LVU67
 196 0020 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 197              	.LVL21:
 236:./lib/lib8tion/trig8.h **** 
 198              		.loc 2 236 23 view .LVU68
 199 0022 13FB01F1 		smulbb	r1, r3, r1
 200              	.LVL22:
 201              		.loc 2 238 19 view .LVU69
 202 0026 14F81230 		ldrb	r3, [r4, r2, lsl #1]	@ zero_extendqisi2
 203 002a 03EB2113 		add	r3, r3, r1, asr #4
 204 002e DBB2     		uxtb	r3, r3
 205              	.LVL23:
 239:./lib/lib8tion/trig8.h ****     if( theta & 0x80 ) y = -y;
 206              		.loc 2 239 5 is_stmt 1 view .LVU70
 207              		.loc 2 239 7 is_stmt 0 view .LVU71
 208 0030 0206     		lsls	r2, r0, #24
 209              	.LVL24:
 210              		.loc 2 239 24 is_stmt 1 view .LVU72
 211              		.loc 2 239 26 is_stmt 0 view .LVU73
 212 0032 44BF     		itt	mi
 213 0034 5B42     		rsbmi	r3, r3, #0
 214              	.LVL25:
 215              		.loc 2 239 26 view .LVU74
 216 0036 DBB2     		uxtbmi	r3, r3
 217              	.LVL26:
 240:./lib/lib8tion/trig8.h **** 
 241:./lib/lib8tion/trig8.h ****     y += 128;
 218              		.loc 2 241 5 is_stmt 1 view .LVU75
 242:./lib/lib8tion/trig8.h **** 
 243:./lib/lib8tion/trig8.h ****     return y;
 219              		.loc 2 243 5 view .LVU76
 244:./lib/lib8tion/trig8.h **** }
 220              		.loc 2 244 1 is_stmt 0 view .LVU77
 221 0038 83F08000 		eor	r0, r3, #128
 222              	.LVL27:
 223              		.loc 2 244 1 view .LVU78
 224 003c 10BD     		pop	{r4, pc}
 225              	.L21:
 226 003e 00BF     		.align	2
 227              	.L20:
 228 0040 00000000 		.word	.LANCHOR0
 229              		.cfi_endproc
 230              	.LFE335:
 232              		.section	.text.BAND_SAT_math,"ax",%progbits
 233              		.align	1
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	BAND_SAT_math:
 240              	.LVL28:
 241              	.LFB373:
 242              		.file 3 "quantum/rgb_matrix/animations/colorband_sat_anim.h"
   1:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SAT
   2:quantum/rgb_matrix/animations/colorband_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SAT)
   3:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_sat_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_sat_anim.h **** static HSV BAND_SAT_math(HSV hsv, uint8_t i, uint8_t time) {
 243              		.loc 3 5 60 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248              		.loc 3 5 60 is_stmt 0 view .LVU80
 249 0000 84B0     		sub	sp, sp, #16
 250              		.cfi_def_cfa_offset 16
 251 0002 C0F30723 		ubfx	r3, r0, #8, #8
 252              	.LVL29:
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     int16_t s = hsv.s - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 253              		.loc 3 6 5 is_stmt 1 view .LVU81
 254              	.LBB108:
 255              	.LBI108:
 256              		.file 4 "./lib/lib8tion/scale8.h"
   1:./lib/lib8tion/scale8.h **** #ifndef __INC_LIB8TION_SCALE_H
   2:./lib/lib8tion/scale8.h **** #define __INC_LIB8TION_SCALE_H
   3:./lib/lib8tion/scale8.h **** 
   4:./lib/lib8tion/scale8.h **** ///@ingroup lib8tion
   5:./lib/lib8tion/scale8.h **** 
   6:./lib/lib8tion/scale8.h **** ///@defgroup Scaling Scaling functions
   7:./lib/lib8tion/scale8.h **** /// Fast, efficient 8-bit scaling functions specifically
   8:./lib/lib8tion/scale8.h **** /// designed for high-performance LED programming.
   9:./lib/lib8tion/scale8.h **** ///
  10:./lib/lib8tion/scale8.h **** /// Because of the AVR(Arduino) and ARM assembly language
  11:./lib/lib8tion/scale8.h **** /// implementations provided, using these functions often
  12:./lib/lib8tion/scale8.h **** /// results in smaller and faster code than the equivalent
  13:./lib/lib8tion/scale8.h **** /// program using plain "C" arithmetic and logic.
  14:./lib/lib8tion/scale8.h **** ///@{
  15:./lib/lib8tion/scale8.h **** 
  16:./lib/lib8tion/scale8.h **** ///  scale one byte by a second one, which is treated as
  17:./lib/lib8tion/scale8.h **** ///  the numerator of a fraction whose denominator is 256
  18:./lib/lib8tion/scale8.h **** ///  In other words, it computes i * (scale / 256)
  19:./lib/lib8tion/scale8.h **** ///  4 clocks AVR with MUL, 2 clocks ARM
  20:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8( uint8_t i, fract8 scale)
 257              		.loc 4 20 34 view .LVU82
 258              	.LBB109:
  21:./lib/lib8tion/scale8.h **** {
  22:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
  23:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  24:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * (1+(uint16_t)(scale))) >> 8;
  25:./lib/lib8tion/scale8.h **** #else
  26:./lib/lib8tion/scale8.h ****     return ((uint16_t)i * (uint16_t)(scale) ) >> 8;
 259              		.loc 4 26 5 view .LVU83
 260              		.loc 4 26 5 is_stmt 0 view .LVU84
 261              	.LBE109:
 262              	.LBE108:
   7:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 263              		.loc 3 7 5 is_stmt 1 view .LVU85
 264              	.LBB111:
 265              	.LBI111:
  20:./lib/lib8tion/scale8.h **** {
 266              		.loc 4 20 34 view .LVU86
 267              	.LBB112:
 268              		.loc 4 26 5 view .LVU87
 269              		.loc 4 26 5 is_stmt 0 view .LVU88
 270              	.LBE112:
 271              	.LBE111:
   8:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     return hsv;
 272              		.loc 3 8 5 is_stmt 1 view .LVU89
   5:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     int16_t s = hsv.s - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 273              		.loc 3 5 60 is_stmt 0 view .LVU90
 274 0006 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 275              		.loc 3 6 29 view .LVU91
 276 0008 2C31     		adds	r1, r1, #44
 277              	.LVL30:
 278              	.LBB114:
 279              	.LBB110:
 280              		.loc 4 26 25 view .LVU92
 281 000a 1248     		ldr	r0, .L23
 282 000c 10F81100 		ldrb	r0, [r0, r1, lsl #1]	@ zero_extendqisi2
 283 0010 E421     		movs	r1, #228
 284              	.LVL31:
 285              		.loc 4 26 25 view .LVU93
 286 0012 10FB01F0 		smulbb	r0, r0, r1
 287              	.LBE110:
 288              	.LBE114:
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 289              		.loc 3 6 66 view .LVU94
 290 0016 C2EB1020 		rsb	r0, r2, r0, lsr #8
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 291              		.loc 3 6 71 view .LVU95
 292 001a 1C30     		adds	r0, r0, #28
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 293              		.loc 3 6 25 view .LVU96
 294 001c 0028     		cmp	r0, #0
 295 001e B8BF     		it	lt
 296 0020 4042     		rsblt	r0, r0, #0
   6:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     hsv.s     = scale8(s < 0 ? 0 : s, hsv.s);
 297              		.loc 3 6 23 view .LVU97
 298 0022 A3EBC000 		sub	r0, r3, r0, lsl #3
   7:quantum/rgb_matrix/animations/colorband_sat_anim.h ****     return hsv;
 299              		.loc 3 7 34 view .LVU98
 300 0026 00B2     		sxth	r0, r0
 301 0028 20EAE070 		bic	r0, r0, r0, asr #31
 302              	.LBB115:
 303              	.LBB113:
 304              		.loc 4 26 25 view .LVU99
 305 002c 10FB03F0 		smulbb	r0, r0, r3
 306              		.loc 4 26 47 view .LVU100
 307 0030 0012     		asrs	r0, r0, #8
 308 0032 8DF80500 		strb	r0, [sp, #5]
 309              	.LBE113:
 310              	.LBE115:
 311              		.loc 3 8 12 view .LVU101
 312 0036 019B     		ldr	r3, [sp, #4]
 313              		.loc 3 8 12 view .LVU102
 314 0038 0020     		movs	r0, #0
 315 003a DAB2     		uxtb	r2, r3
 316              	.LVL32:
 317              		.loc 3 8 12 view .LVU103
 318 003c 62F30700 		bfi	r0, r2, #0, #8
 319 0040 C3F30722 		ubfx	r2, r3, #8, #8
 320 0044 62F30F20 		bfi	r0, r2, #8, #8
 321 0048 C3F30743 		ubfx	r3, r3, #16, #8
 322 004c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix/animations/colorband_sat_anim.h **** }
 323              		.loc 3 9 1 view .LVU104
 324 0050 04B0     		add	sp, sp, #16
 325              		.cfi_def_cfa_offset 0
 326              		@ sp needed
 327 0052 7047     		bx	lr
 328              	.L24:
 329              		.align	2
 330              	.L23:
 331 0054 00000000 		.word	g_led_config
 332              		.cfi_endproc
 333              	.LFE373:
 335              		.section	.text.BAND_VAL_math,"ax",%progbits
 336              		.align	1
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	BAND_VAL_math:
 343              	.LVL33:
 344              	.LFB375:
 345              		.file 5 "quantum/rgb_matrix/animations/colorband_val_anim.h"
   1:quantum/rgb_matrix/animations/colorband_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_VAL
   2:quantum/rgb_matrix/animations/colorband_val_anim.h **** RGB_MATRIX_EFFECT(BAND_VAL)
   3:quantum/rgb_matrix/animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_val_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_val_anim.h **** static HSV BAND_VAL_math(HSV hsv, uint8_t i, uint8_t time) {
 346              		.loc 5 5 60 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 16
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 351              		.loc 5 5 60 is_stmt 0 view .LVU106
 352 0000 84B0     		sub	sp, sp, #16
 353              		.cfi_def_cfa_offset 16
 354 0002 C0F30743 		ubfx	r3, r0, #16, #8
 355              	.LVL34:
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     int16_t v = hsv.v - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 356              		.loc 5 6 5 is_stmt 1 view .LVU107
 357              	.LBB116:
 358              	.LBI116:
  20:./lib/lib8tion/scale8.h **** {
 359              		.loc 4 20 34 view .LVU108
 360              	.LBB117:
 361              		.loc 4 26 5 view .LVU109
 362              		.loc 4 26 5 is_stmt 0 view .LVU110
 363              	.LBE117:
 364              	.LBE116:
   7:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 365              		.loc 5 7 5 is_stmt 1 view .LVU111
 366              	.LBB119:
 367              	.LBI119:
  20:./lib/lib8tion/scale8.h **** {
 368              		.loc 4 20 34 view .LVU112
 369              	.LBB120:
 370              		.loc 4 26 5 view .LVU113
 371              		.loc 4 26 5 is_stmt 0 view .LVU114
 372              	.LBE120:
 373              	.LBE119:
   8:quantum/rgb_matrix/animations/colorband_val_anim.h ****     return hsv;
 374              		.loc 5 8 5 is_stmt 1 view .LVU115
   5:quantum/rgb_matrix/animations/colorband_val_anim.h ****     int16_t v = hsv.v - abs(scale8(g_led_config.point[i].x, 228) + 28 - time) * 8;
 375              		.loc 5 5 60 is_stmt 0 view .LVU116
 376 0006 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 377              		.loc 5 6 29 view .LVU117
 378 0008 2C31     		adds	r1, r1, #44
 379              	.LVL35:
 380              	.LBB122:
 381              	.LBB118:
 382              		.loc 4 26 25 view .LVU118
 383 000a 1248     		ldr	r0, .L26
 384 000c 10F81100 		ldrb	r0, [r0, r1, lsl #1]	@ zero_extendqisi2
 385 0010 E421     		movs	r1, #228
 386              	.LVL36:
 387              		.loc 4 26 25 view .LVU119
 388 0012 10FB01F0 		smulbb	r0, r0, r1
 389              	.LBE118:
 390              	.LBE122:
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 391              		.loc 5 6 66 view .LVU120
 392 0016 C2EB1020 		rsb	r0, r2, r0, lsr #8
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 393              		.loc 5 6 71 view .LVU121
 394 001a 1C30     		adds	r0, r0, #28
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 395              		.loc 5 6 25 view .LVU122
 396 001c 0028     		cmp	r0, #0
 397 001e B8BF     		it	lt
 398 0020 4042     		rsblt	r0, r0, #0
   6:quantum/rgb_matrix/animations/colorband_val_anim.h ****     hsv.v     = scale8(v < 0 ? 0 : v, hsv.v);
 399              		.loc 5 6 23 view .LVU123
 400 0022 A3EBC000 		sub	r0, r3, r0, lsl #3
   7:quantum/rgb_matrix/animations/colorband_val_anim.h ****     return hsv;
 401              		.loc 5 7 34 view .LVU124
 402 0026 00B2     		sxth	r0, r0
 403 0028 20EAE070 		bic	r0, r0, r0, asr #31
 404              	.LBB123:
 405              	.LBB121:
 406              		.loc 4 26 25 view .LVU125
 407 002c 10FB03F0 		smulbb	r0, r0, r3
 408              		.loc 4 26 47 view .LVU126
 409 0030 0012     		asrs	r0, r0, #8
 410 0032 8DF80600 		strb	r0, [sp, #6]
 411              	.LBE121:
 412              	.LBE123:
 413              		.loc 5 8 12 view .LVU127
 414 0036 019B     		ldr	r3, [sp, #4]
 415              		.loc 5 8 12 view .LVU128
 416 0038 0020     		movs	r0, #0
 417 003a DAB2     		uxtb	r2, r3
 418              	.LVL37:
 419              		.loc 5 8 12 view .LVU129
 420 003c 62F30700 		bfi	r0, r2, #0, #8
 421 0040 C3F30722 		ubfx	r2, r3, #8, #8
 422 0044 62F30F20 		bfi	r0, r2, #8, #8
 423 0048 C3F30743 		ubfx	r3, r3, #16, #8
 424 004c 63F31740 		bfi	r0, r3, #16, #8
   9:quantum/rgb_matrix/animations/colorband_val_anim.h **** }
 425              		.loc 5 9 1 view .LVU130
 426 0050 04B0     		add	sp, sp, #16
 427              		.cfi_def_cfa_offset 0
 428              		@ sp needed
 429 0052 7047     		bx	lr
 430              	.L27:
 431              		.align	2
 432              	.L26:
 433 0054 00000000 		.word	g_led_config
 434              		.cfi_endproc
 435              	.LFE375:
 437              		.section	.text.CYCLE_ALL_math,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	CYCLE_ALL_math:
 445              	.LVL38:
 446              	.LFB385:
 447              		.file 6 "quantum/rgb_matrix/animations/cycle_all_anim.h"
   1:quantum/rgb_matrix/animations/cycle_all_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_ALL
   2:quantum/rgb_matrix/animations/cycle_all_anim.h **** RGB_MATRIX_EFFECT(CYCLE_ALL)
   3:quantum/rgb_matrix/animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_all_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_all_anim.h **** static HSV CYCLE_ALL_math(HSV hsv, uint8_t i, uint8_t time) {
 448              		.loc 6 5 61 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453              		.loc 6 5 61 is_stmt 0 view .LVU132
 454 0000 84B0     		sub	sp, sp, #16
 455              		.cfi_def_cfa_offset 16
 456              	.LVL39:
   6:quantum/rgb_matrix/animations/cycle_all_anim.h ****     hsv.h = time;
 457              		.loc 6 6 5 is_stmt 1 view .LVU133
   7:quantum/rgb_matrix/animations/cycle_all_anim.h ****     return hsv;
 458              		.loc 6 7 5 view .LVU134
   5:quantum/rgb_matrix/animations/cycle_all_anim.h ****     hsv.h = time;
 459              		.loc 6 5 61 is_stmt 0 view .LVU135
 460 0002 0190     		str	r0, [sp, #4]
 461              		.loc 6 7 12 view .LVU136
 462 0004 8DF80420 		strb	r2, [sp, #4]
 463 0008 019B     		ldr	r3, [sp, #4]
 464 000a 0020     		movs	r0, #0
 465 000c DAB2     		uxtb	r2, r3
 466              	.LVL40:
 467              		.loc 6 7 12 view .LVU137
 468 000e 62F30700 		bfi	r0, r2, #0, #8
 469 0012 C3F30722 		ubfx	r2, r3, #8, #8
 470 0016 62F30F20 		bfi	r0, r2, #8, #8
 471 001a C3F30743 		ubfx	r3, r3, #16, #8
 472 001e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_all_anim.h **** }
 473              		.loc 6 8 1 view .LVU138
 474 0022 04B0     		add	sp, sp, #16
 475              		.cfi_def_cfa_offset 0
 476              	.LVL41:
 477              		.loc 6 8 1 view .LVU139
 478              		@ sp needed
 479 0024 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE385:
 483              		.section	.text.CYCLE_LEFT_RIGHT_math,"ax",%progbits
 484              		.align	1
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 488              		.fpu fpv4-sp-d16
 490              	CYCLE_LEFT_RIGHT_math:
 491              	.LVL42:
 492              	.LFB387:
 493              		.file 7 "quantum/rgb_matrix/animations/cycle_left_right_anim.h"
   1:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
   2:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** RGB_MATRIX_EFFECT(CYCLE_LEFT_RIGHT)
   3:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** static HSV CYCLE_LEFT_RIGHT_math(HSV hsv, uint8_t i, uint8_t time) {
 494              		.loc 7 5 68 is_stmt 1 view -0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 16
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499              		.loc 7 5 68 is_stmt 0 view .LVU141
 500 0000 84B0     		sub	sp, sp, #16
 501              		.cfi_def_cfa_offset 16
 502              	.LVL43:
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 503              		.loc 7 6 5 is_stmt 1 view .LVU142
   7:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     return hsv;
 504              		.loc 7 7 5 view .LVU143
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 505              		.loc 7 6 34 is_stmt 0 view .LVU144
 506 0002 2C31     		adds	r1, r1, #44
 507              	.LVL44:
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 508              		.loc 7 6 37 view .LVU145
 509 0004 0A4B     		ldr	r3, .L30
   5:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 510              		.loc 7 5 68 view .LVU146
 511 0006 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/cycle_left_right_anim.h ****     hsv.h = g_led_config.point[i].x - time;
 512              		.loc 7 6 37 view .LVU147
 513 0008 13F81130 		ldrb	r3, [r3, r1, lsl #1]	@ zero_extendqisi2
 514 000c 9A1A     		subs	r2, r3, r2
 515              	.LVL45:
 516              		.loc 7 7 12 view .LVU148
 517 000e 8DF80420 		strb	r2, [sp, #4]
 518 0012 019B     		ldr	r3, [sp, #4]
 519 0014 0020     		movs	r0, #0
 520 0016 DAB2     		uxtb	r2, r3
 521 0018 62F30700 		bfi	r0, r2, #0, #8
 522 001c C3F30722 		ubfx	r2, r3, #8, #8
 523 0020 62F30F20 		bfi	r0, r2, #8, #8
 524 0024 C3F30743 		ubfx	r3, r3, #16, #8
 525 0028 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** }
 526              		.loc 7 8 1 view .LVU149
 527 002c 04B0     		add	sp, sp, #16
 528              		.cfi_def_cfa_offset 0
 529              		@ sp needed
 530 002e 7047     		bx	lr
 531              	.L31:
 532              		.align	2
 533              	.L30:
 534 0030 00000000 		.word	g_led_config
 535              		.cfi_endproc
 536              	.LFE387:
 538              		.section	.text.CYCLE_UP_DOWN_math,"ax",%progbits
 539              		.align	1
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu fpv4-sp-d16
 545              	CYCLE_UP_DOWN_math:
 546              	.LVL46:
 547              	.LFB389:
 548              		.file 8 "quantum/rgb_matrix/animations/cycle_up_down_anim.h"
   1:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_UP_DOWN
   2:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** RGB_MATRIX_EFFECT(CYCLE_UP_DOWN)
   3:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** static HSV CYCLE_UP_DOWN_math(HSV hsv, uint8_t i, uint8_t time) {
 549              		.loc 8 5 65 is_stmt 1 view -0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 16
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              		.loc 8 5 65 is_stmt 0 view .LVU151
 555 0000 84B0     		sub	sp, sp, #16
 556              		.cfi_def_cfa_offset 16
 557              	.LVL47:
   6:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 558              		.loc 8 6 5 is_stmt 1 view .LVU152
   7:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     return hsv;
 559              		.loc 8 7 5 view .LVU153
   5:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 560              		.loc 8 5 65 is_stmt 0 view .LVU154
 561 0002 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 562              		.loc 8 6 34 view .LVU155
 563 0004 0B48     		ldr	r0, .L33
 564 0006 00EB4101 		add	r1, r0, r1, lsl #1
 565              	.LVL48:
 566              		.loc 8 7 12 view .LVU156
 567 000a 0020     		movs	r0, #0
   6:quantum/rgb_matrix/animations/cycle_up_down_anim.h ****     hsv.h = g_led_config.point[i].y - time;
 568              		.loc 8 6 37 view .LVU157
 569 000c 91F85930 		ldrb	r3, [r1, #89]	@ zero_extendqisi2
 570 0010 9A1A     		subs	r2, r3, r2
 571              	.LVL49:
 572              		.loc 8 7 12 view .LVU158
 573 0012 8DF80420 		strb	r2, [sp, #4]
 574 0016 019B     		ldr	r3, [sp, #4]
 575 0018 DAB2     		uxtb	r2, r3
 576 001a 62F30700 		bfi	r0, r2, #0, #8
 577 001e C3F30722 		ubfx	r2, r3, #8, #8
 578 0022 62F30F20 		bfi	r0, r2, #8, #8
 579 0026 C3F30743 		ubfx	r3, r3, #16, #8
 580 002a 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** }
 581              		.loc 8 8 1 view .LVU159
 582 002e 04B0     		add	sp, sp, #16
 583              		.cfi_def_cfa_offset 0
 584              		@ sp needed
 585 0030 7047     		bx	lr
 586              	.L34:
 587 0032 00BF     		.align	2
 588              	.L33:
 589 0034 00000000 		.word	g_led_config
 590              		.cfi_endproc
 591              	.LFE389:
 593              		.section	.text.RAINBOW_MOVING_CHEVRON_math,"ax",%progbits
 594              		.align	1
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 598              		.fpu fpv4-sp-d16
 600              	RAINBOW_MOVING_CHEVRON_math:
 601              	.LVL50:
 602              	.LFB391:
 603              		.file 9 "quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h"
   1:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_MOVING_CHEVRON
   2:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_MOVING_CHEVRON)
   3:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** 
   5:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** static HSV RAINBOW_MOVING_CHEVRON_math(HSV hsv, uint8_t i, uint8_t time) {
 604              		.loc 9 5 74 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 16
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		.loc 9 5 74 is_stmt 0 view .LVU161
 609 0000 30B5     		push	{r4, r5, lr}
 610              		.cfi_def_cfa_offset 12
 611              		.cfi_offset 4, -12
 612              		.cfi_offset 5, -8
 613              		.cfi_offset 14, -4
   6:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 614              		.loc 9 6 40 view .LVU162
 615 0002 134D     		ldr	r5, .L37
   5:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 616              		.loc 9 5 74 view .LVU163
 617 0004 85B0     		sub	sp, sp, #20
 618              		.cfi_def_cfa_offset 32
 619              		.loc 9 6 40 view .LVU164
 620 0006 2C31     		adds	r1, r1, #44
 621              	.LVL51:
 622              		.loc 9 6 40 view .LVU165
 623 0008 05EB4103 		add	r3, r5, r1, lsl #1
   5:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     hsv.h += abs8(g_led_config.point[i].y - k_rgb_matrix_center.y) + (g_led_config.point[i].x - tim
 624              		.loc 9 5 74 view .LVU166
 625 000c 0190     		str	r0, [sp, #4]
 626              		.loc 9 6 40 view .LVU167
 627 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 628              		.loc 9 6 43 view .LVU168
 629 0010 A3F12004 		sub	r4, r3, #32
 630              		.loc 9 6 14 view .LVU169
 631 0014 64B2     		sxtb	r4, r4
 632              	.LBB124:
 633              	.LBB125:
 407:./lib/lib8tion/math8.h ****     return i;
 634              		.loc 1 407 7 view .LVU170
 635 0016 002C     		cmp	r4, #0
 407:./lib/lib8tion/math8.h ****     return i;
 636              		.loc 1 407 18 view .LVU171
 637 0018 BCBF     		itt	lt
 638 001a C3F12003 		rsblt	r3, r3, #32
 639 001e 5CB2     		sxtblt	r4, r3
 640              	.LBE125:
 641              	.LBE124:
 642              		.loc 9 6 92 view .LVU172
 643 0020 15F81130 		ldrb	r3, [r5, r1, lsl #1]	@ zero_extendqisi2
 644              		.loc 9 6 95 view .LVU173
 645 0024 9A1A     		subs	r2, r3, r2
 646              	.LVL52:
 647              		.loc 9 6 68 view .LVU174
 648 0026 2244     		add	r2, r2, r4
 649 0028 C0B2     		uxtb	r0, r0
 650              	.LVL53:
 651              		.loc 9 6 5 is_stmt 1 view .LVU175
 652              	.LBB127:
 653              	.LBI124:
 404:./lib/lib8tion/math8.h **** {
 654              		.loc 1 404 33 view .LVU176
 655              	.LBB126:
 407:./lib/lib8tion/math8.h ****     return i;
 656              		.loc 1 407 5 view .LVU177
 407:./lib/lib8tion/math8.h ****     return i;
 657              		.loc 1 407 16 view .LVU178
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 658              		.loc 1 408 5 view .LVU179
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 659              		.loc 1 408 5 is_stmt 0 view .LVU180
 660              	.LBE126:
 661              	.LBE127:
   7:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     return hsv;
 662              		.loc 9 7 5 is_stmt 1 view .LVU181
   6:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h ****     return hsv;
 663              		.loc 9 6 11 is_stmt 0 view .LVU182
 664 002a 1044     		add	r0, r0, r2
 665              		.loc 9 7 12 view .LVU183
 666 002c 8DF80400 		strb	r0, [sp, #4]
 667 0030 019B     		ldr	r3, [sp, #4]
 668 0032 0020     		movs	r0, #0
 669 0034 DAB2     		uxtb	r2, r3
 670 0036 62F30700 		bfi	r0, r2, #0, #8
 671 003a C3F30722 		ubfx	r2, r3, #8, #8
 672 003e 62F30F20 		bfi	r0, r2, #8, #8
 673 0042 C3F30743 		ubfx	r3, r3, #16, #8
 674 0046 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** }
 675              		.loc 9 8 1 view .LVU184
 676 004a 05B0     		add	sp, sp, #20
 677              		.cfi_def_cfa_offset 12
 678              		@ sp needed
 679 004c 30BD     		pop	{r4, r5, pc}
 680              	.L38:
 681 004e 00BF     		.align	2
 682              	.L37:
 683 0050 00000000 		.word	g_led_config
 684              		.cfi_endproc
 685              	.LFE391:
 687              		.section	.text.CYCLE_OUT_IN_math,"ax",%progbits
 688              		.align	1
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	CYCLE_OUT_IN_math:
 695              	.LVL54:
 696              	.LFB393:
 697              		.file 10 "quantum/rgb_matrix/animations/cycle_out_in_anim.h"
   1:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN
   2:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN)
   3:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** static HSV CYCLE_OUT_IN_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 698              		.loc 10 5 91 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ args = 4, pretend = 0, frame = 16
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703              		.loc 10 5 91 is_stmt 0 view .LVU186
 704 0000 84B0     		sub	sp, sp, #16
 705              		.cfi_def_cfa_offset 16
 706              	.LVL55:
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 707              		.loc 10 6 5 is_stmt 1 view .LVU187
   7:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     return hsv;
 708              		.loc 10 7 5 view .LVU188
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 709              		.loc 10 6 15 is_stmt 0 view .LVU189
 710 0002 03EB4303 		add	r3, r3, r3, lsl #1
 711              	.LVL56:
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 712              		.loc 10 6 26 view .LVU190
 713 0006 9DF81020 		ldrb	r2, [sp, #16]	@ zero_extendqisi2
 714              	.LVL57:
   5:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 715              		.loc 10 5 91 view .LVU191
 716 000a 0190     		str	r0, [sp, #4]
   6:quantum/rgb_matrix/animations/cycle_out_in_anim.h ****     hsv.h = 3 * dist / 2 + time;
 717              		.loc 10 6 26 view .LVU192
 718 000c 02EB5303 		add	r3, r2, r3, lsr #1
 719              		.loc 10 7 12 view .LVU193
 720 0010 8DF80430 		strb	r3, [sp, #4]
 721 0014 019B     		ldr	r3, [sp, #4]
 722 0016 0020     		movs	r0, #0
 723 0018 DAB2     		uxtb	r2, r3
 724 001a 62F30700 		bfi	r0, r2, #0, #8
 725 001e C3F30722 		ubfx	r2, r3, #8, #8
 726 0022 62F30F20 		bfi	r0, r2, #8, #8
 727 0026 C3F30743 		ubfx	r3, r3, #16, #8
 728 002a 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** }
 729              		.loc 10 8 1 view .LVU194
 730 002e 04B0     		add	sp, sp, #16
 731              		.cfi_def_cfa_offset 0
 732              	.LVL58:
 733              		.loc 10 8 1 view .LVU195
 734              		@ sp needed
 735 0030 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE393:
 739              		.section	.text.CYCLE_OUT_IN_DUAL_math,"ax",%progbits
 740              		.align	1
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	CYCLE_OUT_IN_DUAL_math:
 747              	.LVL59:
 748              	.LFB395:
 749              		.file 11 "quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h"
   1:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_OUT_IN_DUAL
   2:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** RGB_MATRIX_EFFECT(CYCLE_OUT_IN_DUAL)
   3:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** static HSV CYCLE_OUT_IN_DUAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 750              		.loc 11 5 82 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 16
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              		.loc 11 5 82 is_stmt 0 view .LVU197
 755 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 756              		.cfi_def_cfa_offset 24
 757              		.cfi_offset 4, -8
 758              		.cfi_offset 14, -4
 759              	.LVL60:
   6:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 760              		.loc 11 6 5 is_stmt 1 view .LVU198
   5:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 761              		.loc 11 5 82 is_stmt 0 view .LVU199
 762 0002 0190     		str	r0, [sp, #4]
 763              	.LVL61:
 764              		.loc 11 6 50 view .LVU200
 765 0004 48B2     		sxtb	r0, r1
 766              	.LVL62:
 767              	.LBB128:
 768              	.LBI128:
 404:./lib/lib8tion/math8.h **** {
 769              		.loc 1 404 33 is_stmt 1 view .LVU201
 770              	.LBB129:
 407:./lib/lib8tion/math8.h ****     return i;
 771              		.loc 1 407 5 view .LVU202
 407:./lib/lib8tion/math8.h ****     return i;
 772              		.loc 1 407 7 is_stmt 0 view .LVU203
 773 0006 0028     		cmp	r0, #0
 407:./lib/lib8tion/math8.h ****     return i;
 774              		.loc 1 407 16 is_stmt 1 view .LVU204
 407:./lib/lib8tion/math8.h ****     return i;
 775              		.loc 1 407 18 is_stmt 0 view .LVU205
 776 0008 BCBF     		itt	lt
 777 000a 4942     		rsblt	r1, r1, #0
 778              	.LVL63:
 407:./lib/lib8tion/math8.h ****     return i;
 779              		.loc 1 407 18 view .LVU206
 780 000c 48B2     		sxtblt	r0, r1
 781              	.LVL64:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 782              		.loc 1 408 5 is_stmt 1 view .LVU207
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 783              		.loc 1 408 5 is_stmt 0 view .LVU208
 784              	.LBE129:
 785              	.LBE128:
   7:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     uint8_t dist = sqrt16(dx * dx + dy * dy);
 786              		.loc 11 7 5 is_stmt 1 view .LVU209
 787              		.loc 11 7 40 is_stmt 0 view .LVU210
 788 000e 5243     		muls	r2, r2, r2
 789              	.LVL65:
   6:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     uint8_t dist = sqrt16(dx * dx + dy * dy);
 790              		.loc 11 6 18 view .LVU211
 791 0010 C0F13800 		rsb	r0, r0, #56
 792              	.LVL66:
 793              		.loc 11 7 20 view .LVU212
 794 0014 10FB0020 		smlabb	r0, r0, r0, r2
 795 0018 80B2     		uxth	r0, r0
   5:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     dx           = (k_rgb_matrix_center.x / 2) - abs8(dx);
 796              		.loc 11 5 82 view .LVU213
 797 001a 1C46     		mov	r4, r3
 798              		.loc 11 7 20 view .LVU214
 799 001c FFF7FEFF 		bl	sqrt16
 800              	.LVL67:
   8:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 801              		.loc 11 8 5 is_stmt 1 view .LVU215
   9:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     return hsv;
 802              		.loc 11 9 5 view .LVU216
   8:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 803              		.loc 11 8 29 is_stmt 0 view .LVU217
 804 0020 00EB4000 		add	r0, r0, r0, lsl #1
 805              	.LVL68:
   8:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h ****     hsv.h        = 3 * dist + time;
 806              		.loc 11 8 29 view .LVU218
 807 0024 0444     		add	r4, r4, r0
 808              		.loc 11 9 12 view .LVU219
 809 0026 8DF80440 		strb	r4, [sp, #4]
 810 002a 019B     		ldr	r3, [sp, #4]
 811 002c 0020     		movs	r0, #0
 812 002e DAB2     		uxtb	r2, r3
 813 0030 62F30700 		bfi	r0, r2, #0, #8
 814 0034 C3F30722 		ubfx	r2, r3, #8, #8
 815 0038 62F30F20 		bfi	r0, r2, #8, #8
 816 003c C3F30743 		ubfx	r3, r3, #16, #8
 817 0040 63F31740 		bfi	r0, r3, #16, #8
  10:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** }
 818              		.loc 11 10 1 view .LVU220
 819 0044 04B0     		add	sp, sp, #16
 820              		.cfi_def_cfa_offset 8
 821              		@ sp needed
 822 0046 10BD     		pop	{r4, pc}
 823              		.cfi_endproc
 824              	.LFE395:
 826              		.section	.text.DUAL_BEACON_math,"ax",%progbits
 827              		.align	1
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv4-sp-d16
 833              	DUAL_BEACON_math:
 834              	.LVL69:
 835              	.LFB401:
 836              		.file 12 "quantum/rgb_matrix/animations/dual_beacon_anim.h"
   1:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_DUAL_BEACON
   2:quantum/rgb_matrix/animations/dual_beacon_anim.h **** RGB_MATRIX_EFFECT(DUAL_BEACON)
   3:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/dual_beacon_anim.h **** 
   5:quantum/rgb_matrix/animations/dual_beacon_anim.h **** static HSV DUAL_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 837              		.loc 12 5 87 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 4, pretend = 0, frame = 16
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              		.loc 12 5 87 is_stmt 0 view .LVU222
 842 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 843              		.cfi_def_cfa_offset 24
 844              		.cfi_offset 4, -8
 845              		.cfi_offset 14, -4
 846              	.LVL70:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 847              		.loc 12 6 5 is_stmt 1 view .LVU223
   7:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     return hsv;
 848              		.loc 12 7 5 view .LVU224
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 849              		.loc 12 6 37 is_stmt 0 view .LVU225
 850 0002 124C     		ldr	r4, .L44
   5:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 851              		.loc 12 5 87 view .LVU226
 852 0004 0190     		str	r0, [sp, #4]
 853              	.LVL71:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 854              		.loc 12 6 37 view .LVU227
 855 0006 2C33     		adds	r3, r3, #44
 856              	.LVL72:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 857              		.loc 12 6 37 view .LVU228
 858 0008 04EB4300 		add	r0, r4, r3, lsl #1
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 859              		.loc 12 6 95 view .LVU229
 860 000c 14F81330 		ldrb	r3, [r4, r3, lsl #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 861              		.loc 12 6 37 view .LVU230
 862 0010 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 863              		.loc 12 6 98 view .LVU231
 864 0012 703B     		subs	r3, r3, #112
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 865              		.loc 12 6 123 view .LVU232
 866 0014 5943     		muls	r1, r3, r1
 867              	.LVL73:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 868              		.loc 12 6 40 view .LVU233
 869 0016 2038     		subs	r0, r0, #32
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 870              		.loc 12 6 71 view .LVU234
 871 0018 02FB0012 		mla	r2, r2, r0, r1
 872              	.LVL74:
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 873              		.loc 12 6 130 view .LVU235
 874 001c 002A     		cmp	r2, #0
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 875              		.loc 12 6 11 view .LVU236
 876 001e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 877              		.loc 12 6 130 view .LVU237
 878 0022 B8BF     		it	lt
 879 0024 7F32     		addlt	r2, r2, #127
   6:quantum/rgb_matrix/animations/dual_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * cos + (g_led_config.point[i].x - 
 880              		.loc 12 6 11 view .LVU238
 881 0026 01EBE212 		add	r2, r1, r2, asr #7
 882              		.loc 12 7 12 view .LVU239
 883 002a 8DF80420 		strb	r2, [sp, #4]
 884 002e 019B     		ldr	r3, [sp, #4]
 885 0030 0020     		movs	r0, #0
 886 0032 DAB2     		uxtb	r2, r3
 887 0034 62F30700 		bfi	r0, r2, #0, #8
 888 0038 C3F30722 		ubfx	r2, r3, #8, #8
 889 003c 62F30F20 		bfi	r0, r2, #8, #8
 890 0040 C3F30743 		ubfx	r3, r3, #16, #8
 891 0044 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/dual_beacon_anim.h **** }
 892              		.loc 12 8 1 view .LVU240
 893 0048 04B0     		add	sp, sp, #16
 894              		.cfi_def_cfa_offset 8
 895              		@ sp needed
 896 004a 10BD     		pop	{r4, pc}
 897              	.LVL75:
 898              	.L45:
 899              		.loc 12 8 1 view .LVU241
 900              		.align	2
 901              	.L44:
 902 004c 00000000 		.word	g_led_config
 903              		.cfi_endproc
 904              	.LFE401:
 906              		.section	.text.RAINBOW_BEACON_math,"ax",%progbits
 907              		.align	1
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 911              		.fpu fpv4-sp-d16
 913              	RAINBOW_BEACON_math:
 914              	.LVL76:
 915              	.LFB403:
 916              		.file 13 "quantum/rgb_matrix/animations/rainbow_beacon_anim.h"
   1:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_BEACON
   2:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_BEACON)
   3:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** 
   5:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** static HSV RAINBOW_BEACON_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 917              		.loc 13 5 90 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 4, pretend = 0, frame = 16
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		.loc 13 5 90 is_stmt 0 view .LVU243
 922 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 923              		.cfi_def_cfa_offset 24
 924              		.cfi_offset 4, -8
 925              		.cfi_offset 14, -4
 926              	.LVL77:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 927              		.loc 13 6 5 is_stmt 1 view .LVU244
   7:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     return hsv;
 928              		.loc 13 7 5 view .LVU245
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 929              		.loc 13 6 37 is_stmt 0 view .LVU246
 930 0002 124C     		ldr	r4, .L48
   5:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 931              		.loc 13 5 90 view .LVU247
 932 0004 0190     		str	r0, [sp, #4]
 933              	.LVL78:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 934              		.loc 13 6 37 view .LVU248
 935 0006 2C33     		adds	r3, r3, #44
 936              	.LVL79:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 937              		.loc 13 6 37 view .LVU249
 938 0008 04EB4300 		add	r0, r4, r3, lsl #1
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 939              		.loc 13 6 99 view .LVU250
 940 000c 14F81330 		ldrb	r3, [r4, r3, lsl #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 941              		.loc 13 6 37 view .LVU251
 942 0010 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 943              		.loc 13 6 102 view .LVU252
 944 0012 703B     		subs	r3, r3, #112
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 945              		.loc 13 6 131 view .LVU253
 946 0014 5943     		muls	r1, r3, r1
 947              	.LVL80:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 948              		.loc 13 6 40 view .LVU254
 949 0016 2038     		subs	r0, r0, #32
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 950              		.loc 13 6 75 view .LVU255
 951 0018 02FB0012 		mla	r2, r2, r0, r1
 952              	.LVL81:
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 953              		.loc 13 6 138 view .LVU256
 954 001c 002A     		cmp	r2, #0
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 955              		.loc 13 6 11 view .LVU257
 956 001e 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 957              		.loc 13 6 138 view .LVU258
 958 0022 B8BF     		it	lt
 959 0024 3F32     		addlt	r2, r2, #63
   6:quantum/rgb_matrix/animations/rainbow_beacon_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 2 * cos + (g_led_config.point[i].
 960              		.loc 13 6 11 view .LVU259
 961 0026 01EBA212 		add	r2, r1, r2, asr #6
 962              		.loc 13 7 12 view .LVU260
 963 002a 8DF80420 		strb	r2, [sp, #4]
 964 002e 019B     		ldr	r3, [sp, #4]
 965 0030 0020     		movs	r0, #0
 966 0032 DAB2     		uxtb	r2, r3
 967 0034 62F30700 		bfi	r0, r2, #0, #8
 968 0038 C3F30722 		ubfx	r2, r3, #8, #8
 969 003c 62F30F20 		bfi	r0, r2, #8, #8
 970 0040 C3F30743 		ubfx	r3, r3, #16, #8
 971 0044 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** }
 972              		.loc 13 8 1 view .LVU261
 973 0048 04B0     		add	sp, sp, #16
 974              		.cfi_def_cfa_offset 8
 975              		@ sp needed
 976 004a 10BD     		pop	{r4, pc}
 977              	.LVL82:
 978              	.L49:
 979              		.loc 13 8 1 view .LVU262
 980              		.align	2
 981              	.L48:
 982 004c 00000000 		.word	g_led_config
 983              		.cfi_endproc
 984              	.LFE403:
 986              		.section	.text.RAINBOW_PINWHEELS_math,"ax",%progbits
 987              		.align	1
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 993              	RAINBOW_PINWHEELS_math:
 994              	.LVL83:
 995              	.LFB405:
 996              		.file 14 "quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h"
   1:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINBOW_PINWHEELS
   2:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** RGB_MATRIX_EFFECT(RAINBOW_PINWHEELS)
   3:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** 
   5:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** static HSV RAINBOW_PINWHEELS_math(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time) {
 997              		.loc 14 5 93 is_stmt 1 view -0
 998              		.cfi_startproc
 999              		@ args = 4, pretend = 0, frame = 16
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 1001              		.loc 14 5 93 is_stmt 0 view .LVU264
 1002 0000 30B5     		push	{r4, r5, lr}
 1003              		.cfi_def_cfa_offset 12
 1004              		.cfi_offset 4, -12
 1005              		.cfi_offset 5, -8
 1006              		.cfi_offset 14, -4
 1007 0002 85B0     		sub	sp, sp, #20
 1008              		.cfi_def_cfa_offset 32
   6:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1009              		.loc 14 6 37 view .LVU265
 1010 0004 2C33     		adds	r3, r3, #44
 1011              	.LVL84:
 1012              		.loc 14 6 37 view .LVU266
 1013 0006 164D     		ldr	r5, .L53
   5:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     hsv.h += ((g_led_config.point[i].y - k_rgb_matrix_center.y) * 3 * cos + (56 - abs8(g_led_config
 1014              		.loc 14 5 93 view .LVU267
 1015 0008 0190     		str	r0, [sp, #4]
 1016              		.loc 14 6 37 view .LVU268
 1017 000a 05EB4304 		add	r4, r5, r3, lsl #1
 1018              		.loc 14 6 109 view .LVU269
 1019 000e 15F81350 		ldrb	r5, [r5, r3, lsl #1]	@ zero_extendqisi2
 1020              		.loc 14 6 37 view .LVU270
 1021 0012 6478     		ldrb	r4, [r4, #1]	@ zero_extendqisi2
 1022              		.loc 14 6 112 view .LVU271
 1023 0014 A5F17003 		sub	r3, r5, #112
 1024              		.loc 14 6 83 view .LVU272
 1025 0018 5BB2     		sxtb	r3, r3
 1026              	.LBB130:
 1027              	.LBB131:
 407:./lib/lib8tion/math8.h ****     return i;
 1028              		.loc 1 407 7 view .LVU273
 1029 001a 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 1030              		.loc 1 407 18 view .LVU274
 1031 001c BCBF     		itt	lt
 1032 001e C5F17003 		rsblt	r3, r5, #112
 1033 0022 5BB2     		sxtblt	r3, r3
 1034              	.LBE131:
 1035              	.LBE130:
 1036              		.loc 14 6 40 view .LVU275
 1037 0024 203C     		subs	r4, r4, #32
 1038              		.loc 14 6 69 view .LVU276
 1039 0026 5443     		muls	r4, r2, r4
 1040              		.loc 14 6 81 view .LVU277
 1041 0028 C3F13803 		rsb	r3, r3, #56
 1042              		.loc 14 6 75 view .LVU278
 1043 002c 01FB0342 		mla	r2, r1, r3, r4
 1044              	.LVL85:
 1045              		.loc 14 6 149 view .LVU279
 1046 0030 12EB4202 		adds	r2, r2, r2, lsl #1
 1047 0034 C0B2     		uxtb	r0, r0
 1048              	.LVL86:
 1049              		.loc 14 6 5 is_stmt 1 view .LVU280
 1050              	.LBB133:
 1051              	.LBI130:
 404:./lib/lib8tion/math8.h **** {
 1052              		.loc 1 404 33 view .LVU281
 1053              	.LBB132:
 407:./lib/lib8tion/math8.h ****     return i;
 1054              		.loc 1 407 5 view .LVU282
 407:./lib/lib8tion/math8.h ****     return i;
 1055              		.loc 1 407 16 view .LVU283
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1056              		.loc 1 408 5 view .LVU284
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1057              		.loc 1 408 5 is_stmt 0 view .LVU285
 1058              	.LBE132:
 1059              	.LBE133:
   7:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     return hsv;
 1060              		.loc 14 7 5 is_stmt 1 view .LVU286
   6:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     return hsv;
 1061              		.loc 14 6 149 is_stmt 0 view .LVU287
 1062 0036 48BF     		it	mi
 1063 0038 7F32     		addmi	r2, r2, #127
   6:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h ****     return hsv;
 1064              		.loc 14 6 11 view .LVU288
 1065 003a 00EBE212 		add	r2, r0, r2, asr #7
 1066              		.loc 14 7 12 view .LVU289
 1067 003e 8DF80420 		strb	r2, [sp, #4]
 1068 0042 019B     		ldr	r3, [sp, #4]
 1069 0044 0020     		movs	r0, #0
 1070 0046 DAB2     		uxtb	r2, r3
 1071 0048 62F30700 		bfi	r0, r2, #0, #8
 1072 004c C3F30722 		ubfx	r2, r3, #8, #8
 1073 0050 62F30F20 		bfi	r0, r2, #8, #8
 1074 0054 C3F30743 		ubfx	r3, r3, #16, #8
 1075 0058 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** }
 1076              		.loc 14 8 1 view .LVU290
 1077 005c 05B0     		add	sp, sp, #20
 1078              		.cfi_def_cfa_offset 12
 1079              		@ sp needed
 1080 005e 30BD     		pop	{r4, r5, pc}
 1081              	.LVL87:
 1082              	.L54:
 1083              		.loc 14 8 1 view .LVU291
 1084              		.align	2
 1085              	.L53:
 1086 0060 00000000 		.word	g_led_config
 1087              		.cfi_endproc
 1088              	.LFE405:
 1090              		.section	.text.HUE_PENDULUM_math,"ax",%progbits
 1091              		.align	1
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1095              		.fpu fpv4-sp-d16
 1097              	HUE_PENDULUM_math:
 1098              	.LVL88:
 1099              	.LFB412:
 1100              		.file 15 "quantum/rgb_matrix/animations/hue_pendulum_anim.h"
   1:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #ifndef DISABLE_RGB_MATRIX_HUE_PENDULUM
   2:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** RGB_MATRIX_EFFECT(HUE_PENDULUM)
   3:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** 
   5:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** // Change huedelta to adjust range of hue change. 0-255.
   6:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** // Looks better with a low value and slow speed for subtle change.
   7:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** // Hue Pendulum - color changes in a wave to the right before reversing direction
   8:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** static HSV HUE_PENDULUM_math(HSV hsv, uint8_t i, uint8_t time) {
 1101              		.loc 15 8 64 is_stmt 1 view -0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 16
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		.loc 15 8 64 is_stmt 0 view .LVU293
 1106 0000 30B5     		push	{r4, r5, lr}
 1107              		.cfi_def_cfa_offset 12
 1108              		.cfi_offset 4, -12
 1109              		.cfi_offset 5, -8
 1110              		.cfi_offset 14, -4
 1111 0002 85B0     		sub	sp, sp, #20
 1112              		.cfi_def_cfa_offset 32
 1113              		.loc 15 8 64 view .LVU294
 1114 0004 0D46     		mov	r5, r1
 1115 0006 0190     		str	r0, [sp, #4]
 1116 0008 C4B2     		uxtb	r4, r0
 1117              	.LVL89:
   9:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     uint8_t huedelta = 12;
 1118              		.loc 15 9 5 is_stmt 1 view .LVU295
  10:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     hsv.h            = hsv.h + scale8(abs8(sin8(time) + (g_led_config.point[i].x) - 128) * 2, huede
 1119              		.loc 15 10 5 view .LVU296
 1120              		.loc 15 10 44 is_stmt 0 view .LVU297
 1121 000a 1046     		mov	r0, r2
 1122 000c FFF7FEFF 		bl	sin8_C
 1123              	.LVL90:
 1124              		.loc 15 10 79 view .LVU298
 1125 0010 2C35     		adds	r5, r5, #44
 1126              		.loc 15 10 55 view .LVU299
 1127 0012 124B     		ldr	r3, .L57
 1128 0014 13F81520 		ldrb	r2, [r3, r5, lsl #1]	@ zero_extendqisi2
 1129 0018 1044     		add	r0, r0, r2
 1130 001a C2B2     		uxtb	r2, r0
 1131              		.loc 15 10 83 view .LVU300
 1132 001c A2F18003 		sub	r3, r2, #128
 1133              		.loc 15 10 39 view .LVU301
 1134 0020 5BB2     		sxtb	r3, r3
 1135              	.LVL91:
 1136              	.LBB134:
 1137              	.LBI134:
 404:./lib/lib8tion/math8.h **** {
 1138              		.loc 1 404 33 is_stmt 1 view .LVU302
 1139              	.LBB135:
 407:./lib/lib8tion/math8.h ****     return i;
 1140              		.loc 1 407 5 view .LVU303
 407:./lib/lib8tion/math8.h ****     return i;
 1141              		.loc 1 407 7 is_stmt 0 view .LVU304
 1142 0022 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 1143              		.loc 1 407 16 is_stmt 1 view .LVU305
 407:./lib/lib8tion/math8.h ****     return i;
 1144              		.loc 1 407 18 is_stmt 0 view .LVU306
 1145 0024 BCBF     		itt	lt
 1146 0026 C2F18002 		rsblt	r2, r2, #128
 1147 002a 53B2     		sxtblt	r3, r2
 1148              	.LVL92:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1149              		.loc 1 408 5 is_stmt 1 view .LVU307
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1150              		.loc 1 408 5 is_stmt 0 view .LVU308
 1151              	.LBE135:
 1152              	.LBE134:
 1153              	.LBB136:
 1154              	.LBI136:
  20:./lib/lib8tion/scale8.h **** {
 1155              		.loc 4 20 34 is_stmt 1 view .LVU309
 1156              	.LBB137:
 1157              		.loc 4 26 5 view .LVU310
 1158              		.loc 4 26 5 is_stmt 0 view .LVU311
 1159              	.LBE137:
 1160              	.LBE136:
  11:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     return hsv;
 1161              		.loc 15 11 5 is_stmt 1 view .LVU312
  10:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     return hsv;
 1162              		.loc 15 10 32 is_stmt 0 view .LVU313
 1163 002c 5B00     		lsls	r3, r3, #1
 1164              	.LVL93:
 1165              	.LBB139:
 1166              	.LBB138:
 1167              		.loc 4 26 25 view .LVU314
 1168 002e 03F0FE03 		and	r3, r3, #254
 1169 0032 03EB4303 		add	r3, r3, r3, lsl #1
 1170              	.LBE138:
 1171              	.LBE139:
  10:quantum/rgb_matrix/animations/hue_pendulum_anim.h ****     return hsv;
 1172              		.loc 15 10 30 view .LVU315
 1173 0036 04EB9313 		add	r3, r4, r3, lsr #6
 1174              		.loc 15 11 12 view .LVU316
 1175 003a 8DF80430 		strb	r3, [sp, #4]
 1176 003e 019B     		ldr	r3, [sp, #4]
 1177 0040 0020     		movs	r0, #0
 1178              	.LVL94:
 1179              		.loc 15 11 12 view .LVU317
 1180 0042 DAB2     		uxtb	r2, r3
 1181              		.loc 15 11 12 view .LVU318
 1182 0044 62F30700 		bfi	r0, r2, #0, #8
 1183 0048 C3F30722 		ubfx	r2, r3, #8, #8
 1184 004c 62F30F20 		bfi	r0, r2, #8, #8
 1185 0050 C3F30743 		ubfx	r3, r3, #16, #8
 1186 0054 63F31740 		bfi	r0, r3, #16, #8
  12:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** }
 1187              		.loc 15 12 1 view .LVU319
 1188 0058 05B0     		add	sp, sp, #20
 1189              		.cfi_def_cfa_offset 12
 1190              		@ sp needed
 1191 005a 30BD     		pop	{r4, r5, pc}
 1192              	.L58:
 1193              		.align	2
 1194              	.L57:
 1195 005c 00000000 		.word	g_led_config
 1196              		.cfi_endproc
 1197              	.LFE412:
 1199              		.section	.text.HUE_WAVE_math,"ax",%progbits
 1200              		.align	1
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1204              		.fpu fpv4-sp-d16
 1206              	HUE_WAVE_math:
 1207              	.LVL95:
 1208              	.LFB414:
 1209              		.file 16 "quantum/rgb_matrix/animations/hue_wave_anim.h"
   1:quantum/rgb_matrix/animations/hue_wave_anim.h **** #ifndef DISABLE_RGB_MATRIX_HUE_WAVE
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** RGB_MATRIX_EFFECT(HUE_WAVE)
   3:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/hue_wave_anim.h **** 
   5:quantum/rgb_matrix/animations/hue_wave_anim.h **** // Change huedelta to adjust range of hue change. 0-255.
   6:quantum/rgb_matrix/animations/hue_wave_anim.h **** // Looks better with a low value and slow speed for subtle change.
   7:quantum/rgb_matrix/animations/hue_wave_anim.h **** // Hue Wave - color changes in a wave to the right
   8:quantum/rgb_matrix/animations/hue_wave_anim.h **** static HSV HUE_WAVE_math(HSV hsv, uint8_t i, uint8_t time) {
 1210              		.loc 16 8 60 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 16
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215              		.loc 16 8 60 is_stmt 0 view .LVU321
 1216 0000 84B0     		sub	sp, sp, #16
 1217              		.cfi_def_cfa_offset 16
   9:quantum/rgb_matrix/animations/hue_wave_anim.h ****     uint8_t huedelta = 24;
  10:quantum/rgb_matrix/animations/hue_wave_anim.h ****     hsv.h            = hsv.h + scale8(abs8(g_led_config.point[i].x - time), huedelta);
 1218              		.loc 16 10 65 view .LVU322
 1219 0002 114B     		ldr	r3, .L61
   8:quantum/rgb_matrix/animations/hue_wave_anim.h ****     uint8_t huedelta = 24;
 1220              		.loc 16 8 60 view .LVU323
 1221 0004 0190     		str	r0, [sp, #4]
 1222              		.loc 16 10 65 view .LVU324
 1223 0006 2C31     		adds	r1, r1, #44
 1224              	.LVL96:
 1225              		.loc 16 10 65 view .LVU325
 1226 0008 C0B2     		uxtb	r0, r0
 1227              	.LVL97:
   9:quantum/rgb_matrix/animations/hue_wave_anim.h ****     uint8_t huedelta = 24;
 1228              		.loc 16 9 5 is_stmt 1 view .LVU326
 1229              		.loc 16 10 5 view .LVU327
 1230              		.loc 16 10 65 is_stmt 0 view .LVU328
 1231 000a 13F81110 		ldrb	r1, [r3, r1, lsl #1]	@ zero_extendqisi2
 1232              		.loc 16 10 68 view .LVU329
 1233 000e 8B1A     		subs	r3, r1, r2
 1234              		.loc 16 10 39 view .LVU330
 1235 0010 5BB2     		sxtb	r3, r3
 1236              	.LVL98:
 1237              	.LBB140:
 1238              	.LBI140:
 404:./lib/lib8tion/math8.h **** {
 1239              		.loc 1 404 33 is_stmt 1 view .LVU331
 1240              	.LBB141:
 407:./lib/lib8tion/math8.h ****     return i;
 1241              		.loc 1 407 5 view .LVU332
 407:./lib/lib8tion/math8.h ****     return i;
 1242              		.loc 1 407 7 is_stmt 0 view .LVU333
 1243 0012 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 1244              		.loc 1 407 16 is_stmt 1 view .LVU334
 407:./lib/lib8tion/math8.h ****     return i;
 1245              		.loc 1 407 18 is_stmt 0 view .LVU335
 1246 0014 BCBF     		itt	lt
 1247 0016 521A     		sublt	r2, r2, r1
 1248              	.LVL99:
 407:./lib/lib8tion/math8.h ****     return i;
 1249              		.loc 1 407 18 view .LVU336
 1250 0018 53B2     		sxtblt	r3, r2
 1251              	.LVL100:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1252              		.loc 1 408 5 is_stmt 1 view .LVU337
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 1253              		.loc 1 408 5 is_stmt 0 view .LVU338
 1254              	.LBE141:
 1255              	.LBE140:
 1256              	.LBB142:
 1257              	.LBI142:
  20:./lib/lib8tion/scale8.h **** {
 1258              		.loc 4 20 34 is_stmt 1 view .LVU339
 1259              	.LBB143:
 1260              		.loc 4 26 5 view .LVU340
 1261              		.loc 4 26 5 is_stmt 0 view .LVU341
 1262              	.LBE143:
 1263              	.LBE142:
  11:quantum/rgb_matrix/animations/hue_wave_anim.h ****     return hsv;
 1264              		.loc 16 11 5 is_stmt 1 view .LVU342
 1265              	.LBB145:
 1266              	.LBB144:
 1267              		.loc 4 26 25 is_stmt 0 view .LVU343
 1268 001a DBB2     		uxtb	r3, r3
 1269              	.LVL101:
 1270              		.loc 4 26 25 view .LVU344
 1271 001c 03EB4303 		add	r3, r3, r3, lsl #1
 1272              	.LVL102:
 1273              		.loc 4 26 25 view .LVU345
 1274              	.LBE144:
 1275              	.LBE145:
  10:quantum/rgb_matrix/animations/hue_wave_anim.h ****     return hsv;
 1276              		.loc 16 10 30 view .LVU346
 1277 0020 00EB5313 		add	r3, r0, r3, lsr #5
 1278              		.loc 16 11 12 view .LVU347
 1279 0024 8DF80430 		strb	r3, [sp, #4]
 1280 0028 019B     		ldr	r3, [sp, #4]
 1281 002a 0020     		movs	r0, #0
 1282 002c DAB2     		uxtb	r2, r3
 1283              		.loc 16 11 12 view .LVU348
 1284 002e 62F30700 		bfi	r0, r2, #0, #8
 1285 0032 C3F30722 		ubfx	r2, r3, #8, #8
 1286 0036 62F30F20 		bfi	r0, r2, #8, #8
 1287 003a C3F30743 		ubfx	r3, r3, #16, #8
 1288 003e 63F31740 		bfi	r0, r3, #16, #8
  12:quantum/rgb_matrix/animations/hue_wave_anim.h **** }
 1289              		.loc 16 12 1 view .LVU349
 1290 0042 04B0     		add	sp, sp, #16
 1291              		.cfi_def_cfa_offset 0
 1292              		@ sp needed
 1293 0044 7047     		bx	lr
 1294              	.L62:
 1295 0046 00BF     		.align	2
 1296              	.L61:
 1297 0048 00000000 		.word	g_led_config
 1298              		.cfi_endproc
 1299              	.LFE414:
 1301              		.section	.text.atan2_8,"ax",%progbits
 1302              		.align	1
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1306              		.fpu fpv4-sp-d16
 1308              	atan2_8:
 1309              	.LVL103:
 1310              	.LFB337:
 245:./lib/lib8tion/trig8.h **** 
 246:./lib/lib8tion/trig8.h **** /// Fast 8-bit approximation of cos(x). This approximation never varies more than
 247:./lib/lib8tion/trig8.h **** /// 2% from the floating point value you'd get by doing
 248:./lib/lib8tion/trig8.h **** ///
 249:./lib/lib8tion/trig8.h **** ///     float s = (cos(x) * 128.0) + 128;
 250:./lib/lib8tion/trig8.h **** ///
 251:./lib/lib8tion/trig8.h **** /// @param theta input angle from 0-255
 252:./lib/lib8tion/trig8.h **** /// @returns sin of theta, value between 0 and 255
 253:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t cos8( uint8_t theta)
 254:./lib/lib8tion/trig8.h **** {
 255:./lib/lib8tion/trig8.h ****     return sin8( theta + 64);
 256:./lib/lib8tion/trig8.h **** }
 257:./lib/lib8tion/trig8.h **** 
 258:./lib/lib8tion/trig8.h **** /// Fast 16-bit approximation of atan2(x).
 259:./lib/lib8tion/trig8.h **** /// @returns atan2, value between 0 and 255
 260:./lib/lib8tion/trig8.h **** LIB8STATIC uint8_t atan2_8(int16_t dy, int16_t dx)
 261:./lib/lib8tion/trig8.h **** {
 1311              		.loc 2 261 1 is_stmt 1 view -0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 0
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 262:./lib/lib8tion/trig8.h ****     if (dy == 0)
 1315              		.loc 2 262 5 view .LVU351
 261:./lib/lib8tion/trig8.h ****     if (dy == 0)
 1316              		.loc 2 261 1 is_stmt 0 view .LVU352
 1317 0000 10B5     		push	{r4, lr}
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 4, -8
 1320              		.cfi_offset 14, -4
 1321              		.loc 2 262 8 view .LVU353
 1322 0002 0446     		mov	r4, r0
 1323 0004 20B9     		cbnz	r0, .L64
 263:./lib/lib8tion/trig8.h ****     {
 264:./lib/lib8tion/trig8.h ****         if (dx >= 0)
 1324              		.loc 2 264 9 is_stmt 1 view .LVU354
 265:./lib/lib8tion/trig8.h ****             return 0;
 266:./lib/lib8tion/trig8.h ****         else
 267:./lib/lib8tion/trig8.h ****             return 128;
 1325              		.loc 2 267 20 is_stmt 0 view .LVU355
 1326 0006 0029     		cmp	r1, #0
 1327 0008 ACBF     		ite	ge
 1328 000a 0020     		movge	r0, #0
 1329              	.LVL104:
 1330              		.loc 2 267 20 view .LVU356
 1331 000c 8020     		movlt	r0, #128
 1332              	.L65:
 268:./lib/lib8tion/trig8.h ****     }
 269:./lib/lib8tion/trig8.h **** 
 270:./lib/lib8tion/trig8.h ****     int16_t abs_y = dy > 0 ? dy : -dy;
 271:./lib/lib8tion/trig8.h ****     int8_t a;
 272:./lib/lib8tion/trig8.h **** 
 273:./lib/lib8tion/trig8.h ****     if (dx >= 0)
 274:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 275:./lib/lib8tion/trig8.h ****     else
 276:./lib/lib8tion/trig8.h ****         a = 96 - (32 * (dx + abs_y) / (abs_y - dx));
 277:./lib/lib8tion/trig8.h **** 
 278:./lib/lib8tion/trig8.h ****     if (dy < 0)
 279:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 280:./lib/lib8tion/trig8.h ****     return a;
 281:./lib/lib8tion/trig8.h **** }
 1333              		.loc 2 281 1 view .LVU357
 1334 000e 10BD     		pop	{r4, pc}
 1335              	.LVL105:
 1336              	.L64:
 1337              	.LBB148:
 1338              	.LBI148:
 260:./lib/lib8tion/trig8.h **** {
 1339              		.loc 2 260 20 is_stmt 1 view .LVU358
 1340              	.LBB149:
 270:./lib/lib8tion/trig8.h ****     int8_t a;
 1341              		.loc 2 270 5 view .LVU359
 271:./lib/lib8tion/trig8.h **** 
 1342              		.loc 2 271 5 view .LVU360
 273:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 1343              		.loc 2 273 5 view .LVU361
 270:./lib/lib8tion/trig8.h ****     int8_t a;
 1344              		.loc 2 270 33 is_stmt 0 view .LVU362
 1345 0010 80EAE072 		eor	r2, r0, r0, asr #31
 1346 0014 A2EBE072 		sub	r2, r2, r0, asr #31
 274:./lib/lib8tion/trig8.h ****     else
 1347              		.loc 2 274 28 view .LVU363
 1348 0018 13B2     		sxth	r3, r2
 273:./lib/lib8tion/trig8.h ****         a = 32 - (32 * (dx - abs_y) / (dx + abs_y));
 1349              		.loc 2 273 8 view .LVU364
 1350 001a 0029     		cmp	r1, #0
 274:./lib/lib8tion/trig8.h ****     else
 1351              		.loc 2 274 9 is_stmt 1 view .LVU365
 274:./lib/lib8tion/trig8.h ****     else
 1352              		.loc 2 274 28 is_stmt 0 view .LVU366
 1353 001c A6BF     		itte	ge
 1354 001e CB1A     		subge	r3, r1, r3
 274:./lib/lib8tion/trig8.h ****     else
 1355              		.loc 2 274 22 view .LVU367
 1356 0020 5B01     		lslge	r3, r3, #5
 276:./lib/lib8tion/trig8.h **** 
 1357              		.loc 2 276 46 view .LVU368
 1358 0022 5B1A     		sublt	r3, r3, r1
 274:./lib/lib8tion/trig8.h ****     else
 1359              		.loc 2 274 43 view .LVU369
 1360 0024 01FA82F2 		sxtah	r2, r1, r2
 276:./lib/lib8tion/trig8.h **** 
 1361              		.loc 2 276 22 view .LVU370
 1362 0028 B5BF     		itete	lt
 1363 002a 5201     		lsllt	r2, r2, #5
 274:./lib/lib8tion/trig8.h ****     else
 1364              		.loc 2 274 37 view .LVU371
 1365 002c 93FBF2F3 		sdivge	r3, r3, r2
 276:./lib/lib8tion/trig8.h **** 
 1366              		.loc 2 276 37 view .LVU372
 1367 0030 92FBF3F3 		sdivlt	r3, r2, r3
 274:./lib/lib8tion/trig8.h ****     else
 1368              		.loc 2 274 16 view .LVU373
 1369 0034 C3F12003 		rsbge	r3, r3, #32
 276:./lib/lib8tion/trig8.h **** 
 1370              		.loc 2 276 9 is_stmt 1 view .LVU374
 276:./lib/lib8tion/trig8.h **** 
 1371              		.loc 2 276 16 is_stmt 0 view .LVU375
 1372 0038 B8BF     		it	lt
 1373 003a C3F16003 		rsblt	r3, r3, #96
 276:./lib/lib8tion/trig8.h **** 
 1374              		.loc 2 276 11 view .LVU376
 1375 003e 5BB2     		sxtb	r3, r3
 1376              	.LVL106:
 278:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 1377              		.loc 2 278 5 is_stmt 1 view .LVU377
 279:./lib/lib8tion/trig8.h ****     return a;
 1378              		.loc 2 279 16 is_stmt 0 view .LVU378
 1379 0040 D8B2     		uxtb	r0, r3
 1380              	.LVL107:
 278:./lib/lib8tion/trig8.h ****         return -a;     // negate if in quad III or IV
 1381              		.loc 2 278 8 view .LVU379
 1382 0042 002C     		cmp	r4, #0
 279:./lib/lib8tion/trig8.h ****     return a;
 1383              		.loc 2 279 9 is_stmt 1 view .LVU380
 279:./lib/lib8tion/trig8.h ****     return a;
 1384              		.loc 2 279 16 is_stmt 0 view .LVU381
 1385 0044 BCBF     		itt	lt
 1386 0046 4042     		rsblt	r0, r0, #0
 1387 0048 C0B2     		uxtblt	r0, r0
 1388 004a E0E7     		b	.L65
 1389              	.LBE149:
 1390              	.LBE148:
 1391              		.cfi_endproc
 1392              	.LFE337:
 1394              		.section	.text.BAND_PINWHEEL_SAT_math,"ax",%progbits
 1395              		.align	1
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv4-sp-d16
 1401              	BAND_PINWHEEL_SAT_math:
 1402              	.LVL108:
 1403              	.LFB377:
 1404              		.file 17 "quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h"
   1:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_SAT
   2:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_SAT)
   3:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** static HSV BAND_PINWHEEL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1405              		.loc 17 5 82 is_stmt 1 view -0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 16
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              		.loc 17 5 82 is_stmt 0 view .LVU383
 1410 0000 30B5     		push	{r4, r5, lr}
 1411              		.cfi_def_cfa_offset 12
 1412              		.cfi_offset 4, -12
 1413              		.cfi_offset 5, -8
 1414              		.cfi_offset 14, -4
 1415 0002 85B0     		sub	sp, sp, #20
 1416              		.cfi_def_cfa_offset 32
 1417 0004 C0F30725 		ubfx	r5, r0, #8, #8
 1418              	.LVL109:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     hsv.s = scale8(hsv.s - time - atan2_8(dy, dx) * 3, hsv.s);
 1419              		.loc 17 6 5 is_stmt 1 view .LVU384
 1420              		.loc 17 6 26 is_stmt 0 view .LVU385
 1421 0008 EB1A     		subs	r3, r5, r3
 1422              	.LVL110:
   5:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     hsv.s = scale8(hsv.s - time - atan2_8(dy, dx) * 3, hsv.s);
 1423              		.loc 17 5 82 view .LVU386
 1424 000a 0190     		str	r0, [sp, #4]
 1425              		.loc 17 6 35 view .LVU387
 1426 000c 1046     		mov	r0, r2
 1427              		.loc 17 6 26 view .LVU388
 1428 000e DCB2     		uxtb	r4, r3
 1429              		.loc 17 6 35 view .LVU389
 1430 0010 FFF7FEFF 		bl	atan2_8
 1431              	.LVL111:
 1432              	.LBB150:
 1433              	.LBI150:
  20:./lib/lib8tion/scale8.h **** {
 1434              		.loc 4 20 34 is_stmt 1 view .LVU390
 1435              	.LBB151:
 1436              		.loc 4 26 5 view .LVU391
 1437              		.loc 4 26 5 is_stmt 0 view .LVU392
 1438              	.LBE151:
 1439              	.LBE150:
   7:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1440              		.loc 17 7 5 is_stmt 1 view .LVU393
   6:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1441              		.loc 17 6 13 is_stmt 0 view .LVU394
 1442 0014 C0EB8013 		rsb	r3, r0, r0, lsl #6
 1443 0018 00EB8300 		add	r0, r0, r3, lsl #2
 1444              	.LVL112:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h ****     return hsv;
 1445              		.loc 17 6 13 view .LVU395
 1446 001c 2044     		add	r0, r0, r4
 1447              	.LBB153:
 1448              	.LBB152:
 1449              		.loc 4 26 25 view .LVU396
 1450 001e C0B2     		uxtb	r0, r0
 1451 0020 10FB05F0 		smulbb	r0, r0, r5
 1452              		.loc 4 26 47 view .LVU397
 1453 0024 0012     		asrs	r0, r0, #8
 1454 0026 8DF80500 		strb	r0, [sp, #5]
 1455              	.LBE152:
 1456              	.LBE153:
 1457              		.loc 17 7 12 view .LVU398
 1458 002a 019B     		ldr	r3, [sp, #4]
 1459 002c 0020     		movs	r0, #0
 1460 002e DAB2     		uxtb	r2, r3
 1461 0030 62F30700 		bfi	r0, r2, #0, #8
 1462 0034 C3F30722 		ubfx	r2, r3, #8, #8
 1463 0038 62F30F20 		bfi	r0, r2, #8, #8
 1464 003c C3F30743 		ubfx	r3, r3, #16, #8
 1465 0040 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** }
 1466              		.loc 17 8 1 view .LVU399
 1467 0044 05B0     		add	sp, sp, #20
 1468              		.cfi_def_cfa_offset 12
 1469              		@ sp needed
 1470 0046 30BD     		pop	{r4, r5, pc}
 1471              		.cfi_endproc
 1472              	.LFE377:
 1474              		.section	.text.BAND_PINWHEEL_VAL_math,"ax",%progbits
 1475              		.align	1
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1479              		.fpu fpv4-sp-d16
 1481              	BAND_PINWHEEL_VAL_math:
 1482              	.LVL113:
 1483              	.LFB379:
 1484              		.file 18 "quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h"
   1:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_PINWHEEL_VAL
   2:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** RGB_MATRIX_EFFECT(BAND_PINWHEEL_VAL)
   3:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** static HSV BAND_PINWHEEL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1485              		.loc 18 5 82 is_stmt 1 view -0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 16
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              		.loc 18 5 82 is_stmt 0 view .LVU401
 1490 0000 30B5     		push	{r4, r5, lr}
 1491              		.cfi_def_cfa_offset 12
 1492              		.cfi_offset 4, -12
 1493              		.cfi_offset 5, -8
 1494              		.cfi_offset 14, -4
 1495 0002 85B0     		sub	sp, sp, #20
 1496              		.cfi_def_cfa_offset 32
 1497 0004 C0F30745 		ubfx	r5, r0, #16, #8
 1498              	.LVL114:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     hsv.v = scale8(hsv.v - time - atan2_8(dy, dx) * 3, hsv.v);
 1499              		.loc 18 6 5 is_stmt 1 view .LVU402
 1500              		.loc 18 6 26 is_stmt 0 view .LVU403
 1501 0008 EB1A     		subs	r3, r5, r3
 1502              	.LVL115:
   5:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     hsv.v = scale8(hsv.v - time - atan2_8(dy, dx) * 3, hsv.v);
 1503              		.loc 18 5 82 view .LVU404
 1504 000a 0190     		str	r0, [sp, #4]
 1505              		.loc 18 6 35 view .LVU405
 1506 000c 1046     		mov	r0, r2
 1507              		.loc 18 6 26 view .LVU406
 1508 000e DCB2     		uxtb	r4, r3
 1509              		.loc 18 6 35 view .LVU407
 1510 0010 FFF7FEFF 		bl	atan2_8
 1511              	.LVL116:
 1512              	.LBB154:
 1513              	.LBI154:
  20:./lib/lib8tion/scale8.h **** {
 1514              		.loc 4 20 34 is_stmt 1 view .LVU408
 1515              	.LBB155:
 1516              		.loc 4 26 5 view .LVU409
 1517              		.loc 4 26 5 is_stmt 0 view .LVU410
 1518              	.LBE155:
 1519              	.LBE154:
   7:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     return hsv;
 1520              		.loc 18 7 5 is_stmt 1 view .LVU411
   6:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     return hsv;
 1521              		.loc 18 6 13 is_stmt 0 view .LVU412
 1522 0014 C0EB8013 		rsb	r3, r0, r0, lsl #6
 1523 0018 00EB8300 		add	r0, r0, r3, lsl #2
 1524              	.LVL117:
   6:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h ****     return hsv;
 1525              		.loc 18 6 13 view .LVU413
 1526 001c 2044     		add	r0, r0, r4
 1527              	.LBB157:
 1528              	.LBB156:
 1529              		.loc 4 26 25 view .LVU414
 1530 001e C0B2     		uxtb	r0, r0
 1531 0020 10FB05F0 		smulbb	r0, r0, r5
 1532              		.loc 4 26 47 view .LVU415
 1533 0024 0012     		asrs	r0, r0, #8
 1534 0026 8DF80600 		strb	r0, [sp, #6]
 1535              	.LBE156:
 1536              	.LBE157:
 1537              		.loc 18 7 12 view .LVU416
 1538 002a 019B     		ldr	r3, [sp, #4]
 1539 002c 0020     		movs	r0, #0
 1540 002e DAB2     		uxtb	r2, r3
 1541 0030 62F30700 		bfi	r0, r2, #0, #8
 1542 0034 C3F30722 		ubfx	r2, r3, #8, #8
 1543 0038 62F30F20 		bfi	r0, r2, #8, #8
 1544 003c C3F30743 		ubfx	r3, r3, #16, #8
 1545 0040 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** }
 1546              		.loc 18 8 1 view .LVU417
 1547 0044 05B0     		add	sp, sp, #20
 1548              		.cfi_def_cfa_offset 12
 1549              		@ sp needed
 1550 0046 30BD     		pop	{r4, r5, pc}
 1551              		.cfi_endproc
 1552              	.LFE379:
 1554              		.section	.text.BAND_SPIRAL_SAT_math,"ax",%progbits
 1555              		.align	1
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1559              		.fpu fpv4-sp-d16
 1561              	BAND_SPIRAL_SAT_math:
 1562              	.LVL118:
 1563              	.LFB381:
 1564              		.file 19 "quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h"
   1:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_SAT
   2:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_SAT)
   3:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** static HSV BAND_SPIRAL_SAT_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1565              		.loc 19 5 94 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 4, pretend = 0, frame = 16
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              		.loc 19 5 94 is_stmt 0 view .LVU419
 1570 0000 30B5     		push	{r4, r5, lr}
 1571              		.cfi_def_cfa_offset 12
 1572              		.cfi_offset 4, -12
 1573              		.cfi_offset 5, -8
 1574              		.cfi_offset 14, -4
 1575 0002 85B0     		sub	sp, sp, #20
 1576              		.cfi_def_cfa_offset 32
 1577 0004 C0F30725 		ubfx	r5, r0, #8, #8
 1578              	.LVL119:
   6:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     hsv.s = scale8(hsv.s + dist - time - atan2_8(dy, dx), hsv.s);
 1579              		.loc 19 6 5 is_stmt 1 view .LVU420
 1580              		.loc 19 6 33 is_stmt 0 view .LVU421
 1581 0008 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     hsv.s = scale8(hsv.s + dist - time - atan2_8(dy, dx), hsv.s);
 1582              		.loc 19 5 94 view .LVU422
 1583 000c 0190     		str	r0, [sp, #4]
 1584              		.loc 19 6 42 view .LVU423
 1585 000e 1046     		mov	r0, r2
 1586              		.loc 19 6 33 view .LVU424
 1587 0010 1C1B     		subs	r4, r3, r4
 1588              		.loc 19 6 42 view .LVU425
 1589 0012 FFF7FEFF 		bl	atan2_8
 1590              	.LVL120:
 1591              		.loc 19 6 33 view .LVU426
 1592 0016 2C44     		add	r4, r4, r5
 1593 0018 E4B2     		uxtb	r4, r4
 1594              	.LVL121:
 1595              	.LBB158:
 1596              	.LBI158:
  20:./lib/lib8tion/scale8.h **** {
 1597              		.loc 4 20 34 is_stmt 1 view .LVU427
 1598              	.LBB159:
 1599              		.loc 4 26 5 view .LVU428
 1600              		.loc 4 26 5 is_stmt 0 view .LVU429
 1601              	.LBE159:
 1602              	.LBE158:
   7:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     return hsv;
 1603              		.loc 19 7 5 is_stmt 1 view .LVU430
   6:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h ****     return hsv;
 1604              		.loc 19 6 13 is_stmt 0 view .LVU431
 1605 001a 201A     		subs	r0, r4, r0
 1606              	.LVL122:
 1607              	.LBB161:
 1608              	.LBB160:
 1609              		.loc 4 26 25 view .LVU432
 1610 001c C0B2     		uxtb	r0, r0
 1611 001e 10FB05F0 		smulbb	r0, r0, r5
 1612              		.loc 4 26 47 view .LVU433
 1613 0022 0012     		asrs	r0, r0, #8
 1614 0024 8DF80500 		strb	r0, [sp, #5]
 1615              	.LBE160:
 1616              	.LBE161:
 1617              		.loc 19 7 12 view .LVU434
 1618 0028 019B     		ldr	r3, [sp, #4]
 1619 002a 0020     		movs	r0, #0
 1620 002c DAB2     		uxtb	r2, r3
 1621 002e 62F30700 		bfi	r0, r2, #0, #8
 1622 0032 C3F30722 		ubfx	r2, r3, #8, #8
 1623 0036 62F30F20 		bfi	r0, r2, #8, #8
 1624 003a C3F30743 		ubfx	r3, r3, #16, #8
 1625 003e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** }
 1626              		.loc 19 8 1 view .LVU435
 1627 0042 05B0     		add	sp, sp, #20
 1628              		.cfi_def_cfa_offset 12
 1629              		@ sp needed
 1630 0044 30BD     		pop	{r4, r5, pc}
 1631              		.loc 19 8 1 view .LVU436
 1632              		.cfi_endproc
 1633              	.LFE381:
 1635              		.section	.text.BAND_SPIRAL_VAL_math,"ax",%progbits
 1636              		.align	1
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu fpv4-sp-d16
 1642              	BAND_SPIRAL_VAL_math:
 1643              	.LVL123:
 1644              	.LFB383:
 1645              		.file 20 "quantum/rgb_matrix/animations/colorband_spiral_val_anim.h"
   1:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #ifndef DISABLE_RGB_MATRIX_BAND_SPIRAL_VAL
   2:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** RGB_MATRIX_EFFECT(BAND_SPIRAL_VAL)
   3:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** 
   5:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** static HSV BAND_SPIRAL_VAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1646              		.loc 20 5 94 is_stmt 1 view -0
 1647              		.cfi_startproc
 1648              		@ args = 4, pretend = 0, frame = 16
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              		.loc 20 5 94 is_stmt 0 view .LVU438
 1651 0000 30B5     		push	{r4, r5, lr}
 1652              		.cfi_def_cfa_offset 12
 1653              		.cfi_offset 4, -12
 1654              		.cfi_offset 5, -8
 1655              		.cfi_offset 14, -4
 1656 0002 85B0     		sub	sp, sp, #20
 1657              		.cfi_def_cfa_offset 32
 1658 0004 C0F30745 		ubfx	r5, r0, #16, #8
 1659              	.LVL124:
   6:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     hsv.v = scale8(hsv.v + dist - time - atan2_8(dy, dx), hsv.v);
 1660              		.loc 20 6 5 is_stmt 1 view .LVU439
 1661              		.loc 20 6 33 is_stmt 0 view .LVU440
 1662 0008 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     hsv.v = scale8(hsv.v + dist - time - atan2_8(dy, dx), hsv.v);
 1663              		.loc 20 5 94 view .LVU441
 1664 000c 0190     		str	r0, [sp, #4]
 1665              		.loc 20 6 42 view .LVU442
 1666 000e 1046     		mov	r0, r2
 1667              		.loc 20 6 33 view .LVU443
 1668 0010 1C1B     		subs	r4, r3, r4
 1669              		.loc 20 6 42 view .LVU444
 1670 0012 FFF7FEFF 		bl	atan2_8
 1671              	.LVL125:
 1672              		.loc 20 6 33 view .LVU445
 1673 0016 2C44     		add	r4, r4, r5
 1674 0018 E4B2     		uxtb	r4, r4
 1675              	.LVL126:
 1676              	.LBB162:
 1677              	.LBI162:
  20:./lib/lib8tion/scale8.h **** {
 1678              		.loc 4 20 34 is_stmt 1 view .LVU446
 1679              	.LBB163:
 1680              		.loc 4 26 5 view .LVU447
 1681              		.loc 4 26 5 is_stmt 0 view .LVU448
 1682              	.LBE163:
 1683              	.LBE162:
   7:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     return hsv;
 1684              		.loc 20 7 5 is_stmt 1 view .LVU449
   6:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h ****     return hsv;
 1685              		.loc 20 6 13 is_stmt 0 view .LVU450
 1686 001a 201A     		subs	r0, r4, r0
 1687              	.LVL127:
 1688              	.LBB165:
 1689              	.LBB164:
 1690              		.loc 4 26 25 view .LVU451
 1691 001c C0B2     		uxtb	r0, r0
 1692 001e 10FB05F0 		smulbb	r0, r0, r5
 1693              		.loc 4 26 47 view .LVU452
 1694 0022 0012     		asrs	r0, r0, #8
 1695 0024 8DF80600 		strb	r0, [sp, #6]
 1696              	.LBE164:
 1697              	.LBE165:
 1698              		.loc 20 7 12 view .LVU453
 1699 0028 019B     		ldr	r3, [sp, #4]
 1700 002a 0020     		movs	r0, #0
 1701 002c DAB2     		uxtb	r2, r3
 1702 002e 62F30700 		bfi	r0, r2, #0, #8
 1703 0032 C3F30722 		ubfx	r2, r3, #8, #8
 1704 0036 62F30F20 		bfi	r0, r2, #8, #8
 1705 003a C3F30743 		ubfx	r3, r3, #16, #8
 1706 003e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** }
 1707              		.loc 20 8 1 view .LVU454
 1708 0042 05B0     		add	sp, sp, #20
 1709              		.cfi_def_cfa_offset 12
 1710              		@ sp needed
 1711 0044 30BD     		pop	{r4, r5, pc}
 1712              		.loc 20 8 1 view .LVU455
 1713              		.cfi_endproc
 1714              	.LFE383:
 1716              		.section	.text.CYCLE_PINWHEEL_math,"ax",%progbits
 1717              		.align	1
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1721              		.fpu fpv4-sp-d16
 1723              	CYCLE_PINWHEEL_math:
 1724              	.LVL128:
 1725              	.LFB397:
 1726              		.file 21 "quantum/rgb_matrix/animations/cycle_pinwheel_anim.h"
   1:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_PINWHEEL
   2:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** RGB_MATRIX_EFFECT(CYCLE_PINWHEEL)
   3:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** static HSV CYCLE_PINWHEEL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t time) {
 1727              		.loc 21 5 79 is_stmt 1 view -0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 16
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              		.loc 21 5 79 is_stmt 0 view .LVU457
 1732 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1733              		.cfi_def_cfa_offset 24
 1734              		.cfi_offset 4, -8
 1735              		.cfi_offset 14, -4
 1736              	.LVL129:
   6:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1737              		.loc 21 6 5 is_stmt 1 view .LVU458
   5:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1738              		.loc 21 5 79 is_stmt 0 view .LVU459
 1739 0002 0190     		str	r0, [sp, #4]
 1740              	.LVL130:
 1741              		.loc 21 6 13 view .LVU460
 1742 0004 1046     		mov	r0, r2
   5:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1743              		.loc 21 5 79 view .LVU461
 1744 0006 1C46     		mov	r4, r3
 1745              		.loc 21 6 13 view .LVU462
 1746 0008 FFF7FEFF 		bl	atan2_8
 1747              	.LVL131:
   7:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     return hsv;
 1748              		.loc 21 7 5 is_stmt 1 view .LVU463
   6:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h ****     hsv.h = atan2_8(dy, dx) + time;
 1749              		.loc 21 6 29 is_stmt 0 view .LVU464
 1750 000c 2044     		add	r0, r0, r4
 1751              	.LVL132:
 1752              		.loc 21 7 12 view .LVU465
 1753 000e 8DF80400 		strb	r0, [sp, #4]
 1754 0012 019B     		ldr	r3, [sp, #4]
 1755 0014 0020     		movs	r0, #0
 1756 0016 DAB2     		uxtb	r2, r3
 1757 0018 62F30700 		bfi	r0, r2, #0, #8
 1758 001c C3F30722 		ubfx	r2, r3, #8, #8
 1759 0020 62F30F20 		bfi	r0, r2, #8, #8
 1760 0024 C3F30743 		ubfx	r3, r3, #16, #8
 1761 0028 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** }
 1762              		.loc 21 8 1 view .LVU466
 1763 002c 04B0     		add	sp, sp, #16
 1764              		.cfi_def_cfa_offset 8
 1765              		@ sp needed
 1766 002e 10BD     		pop	{r4, pc}
 1767              		.cfi_endproc
 1768              	.LFE397:
 1770              		.section	.text.CYCLE_SPIRAL_math,"ax",%progbits
 1771              		.align	1
 1772              		.syntax unified
 1773              		.thumb
 1774              		.thumb_func
 1775              		.fpu fpv4-sp-d16
 1777              	CYCLE_SPIRAL_math:
 1778              	.LVL133:
 1779              	.LFB399:
 1780              		.file 22 "quantum/rgb_matrix/animations/cycle_spiral_anim.h"
   1:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #ifndef DISABLE_RGB_MATRIX_CYCLE_SPIRAL
   2:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** RGB_MATRIX_EFFECT(CYCLE_SPIRAL)
   3:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** 
   5:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** static HSV CYCLE_SPIRAL_math(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time) {
 1781              		.loc 22 5 91 is_stmt 1 view -0
 1782              		.cfi_startproc
 1783              		@ args = 4, pretend = 0, frame = 16
 1784              		@ frame_needed = 0, uses_anonymous_args = 0
 1785              		.loc 22 5 91 is_stmt 0 view .LVU468
 1786 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1787              		.cfi_def_cfa_offset 24
 1788              		.cfi_offset 4, -8
 1789              		.cfi_offset 14, -4
 1790              	.LVL134:
   6:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1791              		.loc 22 6 5 is_stmt 1 view .LVU469
 1792              		.loc 22 6 18 is_stmt 0 view .LVU470
 1793 0002 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1794              		.loc 22 5 91 view .LVU471
 1795 0006 0190     		str	r0, [sp, #4]
 1796              	.LVL135:
 1797              		.loc 22 6 18 view .LVU472
 1798 0008 1B1B     		subs	r3, r3, r4
 1799              	.LVL136:
 1800              		.loc 22 6 27 view .LVU473
 1801 000a 1046     		mov	r0, r2
 1802              		.loc 22 6 18 view .LVU474
 1803 000c DCB2     		uxtb	r4, r3
 1804              		.loc 22 6 27 view .LVU475
 1805 000e FFF7FEFF 		bl	atan2_8
 1806              	.LVL137:
   7:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     return hsv;
 1807              		.loc 22 7 5 is_stmt 1 view .LVU476
   6:quantum/rgb_matrix/animations/cycle_spiral_anim.h ****     hsv.h = dist - time - atan2_8(dy, dx);
 1808              		.loc 22 6 25 is_stmt 0 view .LVU477
 1809 0012 201A     		subs	r0, r4, r0
 1810              	.LVL138:
 1811              		.loc 22 7 12 view .LVU478
 1812 0014 8DF80400 		strb	r0, [sp, #4]
 1813 0018 019B     		ldr	r3, [sp, #4]
 1814 001a 0020     		movs	r0, #0
 1815 001c DAB2     		uxtb	r2, r3
 1816 001e 62F30700 		bfi	r0, r2, #0, #8
 1817 0022 C3F30722 		ubfx	r2, r3, #8, #8
 1818 0026 62F30F20 		bfi	r0, r2, #8, #8
 1819 002a C3F30743 		ubfx	r3, r3, #16, #8
 1820 002e 63F31740 		bfi	r0, r3, #16, #8
   8:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** }
 1821              		.loc 22 8 1 view .LVU479
 1822 0032 04B0     		add	sp, sp, #16
 1823              		.cfi_def_cfa_offset 8
 1824              		@ sp needed
 1825 0034 10BD     		pop	{r4, pc}
 1826              		.loc 22 8 1 view .LVU480
 1827              		.cfi_endproc
 1828              	.LFE399:
 1830              		.section	.text.rgb_matrix_hsv_to_rgb,"ax",%progbits
 1831              		.align	1
 1832              		.weak	rgb_matrix_hsv_to_rgb
 1833              		.syntax unified
 1834              		.thumb
 1835              		.thumb_func
 1836              		.fpu fpv4-sp-d16
 1838              	rgb_matrix_hsv_to_rgb:
 1839              	.LFB363:
 1840              		.file 23 "quantum/rgb_matrix/rgb_matrix.c"
   1:quantum/rgb_matrix/rgb_matrix.c **** /* Copyright 2017 Jason Williams
   2:quantum/rgb_matrix/rgb_matrix.c ****  * Copyright 2017 Jack Humbert
   3:quantum/rgb_matrix/rgb_matrix.c ****  * Copyright 2018 Yiancar
   4:quantum/rgb_matrix/rgb_matrix.c ****  *
   5:quantum/rgb_matrix/rgb_matrix.c ****  * This program is free software: you can redistribute it and/or modify
   6:quantum/rgb_matrix/rgb_matrix.c ****  * it under the terms of the GNU General Public License as published by
   7:quantum/rgb_matrix/rgb_matrix.c ****  * the Free Software Foundation, either version 2 of the License, or
   8:quantum/rgb_matrix/rgb_matrix.c ****  * (at your option) any later version.
   9:quantum/rgb_matrix/rgb_matrix.c ****  *
  10:quantum/rgb_matrix/rgb_matrix.c ****  * This program is distributed in the hope that it will be useful,
  11:quantum/rgb_matrix/rgb_matrix.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:quantum/rgb_matrix/rgb_matrix.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:quantum/rgb_matrix/rgb_matrix.c ****  * GNU General Public License for more details.
  14:quantum/rgb_matrix/rgb_matrix.c ****  *
  15:quantum/rgb_matrix/rgb_matrix.c ****  * You should have received a copy of the GNU General Public License
  16:quantum/rgb_matrix/rgb_matrix.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:quantum/rgb_matrix/rgb_matrix.c ****  */
  18:quantum/rgb_matrix/rgb_matrix.c **** 
  19:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix.h"
  20:quantum/rgb_matrix/rgb_matrix.c **** #include "progmem.h"
  21:quantum/rgb_matrix/rgb_matrix.c **** #include "config.h"
  22:quantum/rgb_matrix/rgb_matrix.c **** #include "eeprom.h"
  23:quantum/rgb_matrix/rgb_matrix.c **** #include <string.h>
  24:quantum/rgb_matrix/rgb_matrix.c **** #include <math.h>
  25:quantum/rgb_matrix/rgb_matrix.c **** 
  26:quantum/rgb_matrix/rgb_matrix.c **** #include <lib/lib8tion/lib8tion.h>
  27:quantum/rgb_matrix/rgb_matrix.c **** 
  28:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_MATRIX_CENTER
  29:quantum/rgb_matrix/rgb_matrix.c **** const led_point_t k_rgb_matrix_center = {112, 32};
  30:quantum/rgb_matrix/rgb_matrix.c **** #else
  31:quantum/rgb_matrix/rgb_matrix.c **** const led_point_t k_rgb_matrix_center = RGB_MATRIX_CENTER;
  32:quantum/rgb_matrix/rgb_matrix.c **** #endif
  33:quantum/rgb_matrix/rgb_matrix.c **** 
  34:quantum/rgb_matrix/rgb_matrix.c **** // clang-format off
  35:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_MATRIX_IMMEDIATE_EEPROM
  36:quantum/rgb_matrix/rgb_matrix.c **** #    define rgb_eeconfig_update(v) rgb_update_eeprom |= v
  37:quantum/rgb_matrix/rgb_matrix.c **** #else
  38:quantum/rgb_matrix/rgb_matrix.c **** #    define rgb_eeconfig_update(v) if (v) eeconfig_update_rgb_matrix()
  39:quantum/rgb_matrix/rgb_matrix.c **** #endif
  40:quantum/rgb_matrix/rgb_matrix.c **** // clang-format on
  41:quantum/rgb_matrix/rgb_matrix.c **** 
  42:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) RGB rgb_matrix_hsv_to_rgb(HSV hsv) { return hsv_to_rgb(hsv); }
 1841              		.loc 23 42 58 is_stmt 1 view -0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 16
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
 1846              		.loc 23 42 60 view .LVU482
 1847              		.loc 23 42 58 is_stmt 0 view .LVU483
 1848 0000 84B0     		sub	sp, sp, #16
 1849              		.cfi_def_cfa_offset 16
 1850              		.loc 23 42 84 view .LVU484
 1851 0002 04B0     		add	sp, sp, #16
 1852              		.cfi_def_cfa_offset 0
 1853              		@ sp needed
 1854              		.loc 23 42 67 view .LVU485
 1855 0004 FFF7FEBF 		b	hsv_to_rgb
 1856              	.LVL139:
 1857              		.cfi_endproc
 1858              	.LFE363:
 1860              		.section	.text.eeconfig_read_rgb_matrix,"ax",%progbits
 1861              		.align	1
 1862              		.global	eeconfig_read_rgb_matrix
 1863              		.syntax unified
 1864              		.thumb
 1865              		.thumb_func
 1866              		.fpu fpv4-sp-d16
 1868              	eeconfig_read_rgb_matrix:
 1869              	.LFB416:
  43:quantum/rgb_matrix/rgb_matrix.c **** 
  44:quantum/rgb_matrix/rgb_matrix.c **** // Generic effect runners
  45:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix_runners.inc"
  46:quantum/rgb_matrix/rgb_matrix.c **** 
  47:quantum/rgb_matrix/rgb_matrix.c **** // ------------------------------------------
  48:quantum/rgb_matrix/rgb_matrix.c **** // -----Begin rgb effect includes macros-----
  49:quantum/rgb_matrix/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name)
  50:quantum/rgb_matrix/rgb_matrix.c **** #define RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  51:quantum/rgb_matrix/rgb_matrix.c **** 
  52:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix_effects.inc"
  53:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_KB
  54:quantum/rgb_matrix/rgb_matrix.c **** #    include "rgb_matrix_kb.inc"
  55:quantum/rgb_matrix/rgb_matrix.c **** #endif
  56:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_CUSTOM_USER
  57:quantum/rgb_matrix/rgb_matrix.c **** #    include "rgb_matrix_user.inc"
  58:quantum/rgb_matrix/rgb_matrix.c **** #endif
  59:quantum/rgb_matrix/rgb_matrix.c **** 
  60:quantum/rgb_matrix/rgb_matrix.c **** #undef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
  61:quantum/rgb_matrix/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
  62:quantum/rgb_matrix/rgb_matrix.c **** // -----End rgb effect includes macros-------
  63:quantum/rgb_matrix/rgb_matrix.c **** // ------------------------------------------
  64:quantum/rgb_matrix/rgb_matrix.c **** 
  65:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_DISABLE_AFTER_TIMEOUT) && !defined(RGB_DISABLE_TIMEOUT)
  66:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_DISABLE_TIMEOUT (RGB_DISABLE_AFTER_TIMEOUT * 1200UL)
  67:quantum/rgb_matrix/rgb_matrix.c **** #endif
  68:quantum/rgb_matrix/rgb_matrix.c **** 
  69:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_DISABLE_TIMEOUT
  70:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_DISABLE_TIMEOUT 0
  71:quantum/rgb_matrix/rgb_matrix.c **** #endif
  72:quantum/rgb_matrix/rgb_matrix.c **** 
  73:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_MAXIMUM_BRIGHTNESS) || RGB_MATRIX_MAXIMUM_BRIGHTNESS > UINT8_MAX
  74:quantum/rgb_matrix/rgb_matrix.c **** #    undef RGB_MATRIX_MAXIMUM_BRIGHTNESS
  75:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_MAXIMUM_BRIGHTNESS UINT8_MAX
  76:quantum/rgb_matrix/rgb_matrix.c **** #endif
  77:quantum/rgb_matrix/rgb_matrix.c **** 
  78:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_HUE_STEP)
  79:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_HUE_STEP 8
  80:quantum/rgb_matrix/rgb_matrix.c **** #endif
  81:quantum/rgb_matrix/rgb_matrix.c **** 
  82:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_SAT_STEP)
  83:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_SAT_STEP 16
  84:quantum/rgb_matrix/rgb_matrix.c **** #endif
  85:quantum/rgb_matrix/rgb_matrix.c **** 
  86:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_VAL_STEP)
  87:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_VAL_STEP 16
  88:quantum/rgb_matrix/rgb_matrix.c **** #endif
  89:quantum/rgb_matrix/rgb_matrix.c **** 
  90:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_SPD_STEP)
  91:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_SPD_STEP 16
  92:quantum/rgb_matrix/rgb_matrix.c **** #endif
  93:quantum/rgb_matrix/rgb_matrix.c **** 
  94:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_MODE)
  95:quantum/rgb_matrix/rgb_matrix.c **** #    ifndef DISABLE_RGB_MATRIX_CYCLE_LEFT_RIGHT
  96:quantum/rgb_matrix/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_CYCLE_LEFT_RIGHT
  97:quantum/rgb_matrix/rgb_matrix.c **** #    else
  98:quantum/rgb_matrix/rgb_matrix.c **** // fallback to solid colors if RGB_MATRIX_CYCLE_LEFT_RIGHT is disabled in userspace
  99:quantum/rgb_matrix/rgb_matrix.c **** #        define RGB_MATRIX_STARTUP_MODE RGB_MATRIX_SOLID_COLOR
 100:quantum/rgb_matrix/rgb_matrix.c **** #    endif
 101:quantum/rgb_matrix/rgb_matrix.c **** #endif
 102:quantum/rgb_matrix/rgb_matrix.c **** 
 103:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_HUE)
 104:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_HUE 0
 105:quantum/rgb_matrix/rgb_matrix.c **** #endif
 106:quantum/rgb_matrix/rgb_matrix.c **** 
 107:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SAT)
 108:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SAT UINT8_MAX
 109:quantum/rgb_matrix/rgb_matrix.c **** #endif
 110:quantum/rgb_matrix/rgb_matrix.c **** 
 111:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_VAL)
 112:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_VAL RGB_MATRIX_MAXIMUM_BRIGHTNESS
 113:quantum/rgb_matrix/rgb_matrix.c **** #endif
 114:quantum/rgb_matrix/rgb_matrix.c **** 
 115:quantum/rgb_matrix/rgb_matrix.c **** #if !defined(RGB_MATRIX_STARTUP_SPD)
 116:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_STARTUP_SPD UINT8_MAX / 2
 117:quantum/rgb_matrix/rgb_matrix.c **** #endif
 118:quantum/rgb_matrix/rgb_matrix.c **** 
 119:quantum/rgb_matrix/rgb_matrix.c **** // globals
 120:quantum/rgb_matrix/rgb_matrix.c **** rgb_config_t rgb_matrix_config;  // TODO: would like to prefix this with g_ for global consistancy,
 121:quantum/rgb_matrix/rgb_matrix.c **** uint32_t     g_rgb_timer;
 122:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_FRAMEBUFFER_EFFECTS
 123:quantum/rgb_matrix/rgb_matrix.c **** uint8_t g_rgb_frame_buffer[MATRIX_ROWS][MATRIX_COLS] = {{0}};
 124:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_FRAMEBUFFER_EFFECTS
 125:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 126:quantum/rgb_matrix/rgb_matrix.c **** last_hit_t g_last_hit_tracker;
 127:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 128:quantum/rgb_matrix/rgb_matrix.c **** 
 129:quantum/rgb_matrix/rgb_matrix.c **** // internals
 130:quantum/rgb_matrix/rgb_matrix.c **** static bool            suspend_state     = false;
 131:quantum/rgb_matrix/rgb_matrix.c **** static bool            rgb_update_eeprom = false;
 132:quantum/rgb_matrix/rgb_matrix.c **** static uint8_t         rgb_last_enable   = UINT8_MAX;
 133:quantum/rgb_matrix/rgb_matrix.c **** static uint8_t         rgb_last_effect   = UINT8_MAX;
 134:quantum/rgb_matrix/rgb_matrix.c **** static effect_params_t rgb_effect_params = {0, LED_FLAG_ALL, false};
 135:quantum/rgb_matrix/rgb_matrix.c **** static rgb_task_states rgb_task_state    = SYNCING;
 136:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 137:quantum/rgb_matrix/rgb_matrix.c **** static uint32_t rgb_anykey_timer;
 138:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 139:quantum/rgb_matrix/rgb_matrix.c **** 
 140:quantum/rgb_matrix/rgb_matrix.c **** // double buffers
 141:quantum/rgb_matrix/rgb_matrix.c **** static uint32_t rgb_timer_buffer;
 142:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 143:quantum/rgb_matrix/rgb_matrix.c **** static last_hit_t last_hit_buffer;
 144:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 145:quantum/rgb_matrix/rgb_matrix.c **** 
 146:quantum/rgb_matrix/rgb_matrix.c **** // split rgb matrix
 147:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 148:quantum/rgb_matrix/rgb_matrix.c **** const uint8_t k_rgb_matrix_split[2] = RGB_MATRIX_SPLIT;
 149:quantum/rgb_matrix/rgb_matrix.c **** #endif
 150:quantum/rgb_matrix/rgb_matrix.c **** 
 151:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_read_rgb_matrix(void) { eeprom_read_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX, si
 1870              		.loc 23 151 37 is_stmt 1 view -0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              		@ link register save eliminated.
 1875              		.loc 23 151 39 view .LVU487
 1876 0000 0248     		ldr	r0, .L78
 1877 0002 0822     		movs	r2, #8
 1878 0004 1C21     		movs	r1, #28
 1879 0006 FFF7FEBF 		b	eeprom_read_block
 1880              	.LVL140:
 1881              	.L79:
 1882 000a 00BF     		.align	2
 1883              	.L78:
 1884 000c 00000000 		.word	rgb_matrix_config
 1885              		.cfi_endproc
 1886              	.LFE416:
 1888              		.section	.text.eeconfig_update_rgb_matrix,"ax",%progbits
 1889              		.align	1
 1890              		.global	eeconfig_update_rgb_matrix
 1891              		.syntax unified
 1892              		.thumb
 1893              		.thumb_func
 1894              		.fpu fpv4-sp-d16
 1896              	eeconfig_update_rgb_matrix:
 1897              	.LFB417:
 152:quantum/rgb_matrix/rgb_matrix.c **** 
 153:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_update_rgb_matrix(void) { eeprom_update_block(&rgb_matrix_config, EECONFIG_RGB_MATRIX
 1898              		.loc 23 153 39 view -0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902              		@ link register save eliminated.
 1903              		.loc 23 153 41 view .LVU489
 1904 0000 0248     		ldr	r0, .L81
 1905 0002 0822     		movs	r2, #8
 1906 0004 1C21     		movs	r1, #28
 1907 0006 FFF7FEBF 		b	eeprom_update_block
 1908              	.LVL141:
 1909              	.L82:
 1910 000a 00BF     		.align	2
 1911              	.L81:
 1912 000c 00000000 		.word	rgb_matrix_config
 1913              		.cfi_endproc
 1914              	.LFE417:
 1916              		.section	.rodata.eeconfig_update_rgb_matrix_default.str1.1,"aMS",%progbits,1
 1917              	.LC1:
 1918 0000 6565636F 		.ascii	"eeconfig_update_rgb_matrix_default\012\000"
 1918      6E666967 
 1918      5F757064 
 1918      6174655F 
 1918      7267625F 
 1919              		.section	.text.eeconfig_update_rgb_matrix_default,"ax",%progbits
 1920              		.align	1
 1921              		.global	eeconfig_update_rgb_matrix_default
 1922              		.syntax unified
 1923              		.thumb
 1924              		.thumb_func
 1925              		.fpu fpv4-sp-d16
 1927              	eeconfig_update_rgb_matrix_default:
 1928              	.LFB418:
 154:quantum/rgb_matrix/rgb_matrix.c **** 
 155:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_update_rgb_matrix_default(void) {
 1929              		.loc 23 155 47 view -0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 0
 1932              		@ frame_needed = 0, uses_anonymous_args = 0
 156:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("eeconfig_update_rgb_matrix_default\n");
 1933              		.loc 23 156 5 view .LVU491
 1934              		.loc 23 156 5 view .LVU492
 155:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("eeconfig_update_rgb_matrix_default\n");
 1935              		.loc 23 155 47 is_stmt 0 view .LVU493
 1936 0000 08B5     		push	{r3, lr}
 1937              		.cfi_def_cfa_offset 8
 1938              		.cfi_offset 3, -8
 1939              		.cfi_offset 14, -4
 1940              		.loc 23 156 5 view .LVU494
 1941 0002 0C4B     		ldr	r3, .L88
 1942 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1943 0006 DB07     		lsls	r3, r3, #31
 1944 0008 02D5     		bpl	.L84
 1945              		.loc 23 156 5 is_stmt 1 discriminator 1 view .LVU495
 1946 000a 0B48     		ldr	r0, .L88+4
 1947 000c FFF7FEFF 		bl	printf_
 1948              	.LVL142:
 1949              	.L84:
 1950              		.loc 23 156 5 discriminator 3 view .LVU496
 157:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 1951              		.loc 23 157 5 discriminator 3 view .LVU497
 158:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.mode   = RGB_MATRIX_STARTUP_MODE;
 1952              		.loc 23 158 5 discriminator 3 view .LVU498
 157:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 1953              		.loc 23 157 30 is_stmt 0 discriminator 3 view .LVU499
 1954 0010 0A4B     		ldr	r3, .L88+8
 1955 0012 1A46     		mov	r2, r3
 1956 0014 0521     		movs	r1, #5
 1957 0016 02F8011B 		strb	r1, [r2], #1
 159:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv    = (HSV){RGB_MATRIX_STARTUP_HUE, RGB_MATRIX_STARTUP_SAT, RGB_MATRIX_STA
 1958              		.loc 23 159 5 is_stmt 1 discriminator 3 view .LVU500
 1959              		.loc 23 159 30 is_stmt 0 discriminator 3 view .LVU501
 1960 001a 0949     		ldr	r1, .L88+12
 1961 001c 0888     		ldrh	r0, [r1]	@ unaligned
 1962 001e 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 1963 0020 9170     		strb	r1, [r2, #2]
 160:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 1964              		.loc 23 160 5 is_stmt 1 discriminator 3 view .LVU502
 161:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.flags  = LED_FLAG_ALL;
 1965              		.loc 23 161 5 discriminator 3 view .LVU503
 160:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 1966              		.loc 23 160 30 is_stmt 0 discriminator 3 view .LVU504
 1967 0022 4FF67F72 		movw	r2, #65407
 159:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv    = (HSV){RGB_MATRIX_STARTUP_HUE, RGB_MATRIX_STARTUP_SAT, RGB_MATRIX_STA
 1968              		.loc 23 159 30 discriminator 3 view .LVU505
 1969 0026 A3F80100 		strh	r0, [r3, #1]	@ unaligned
 160:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed  = RGB_MATRIX_STARTUP_SPD;
 1970              		.loc 23 160 30 discriminator 3 view .LVU506
 1971 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 162:quantum/rgb_matrix/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 1972              		.loc 23 162 5 is_stmt 1 discriminator 3 view .LVU507
 163:quantum/rgb_matrix/rgb_matrix.c **** }
 1973              		.loc 23 163 1 is_stmt 0 discriminator 3 view .LVU508
 1974 002c BDE80840 		pop	{r3, lr}
 1975              		.cfi_restore 14
 1976              		.cfi_restore 3
 1977              		.cfi_def_cfa_offset 0
 162:quantum/rgb_matrix/rgb_matrix.c ****     eeconfig_update_rgb_matrix();
 1978              		.loc 23 162 5 discriminator 3 view .LVU509
 1979 0030 FFF7FEBF 		b	eeconfig_update_rgb_matrix
 1980              	.LVL143:
 1981              	.L89:
 1982              		.align	2
 1983              	.L88:
 1984 0034 00000000 		.word	debug_config
 1985 0038 00000000 		.word	.LC1
 1986 003c 00000000 		.word	rgb_matrix_config
 1987 0040 00000000 		.word	.LANCHOR1
 1988              		.cfi_endproc
 1989              	.LFE418:
 1991              		.section	.rodata.eeconfig_debug_rgb_matrix.str1.1,"aMS",%progbits,1
 1992              	.LC2:
 1993 0000 7267625F 		.ascii	"rgb_matrix_config EEPROM\012\000"
 1993      6D617472 
 1993      69785F63 
 1993      6F6E6669 
 1993      67204545 
 1994              	.LC3:
 1995 001a 7267625F 		.ascii	"rgb_matrix_config.enable = %d\012\000"
 1995      6D617472 
 1995      69785F63 
 1995      6F6E6669 
 1995      672E656E 
 1996              	.LC4:
 1997 0039 7267625F 		.ascii	"rgb_matrix_config.mode = %d\012\000"
 1997      6D617472 
 1997      69785F63 
 1997      6F6E6669 
 1997      672E6D6F 
 1998              	.LC5:
 1999 0056 7267625F 		.ascii	"rgb_matrix_config.hsv.h = %d\012\000"
 1999      6D617472 
 1999      69785F63 
 1999      6F6E6669 
 1999      672E6873 
 2000              	.LC6:
 2001 0074 7267625F 		.ascii	"rgb_matrix_config.hsv.s = %d\012\000"
 2001      6D617472 
 2001      69785F63 
 2001      6F6E6669 
 2001      672E6873 
 2002              	.LC7:
 2003 0092 7267625F 		.ascii	"rgb_matrix_config.hsv.v = %d\012\000"
 2003      6D617472 
 2003      69785F63 
 2003      6F6E6669 
 2003      672E6873 
 2004              	.LC8:
 2005 00b0 7267625F 		.ascii	"rgb_matrix_config.speed = %d\012\000"
 2005      6D617472 
 2005      69785F63 
 2005      6F6E6669 
 2005      672E7370 
 2006              	.LC9:
 2007 00ce 7267625F 		.ascii	"rgb_matrix_config.flags = %d\012\000"
 2007      6D617472 
 2007      69785F63 
 2007      6F6E6669 
 2007      672E666C 
 2008              		.section	.text.eeconfig_debug_rgb_matrix,"ax",%progbits
 2009              		.align	1
 2010              		.global	eeconfig_debug_rgb_matrix
 2011              		.syntax unified
 2012              		.thumb
 2013              		.thumb_func
 2014              		.fpu fpv4-sp-d16
 2016              	eeconfig_debug_rgb_matrix:
 2017              	.LFB419:
 164:quantum/rgb_matrix/rgb_matrix.c **** 
 165:quantum/rgb_matrix/rgb_matrix.c **** void eeconfig_debug_rgb_matrix(void) {
 2018              		.loc 23 165 38 is_stmt 1 view -0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 0, uses_anonymous_args = 0
 166:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config EEPROM\n");
 2022              		.loc 23 166 5 view .LVU511
 2023              		.loc 23 166 5 view .LVU512
 165:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config EEPROM\n");
 2024              		.loc 23 165 38 is_stmt 0 view .LVU513
 2025 0000 38B5     		push	{r3, r4, r5, lr}
 2026              		.cfi_def_cfa_offset 16
 2027              		.cfi_offset 3, -16
 2028              		.cfi_offset 4, -12
 2029              		.cfi_offset 5, -8
 2030              		.cfi_offset 14, -4
 2031              		.loc 23 166 5 view .LVU514
 2032 0002 1F4C     		ldr	r4, .L123
 2033 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2034 0006 D807     		lsls	r0, r3, #31
 2035 0008 39D5     		bpl	.L90
 2036              		.loc 23 166 5 is_stmt 1 discriminator 1 view .LVU515
 2037 000a 1E48     		ldr	r0, .L123+4
 2038 000c FFF7FEFF 		bl	printf_
 2039              	.LVL144:
 2040              		.loc 23 166 5 discriminator 1 view .LVU516
 167:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.enable = %d\n", rgb_matrix_config.enable);
 2041              		.loc 23 167 5 discriminator 1 view .LVU517
 2042              		.loc 23 167 5 discriminator 1 view .LVU518
 2043 0010 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2044 0012 D907     		lsls	r1, r3, #31
 2045 0014 33D5     		bpl	.L90
 2046              		.loc 23 167 5 discriminator 1 view .LVU519
 2047 0016 1C4D     		ldr	r5, .L123+8
 2048 0018 1C48     		ldr	r0, .L123+12
 2049 001a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 2050 001c 01F00301 		and	r1, r1, #3
 2051 0020 FFF7FEFF 		bl	printf_
 2052              	.LVL145:
 2053              		.loc 23 167 5 discriminator 1 view .LVU520
 168:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.mode = %d\n", rgb_matrix_config.mode);
 2054              		.loc 23 168 5 discriminator 1 view .LVU521
 2055              		.loc 23 168 5 discriminator 1 view .LVU522
 2056 0024 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2057 0026 DA07     		lsls	r2, r3, #31
 2058 0028 29D5     		bpl	.L90
 2059              		.loc 23 168 5 discriminator 1 view .LVU523
 2060 002a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 2061 002c 1848     		ldr	r0, .L123+16
 2062 002e 8908     		lsrs	r1, r1, #2
 2063 0030 FFF7FEFF 		bl	printf_
 2064              	.LVL146:
 2065              		.loc 23 168 5 discriminator 1 view .LVU524
 169:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.h = %d\n", rgb_matrix_config.hsv.h);
 2066              		.loc 23 169 5 discriminator 1 view .LVU525
 2067              		.loc 23 169 5 discriminator 1 view .LVU526
 2068 0034 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2069 0036 DB07     		lsls	r3, r3, #31
 2070 0038 21D5     		bpl	.L90
 2071              		.loc 23 169 5 discriminator 1 view .LVU527
 2072 003a 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 2073 003c 1548     		ldr	r0, .L123+20
 2074 003e FFF7FEFF 		bl	printf_
 2075              	.LVL147:
 2076              		.loc 23 169 5 discriminator 1 view .LVU528
 170:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.s = %d\n", rgb_matrix_config.hsv.s);
 2077              		.loc 23 170 5 discriminator 1 view .LVU529
 2078              		.loc 23 170 5 discriminator 1 view .LVU530
 2079 0042 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2080 0044 D807     		lsls	r0, r3, #31
 2081 0046 1AD5     		bpl	.L90
 2082              		.loc 23 170 5 discriminator 1 view .LVU531
 2083 0048 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 2084 004a 1348     		ldr	r0, .L123+24
 2085 004c FFF7FEFF 		bl	printf_
 2086              	.LVL148:
 2087              		.loc 23 170 5 discriminator 1 view .LVU532
 171:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.hsv.v = %d\n", rgb_matrix_config.hsv.v);
 2088              		.loc 23 171 5 discriminator 1 view .LVU533
 2089              		.loc 23 171 5 discriminator 1 view .LVU534
 2090 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2091 0052 D907     		lsls	r1, r3, #31
 2092 0054 13D5     		bpl	.L90
 2093              		.loc 23 171 5 discriminator 1 view .LVU535
 2094 0056 E978     		ldrb	r1, [r5, #3]	@ zero_extendqisi2
 2095 0058 1048     		ldr	r0, .L123+28
 2096 005a FFF7FEFF 		bl	printf_
 2097              	.LVL149:
 2098              		.loc 23 171 5 discriminator 1 view .LVU536
 172:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.speed = %d\n", rgb_matrix_config.speed);
 2099              		.loc 23 172 5 discriminator 1 view .LVU537
 2100              		.loc 23 172 5 discriminator 1 view .LVU538
 2101 005e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2102 0060 DA07     		lsls	r2, r3, #31
 2103 0062 0CD5     		bpl	.L90
 2104              		.loc 23 172 5 discriminator 1 view .LVU539
 2105 0064 2979     		ldrb	r1, [r5, #4]	@ zero_extendqisi2
 2106 0066 0E48     		ldr	r0, .L123+32
 2107 0068 FFF7FEFF 		bl	printf_
 2108              	.LVL150:
 2109              		.loc 23 172 5 discriminator 1 view .LVU540
 173:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.flags = %d\n", rgb_matrix_config.flags);
 2110              		.loc 23 173 5 discriminator 1 view .LVU541
 2111              		.loc 23 173 5 discriminator 1 view .LVU542
 2112 006c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2113 006e DB07     		lsls	r3, r3, #31
 2114 0070 05D5     		bpl	.L90
 2115              		.loc 23 173 5 discriminator 1 view .LVU543
 2116 0072 6979     		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 2117 0074 0B48     		ldr	r0, .L123+36
 174:quantum/rgb_matrix/rgb_matrix.c **** }
 2118              		.loc 23 174 1 is_stmt 0 discriminator 1 view .LVU544
 2119 0076 BDE83840 		pop	{r3, r4, r5, lr}
 2120              		.cfi_remember_state
 2121              		.cfi_restore 14
 2122              		.cfi_restore 5
 2123              		.cfi_restore 4
 2124              		.cfi_restore 3
 2125              		.cfi_def_cfa_offset 0
 173:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb_matrix_config.flags = %d\n", rgb_matrix_config.flags);
 2126              		.loc 23 173 5 discriminator 1 view .LVU545
 2127 007a FFF7FEBF 		b	printf_
 2128              	.LVL151:
 2129              	.L90:
 2130              		.cfi_restore_state
 2131              		.loc 23 174 1 view .LVU546
 2132 007e 38BD     		pop	{r3, r4, r5, pc}
 2133              	.L124:
 2134              		.align	2
 2135              	.L123:
 2136 0080 00000000 		.word	debug_config
 2137 0084 00000000 		.word	.LC2
 2138 0088 00000000 		.word	rgb_matrix_config
 2139 008c 1A000000 		.word	.LC3
 2140 0090 39000000 		.word	.LC4
 2141 0094 56000000 		.word	.LC5
 2142 0098 74000000 		.word	.LC6
 2143 009c 92000000 		.word	.LC7
 2144 00a0 B0000000 		.word	.LC8
 2145 00a4 CE000000 		.word	.LC9
 2146              		.cfi_endproc
 2147              	.LFE419:
 2149              		.section	.text.rgb_matrix_map_row_column_to_led_kb,"ax",%progbits
 2150              		.align	1
 2151              		.weak	rgb_matrix_map_row_column_to_led_kb
 2152              		.syntax unified
 2153              		.thumb
 2154              		.thumb_func
 2155              		.fpu fpv4-sp-d16
 2157              	rgb_matrix_map_row_column_to_led_kb:
 2158              	.LVL152:
 2159              	.LFB420:
 175:quantum/rgb_matrix/rgb_matrix.c **** 
 176:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) uint8_t rgb_matrix_map_row_column_to_led_kb(uint8_t row, uint8_t column, uint
 2160              		.loc 23 176 112 is_stmt 1 view -0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 0
 2163              		@ frame_needed = 0, uses_anonymous_args = 0
 2164              		@ link register save eliminated.
 2165              		.loc 23 176 114 view .LVU548
 2166              		.loc 23 176 124 is_stmt 0 view .LVU549
 2167 0000 0020     		movs	r0, #0
 2168              	.LVL153:
 2169              		.loc 23 176 124 view .LVU550
 2170 0002 7047     		bx	lr
 2171              		.cfi_endproc
 2172              	.LFE420:
 2174              		.section	.text.rgb_matrix_map_row_column_to_led,"ax",%progbits
 2175              		.align	1
 2176              		.global	rgb_matrix_map_row_column_to_led
 2177              		.syntax unified
 2178              		.thumb
 2179              		.thumb_func
 2180              		.fpu fpv4-sp-d16
 2182              	rgb_matrix_map_row_column_to_led:
 2183              	.LVL154:
 2184              	.LFB421:
 177:quantum/rgb_matrix/rgb_matrix.c **** 
 178:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_map_row_column_to_led(uint8_t row, uint8_t column, uint8_t *led_i) {
 2185              		.loc 23 178 87 is_stmt 1 view -0
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 0
 2188              		@ frame_needed = 0, uses_anonymous_args = 0
 179:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2189              		.loc 23 179 5 view .LVU552
 178:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2190              		.loc 23 178 87 is_stmt 0 view .LVU553
 2191 0000 70B5     		push	{r4, r5, r6, lr}
 2192              		.cfi_def_cfa_offset 16
 2193              		.cfi_offset 4, -16
 2194              		.cfi_offset 5, -12
 2195              		.cfi_offset 6, -8
 2196              		.cfi_offset 14, -4
 178:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = rgb_matrix_map_row_column_to_led_kb(row, column, led_i);
 2197              		.loc 23 178 87 view .LVU554
 2198 0002 0646     		mov	r6, r0
 2199 0004 0D46     		mov	r5, r1
 2200 0006 1446     		mov	r4, r2
 2201              		.loc 23 179 25 view .LVU555
 2202 0008 FFF7FEFF 		bl	rgb_matrix_map_row_column_to_led_kb
 2203              	.LVL155:
 180:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_index = g_led_config.matrix_co[row][column];
 2204              		.loc 23 180 5 is_stmt 1 view .LVU556
 2205              		.loc 23 180 13 is_stmt 0 view .LVU557
 2206 000c 044B     		ldr	r3, .L131
 2207 000e 03EBC603 		add	r3, r3, r6, lsl #3
 2208 0012 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 2209              	.LVL156:
 181:quantum/rgb_matrix/rgb_matrix.c ****     if (led_index != NO_LED) {
 2210              		.loc 23 181 5 is_stmt 1 view .LVU558
 2211              		.loc 23 181 8 is_stmt 0 view .LVU559
 2212 0014 FF2B     		cmp	r3, #255
 182:quantum/rgb_matrix/rgb_matrix.c ****         led_i[led_count] = led_index;
 2213              		.loc 23 182 9 is_stmt 1 view .LVU560
 2214              		.loc 23 182 26 is_stmt 0 view .LVU561
 2215 0016 1EBF     		ittt	ne
 2216 0018 2354     		strbne	r3, [r4, r0]
 183:quantum/rgb_matrix/rgb_matrix.c ****         led_count++;
 2217              		.loc 23 183 9 is_stmt 1 view .LVU562
 2218              		.loc 23 183 18 is_stmt 0 view .LVU563
 2219 001a 0130     		addne	r0, r0, #1
 2220              	.LVL157:
 2221              		.loc 23 183 18 view .LVU564
 2222 001c C0B2     		uxtbne	r0, r0
 2223              	.LVL158:
 184:quantum/rgb_matrix/rgb_matrix.c ****     }
 185:quantum/rgb_matrix/rgb_matrix.c ****     return led_count;
 2224              		.loc 23 185 5 is_stmt 1 view .LVU565
 186:quantum/rgb_matrix/rgb_matrix.c **** }
 2225              		.loc 23 186 1 is_stmt 0 view .LVU566
 2226 001e 70BD     		pop	{r4, r5, r6, pc}
 2227              	.LVL159:
 2228              	.L132:
 2229              		.loc 23 186 1 view .LVU567
 2230              		.align	2
 2231              	.L131:
 2232 0020 00000000 		.word	g_led_config
 2233              		.cfi_endproc
 2234              	.LFE421:
 2236              		.section	.text.rgb_matrix_update_pwm_buffers,"ax",%progbits
 2237              		.align	1
 2238              		.global	rgb_matrix_update_pwm_buffers
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu fpv4-sp-d16
 2244              	rgb_matrix_update_pwm_buffers:
 2245              	.LFB422:
 187:quantum/rgb_matrix/rgb_matrix.c **** 
 188:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_update_pwm_buffers(void) { rgb_matrix_driver.flush(); }
 2246              		.loc 23 188 42 is_stmt 1 view -0
 2247              		.cfi_startproc
 2248              		@ args = 0, pretend = 0, frame = 0
 2249              		@ frame_needed = 0, uses_anonymous_args = 0
 2250              		@ link register save eliminated.
 2251              		.loc 23 188 44 view .LVU569
 2252              		.loc 23 188 61 is_stmt 0 view .LVU570
 2253 0000 014B     		ldr	r3, .L134
 2254              		.loc 23 188 44 view .LVU571
 2255 0002 DB68     		ldr	r3, [r3, #12]
 2256 0004 1847     		bx	r3	@ indirect register sibling call
 2257              	.LVL160:
 2258              	.L135:
 2259 0006 00BF     		.align	2
 2260              	.L134:
 2261 0008 00000000 		.word	rgb_matrix_driver
 2262              		.cfi_endproc
 2263              	.LFE422:
 2265              		.section	.text.rgb_matrix_set_color,"ax",%progbits
 2266              		.align	1
 2267              		.global	rgb_matrix_set_color
 2268              		.syntax unified
 2269              		.thumb
 2270              		.thumb_func
 2271              		.fpu fpv4-sp-d16
 2273              	rgb_matrix_set_color:
 2274              	.LVL161:
 2275              	.LFB423:
 189:quantum/rgb_matrix/rgb_matrix.c **** 
 190:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_color(int index, uint8_t red, uint8_t green, uint8_t blue) {
 2276              		.loc 23 190 80 is_stmt 1 view -0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 0
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
 2280              		@ link register save eliminated.
 191:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 192:quantum/rgb_matrix/rgb_matrix.c ****     if (!is_keyboard_left() && index >= k_rgb_matrix_split[0])
 193:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_driver.set_color(index - k_rgb_matrix_split[0], red, green, blue);
 194:quantum/rgb_matrix/rgb_matrix.c ****     else if (is_keyboard_left() && index < k_rgb_matrix_split[0])
 195:quantum/rgb_matrix/rgb_matrix.c **** #endif
 196:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_driver.set_color(index, red, green, blue);
 2281              		.loc 23 196 9 view .LVU573
 190:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 2282              		.loc 23 190 80 is_stmt 0 view .LVU574
 2283 0000 10B4     		push	{r4}
 2284              		.cfi_def_cfa_offset 4
 2285              		.cfi_offset 4, -4
 2286              		.loc 23 196 26 view .LVU575
 2287 0002 034C     		ldr	r4, .L137
 2288              		.loc 23 196 9 view .LVU576
 2289 0004 6468     		ldr	r4, [r4, #4]
 2290 0006 A446     		mov	ip, r4
 197:quantum/rgb_matrix/rgb_matrix.c **** }
 2291              		.loc 23 197 1 view .LVU577
 2292 0008 5DF8044B 		ldr	r4, [sp], #4
 2293              		.cfi_restore 4
 2294              		.cfi_def_cfa_offset 0
 196:quantum/rgb_matrix/rgb_matrix.c **** }
 2295              		.loc 23 196 9 view .LVU578
 2296 000c 6047     		bx	ip	@ indirect register sibling call
 2297              	.LVL162:
 2298              	.L138:
 196:quantum/rgb_matrix/rgb_matrix.c **** }
 2299              		.loc 23 196 9 view .LVU579
 2300 000e 00BF     		.align	2
 2301              	.L137:
 2302 0010 00000000 		.word	rgb_matrix_driver
 2303              		.cfi_endproc
 2304              	.LFE423:
 2306              		.section	.text.effect_runner_dx_dy_dist,"ax",%progbits
 2307              		.align	1
 2308              		.global	effect_runner_dx_dy_dist
 2309              		.syntax unified
 2310              		.thumb
 2311              		.thumb_func
 2312              		.fpu fpv4-sp-d16
 2314              	effect_runner_dx_dy_dist:
 2315              	.LVL163:
 2316              	.LFB364:
 2317              		.file 24 "quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** typedef HSV (*dx_dy_dist_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t dist, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** bool effect_runner_dx_dy_dist(effect_params_t* params, dx_dy_dist_f effect_func) {
 2318              		.loc 24 5 82 is_stmt 1 view -0
 2319              		.cfi_startproc
 2320              		@ args = 0, pretend = 0, frame = 24
 2321              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2322              		.loc 24 6 5 view .LVU581
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2323              		.loc 24 5 82 is_stmt 0 view .LVU582
 2324 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2325              		.cfi_def_cfa_offset 36
 2326              		.cfi_offset 4, -36
 2327              		.cfi_offset 5, -32
 2328              		.cfi_offset 6, -28
 2329              		.cfi_offset 7, -24
 2330              		.cfi_offset 8, -20
 2331              		.cfi_offset 9, -16
 2332              		.cfi_offset 10, -12
 2333              		.cfi_offset 11, -8
 2334              		.cfi_offset 14, -4
   7:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     uint8_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 2);
 2335              		.loc 24 8 61 view .LVU583
 2336 0004 DFF8DC90 		ldr	r9, .L144+8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2337              		.loc 24 6 5 view .LVU584
 2338 0008 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 2339              	.LBB166:
 2340              	.LBB167:
  27:./lib/lib8tion/scale8.h **** #endif
  28:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
  29:./lib/lib8tion/scale8.h **** #if defined(LIB8_ATTINY)
  30:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  31:./lib/lib8tion/scale8.h ****     uint8_t work=i;
  32:./lib/lib8tion/scale8.h **** #else
  33:./lib/lib8tion/scale8.h ****     uint8_t work=0;
  34:./lib/lib8tion/scale8.h **** #endif
  35:./lib/lib8tion/scale8.h ****     uint8_t cnt=0x80;
  36:./lib/lib8tion/scale8.h ****     asm volatile(
  37:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
  38:./lib/lib8tion/scale8.h ****         "  inc %[scale]                 \n\t"
  39:./lib/lib8tion/scale8.h ****         "  breq DONE_%=                 \n\t"
  40:./lib/lib8tion/scale8.h ****         "  clr %[work]                  \n\t"
  41:./lib/lib8tion/scale8.h **** #endif
  42:./lib/lib8tion/scale8.h ****         "LOOP_%=:                       \n\t"
  43:./lib/lib8tion/scale8.h ****         /*"  sbrc %[scale], 0             \n\t"
  44:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  45:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  46:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  47:./lib/lib8tion/scale8.h ****         "  clc                          \n\t"*/
  48:./lib/lib8tion/scale8.h ****         "  sbrc %[scale], 0             \n\t"
  49:./lib/lib8tion/scale8.h ****         "  add %[work], %[i]            \n\t"
  50:./lib/lib8tion/scale8.h ****         "  ror %[work]                  \n\t"
  51:./lib/lib8tion/scale8.h ****         "  lsr %[scale]                 \n\t"
  52:./lib/lib8tion/scale8.h ****         "  lsr %[cnt]                   \n\t"
  53:./lib/lib8tion/scale8.h ****         "brcc LOOP_%=                   \n\t"
  54:./lib/lib8tion/scale8.h ****         "DONE_%=:                       \n\t"
  55:./lib/lib8tion/scale8.h ****         : [work] "+r" (work), [cnt] "+r" (cnt)
  56:./lib/lib8tion/scale8.h ****         : [scale] "r" (scale), [i] "r" (i)
  57:./lib/lib8tion/scale8.h ****         :
  58:./lib/lib8tion/scale8.h ****       );
  59:./lib/lib8tion/scale8.h ****     return work;
  60:./lib/lib8tion/scale8.h **** #else
  61:./lib/lib8tion/scale8.h ****     asm volatile(
  62:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED==1)
  63:./lib/lib8tion/scale8.h ****         // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
  64:./lib/lib8tion/scale8.h ****         "mul %0, %1          \n\t"
  65:./lib/lib8tion/scale8.h ****         // Add i to r0, possibly setting the carry flag
  66:./lib/lib8tion/scale8.h ****         "add r0, %0         \n\t"
  67:./lib/lib8tion/scale8.h ****         // load the immediate 0 into i (note, this does _not_ touch any flags)
  68:./lib/lib8tion/scale8.h ****         "ldi %0, 0x00       \n\t"
  69:./lib/lib8tion/scale8.h ****         // walk and chew gum at the same time
  70:./lib/lib8tion/scale8.h ****         "adc %0, r1          \n\t"
  71:./lib/lib8tion/scale8.h **** #else
  72:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
  73:./lib/lib8tion/scale8.h ****          "mul %0, %1          \n\t"
  74:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
  75:./lib/lib8tion/scale8.h ****          "mov %0, r1          \n\t"
  76:./lib/lib8tion/scale8.h ****          /* Restore r1 to "0"; it's expected to always be that */
  77:./lib/lib8tion/scale8.h **** #endif
  78:./lib/lib8tion/scale8.h ****          "clr __zero_reg__    \n\t"
  79:./lib/lib8tion/scale8.h **** 
  80:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
  81:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
  82:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
  83:./lib/lib8tion/scale8.h **** 
  84:./lib/lib8tion/scale8.h ****     /* Return the result */
  85:./lib/lib8tion/scale8.h ****     return i;
  86:./lib/lib8tion/scale8.h **** #endif
  87:./lib/lib8tion/scale8.h **** #else
  88:./lib/lib8tion/scale8.h **** #error "No implementation for scale8 available."
  89:./lib/lib8tion/scale8.h **** #endif
  90:./lib/lib8tion/scale8.h **** }
  91:./lib/lib8tion/scale8.h **** 
  92:./lib/lib8tion/scale8.h **** 
  93:./lib/lib8tion/scale8.h **** ///  The "video" version of scale8 guarantees that the output will
  94:./lib/lib8tion/scale8.h **** ///  be only be zero if one or both of the inputs are zero.  If both
  95:./lib/lib8tion/scale8.h **** ///  inputs are non-zero, the output is guaranteed to be non-zero.
  96:./lib/lib8tion/scale8.h **** ///  This makes for better 'video'/LED dimming, at the cost of
  97:./lib/lib8tion/scale8.h **** ///  several additional cycles.
  98:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video( uint8_t i, fract8 scale)
  99:./lib/lib8tion/scale8.h **** {
 100:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 101:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 102:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 103:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 104:./lib/lib8tion/scale8.h ****     return j;
 105:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 106:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 107:./lib/lib8tion/scale8.h ****     asm volatile(
 108:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 109:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 110:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 111:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 112:./lib/lib8tion/scale8.h ****         "  clr __zero_reg__\n\t"
 113:./lib/lib8tion/scale8.h ****         "  cpse %[scale], r1\n\t"
 114:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 115:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 116:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 117:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 118:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 119:./lib/lib8tion/scale8.h **** 
 120:./lib/lib8tion/scale8.h ****     return j;
 121:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 122:./lib/lib8tion/scale8.h ****     // asm volatile(
 123:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 124:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 125:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 126:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 127:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 128:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 129:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 130:./lib/lib8tion/scale8.h **** 
 131:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 132:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 133:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 134:./lib/lib8tion/scale8.h **** 
 135:./lib/lib8tion/scale8.h ****     // // Return the result
 136:./lib/lib8tion/scale8.h ****     // return i;
 137:./lib/lib8tion/scale8.h **** #else
 138:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video available."
 139:./lib/lib8tion/scale8.h **** #endif
 140:./lib/lib8tion/scale8.h **** }
 141:./lib/lib8tion/scale8.h **** 
 142:./lib/lib8tion/scale8.h **** 
 143:./lib/lib8tion/scale8.h **** /// This version of scale8 does not clean up the R1 register on AVR
 144:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8's in a row, use this, and
 145:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 146:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 147:./lib/lib8tion/scale8.h **** {
 148:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1
 149:./lib/lib8tion/scale8.h **** #if (FASTLED_SCALE8_FIXED == 1)
 150:./lib/lib8tion/scale8.h ****     return (((uint16_t)i) * ((uint16_t)(scale)+1)) >> 8;
 151:./lib/lib8tion/scale8.h **** #else
 152:./lib/lib8tion/scale8.h ****     return ((int)i * (int)(scale) ) >> 8;
 153:./lib/lib8tion/scale8.h **** #endif
 154:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 155:./lib/lib8tion/scale8.h ****     asm volatile(
 156:./lib/lib8tion/scale8.h ****       #if (FASTLED_SCALE8_FIXED==1)
 157:./lib/lib8tion/scale8.h ****               // Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0
 158:./lib/lib8tion/scale8.h ****               "mul %0, %1          \n\t"
 159:./lib/lib8tion/scale8.h ****               // Add i to r0, possibly setting the carry flag
 160:./lib/lib8tion/scale8.h ****               "add r0, %0         \n\t"
 161:./lib/lib8tion/scale8.h ****               // load the immediate 0 into i (note, this does _not_ touch any flags)
 162:./lib/lib8tion/scale8.h ****               "ldi %0, 0x00       \n\t"
 163:./lib/lib8tion/scale8.h ****               // walk and chew gum at the same time
 164:./lib/lib8tion/scale8.h ****               "adc %0, r1          \n\t"
 165:./lib/lib8tion/scale8.h ****       #else
 166:./lib/lib8tion/scale8.h ****          /* Multiply 8-bit i * 8-bit scale, giving 16-bit r1,r0 */
 167:./lib/lib8tion/scale8.h ****          "mul %0, %1    \n\t"
 168:./lib/lib8tion/scale8.h ****          /* Move the high 8-bits of the product (r1) back to i */
 169:./lib/lib8tion/scale8.h ****          "mov %0, r1    \n\t"
 170:./lib/lib8tion/scale8.h ****       #endif
 171:./lib/lib8tion/scale8.h ****          /* R1 IS LEFT DIRTY HERE; YOU MUST ZERO IT OUT YOURSELF  */
 172:./lib/lib8tion/scale8.h ****          /* "clr __zero_reg__    \n\t" */
 173:./lib/lib8tion/scale8.h **** 
 174:./lib/lib8tion/scale8.h ****          : "+a" (i)      /* writes to i */
 175:./lib/lib8tion/scale8.h ****          : "a"  (scale)  /* uses scale */
 176:./lib/lib8tion/scale8.h ****          : "r0", "r1"    /* clobbers r0, r1 */ );
 177:./lib/lib8tion/scale8.h **** 
 178:./lib/lib8tion/scale8.h ****     // Return the result
 179:./lib/lib8tion/scale8.h ****     return i;
 180:./lib/lib8tion/scale8.h **** #else
 181:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_LEAVING_R1_DIRTY available."
 182:./lib/lib8tion/scale8.h **** #endif
 183:./lib/lib8tion/scale8.h **** }
 184:./lib/lib8tion/scale8.h **** 
 185:./lib/lib8tion/scale8.h **** 
 186:./lib/lib8tion/scale8.h **** /// This version of scale8_video does not clean up the R1 register on AVR
 187:./lib/lib8tion/scale8.h **** /// If you are doing several 'scale8_video's in a row, use this, and
 188:./lib/lib8tion/scale8.h **** /// then explicitly call cleanup_R1.
 189:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint8_t scale8_video_LEAVING_R1_DIRTY( uint8_t i, fract8 scale)
 190:./lib/lib8tion/scale8.h **** {
 191:./lib/lib8tion/scale8.h **** #if SCALE8_C == 1 || defined(LIB8_ATTINY)
 192:./lib/lib8tion/scale8.h ****     uint8_t j = (((int)i * (int)scale) >> 8) + ((i&&scale)?1:0);
 193:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 194:./lib/lib8tion/scale8.h ****     // uint8_t j = (i == 0) ? 0 : (((int)i * (int)(scale) ) >> 8) + nonzeroscale;
 195:./lib/lib8tion/scale8.h ****     return j;
 196:./lib/lib8tion/scale8.h **** #elif SCALE8_AVRASM == 1
 197:./lib/lib8tion/scale8.h ****     uint8_t j=0;
 198:./lib/lib8tion/scale8.h ****     asm volatile(
 199:./lib/lib8tion/scale8.h ****         "  tst %[i]\n\t"
 200:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 201:./lib/lib8tion/scale8.h ****         "  mul %[i], %[scale]\n\t"
 202:./lib/lib8tion/scale8.h ****         "  mov %[j], r1\n\t"
 203:./lib/lib8tion/scale8.h ****         "  breq L_%=\n\t"
 204:./lib/lib8tion/scale8.h ****         "  subi %[j], 0xFF\n\t"
 205:./lib/lib8tion/scale8.h ****         "L_%=: \n\t"
 206:./lib/lib8tion/scale8.h ****         : [j] "+a" (j)
 207:./lib/lib8tion/scale8.h ****         : [i] "a" (i), [scale] "a" (scale)
 208:./lib/lib8tion/scale8.h ****         : "r0", "r1");
 209:./lib/lib8tion/scale8.h **** 
 210:./lib/lib8tion/scale8.h ****     return j;
 211:./lib/lib8tion/scale8.h ****     // uint8_t nonzeroscale = (scale != 0) ? 1 : 0;
 212:./lib/lib8tion/scale8.h ****     // asm volatile(
 213:./lib/lib8tion/scale8.h ****     //      "      tst %0           \n"
 214:./lib/lib8tion/scale8.h ****     //      "      breq L_%=        \n"
 215:./lib/lib8tion/scale8.h ****     //      "      mul %0, %1       \n"
 216:./lib/lib8tion/scale8.h ****     //      "      mov %0, r1       \n"
 217:./lib/lib8tion/scale8.h ****     //      "      add %0, %2       \n"
 218:./lib/lib8tion/scale8.h ****     //      "      clr __zero_reg__ \n"
 219:./lib/lib8tion/scale8.h ****     //      "L_%=:                  \n"
 220:./lib/lib8tion/scale8.h **** 
 221:./lib/lib8tion/scale8.h ****     //      : "+a" (i)
 222:./lib/lib8tion/scale8.h ****     //      : "a" (scale), "a" (nonzeroscale)
 223:./lib/lib8tion/scale8.h ****     //      : "r0", "r1");
 224:./lib/lib8tion/scale8.h **** 
 225:./lib/lib8tion/scale8.h ****     // // Return the result
 226:./lib/lib8tion/scale8.h ****     // return i;
 227:./lib/lib8tion/scale8.h **** #else
 228:./lib/lib8tion/scale8.h **** #error "No implementation for scale8_video_LEAVING_R1_DIRTY available."
 229:./lib/lib8tion/scale8.h **** #endif
 230:./lib/lib8tion/scale8.h **** }
 231:./lib/lib8tion/scale8.h **** 
 232:./lib/lib8tion/scale8.h **** /// Clean up the r1 register after a series of *LEAVING_R1_DIRTY calls
 233:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE void cleanup_R1(void)
 234:./lib/lib8tion/scale8.h **** {
 235:./lib/lib8tion/scale8.h **** #if CLEANUP_R1_AVRASM == 1
 236:./lib/lib8tion/scale8.h ****     // Restore r1 to "0"; it's expected to always be that
 237:./lib/lib8tion/scale8.h ****     asm volatile( "clr __zero_reg__  \n\t" : : : "r1" );
 238:./lib/lib8tion/scale8.h **** #endif
 239:./lib/lib8tion/scale8.h **** }
 240:./lib/lib8tion/scale8.h **** 
 241:./lib/lib8tion/scale8.h **** 
 242:./lib/lib8tion/scale8.h **** /// scale a 16-bit unsigned value by an 8-bit value,
 243:./lib/lib8tion/scale8.h **** ///         considered as numerator of a fraction whose denominator
 244:./lib/lib8tion/scale8.h **** ///         is 256. In other words, it computes i * (scale / 256)
 245:./lib/lib8tion/scale8.h **** 
 246:./lib/lib8tion/scale8.h **** LIB8STATIC_ALWAYS_INLINE uint16_t scale16by8( uint16_t i, fract8 scale )
 247:./lib/lib8tion/scale8.h **** {
 248:./lib/lib8tion/scale8.h **** #if SCALE16BY8_C == 1
 249:./lib/lib8tion/scale8.h ****     uint16_t result;
 250:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 251:./lib/lib8tion/scale8.h ****     result = (i * (1+((uint16_t)scale))) >> 8;
 252:./lib/lib8tion/scale8.h **** #else
 253:./lib/lib8tion/scale8.h ****     result = (i * scale) / 256;
 2341              		.loc 4 253 17 view .LVU585
 2342 000a 344B     		ldr	r3, .L144
 2343              	.LBE167:
 2344              	.LBE166:
 2345              		.loc 24 8 20 view .LVU586
 2346 000c 99F80450 		ldrb	r5, [r9, #4]	@ zero_extendqisi2
 2347              	.LBB172:
 2348              	.LBB168:
 2349              		.loc 4 253 17 view .LVU587
 2350 0010 1B88     		ldrh	r3, [r3]
 2351              	.LBE168:
 2352              	.LBE172:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2353              		.loc 24 6 5 view .LVU588
 2354 0012 04EB8404 		add	r4, r4, r4, lsl #2
 2355 0016 A400     		lsls	r4, r4, #2
 2356              	.LBB173:
 2357              	.LBB169:
 2358              		.loc 4 253 17 view .LVU589
 2359 0018 6D08     		lsrs	r5, r5, #1
 2360              	.LBE169:
 2361              	.LBE173:
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2362              		.loc 24 5 82 view .LVU590
 2363 001a 89B0     		sub	sp, sp, #36
 2364              		.cfi_def_cfa_offset 72
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2365              		.loc 24 6 5 view .LVU591
 2366 001c E4B2     		uxtb	r4, r4
 2367              	.LVL164:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2368              		.loc 24 6 5 is_stmt 1 view .LVU592
 2369              	.LBB174:
 2370              	.LBB170:
 2371              		.loc 4 253 17 is_stmt 0 view .LVU593
 2372 001e 5D43     		muls	r5, r3, r5
 2373              	.LBE170:
 2374              	.LBE174:
 2375              		.loc 24 8 13 view .LVU594
 2376 0020 C5F30723 		ubfx	r3, r5, #8, #8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2377              		.loc 24 6 5 view .LVU595
 2378 0024 04F11406 		add	r6, r4, #20
 2379 0028 F6B2     		uxtb	r6, r6
 2380              	.LVL165:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2381              		.loc 24 6 5 is_stmt 1 view .LVU596
 2382              		.loc 24 8 13 is_stmt 0 view .LVU597
 2383 002a 0293     		str	r3, [sp, #8]
 2384 002c 2C4B     		ldr	r3, .L144+4
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2385              		.loc 24 5 82 view .LVU598
 2386 002e 0391     		str	r1, [sp, #12]
 2387 0030 622E     		cmp	r6, #98
 2388 0032 B346     		mov	fp, r6
 2389 0034 8046     		mov	r8, r0
 2390 0036 28BF     		it	cs
 2391 0038 4FF0620B 		movcs	fp, #98
 2392              	.LVL166:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** 
 2393              		.loc 24 6 44 is_stmt 1 view .LVU599
 2394              		.loc 24 8 5 view .LVU600
 2395              	.LBB175:
 2396              	.LBI166:
 246:./lib/lib8tion/scale8.h **** {
 2397              		.loc 4 246 35 view .LVU601
 2398              	.LBB171:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 2399              		.loc 4 249 5 view .LVU602
 2400              		.loc 4 253 5 view .LVU603
 254:./lib/lib8tion/scale8.h **** #endif
 255:./lib/lib8tion/scale8.h ****     return result;
 2401              		.loc 4 255 5 view .LVU604
 2402              		.loc 4 255 5 is_stmt 0 view .LVU605
 2403              	.LBE171:
 2404              	.LBE175:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2405              		.loc 24 9 5 is_stmt 1 view .LVU606
 2406              	.LBB176:
 2407              		.loc 24 9 10 view .LVU607
 2408              		.loc 24 9 10 is_stmt 0 view .LVU608
 2409 003c 03EB4407 		add	r7, r3, r4, lsl #1
 2410              	.LBB177:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2411              		.loc 24 10 9 view .LVU609
 2412 0040 03F58E7A 		add	r10, r3, #284
 2413              	.LVL167:
 2414              	.L140:
 2415              		.loc 24 10 9 view .LVU610
 2416              	.LBE177:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2417              		.loc 24 9 31 is_stmt 1 discriminator 1 view .LVU611
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2418              		.loc 24 9 5 is_stmt 0 discriminator 1 view .LVU612
 2419 0044 E3B2     		uxtb	r3, r4
 2420 0046 9B45     		cmp	fp, r3
 2421 0048 06D8     		bhi	.L143
 2422              	.LBE176:
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  16:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     }
  17:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     return led_max < DRIVER_LED_TOTAL;
 2423              		.loc 24 17 5 is_stmt 1 view .LVU613
  18:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h **** }
 2424              		.loc 24 18 1 is_stmt 0 view .LVU614
 2425 004a 612E     		cmp	r6, #97
 2426 004c 8CBF     		ite	hi
 2427 004e 0020     		movhi	r0, #0
 2428 0050 0120     		movls	r0, #1
 2429 0052 09B0     		add	sp, sp, #36
 2430              		.cfi_remember_state
 2431              		.cfi_def_cfa_offset 36
 2432              		@ sp needed
 2433 0054 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2434              	.LVL168:
 2435              	.L143:
 2436              		.cfi_restore_state
 2437              	.LBB179:
 2438              	.LBB178:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2439              		.loc 24 10 9 is_stmt 1 view .LVU615
 2440 0058 14F80A20 		ldrb	r2, [r4, r10]	@ zero_extendqisi2
 2441 005c 98F80130 		ldrb	r3, [r8, #1]	@ zero_extendqisi2
 2442 0060 1A42     		tst	r2, r3
 2443 0062 38D0     		beq	.L142
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2444              		.loc 24 11 9 view .LVU616
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2445              		.loc 24 12 45 is_stmt 0 view .LVU617
 2446 0064 97F85930 		ldrb	r3, [r7, #89]	@ zero_extendqisi2
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2447              		.loc 24 11 45 view .LVU618
 2448 0068 97F85800 		ldrb	r0, [r7, #88]	@ zero_extendqisi2
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2449              		.loc 24 12 48 view .LVU619
 2450 006c 203B     		subs	r3, r3, #32
 2451 006e 9AB2     		uxth	r2, r3
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dx   = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2452              		.loc 24 11 48 view .LVU620
 2453 0070 7038     		subs	r0, r0, #112
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2454              		.loc 24 13 44 view .LVU621
 2455 0072 13FB03F3 		smulbb	r3, r3, r3
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2456              		.loc 24 11 48 view .LVU622
 2457 0076 81B2     		uxth	r1, r0
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2458              		.loc 24 13 24 view .LVU623
 2459 0078 00FB0030 		mla	r0, r0, r0, r3
 2460 007c 80B2     		uxth	r0, r0
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         int16_t dy   = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2461              		.loc 24 11 48 view .LVU624
 2462 007e 0591     		str	r1, [sp, #20]
 2463              	.LVL169:
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2464              		.loc 24 12 9 is_stmt 1 view .LVU625
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         uint8_t dist = sqrt16(dx * dx + dy * dy);
 2465              		.loc 24 12 48 is_stmt 0 view .LVU626
 2466 0080 0492     		str	r2, [sp, #16]
 2467              	.LVL170:
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2468              		.loc 24 13 9 is_stmt 1 view .LVU627
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2469              		.loc 24 13 24 is_stmt 0 view .LVU628
 2470 0082 FFF7FEFF 		bl	sqrt16
 2471              	.LVL171:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2472              		.loc 24 14 24 view .LVU629
 2473 0086 029A     		ldr	r2, [sp, #8]
 2474 0088 99F801C0 		ldrb	ip, [r9, #1]	@ zero_extendqisi2
 2475 008c 99F803E0 		ldrb	lr, [r9, #3]	@ zero_extendqisi2
 2476 0090 0599     		ldr	r1, [sp, #20]
 2477 0092 0092     		str	r2, [sp]
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB     rgb  = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, dist, time)
 2478              		.loc 24 13 24 view .LVU630
 2479 0094 0346     		mov	r3, r0
 2480              	.LVL172:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2481              		.loc 24 14 9 is_stmt 1 view .LVU631
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2482              		.loc 24 14 24 is_stmt 0 view .LVU632
 2483 0096 99F80200 		ldrb	r0, [r9, #2]	@ zero_extendqisi2
 2484 009a 049A     		ldr	r2, [sp, #16]
 2485 009c 039D     		ldr	r5, [sp, #12]
 2486 009e 4CEA0020 		orr	r0, ip, r0, lsl #8
 2487 00a2 12B2     		sxth	r2, r2
 2488 00a4 09B2     		sxth	r1, r1
 2489 00a6 40EA0E40 		orr	r0, r0, lr, lsl #16
 2490 00aa A847     		blx	r5
 2491              	.LVL173:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2492              		.loc 24 14 24 view .LVU633
 2493 00ac C0F30723 		ubfx	r3, r0, #8, #8
 2494 00b0 8DF81C00 		strb	r0, [sp, #28]
 2495 00b4 C0F30740 		ubfx	r0, r0, #16, #8
 2496 00b8 8DF81D30 		strb	r3, [sp, #29]
 2497 00bc 8DF81E00 		strb	r0, [sp, #30]
 2498 00c0 0798     		ldr	r0, [sp, #28]
 2499 00c2 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 2500              	.LVL174:
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     }
 2501              		.loc 24 15 9 is_stmt 1 view .LVU634
 2502 00c6 C0F30743 		ubfx	r3, r0, #16, #8
 2503 00ca C2B2     		uxtb	r2, r0
 2504 00cc C0F30721 		ubfx	r1, r0, #8, #8
 2505 00d0 2046     		mov	r0, r4
 2506 00d2 FFF7FEFF 		bl	rgb_matrix_set_color
 2507              	.LVL175:
 2508              	.L142:
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****     }
 2509              		.loc 24 15 9 is_stmt 0 view .LVU635
 2510              	.LBE178:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2511              		.loc 24 9 44 is_stmt 1 discriminator 2 view .LVU636
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2512              		.loc 24 9 44 is_stmt 0 discriminator 2 view .LVU637
 2513 00d6 0237     		adds	r7, r7, #2
 2514 00d8 0134     		adds	r4, r4, #1
 2515              	.LVL176:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy_dist.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2516              		.loc 24 9 44 discriminator 2 view .LVU638
 2517 00da B3E7     		b	.L140
 2518              	.L145:
 2519              		.align	2
 2520              	.L144:
 2521 00dc 00000000 		.word	g_rgb_timer
 2522 00e0 00000000 		.word	g_led_config
 2523 00e4 00000000 		.word	rgb_matrix_config
 2524              	.LBE179:
 2525              		.cfi_endproc
 2526              	.LFE364:
 2528              		.section	.text.BAND_SPIRAL_SAT,"ax",%progbits
 2529              		.align	1
 2530              		.global	BAND_SPIRAL_SAT
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2534              		.fpu fpv4-sp-d16
 2536              	BAND_SPIRAL_SAT:
 2537              	.LVL177:
 2538              	.LFB382:
   9:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** bool BAND_SPIRAL_SAT(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2539              		.loc 19 10 47 is_stmt 1 view -0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
 2543              		@ link register save eliminated.
 2544              		.loc 19 10 49 view .LVU640
 2545              		.loc 19 10 56 is_stmt 0 view .LVU641
 2546 0000 0149     		ldr	r1, .L147
 2547 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2548              	.LVL178:
 2549              	.L148:
 2550              		.loc 19 10 56 view .LVU642
 2551 0006 00BF     		.align	2
 2552              	.L147:
 2553 0008 00000000 		.word	BAND_SPIRAL_SAT_math
 2554              		.cfi_endproc
 2555              	.LFE382:
 2557              		.section	.text.BAND_SPIRAL_VAL,"ax",%progbits
 2558              		.align	1
 2559              		.global	BAND_SPIRAL_VAL
 2560              		.syntax unified
 2561              		.thumb
 2562              		.thumb_func
 2563              		.fpu fpv4-sp-d16
 2565              	BAND_SPIRAL_VAL:
 2566              	.LVL179:
 2567              	.LFB384:
   9:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** bool BAND_SPIRAL_VAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &BAND_SPIRA
 2568              		.loc 20 10 47 is_stmt 1 view -0
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 0, uses_anonymous_args = 0
 2572              		@ link register save eliminated.
 2573              		.loc 20 10 49 view .LVU644
 2574              		.loc 20 10 56 is_stmt 0 view .LVU645
 2575 0000 0149     		ldr	r1, .L150
 2576 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2577              	.LVL180:
 2578              	.L151:
 2579              		.loc 20 10 56 view .LVU646
 2580 0006 00BF     		.align	2
 2581              	.L150:
 2582 0008 00000000 		.word	BAND_SPIRAL_VAL_math
 2583              		.cfi_endproc
 2584              	.LFE384:
 2586              		.section	.text.CYCLE_OUT_IN,"ax",%progbits
 2587              		.align	1
 2588              		.global	CYCLE_OUT_IN
 2589              		.syntax unified
 2590              		.thumb
 2591              		.thumb_func
 2592              		.fpu fpv4-sp-d16
 2594              	CYCLE_OUT_IN:
 2595              	.LVL181:
 2596              	.LFB394:
   9:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** bool CYCLE_OUT_IN(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_OUT_IN_
 2597              		.loc 10 10 44 is_stmt 1 view -0
 2598              		.cfi_startproc
 2599              		@ args = 0, pretend = 0, frame = 0
 2600              		@ frame_needed = 0, uses_anonymous_args = 0
 2601              		@ link register save eliminated.
 2602              		.loc 10 10 46 view .LVU648
 2603              		.loc 10 10 53 is_stmt 0 view .LVU649
 2604 0000 0149     		ldr	r1, .L153
 2605 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2606              	.LVL182:
 2607              	.L154:
 2608              		.loc 10 10 53 view .LVU650
 2609 0006 00BF     		.align	2
 2610              	.L153:
 2611 0008 00000000 		.word	CYCLE_OUT_IN_math
 2612              		.cfi_endproc
 2613              	.LFE394:
 2615              		.section	.text.CYCLE_SPIRAL,"ax",%progbits
 2616              		.align	1
 2617              		.global	CYCLE_SPIRAL
 2618              		.syntax unified
 2619              		.thumb
 2620              		.thumb_func
 2621              		.fpu fpv4-sp-d16
 2623              	CYCLE_SPIRAL:
 2624              	.LVL183:
 2625              	.LFB400:
   9:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** bool CYCLE_SPIRAL(effect_params_t* params) { return effect_runner_dx_dy_dist(params, &CYCLE_SPIRAL_
 2626              		.loc 22 10 44 is_stmt 1 view -0
 2627              		.cfi_startproc
 2628              		@ args = 0, pretend = 0, frame = 0
 2629              		@ frame_needed = 0, uses_anonymous_args = 0
 2630              		@ link register save eliminated.
 2631              		.loc 22 10 46 view .LVU652
 2632              		.loc 22 10 53 is_stmt 0 view .LVU653
 2633 0000 0149     		ldr	r1, .L156
 2634 0002 FFF7FEBF 		b	effect_runner_dx_dy_dist
 2635              	.LVL184:
 2636              	.L157:
 2637              		.loc 22 10 53 view .LVU654
 2638 0006 00BF     		.align	2
 2639              	.L156:
 2640 0008 00000000 		.word	CYCLE_SPIRAL_math
 2641              		.cfi_endproc
 2642              	.LFE400:
 2644              		.section	.text.effect_runner_dx_dy,"ax",%progbits
 2645              		.align	1
 2646              		.global	effect_runner_dx_dy
 2647              		.syntax unified
 2648              		.thumb
 2649              		.thumb_func
 2650              		.fpu fpv4-sp-d16
 2652              	effect_runner_dx_dy:
 2653              	.LVL185:
 2654              	.LFB365:
 2655              		.file 25 "quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** typedef HSV (*dx_dy_f)(HSV hsv, int16_t dx, int16_t dy, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** bool effect_runner_dx_dy(effect_params_t* params, dx_dy_f effect_func) {
 2656              		.loc 25 5 72 is_stmt 1 view -0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 16
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2660              		.loc 25 6 5 view .LVU656
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2661              		.loc 25 5 72 is_stmt 0 view .LVU657
 2662 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2663              		.cfi_def_cfa_offset 36
 2664              		.cfi_offset 4, -36
 2665              		.cfi_offset 5, -32
 2666              		.cfi_offset 6, -28
 2667              		.cfi_offset 7, -24
 2668              		.cfi_offset 8, -20
 2669              		.cfi_offset 9, -16
 2670              		.cfi_offset 10, -12
 2671              		.cfi_offset 11, -8
 2672              		.cfi_offset 14, -4
 2673 0004 2DED028B 		vpush.64	{d8}
 2674              		.cfi_def_cfa_offset 44
 2675              		.cfi_offset 80, -44
 2676              		.cfi_offset 81, -40
 2677              	.LBB180:
 2678              	.LBB181:
 253:./lib/lib8tion/scale8.h **** #endif
 2679              		.loc 4 253 17 view .LVU658
 2680 0008 2F4B     		ldr	r3, .L163
 2681              	.LBE181:
 2682              	.LBE180:
   7:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     uint8_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 2);
 2683              		.loc 25 8 61 view .LVU659
 2684 000a DFF8C490 		ldr	r9, .L163+8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2685              		.loc 25 6 5 view .LVU660
 2686 000e 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 2687              	.LBB186:
 2688              	.LBB182:
 253:./lib/lib8tion/scale8.h **** #endif
 2689              		.loc 4 253 17 view .LVU661
 2690 0010 1D88     		ldrh	r5, [r3]
 2691              	.LBE182:
 2692              	.LBE186:
 2693              		.loc 25 8 20 view .LVU662
 2694 0012 99F80430 		ldrb	r3, [r9, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2695              		.loc 25 6 5 view .LVU663
 2696 0016 04EB8404 		add	r4, r4, r4, lsl #2
 2697              	.LBB187:
 2698              	.LBB183:
 253:./lib/lib8tion/scale8.h **** #endif
 2699              		.loc 4 253 17 view .LVU664
 2700 001a 5B08     		lsrs	r3, r3, #1
 2701              	.LBE183:
 2702              	.LBE187:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2703              		.loc 25 6 5 view .LVU665
 2704 001c A400     		lsls	r4, r4, #2
 2705 001e E4B2     		uxtb	r4, r4
 2706              	.LVL186:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2707              		.loc 25 6 5 is_stmt 1 view .LVU666
 2708              	.LBB188:
 2709              	.LBB184:
 253:./lib/lib8tion/scale8.h **** #endif
 2710              		.loc 4 253 17 is_stmt 0 view .LVU667
 2711 0020 5D43     		muls	r5, r3, r5
 2712              	.LBE184:
 2713              	.LBE188:
 2714              		.loc 25 8 13 view .LVU668
 2715 0022 C5F30723 		ubfx	r3, r5, #8, #8
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2716              		.loc 25 6 5 view .LVU669
 2717 0026 04F11406 		add	r6, r4, #20
 2718 002a F6B2     		uxtb	r6, r6
 2719              	.LVL187:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2720              		.loc 25 6 5 is_stmt 1 view .LVU670
 2721              		.loc 25 8 13 is_stmt 0 view .LVU671
 2722 002c 08EE103A 		vmov	s16, r3	@ int
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2723              		.loc 25 5 72 view .LVU672
 2724 0030 85B0     		sub	sp, sp, #20
 2725              		.cfi_def_cfa_offset 64
 2726 0032 264B     		ldr	r3, .L163+4
   5:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2727              		.loc 25 5 72 view .LVU673
 2728 0034 0191     		str	r1, [sp, #4]
 2729 0036 622E     		cmp	r6, #98
 2730 0038 B346     		mov	fp, r6
 2731 003a 8046     		mov	r8, r0
 2732 003c 28BF     		it	cs
 2733 003e 4FF0620B 		movcs	fp, #98
 2734              	.LVL188:
   6:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** 
 2735              		.loc 25 6 44 is_stmt 1 view .LVU674
 2736              		.loc 25 8 5 view .LVU675
 2737              	.LBB189:
 2738              	.LBI180:
 246:./lib/lib8tion/scale8.h **** {
 2739              		.loc 4 246 35 view .LVU676
 2740              	.LBB185:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 2741              		.loc 4 249 5 view .LVU677
 253:./lib/lib8tion/scale8.h **** #endif
 2742              		.loc 4 253 5 view .LVU678
 2743              		.loc 4 255 5 view .LVU679
 2744              		.loc 4 255 5 is_stmt 0 view .LVU680
 2745              	.LBE185:
 2746              	.LBE189:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2747              		.loc 25 9 5 is_stmt 1 view .LVU681
 2748              	.LBB190:
 2749              		.loc 25 9 10 view .LVU682
 2750              		.loc 25 9 10 is_stmt 0 view .LVU683
 2751 0042 03EB4407 		add	r7, r3, r4, lsl #1
 2752              	.LBB191:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2753              		.loc 25 10 9 view .LVU684
 2754 0046 03F58E7A 		add	r10, r3, #284
 2755              	.LVL189:
 2756              	.L159:
 2757              		.loc 25 10 9 view .LVU685
 2758              	.LBE191:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2759              		.loc 25 9 31 is_stmt 1 discriminator 1 view .LVU686
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 2760              		.loc 25 9 5 is_stmt 0 discriminator 1 view .LVU687
 2761 004a E3B2     		uxtb	r3, r4
 2762 004c 9B45     		cmp	fp, r3
 2763 004e 08D8     		bhi	.L162
 2764              	.LBE190:
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dx  = g_led_config.point[i].x - k_rgb_matrix_center.x;
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB     rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     }
  16:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     return led_max < DRIVER_LED_TOTAL;
 2765              		.loc 25 16 5 is_stmt 1 view .LVU688
  17:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h **** }
 2766              		.loc 25 17 1 is_stmt 0 view .LVU689
 2767 0050 612E     		cmp	r6, #97
 2768 0052 8CBF     		ite	hi
 2769 0054 0020     		movhi	r0, #0
 2770 0056 0120     		movls	r0, #1
 2771 0058 05B0     		add	sp, sp, #20
 2772              		.cfi_remember_state
 2773              		.cfi_def_cfa_offset 44
 2774              		@ sp needed
 2775 005a BDEC028B 		vldm	sp!, {d8}
 2776              		.cfi_restore 80
 2777              		.cfi_restore 81
 2778              		.cfi_def_cfa_offset 36
 2779              	.LVL190:
 2780              		.loc 25 17 1 view .LVU690
 2781 005e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2782              	.LVL191:
 2783              	.L162:
 2784              		.cfi_restore_state
 2785              	.LBB193:
 2786              	.LBB192:
  10:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2787              		.loc 25 10 9 is_stmt 1 view .LVU691
 2788 0062 14F80A20 		ldrb	r2, [r4, r10]	@ zero_extendqisi2
 2789 0066 98F80130 		ldrb	r3, [r8, #1]	@ zero_extendqisi2
 2790 006a 1A42     		tst	r2, r3
 2791 006c 28D0     		beq	.L161
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dx  = g_led_config.point[i].x - k_rgb_matrix_center.x;
 2792              		.loc 25 11 9 view .LVU692
 2793              	.LVL192:
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB     rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 2794              		.loc 25 12 9 view .LVU693
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2795              		.loc 25 13 9 view .LVU694
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2796              		.loc 25 13 23 is_stmt 0 view .LVU695
 2797 006e 99F80230 		ldrb	r3, [r9, #2]	@ zero_extendqisi2
 2798 0072 99F80100 		ldrb	r0, [r9, #1]	@ zero_extendqisi2
 2799 0076 99F803C0 		ldrb	ip, [r9, #3]	@ zero_extendqisi2
  12:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB     rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, dx, dy, time));
 2800              		.loc 25 12 44 view .LVU696
 2801 007a 97F85920 		ldrb	r2, [r7, #89]	@ zero_extendqisi2
  11:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         int16_t dy  = g_led_config.point[i].y - k_rgb_matrix_center.y;
 2802              		.loc 25 11 44 view .LVU697
 2803 007e 97F85810 		ldrb	r1, [r7, #88]	@ zero_extendqisi2
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2804              		.loc 25 13 23 view .LVU698
 2805 0082 019D     		ldr	r5, [sp, #4]
 2806 0084 40EA0320 		orr	r0, r0, r3, lsl #8
 2807 0088 203A     		subs	r2, r2, #32
 2808 008a 7039     		subs	r1, r1, #112
 2809 008c 18EE103A 		vmov	r3, s16	@ int
 2810 0090 40EA0C40 		orr	r0, r0, ip, lsl #16
 2811 0094 A847     		blx	r5
 2812              	.LVL193:
  13:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 2813              		.loc 25 13 23 view .LVU699
 2814 0096 C0F30723 		ubfx	r3, r0, #8, #8
 2815 009a 8DF80C00 		strb	r0, [sp, #12]
 2816 009e C0F30740 		ubfx	r0, r0, #16, #8
 2817 00a2 8DF80D30 		strb	r3, [sp, #13]
 2818 00a6 8DF80E00 		strb	r0, [sp, #14]
 2819 00aa 0398     		ldr	r0, [sp, #12]
 2820 00ac FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 2821              	.LVL194:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     }
 2822              		.loc 25 14 9 is_stmt 1 view .LVU700
 2823 00b0 C0F30743 		ubfx	r3, r0, #16, #8
 2824 00b4 C2B2     		uxtb	r2, r0
 2825 00b6 C0F30721 		ubfx	r1, r0, #8, #8
 2826 00ba 2046     		mov	r0, r4
 2827 00bc FFF7FEFF 		bl	rgb_matrix_set_color
 2828              	.LVL195:
 2829              	.L161:
  14:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****     }
 2830              		.loc 25 14 9 is_stmt 0 view .LVU701
 2831              	.LBE192:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2832              		.loc 25 9 44 is_stmt 1 discriminator 2 view .LVU702
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2833              		.loc 25 9 44 is_stmt 0 discriminator 2 view .LVU703
 2834 00c0 0237     		adds	r7, r7, #2
 2835 00c2 0134     		adds	r4, r4, #1
 2836              	.LVL196:
   9:quantum/rgb_matrix/animations/runners/effect_runner_dx_dy.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 2837              		.loc 25 9 44 discriminator 2 view .LVU704
 2838 00c4 C1E7     		b	.L159
 2839              	.L164:
 2840 00c6 00BF     		.align	2
 2841              	.L163:
 2842 00c8 00000000 		.word	g_rgb_timer
 2843 00cc 00000000 		.word	g_led_config
 2844 00d0 00000000 		.word	rgb_matrix_config
 2845              	.LBE193:
 2846              		.cfi_endproc
 2847              	.LFE365:
 2849              		.section	.text.BAND_PINWHEEL_SAT,"ax",%progbits
 2850              		.align	1
 2851              		.global	BAND_PINWHEEL_SAT
 2852              		.syntax unified
 2853              		.thumb
 2854              		.thumb_func
 2855              		.fpu fpv4-sp-d16
 2857              	BAND_PINWHEEL_SAT:
 2858              	.LVL197:
 2859              	.LFB378:
   9:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** bool BAND_PINWHEEL_SAT(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 2860              		.loc 17 10 49 is_stmt 1 view -0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
 2864              		@ link register save eliminated.
 2865              		.loc 17 10 51 view .LVU706
 2866              		.loc 17 10 58 is_stmt 0 view .LVU707
 2867 0000 0149     		ldr	r1, .L166
 2868 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2869              	.LVL198:
 2870              	.L167:
 2871              		.loc 17 10 58 view .LVU708
 2872 0006 00BF     		.align	2
 2873              	.L166:
 2874 0008 00000000 		.word	BAND_PINWHEEL_SAT_math
 2875              		.cfi_endproc
 2876              	.LFE378:
 2878              		.section	.text.BAND_PINWHEEL_VAL,"ax",%progbits
 2879              		.align	1
 2880              		.global	BAND_PINWHEEL_VAL
 2881              		.syntax unified
 2882              		.thumb
 2883              		.thumb_func
 2884              		.fpu fpv4-sp-d16
 2886              	BAND_PINWHEEL_VAL:
 2887              	.LVL199:
 2888              	.LFB380:
   9:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** 
  10:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** bool BAND_PINWHEEL_VAL(effect_params_t* params) { return effect_runner_dx_dy(params, &BAND_PINWHEEL
 2889              		.loc 18 10 49 is_stmt 1 view -0
 2890              		.cfi_startproc
 2891              		@ args = 0, pretend = 0, frame = 0
 2892              		@ frame_needed = 0, uses_anonymous_args = 0
 2893              		@ link register save eliminated.
 2894              		.loc 18 10 51 view .LVU710
 2895              		.loc 18 10 58 is_stmt 0 view .LVU711
 2896 0000 0149     		ldr	r1, .L169
 2897 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2898              	.LVL200:
 2899              	.L170:
 2900              		.loc 18 10 58 view .LVU712
 2901 0006 00BF     		.align	2
 2902              	.L169:
 2903 0008 00000000 		.word	BAND_PINWHEEL_VAL_math
 2904              		.cfi_endproc
 2905              	.LFE380:
 2907              		.section	.text.CYCLE_OUT_IN_DUAL,"ax",%progbits
 2908              		.align	1
 2909              		.global	CYCLE_OUT_IN_DUAL
 2910              		.syntax unified
 2911              		.thumb
 2912              		.thumb_func
 2913              		.fpu fpv4-sp-d16
 2915              	CYCLE_OUT_IN_DUAL:
 2916              	.LVL201:
 2917              	.LFB396:
  11:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** 
  12:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** bool CYCLE_OUT_IN_DUAL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_OUT_IN_
 2918              		.loc 11 12 49 is_stmt 1 view -0
 2919              		.cfi_startproc
 2920              		@ args = 0, pretend = 0, frame = 0
 2921              		@ frame_needed = 0, uses_anonymous_args = 0
 2922              		@ link register save eliminated.
 2923              		.loc 11 12 51 view .LVU714
 2924              		.loc 11 12 58 is_stmt 0 view .LVU715
 2925 0000 0149     		ldr	r1, .L172
 2926 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2927              	.LVL202:
 2928              	.L173:
 2929              		.loc 11 12 58 view .LVU716
 2930 0006 00BF     		.align	2
 2931              	.L172:
 2932 0008 00000000 		.word	CYCLE_OUT_IN_DUAL_math
 2933              		.cfi_endproc
 2934              	.LFE396:
 2936              		.section	.text.CYCLE_PINWHEEL,"ax",%progbits
 2937              		.align	1
 2938              		.global	CYCLE_PINWHEEL
 2939              		.syntax unified
 2940              		.thumb
 2941              		.thumb_func
 2942              		.fpu fpv4-sp-d16
 2944              	CYCLE_PINWHEEL:
 2945              	.LVL203:
 2946              	.LFB398:
   9:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** bool CYCLE_PINWHEEL(effect_params_t* params) { return effect_runner_dx_dy(params, &CYCLE_PINWHEEL_m
 2947              		.loc 21 10 46 is_stmt 1 view -0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 0
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951              		@ link register save eliminated.
 2952              		.loc 21 10 48 view .LVU718
 2953              		.loc 21 10 55 is_stmt 0 view .LVU719
 2954 0000 0149     		ldr	r1, .L175
 2955 0002 FFF7FEBF 		b	effect_runner_dx_dy
 2956              	.LVL204:
 2957              	.L176:
 2958              		.loc 21 10 55 view .LVU720
 2959 0006 00BF     		.align	2
 2960              	.L175:
 2961 0008 00000000 		.word	CYCLE_PINWHEEL_math
 2962              		.cfi_endproc
 2963              	.LFE398:
 2965              		.section	.text.effect_runner_i,"ax",%progbits
 2966              		.align	1
 2967              		.global	effect_runner_i
 2968              		.syntax unified
 2969              		.thumb
 2970              		.thumb_func
 2971              		.fpu fpv4-sp-d16
 2973              	effect_runner_i:
 2974              	.LVL205:
 2975              	.LFB366:
 2976              		.file 26 "quantum/rgb_matrix/animations/runners/effect_runner_i.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** typedef HSV (*i_f)(HSV hsv, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** bool effect_runner_i(effect_params_t* params, i_f effect_func) {
 2977              		.loc 26 5 64 is_stmt 1 view -0
 2978              		.cfi_startproc
 2979              		@ args = 0, pretend = 0, frame = 8
 2980              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2981              		.loc 26 6 5 view .LVU722
   5:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 2982              		.loc 26 5 64 is_stmt 0 view .LVU723
 2983 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2984              		.cfi_def_cfa_offset 48
 2985              		.cfi_offset 4, -36
 2986              		.cfi_offset 5, -32
 2987              		.cfi_offset 6, -28
 2988              		.cfi_offset 7, -24
 2989              		.cfi_offset 8, -20
 2990              		.cfi_offset 9, -16
 2991              		.cfi_offset 10, -12
 2992              		.cfi_offset 11, -8
 2993              		.cfi_offset 14, -4
 2994              		.loc 26 6 5 view .LVU724
 2995 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     uint8_t time = scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed / 4, 1));
 2996              		.loc 26 8 67 view .LVU725
 2997 0006 DFF8A490 		ldr	r9, .L182+4
 2998              	.LBB194:
 2999              	.LBB195:
 253:./lib/lib8tion/scale8.h **** #endif
 3000              		.loc 4 253 17 view .LVU726
 3001 000a 274A     		ldr	r2, .L182
 3002              	.LBE195:
 3003              	.LBE194:
 3004              		.loc 26 8 20 view .LVU727
 3005 000c 99F80450 		ldrb	r5, [r9, #4]	@ zero_extendqisi2
 3006              	.LBB199:
 3007              	.LBB200:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  10:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3008              		.loc 26 10 9 view .LVU728
 3009 0010 DFF89CB0 		ldr	fp, .L182+8
 3010              	.LBE200:
 3011              	.LBE199:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 3012              		.loc 26 6 5 view .LVU729
 3013 0014 04EB8404 		add	r4, r4, r4, lsl #2
 3014 0018 A400     		lsls	r4, r4, #2
 3015 001a E4B2     		uxtb	r4, r4
 3016              	.LVL206:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 3017              		.loc 26 6 5 is_stmt 1 view .LVU730
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3018              		.loc 26 8 20 is_stmt 0 view .LVU731
 3019 001c AB08     		lsrs	r3, r5, #2
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 3020              		.loc 26 6 5 view .LVU732
 3021 001e 04F11408 		add	r8, r4, #20
 3022              	.LBB202:
 3023              	.LBB196:
 253:./lib/lib8tion/scale8.h **** #endif
 3024              		.loc 4 253 17 view .LVU733
 3025 0022 1588     		ldrh	r5, [r2]
 3026              	.LBE196:
 3027              	.LBE202:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 3028              		.loc 26 6 5 view .LVU734
 3029 0024 5FFA88F8 		uxtb	r8, r8
 3030              	.LVL207:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 3031              		.loc 26 6 5 is_stmt 1 view .LVU735
 3032 0028 B8F1620F 		cmp	r8, #98
 3033              	.LBB203:
 3034              	.LBB197:
 253:./lib/lib8tion/scale8.h **** #endif
 3035              		.loc 4 253 17 is_stmt 0 view .LVU736
 3036 002c 03FB0555 		mla	r5, r3, r5, r5
 3037 0030 C246     		mov	r10, r8
 3038              	.LBE197:
 3039              	.LBE203:
   5:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3040              		.loc 26 5 64 view .LVU737
 3041 0032 0646     		mov	r6, r0
 3042 0034 0F46     		mov	r7, r1
 3043 0036 28BF     		it	cs
 3044 0038 4FF0620A 		movcs	r10, #98
 3045              	.LVL208:
   6:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** 
 3046              		.loc 26 6 44 is_stmt 1 view .LVU738
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3047              		.loc 26 8 5 view .LVU739
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 3048              		.loc 1 26 5 view .LVU740
  27:./lib/lib8tion/math8.h ****     return t;
 3049              		.loc 1 27 5 view .LVU741
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 3050              		.loc 1 28 5 view .LVU742
 3051              	.LBB204:
 3052              	.LBI194:
 246:./lib/lib8tion/scale8.h **** {
 3053              		.loc 4 246 35 view .LVU743
 3054              	.LBB198:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 3055              		.loc 4 249 5 view .LVU744
 253:./lib/lib8tion/scale8.h **** #endif
 3056              		.loc 4 253 5 view .LVU745
 3057              		.loc 4 255 5 view .LVU746
 3058              		.loc 4 255 5 is_stmt 0 view .LVU747
 3059              	.LBE198:
 3060              	.LBE204:
   8:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3061              		.loc 26 8 13 view .LVU748
 3062 003c C5F30725 		ubfx	r5, r5, #8, #8
 3063              	.LVL209:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3064              		.loc 26 9 5 is_stmt 1 view .LVU749
 3065              	.LBB205:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3066              		.loc 26 9 10 view .LVU750
 3067              	.L178:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3068              		.loc 26 9 10 is_stmt 0 view .LVU751
 3069 0040 E1B2     		uxtb	r1, r4
 3070              	.LVL210:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3071              		.loc 26 9 31 is_stmt 1 discriminator 1 view .LVU752
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3072              		.loc 26 9 5 is_stmt 0 discriminator 1 view .LVU753
 3073 0042 8A45     		cmp	r10, r1
 3074 0044 07D8     		bhi	.L181
 3075              	.LBE205:
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
  12:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  13:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     }
  14:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     return led_max < DRIVER_LED_TOTAL;
 3076              		.loc 26 14 5 is_stmt 1 view .LVU754
  15:quantum/rgb_matrix/animations/runners/effect_runner_i.h **** }
 3077              		.loc 26 15 1 is_stmt 0 view .LVU755
 3078 0046 B8F1610F 		cmp	r8, #97
 3079 004a 8CBF     		ite	hi
 3080 004c 0020     		movhi	r0, #0
 3081 004e 0120     		movls	r0, #1
 3082 0050 03B0     		add	sp, sp, #12
 3083              		.cfi_remember_state
 3084              		.cfi_def_cfa_offset 36
 3085              		@ sp needed
 3086 0052 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3087              	.LVL211:
 3088              	.L181:
 3089              		.cfi_restore_state
 3090              	.LBB206:
 3091              	.LBB201:
  10:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3092              		.loc 26 10 9 is_stmt 1 view .LVU756
 3093 0056 14F80B20 		ldrb	r2, [r4, fp]	@ zero_extendqisi2
 3094 005a 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3095 005c 1A42     		tst	r2, r3
 3096 005e 20D0     		beq	.L180
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3097              		.loc 26 11 9 view .LVU757
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3098              		.loc 26 11 19 is_stmt 0 view .LVU758
 3099 0060 99F80200 		ldrb	r0, [r9, #2]	@ zero_extendqisi2
 3100 0064 99F80130 		ldrb	r3, [r9, #1]	@ zero_extendqisi2
 3101 0068 43EA0023 		orr	r3, r3, r0, lsl #8
 3102 006c 99F80300 		ldrb	r0, [r9, #3]	@ zero_extendqisi2
 3103 0070 2A46     		mov	r2, r5
 3104 0072 43EA0040 		orr	r0, r3, r0, lsl #16
 3105 0076 B847     		blx	r7
 3106              	.LVL212:
  11:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, i, time));
 3107              		.loc 26 11 19 view .LVU759
 3108 0078 C0F30723 		ubfx	r3, r0, #8, #8
 3109 007c 8DF80400 		strb	r0, [sp, #4]
 3110 0080 C0F30740 		ubfx	r0, r0, #16, #8
 3111 0084 8DF80530 		strb	r3, [sp, #5]
 3112 0088 8DF80600 		strb	r0, [sp, #6]
 3113 008c 0198     		ldr	r0, [sp, #4]
 3114 008e FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3115              	.LVL213:
  12:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****     }
 3116              		.loc 26 12 9 is_stmt 1 view .LVU760
 3117 0092 C0F30743 		ubfx	r3, r0, #16, #8
 3118 0096 C2B2     		uxtb	r2, r0
 3119 0098 C0F30721 		ubfx	r1, r0, #8, #8
 3120 009c 2046     		mov	r0, r4
 3121 009e FFF7FEFF 		bl	rgb_matrix_set_color
 3122              	.LVL214:
 3123              	.L180:
 3124              	.LBE201:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3125              		.loc 26 9 44 discriminator 2 view .LVU761
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3126              		.loc 26 9 44 is_stmt 0 discriminator 2 view .LVU762
 3127 00a2 0134     		adds	r4, r4, #1
 3128              	.LVL215:
   9:quantum/rgb_matrix/animations/runners/effect_runner_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3129              		.loc 26 9 44 discriminator 2 view .LVU763
 3130 00a4 CCE7     		b	.L178
 3131              	.L183:
 3132 00a6 00BF     		.align	2
 3133              	.L182:
 3134 00a8 00000000 		.word	g_rgb_timer
 3135 00ac 00000000 		.word	rgb_matrix_config
 3136 00b0 1C010000 		.word	g_led_config+284
 3137              	.LBE206:
 3138              		.cfi_endproc
 3139              	.LFE366:
 3141              		.section	.text.BAND_SAT,"ax",%progbits
 3142              		.align	1
 3143              		.global	BAND_SAT
 3144              		.syntax unified
 3145              		.thumb
 3146              		.thumb_func
 3147              		.fpu fpv4-sp-d16
 3149              	BAND_SAT:
 3150              	.LVL216:
 3151              	.LFB374:
  10:quantum/rgb_matrix/animations/colorband_sat_anim.h **** 
  11:quantum/rgb_matrix/animations/colorband_sat_anim.h **** bool BAND_SAT(effect_params_t* params) { return effect_runner_i(params, &BAND_SAT_math); }
 3152              		.loc 3 11 40 is_stmt 1 view -0
 3153              		.cfi_startproc
 3154              		@ args = 0, pretend = 0, frame = 0
 3155              		@ frame_needed = 0, uses_anonymous_args = 0
 3156              		@ link register save eliminated.
 3157              		.loc 3 11 42 view .LVU765
 3158              		.loc 3 11 49 is_stmt 0 view .LVU766
 3159 0000 0149     		ldr	r1, .L185
 3160 0002 FFF7FEBF 		b	effect_runner_i
 3161              	.LVL217:
 3162              	.L186:
 3163              		.loc 3 11 49 view .LVU767
 3164 0006 00BF     		.align	2
 3165              	.L185:
 3166 0008 00000000 		.word	BAND_SAT_math
 3167              		.cfi_endproc
 3168              	.LFE374:
 3170              		.section	.text.BAND_VAL,"ax",%progbits
 3171              		.align	1
 3172              		.global	BAND_VAL
 3173              		.syntax unified
 3174              		.thumb
 3175              		.thumb_func
 3176              		.fpu fpv4-sp-d16
 3178              	BAND_VAL:
 3179              	.LVL218:
 3180              	.LFB376:
  10:quantum/rgb_matrix/animations/colorband_val_anim.h **** 
  11:quantum/rgb_matrix/animations/colorband_val_anim.h **** bool BAND_VAL(effect_params_t* params) { return effect_runner_i(params, &BAND_VAL_math); }
 3181              		.loc 5 11 40 is_stmt 1 view -0
 3182              		.cfi_startproc
 3183              		@ args = 0, pretend = 0, frame = 0
 3184              		@ frame_needed = 0, uses_anonymous_args = 0
 3185              		@ link register save eliminated.
 3186              		.loc 5 11 42 view .LVU769
 3187              		.loc 5 11 49 is_stmt 0 view .LVU770
 3188 0000 0149     		ldr	r1, .L188
 3189 0002 FFF7FEBF 		b	effect_runner_i
 3190              	.LVL219:
 3191              	.L189:
 3192              		.loc 5 11 49 view .LVU771
 3193 0006 00BF     		.align	2
 3194              	.L188:
 3195 0008 00000000 		.word	BAND_VAL_math
 3196              		.cfi_endproc
 3197              	.LFE376:
 3199              		.section	.text.CYCLE_ALL,"ax",%progbits
 3200              		.align	1
 3201              		.global	CYCLE_ALL
 3202              		.syntax unified
 3203              		.thumb
 3204              		.thumb_func
 3205              		.fpu fpv4-sp-d16
 3207              	CYCLE_ALL:
 3208              	.LVL220:
 3209              	.LFB386:
   9:quantum/rgb_matrix/animations/cycle_all_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_all_anim.h **** bool CYCLE_ALL(effect_params_t* params) { return effect_runner_i(params, &CYCLE_ALL_math); }
 3210              		.loc 6 10 41 is_stmt 1 view -0
 3211              		.cfi_startproc
 3212              		@ args = 0, pretend = 0, frame = 0
 3213              		@ frame_needed = 0, uses_anonymous_args = 0
 3214              		@ link register save eliminated.
 3215              		.loc 6 10 43 view .LVU773
 3216              		.loc 6 10 50 is_stmt 0 view .LVU774
 3217 0000 0149     		ldr	r1, .L191
 3218 0002 FFF7FEBF 		b	effect_runner_i
 3219              	.LVL221:
 3220              	.L192:
 3221              		.loc 6 10 50 view .LVU775
 3222 0006 00BF     		.align	2
 3223              	.L191:
 3224 0008 00000000 		.word	CYCLE_ALL_math
 3225              		.cfi_endproc
 3226              	.LFE386:
 3228              		.section	.text.CYCLE_LEFT_RIGHT,"ax",%progbits
 3229              		.align	1
 3230              		.global	CYCLE_LEFT_RIGHT
 3231              		.syntax unified
 3232              		.thumb
 3233              		.thumb_func
 3234              		.fpu fpv4-sp-d16
 3236              	CYCLE_LEFT_RIGHT:
 3237              	.LVL222:
 3238              	.LFB388:
   9:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** bool CYCLE_LEFT_RIGHT(effect_params_t* params) { return effect_runner_i(params, &CYCLE_LEFT_RIGHT_m
 3239              		.loc 7 10 48 is_stmt 1 view -0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 0
 3242              		@ frame_needed = 0, uses_anonymous_args = 0
 3243              		@ link register save eliminated.
 3244              		.loc 7 10 50 view .LVU777
 3245              		.loc 7 10 57 is_stmt 0 view .LVU778
 3246 0000 0149     		ldr	r1, .L194
 3247 0002 FFF7FEBF 		b	effect_runner_i
 3248              	.LVL223:
 3249              	.L195:
 3250              		.loc 7 10 57 view .LVU779
 3251 0006 00BF     		.align	2
 3252              	.L194:
 3253 0008 00000000 		.word	CYCLE_LEFT_RIGHT_math
 3254              		.cfi_endproc
 3255              	.LFE388:
 3257              		.section	.text.CYCLE_UP_DOWN,"ax",%progbits
 3258              		.align	1
 3259              		.global	CYCLE_UP_DOWN
 3260              		.syntax unified
 3261              		.thumb
 3262              		.thumb_func
 3263              		.fpu fpv4-sp-d16
 3265              	CYCLE_UP_DOWN:
 3266              	.LVL224:
 3267              	.LFB390:
   9:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** 
  10:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** bool CYCLE_UP_DOWN(effect_params_t* params) { return effect_runner_i(params, &CYCLE_UP_DOWN_math); 
 3268              		.loc 8 10 45 is_stmt 1 view -0
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 0
 3271              		@ frame_needed = 0, uses_anonymous_args = 0
 3272              		@ link register save eliminated.
 3273              		.loc 8 10 47 view .LVU781
 3274              		.loc 8 10 54 is_stmt 0 view .LVU782
 3275 0000 0149     		ldr	r1, .L197
 3276 0002 FFF7FEBF 		b	effect_runner_i
 3277              	.LVL225:
 3278              	.L198:
 3279              		.loc 8 10 54 view .LVU783
 3280 0006 00BF     		.align	2
 3281              	.L197:
 3282 0008 00000000 		.word	CYCLE_UP_DOWN_math
 3283              		.cfi_endproc
 3284              	.LFE390:
 3286              		.section	.text.RAINBOW_MOVING_CHEVRON,"ax",%progbits
 3287              		.align	1
 3288              		.global	RAINBOW_MOVING_CHEVRON
 3289              		.syntax unified
 3290              		.thumb
 3291              		.thumb_func
 3292              		.fpu fpv4-sp-d16
 3294              	RAINBOW_MOVING_CHEVRON:
 3295              	.LVL226:
 3296              	.LFB392:
   9:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** 
  10:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** bool RAINBOW_MOVING_CHEVRON(effect_params_t* params) { return effect_runner_i(params, &RAINBOW_MOVI
 3297              		.loc 9 10 54 is_stmt 1 view -0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 0
 3300              		@ frame_needed = 0, uses_anonymous_args = 0
 3301              		@ link register save eliminated.
 3302              		.loc 9 10 56 view .LVU785
 3303              		.loc 9 10 63 is_stmt 0 view .LVU786
 3304 0000 0149     		ldr	r1, .L200
 3305 0002 FFF7FEBF 		b	effect_runner_i
 3306              	.LVL227:
 3307              	.L201:
 3308              		.loc 9 10 63 view .LVU787
 3309 0006 00BF     		.align	2
 3310              	.L200:
 3311 0008 00000000 		.word	RAINBOW_MOVING_CHEVRON_math
 3312              		.cfi_endproc
 3313              	.LFE392:
 3315              		.section	.text.HUE_PENDULUM,"ax",%progbits
 3316              		.align	1
 3317              		.global	HUE_PENDULUM
 3318              		.syntax unified
 3319              		.thumb
 3320              		.thumb_func
 3321              		.fpu fpv4-sp-d16
 3323              	HUE_PENDULUM:
 3324              	.LVL228:
 3325              	.LFB413:
  13:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** 
  14:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** bool HUE_PENDULUM(effect_params_t* params) { return effect_runner_i(params, &HUE_PENDULUM_math); }
 3326              		.loc 15 14 44 is_stmt 1 view -0
 3327              		.cfi_startproc
 3328              		@ args = 0, pretend = 0, frame = 0
 3329              		@ frame_needed = 0, uses_anonymous_args = 0
 3330              		@ link register save eliminated.
 3331              		.loc 15 14 46 view .LVU789
 3332              		.loc 15 14 53 is_stmt 0 view .LVU790
 3333 0000 0149     		ldr	r1, .L203
 3334 0002 FFF7FEBF 		b	effect_runner_i
 3335              	.LVL229:
 3336              	.L204:
 3337              		.loc 15 14 53 view .LVU791
 3338 0006 00BF     		.align	2
 3339              	.L203:
 3340 0008 00000000 		.word	HUE_PENDULUM_math
 3341              		.cfi_endproc
 3342              	.LFE413:
 3344              		.section	.text.HUE_WAVE,"ax",%progbits
 3345              		.align	1
 3346              		.global	HUE_WAVE
 3347              		.syntax unified
 3348              		.thumb
 3349              		.thumb_func
 3350              		.fpu fpv4-sp-d16
 3352              	HUE_WAVE:
 3353              	.LVL230:
 3354              	.LFB415:
  13:quantum/rgb_matrix/animations/hue_wave_anim.h **** 
  14:quantum/rgb_matrix/animations/hue_wave_anim.h **** bool HUE_WAVE(effect_params_t* params) { return effect_runner_i(params, &HUE_WAVE_math); }
 3355              		.loc 16 14 40 is_stmt 1 view -0
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 0, uses_anonymous_args = 0
 3359              		@ link register save eliminated.
 3360              		.loc 16 14 42 view .LVU793
 3361              		.loc 16 14 49 is_stmt 0 view .LVU794
 3362 0000 0149     		ldr	r1, .L206
 3363 0002 FFF7FEBF 		b	effect_runner_i
 3364              	.LVL231:
 3365              	.L207:
 3366              		.loc 16 14 49 view .LVU795
 3367 0006 00BF     		.align	2
 3368              	.L206:
 3369 0008 00000000 		.word	HUE_WAVE_math
 3370              		.cfi_endproc
 3371              	.LFE415:
 3373              		.section	.text.effect_runner_sin_cos_i,"ax",%progbits
 3374              		.align	1
 3375              		.global	effect_runner_sin_cos_i
 3376              		.syntax unified
 3377              		.thumb
 3378              		.thumb_func
 3379              		.fpu fpv4-sp-d16
 3381              	effect_runner_sin_cos_i:
 3382              	.LVL232:
 3383              	.LFB367:
 3384              		.file 27 "quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h"
   1:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** #pragma once
   2:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
   3:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** typedef HSV (*sin_cos_i_f)(HSV hsv, int8_t sin, int8_t cos, uint8_t i, uint8_t time);
   4:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** bool effect_runner_sin_cos_i(effect_params_t* params, sin_cos_i_f effect_func) {
 3385              		.loc 27 5 80 is_stmt 1 view -0
 3386              		.cfi_startproc
 3387              		@ args = 0, pretend = 0, frame = 16
 3388              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3389              		.loc 27 6 5 view .LVU797
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3390              		.loc 27 5 80 is_stmt 0 view .LVU798
 3391 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3392              		.cfi_def_cfa_offset 36
 3393              		.cfi_offset 4, -36
 3394              		.cfi_offset 5, -32
 3395              		.cfi_offset 6, -28
 3396              		.cfi_offset 7, -24
 3397              		.cfi_offset 8, -20
 3398              		.cfi_offset 9, -16
 3399              		.cfi_offset 10, -12
 3400              		.cfi_offset 11, -8
 3401              		.cfi_offset 14, -4
 3402 0004 2DED028B 		vpush.64	{d8}
 3403              		.cfi_def_cfa_offset 44
 3404              		.cfi_offset 80, -44
 3405              		.cfi_offset 81, -40
   7:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
   8:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     uint16_t time      = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 4);
 3406              		.loc 27 8 67 view .LVU799
 3407 0008 DFF8CCA0 		ldr	r10, .L213+8
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3408              		.loc 27 6 5 view .LVU800
 3409 000c 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 3410              	.LBB213:
 3411              	.LBB214:
 253:./lib/lib8tion/scale8.h **** #endif
 3412              		.loc 4 253 17 view .LVU801
 3413 000e 304B     		ldr	r3, .L213
 3414              	.LBE214:
 3415              	.LBE213:
 3416              		.loc 27 8 26 view .LVU802
 3417 0010 9AF80450 		ldrb	r5, [r10, #4]	@ zero_extendqisi2
 3418              	.LBB218:
 3419              	.LBB215:
 253:./lib/lib8tion/scale8.h **** #endif
 3420              		.loc 4 253 17 view .LVU803
 3421 0014 1B88     		ldrh	r3, [r3]
 3422              	.LBE215:
 3423              	.LBE218:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3424              		.loc 27 6 5 view .LVU804
 3425 0016 04EB8404 		add	r4, r4, r4, lsl #2
 3426 001a A400     		lsls	r4, r4, #2
 3427              	.LBB219:
 3428              	.LBB216:
 253:./lib/lib8tion/scale8.h **** #endif
 3429              		.loc 4 253 17 view .LVU805
 3430 001c AD08     		lsrs	r5, r5, #2
 3431 001e 5D43     		muls	r5, r3, r5
 3432              	.LBE216:
 3433              	.LBE219:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3434              		.loc 27 6 5 view .LVU806
 3435 0020 E4B2     		uxtb	r4, r4
 3436              	.LVL233:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3437              		.loc 27 6 5 is_stmt 1 view .LVU807
   9:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   cos_value = cos8(time) - 128;
 3438              		.loc 27 9 26 is_stmt 0 view .LVU808
 3439 0022 C5F30725 		ubfx	r5, r5, #8, #8
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3440              		.loc 27 6 5 view .LVU809
 3441 0026 04F11408 		add	r8, r4, #20
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3442              		.loc 27 5 80 view .LVU810
 3443 002a 87B0     		sub	sp, sp, #28
 3444              		.cfi_def_cfa_offset 72
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3445              		.loc 27 6 5 view .LVU811
 3446 002c 5FFA88F8 		uxtb	r8, r8
 3447              	.LVL234:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3448              		.loc 27 6 5 is_stmt 1 view .LVU812
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3449              		.loc 27 5 80 is_stmt 0 view .LVU813
 3450 0030 8146     		mov	r9, r0
 3451              	.LBB220:
 3452              	.LBB221:
 255:./lib/lib8tion/trig8.h **** }
 3453              		.loc 2 255 12 view .LVU814
 3454 0032 05F14000 		add	r0, r5, #64
 3455              	.LVL235:
 255:./lib/lib8tion/trig8.h **** }
 3456              		.loc 2 255 12 view .LVU815
 3457 0036 B8F1620F 		cmp	r8, #98
 3458 003a C0B2     		uxtb	r0, r0
 3459              	.LBE221:
 3460              	.LBE220:
   5:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3461              		.loc 27 5 80 view .LVU816
 3462 003c 0391     		str	r1, [sp, #12]
 3463 003e C346     		mov	fp, r8
 3464 0040 28BF     		it	cs
 3465 0042 4FF0620B 		movcs	fp, #98
 3466              	.LVL236:
   6:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** 
 3467              		.loc 27 6 44 is_stmt 1 view .LVU817
   8:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   cos_value = cos8(time) - 128;
 3468              		.loc 27 8 5 view .LVU818
 3469              	.LBB223:
 3470              	.LBI213:
 246:./lib/lib8tion/scale8.h **** {
 3471              		.loc 4 246 35 view .LVU819
 3472              	.LBB217:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 3473              		.loc 4 249 5 view .LVU820
 253:./lib/lib8tion/scale8.h **** #endif
 3474              		.loc 4 253 5 view .LVU821
 3475              		.loc 4 255 5 view .LVU822
 3476              		.loc 4 255 5 is_stmt 0 view .LVU823
 3477              	.LBE217:
 3478              	.LBE223:
 3479              		.loc 27 9 5 is_stmt 1 view .LVU824
 3480              	.LBB224:
 3481              	.LBI220:
 253:./lib/lib8tion/trig8.h **** {
 3482              		.loc 2 253 20 view .LVU825
 3483              	.LBB222:
 255:./lib/lib8tion/trig8.h **** }
 3484              		.loc 2 255 5 view .LVU826
 255:./lib/lib8tion/trig8.h **** }
 3485              		.loc 2 255 12 is_stmt 0 view .LVU827
 3486 0046 FFF7FEFF 		bl	sin8_C
 3487              	.LVL237:
 255:./lib/lib8tion/trig8.h **** }
 3488              		.loc 2 255 12 view .LVU828
 3489              	.LBE222:
 3490              	.LBE224:
 3491              		.loc 27 9 37 view .LVU829
 3492 004a 8038     		subs	r0, r0, #128
 3493              		.loc 27 9 14 view .LVU830
 3494 004c 43B2     		sxtb	r3, r0
  10:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   sin_value = sin8(time) - 128;
 3495              		.loc 27 10 26 view .LVU831
 3496 004e 2846     		mov	r0, r5
   9:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     int8_t   sin_value = sin8(time) - 128;
 3497              		.loc 27 9 14 view .LVU832
 3498 0050 08EE103A 		vmov	s16, r3	@ int
 3499              	.LVL238:
 3500              		.loc 27 10 5 is_stmt 1 view .LVU833
 3501              		.loc 27 10 26 is_stmt 0 view .LVU834
 3502 0054 FFF7FEFF 		bl	sin8_C
 3503              	.LVL239:
 3504              		.loc 27 10 37 view .LVU835
 3505 0058 8038     		subs	r0, r0, #128
 3506              		.loc 27 10 14 view .LVU836
 3507 005a 47B2     		sxtb	r7, r0
 3508              	.LVL240:
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3509              		.loc 27 11 5 is_stmt 1 view .LVU837
 3510              	.LBB225:
 3511              		.loc 27 11 10 view .LVU838
 3512              	.L209:
 3513              		.loc 27 11 10 is_stmt 0 view .LVU839
 3514 005c E3B2     		uxtb	r3, r4
 3515              	.LVL241:
 3516              		.loc 27 11 31 is_stmt 1 discriminator 1 view .LVU840
 3517              		.loc 27 11 5 is_stmt 0 discriminator 1 view .LVU841
 3518 005e 9B45     		cmp	fp, r3
 3519 0060 09D8     		bhi	.L212
 3520              	.LBE225:
  12:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(effect_func(rgb_matrix_config.hsv, cos_value, sin_value, i,
  14:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     }
  16:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     return led_max < DRIVER_LED_TOTAL;
 3521              		.loc 27 16 5 is_stmt 1 view .LVU842
  17:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h **** }
 3522              		.loc 27 17 1 is_stmt 0 view .LVU843
 3523 0062 B8F1610F 		cmp	r8, #97
 3524 0066 8CBF     		ite	hi
 3525 0068 0020     		movhi	r0, #0
 3526 006a 0120     		movls	r0, #1
 3527 006c 07B0     		add	sp, sp, #28
 3528              		.cfi_remember_state
 3529              		.cfi_def_cfa_offset 44
 3530              		@ sp needed
 3531 006e BDEC028B 		vldm	sp!, {d8}
 3532              		.cfi_restore 80
 3533              		.cfi_restore 81
 3534              		.cfi_def_cfa_offset 36
 3535              	.LVL242:
 3536              		.loc 27 17 1 view .LVU844
 3537 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3538              	.LVL243:
 3539              	.L212:
 3540              		.cfi_restore_state
 3541              	.LBB227:
 3542              	.LBB226:
  12:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3543              		.loc 27 12 9 is_stmt 1 view .LVU845
 3544 0076 174A     		ldr	r2, .L213+4
 3545 0078 A15C     		ldrb	r1, [r4, r2]	@ zero_extendqisi2
 3546 007a 99F80120 		ldrb	r2, [r9, #1]	@ zero_extendqisi2
 3547 007e 1142     		tst	r1, r2
 3548 0080 24D0     		beq	.L211
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3549              		.loc 27 13 9 view .LVU846
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3550              		.loc 27 13 19 is_stmt 0 view .LVU847
 3551 0082 9AF80220 		ldrb	r2, [r10, #2]	@ zero_extendqisi2
 3552 0086 9AF80100 		ldrb	r0, [r10, #1]	@ zero_extendqisi2
 3553 008a 9AF803C0 		ldrb	ip, [r10, #3]	@ zero_extendqisi2
 3554 008e 039E     		ldr	r6, [sp, #12]
 3555 0090 0095     		str	r5, [sp]
 3556 0092 40EA0220 		orr	r0, r0, r2, lsl #8
 3557 0096 18EE101A 		vmov	r1, s16	@ int
 3558 009a 3A46     		mov	r2, r7
 3559 009c 40EA0C40 		orr	r0, r0, ip, lsl #16
 3560 00a0 B047     		blx	r6
 3561              	.LVL244:
  13:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3562              		.loc 27 13 19 view .LVU848
 3563 00a2 C0F30723 		ubfx	r3, r0, #8, #8
 3564 00a6 8DF81400 		strb	r0, [sp, #20]
 3565 00aa C0F30740 		ubfx	r0, r0, #16, #8
 3566 00ae 8DF81530 		strb	r3, [sp, #21]
 3567 00b2 8DF81600 		strb	r0, [sp, #22]
 3568 00b6 0598     		ldr	r0, [sp, #20]
 3569 00b8 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3570              	.LVL245:
  14:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     }
 3571              		.loc 27 14 9 is_stmt 1 view .LVU849
 3572 00bc C0F30743 		ubfx	r3, r0, #16, #8
 3573 00c0 C2B2     		uxtb	r2, r0
 3574 00c2 C0F30721 		ubfx	r1, r0, #8, #8
 3575 00c6 2046     		mov	r0, r4
 3576 00c8 FFF7FEFF 		bl	rgb_matrix_set_color
 3577              	.LVL246:
 3578              	.L211:
  14:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****     }
 3579              		.loc 27 14 9 is_stmt 0 view .LVU850
 3580              	.LBE226:
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3581              		.loc 27 11 44 is_stmt 1 discriminator 2 view .LVU851
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3582              		.loc 27 11 44 is_stmt 0 discriminator 2 view .LVU852
 3583 00cc 0134     		adds	r4, r4, #1
 3584              	.LVL247:
  11:quantum/rgb_matrix/animations/runners/effect_runner_sin_cos_i.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3585              		.loc 27 11 44 discriminator 2 view .LVU853
 3586 00ce C5E7     		b	.L209
 3587              	.L214:
 3588              		.align	2
 3589              	.L213:
 3590 00d0 00000000 		.word	g_rgb_timer
 3591 00d4 1C010000 		.word	g_led_config+284
 3592 00d8 00000000 		.word	rgb_matrix_config
 3593              	.LBE227:
 3594              		.cfi_endproc
 3595              	.LFE367:
 3597              		.section	.text.DUAL_BEACON,"ax",%progbits
 3598              		.align	1
 3599              		.global	DUAL_BEACON
 3600              		.syntax unified
 3601              		.thumb
 3602              		.thumb_func
 3603              		.fpu fpv4-sp-d16
 3605              	DUAL_BEACON:
 3606              	.LVL248:
 3607              	.LFB402:
   9:quantum/rgb_matrix/animations/dual_beacon_anim.h **** 
  10:quantum/rgb_matrix/animations/dual_beacon_anim.h **** bool DUAL_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &DUAL_BEACON_mat
 3608              		.loc 12 10 43 is_stmt 1 view -0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 0
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              		@ link register save eliminated.
 3613              		.loc 12 10 45 view .LVU855
 3614              		.loc 12 10 52 is_stmt 0 view .LVU856
 3615 0000 0149     		ldr	r1, .L216
 3616 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3617              	.LVL249:
 3618              	.L217:
 3619              		.loc 12 10 52 view .LVU857
 3620 0006 00BF     		.align	2
 3621              	.L216:
 3622 0008 00000000 		.word	DUAL_BEACON_math
 3623              		.cfi_endproc
 3624              	.LFE402:
 3626              		.section	.text.RAINBOW_BEACON,"ax",%progbits
 3627              		.align	1
 3628              		.global	RAINBOW_BEACON
 3629              		.syntax unified
 3630              		.thumb
 3631              		.thumb_func
 3632              		.fpu fpv4-sp-d16
 3634              	RAINBOW_BEACON:
 3635              	.LVL250:
 3636              	.LFB404:
   9:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** 
  10:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** bool RAINBOW_BEACON(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_BEAC
 3637              		.loc 13 10 46 is_stmt 1 view -0
 3638              		.cfi_startproc
 3639              		@ args = 0, pretend = 0, frame = 0
 3640              		@ frame_needed = 0, uses_anonymous_args = 0
 3641              		@ link register save eliminated.
 3642              		.loc 13 10 48 view .LVU859
 3643              		.loc 13 10 55 is_stmt 0 view .LVU860
 3644 0000 0149     		ldr	r1, .L219
 3645 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3646              	.LVL251:
 3647              	.L220:
 3648              		.loc 13 10 55 view .LVU861
 3649 0006 00BF     		.align	2
 3650              	.L219:
 3651 0008 00000000 		.word	RAINBOW_BEACON_math
 3652              		.cfi_endproc
 3653              	.LFE404:
 3655              		.section	.text.RAINBOW_PINWHEELS,"ax",%progbits
 3656              		.align	1
 3657              		.global	RAINBOW_PINWHEELS
 3658              		.syntax unified
 3659              		.thumb
 3660              		.thumb_func
 3661              		.fpu fpv4-sp-d16
 3663              	RAINBOW_PINWHEELS:
 3664              	.LVL252:
 3665              	.LFB406:
   9:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** 
  10:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** bool RAINBOW_PINWHEELS(effect_params_t* params) { return effect_runner_sin_cos_i(params, &RAINBOW_P
 3666              		.loc 14 10 49 is_stmt 1 view -0
 3667              		.cfi_startproc
 3668              		@ args = 0, pretend = 0, frame = 0
 3669              		@ frame_needed = 0, uses_anonymous_args = 0
 3670              		@ link register save eliminated.
 3671              		.loc 14 10 51 view .LVU863
 3672              		.loc 14 10 58 is_stmt 0 view .LVU864
 3673 0000 0149     		ldr	r1, .L222
 3674 0002 FFF7FEBF 		b	effect_runner_sin_cos_i
 3675              	.LVL253:
 3676              	.L223:
 3677              		.loc 14 10 58 view .LVU865
 3678 0006 00BF     		.align	2
 3679              	.L222:
 3680 0008 00000000 		.word	RAINBOW_PINWHEELS_math
 3681              		.cfi_endproc
 3682              	.LFE406:
 3684              		.section	.text.SOLID_COLOR,"ax",%progbits
 3685              		.align	1
 3686              		.global	SOLID_COLOR
 3687              		.syntax unified
 3688              		.thumb
 3689              		.thumb_func
 3690              		.fpu fpv4-sp-d16
 3692              	SOLID_COLOR:
 3693              	.LVL254:
 3694              	.LFB368:
 3695              		.file 28 "quantum/rgb_matrix/animations/solid_color_anim.h"
   1:quantum/rgb_matrix/animations/solid_color_anim.h **** RGB_MATRIX_EFFECT(SOLID_COLOR)
   2:quantum/rgb_matrix/animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   3:quantum/rgb_matrix/animations/solid_color_anim.h **** 
   4:quantum/rgb_matrix/animations/solid_color_anim.h **** bool SOLID_COLOR(effect_params_t* params) {
 3696              		.loc 28 4 43 is_stmt 1 view -0
 3697              		.cfi_startproc
 3698              		@ args = 0, pretend = 0, frame = 8
 3699              		@ frame_needed = 0, uses_anonymous_args = 0
   5:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3700              		.loc 28 5 5 view .LVU867
   4:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3701              		.loc 28 4 43 is_stmt 0 view .LVU868
 3702 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3703              		.cfi_def_cfa_offset 32
 3704              		.cfi_offset 4, -24
 3705              		.cfi_offset 5, -20
 3706              		.cfi_offset 6, -16
 3707              		.cfi_offset 7, -12
 3708              		.cfi_offset 8, -8
 3709              		.cfi_offset 14, -4
 3710              		.loc 28 5 5 view .LVU869
 3711 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/solid_color_anim.h **** 
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(rgb_matrix_config.hsv);
 3712              		.loc 28 7 15 view .LVU870
 3713 0006 1E4A     		ldr	r2, .L231
 3714              	.LBB228:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
   9:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3715              		.loc 28 9 9 view .LVU871
 3716 0008 DFF87880 		ldr	r8, .L231+4
 3717              	.LBE228:
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3718              		.loc 28 7 15 view .LVU872
 3719 000c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3720              		.loc 28 5 5 view .LVU873
 3721 000e 04EB8404 		add	r4, r4, r4, lsl #2
   4:quantum/rgb_matrix/animations/solid_color_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3722              		.loc 28 4 43 view .LVU874
 3723 0012 0546     		mov	r5, r0
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3724              		.loc 28 5 5 view .LVU875
 3725 0014 A400     		lsls	r4, r4, #2
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3726              		.loc 28 7 15 view .LVU876
 3727 0016 9078     		ldrb	r0, [r2, #2]	@ zero_extendqisi2
 3728              	.LVL255:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3729              		.loc 28 5 5 view .LVU877
 3730 0018 E4B2     		uxtb	r4, r4
 3731              	.LVL256:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3732              		.loc 28 5 5 is_stmt 1 view .LVU878
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3733              		.loc 28 7 15 is_stmt 0 view .LVU879
 3734 001a 43EA0023 		orr	r3, r3, r0, lsl #8
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3735              		.loc 28 5 5 view .LVU880
 3736 001e 04F11406 		add	r6, r4, #20
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3737              		.loc 28 7 15 view .LVU881
 3738 0022 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3739              		.loc 28 5 5 view .LVU882
 3740 0024 F6B2     		uxtb	r6, r6
 3741              	.LVL257:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3742              		.loc 28 5 5 is_stmt 1 view .LVU883
 3743 0026 622E     		cmp	r6, #98
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3744              		.loc 28 7 15 is_stmt 0 view .LVU884
 3745 0028 43EA0040 		orr	r0, r3, r0, lsl #16
 3746 002c 3746     		mov	r7, r6
 3747 002e 28BF     		it	cs
 3748 0030 6227     		movcs	r7, #98
 3749              	.LVL258:
   5:quantum/rgb_matrix/animations/solid_color_anim.h **** 
 3750              		.loc 28 5 44 is_stmt 1 view .LVU885
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3751              		.loc 28 7 5 view .LVU886
   7:quantum/rgb_matrix/animations/solid_color_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 3752              		.loc 28 7 15 is_stmt 0 view .LVU887
 3753 0032 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3754              	.LVL259:
 3755 0036 C0F30723 		ubfx	r3, r0, #8, #8
 3756 003a 8DF80530 		strb	r3, [sp, #5]
 3757 003e C0F30743 		ubfx	r3, r0, #16, #8
 3758 0042 8DF80400 		strb	r0, [sp, #4]
 3759 0046 8DF80630 		strb	r3, [sp, #6]
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3760              		.loc 28 8 5 is_stmt 1 view .LVU888
 3761              	.LBB229:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3762              		.loc 28 8 10 view .LVU889
 3763              	.LVL260:
 3764              	.L225:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3765              		.loc 28 8 31 discriminator 1 view .LVU890
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3766              		.loc 28 8 5 is_stmt 0 discriminator 1 view .LVU891
 3767 004a E3B2     		uxtb	r3, r4
 3768 004c 9F42     		cmp	r7, r3
 3769 004e 06D8     		bhi	.L227
 3770              	.LBE229:
  10:quantum/rgb_matrix/animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  11:quantum/rgb_matrix/animations/solid_color_anim.h ****     }
  12:quantum/rgb_matrix/animations/solid_color_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3771              		.loc 28 12 5 is_stmt 1 view .LVU892
  13:quantum/rgb_matrix/animations/solid_color_anim.h **** }
 3772              		.loc 28 13 1 is_stmt 0 view .LVU893
 3773 0050 612E     		cmp	r6, #97
 3774 0052 8CBF     		ite	hi
 3775 0054 0020     		movhi	r0, #0
 3776 0056 0120     		movls	r0, #1
 3777 0058 02B0     		add	sp, sp, #8
 3778              		.cfi_remember_state
 3779              		.cfi_def_cfa_offset 24
 3780              		@ sp needed
 3781 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3782              	.LVL261:
 3783              	.L227:
 3784              		.cfi_restore_state
 3785              	.LBB230:
   9:quantum/rgb_matrix/animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3786              		.loc 28 9 9 is_stmt 1 view .LVU894
 3787 005e 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 3788 0062 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3789 0064 1A42     		tst	r2, r3
 3790 0066 08D0     		beq	.L226
  10:quantum/rgb_matrix/animations/solid_color_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 3791              		.loc 28 10 9 view .LVU895
 3792 0068 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 3793 006c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 3794 0070 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 3795 0074 2046     		mov	r0, r4
 3796 0076 FFF7FEFF 		bl	rgb_matrix_set_color
 3797              	.LVL262:
 3798              	.L226:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3799              		.loc 28 8 44 discriminator 2 view .LVU896
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3800              		.loc 28 8 44 is_stmt 0 discriminator 2 view .LVU897
 3801 007a 0134     		adds	r4, r4, #1
 3802              	.LVL263:
   8:quantum/rgb_matrix/animations/solid_color_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3803              		.loc 28 8 44 discriminator 2 view .LVU898
 3804 007c E5E7     		b	.L225
 3805              	.L232:
 3806 007e 00BF     		.align	2
 3807              	.L231:
 3808 0080 00000000 		.word	rgb_matrix_config
 3809 0084 1C010000 		.word	g_led_config+284
 3810              	.LBE230:
 3811              		.cfi_endproc
 3812              	.LFE368:
 3814              		.section	.text.ALPHAS_MODS,"ax",%progbits
 3815              		.align	1
 3816              		.global	ALPHAS_MODS
 3817              		.syntax unified
 3818              		.thumb
 3819              		.thumb_func
 3820              		.fpu fpv4-sp-d16
 3822              	ALPHAS_MODS:
 3823              	.LVL264:
 3824              	.LFB369:
 3825              		.file 29 "quantum/rgb_matrix/animations/alpha_mods_anim.h"
   1:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #ifndef DISABLE_RGB_MATRIX_ALPHAS_MODS
   2:quantum/rgb_matrix/animations/alpha_mods_anim.h **** RGB_MATRIX_EFFECT(ALPHAS_MODS)
   3:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
   5:quantum/rgb_matrix/animations/alpha_mods_anim.h **** // alphas = color1, mods = color2
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h **** bool ALPHAS_MODS(effect_params_t* params) {
 3826              		.loc 29 6 43 is_stmt 1 view -0
 3827              		.cfi_startproc
 3828              		@ args = 0, pretend = 0, frame = 16
 3829              		@ frame_needed = 0, uses_anonymous_args = 0
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3830              		.loc 29 7 5 view .LVU900
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3831              		.loc 29 6 43 is_stmt 0 view .LVU901
 3832 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3833              		.cfi_def_cfa_offset 28
 3834              		.cfi_offset 4, -28
 3835              		.cfi_offset 5, -24
 3836              		.cfi_offset 6, -20
 3837              		.cfi_offset 7, -16
 3838              		.cfi_offset 8, -12
 3839              		.cfi_offset 9, -8
 3840              		.cfi_offset 14, -4
 3841              		.loc 29 7 5 view .LVU902
 3842 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   8:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
   9:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     HSV hsv  = rgb_matrix_config.hsv;
 3843              		.loc 29 9 9 view .LVU903
 3844 0006 DFF8B880 		ldr	r8, .L242
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3845              		.loc 29 7 5 view .LVU904
 3846 000a 04EB8404 		add	r4, r4, r4, lsl #2
 3847 000e A400     		lsls	r4, r4, #2
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3848              		.loc 29 6 43 view .LVU905
 3849 0010 85B0     		sub	sp, sp, #20
 3850              		.cfi_def_cfa_offset 48
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3851              		.loc 29 7 5 view .LVU906
 3852 0012 E4B2     		uxtb	r4, r4
 3853              	.LVL265:
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3854              		.loc 29 7 5 is_stmt 1 view .LVU907
 3855              		.loc 29 9 9 is_stmt 0 view .LVU908
 3856 0014 B8F80120 		ldrh	r2, [r8, #1]	@ unaligned
 3857 0018 98F80330 		ldrb	r3, [r8, #3]	@ zero_extendqisi2
 3858 001c ADF80420 		strh	r2, [sp, #4]	@ unaligned
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3859              		.loc 29 7 5 view .LVU909
 3860 0020 04F11405 		add	r5, r4, #20
 3861              		.loc 29 9 9 view .LVU910
 3862 0024 8DF80630 		strb	r3, [sp, #6]
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3863              		.loc 29 7 5 view .LVU911
 3864 0028 EDB2     		uxtb	r5, r5
 3865              	.LVL266:
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3866              		.loc 29 7 5 is_stmt 1 view .LVU912
 3867 002a 622D     		cmp	r5, #98
   6:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3868              		.loc 29 6 43 is_stmt 0 view .LVU913
 3869 002c 0646     		mov	r6, r0
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3870              		.loc 29 10 16 view .LVU914
 3871 002e 0198     		ldr	r0, [sp, #4]
 3872              	.LVL267:
   9:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3873              		.loc 29 9 9 view .LVU915
 3874 0030 98F80190 		ldrb	r9, [r8, #1]	@ zero_extendqisi2
 3875 0034 2F46     		mov	r7, r5
 3876 0036 28BF     		it	cs
 3877 0038 6227     		movcs	r7, #98
 3878              	.LVL268:
   7:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3879              		.loc 29 7 44 is_stmt 1 view .LVU916
   9:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3880              		.loc 29 9 5 view .LVU917
 3881              		.loc 29 10 5 view .LVU918
 3882              		.loc 29 10 16 is_stmt 0 view .LVU919
 3883 003a FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3884              	.LVL269:
 3885 003e C0F30723 		ubfx	r3, r0, #8, #8
 3886 0042 8DF80930 		strb	r3, [sp, #9]
  11:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3887              		.loc 29 11 11 view .LVU920
 3888 0046 98F80430 		ldrb	r3, [r8, #4]	@ zero_extendqisi2
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3889              		.loc 29 10 16 view .LVU921
 3890 004a 8DF80800 		strb	r0, [sp, #8]
 3891              		.loc 29 11 11 view .LVU922
 3892 004e 9944     		add	r9, r9, r3
 3893              	.LVL270:
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb1 = rgb_matrix_hsv_to_rgb(hsv);
 3894              		.loc 29 10 16 view .LVU923
 3895 0050 C0F30740 		ubfx	r0, r0, #16, #8
  12:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     RGB rgb2 = rgb_matrix_hsv_to_rgb(hsv);
 3896              		.loc 29 12 16 view .LVU924
 3897 0054 8DF80490 		strb	r9, [sp, #4]
  10:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3898              		.loc 29 10 16 view .LVU925
 3899 0058 8DF80A00 		strb	r0, [sp, #10]
  11:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     hsv.h += rgb_matrix_config.speed;
 3900              		.loc 29 11 5 is_stmt 1 view .LVU926
 3901              		.loc 29 12 5 view .LVU927
 3902              		.loc 29 12 16 is_stmt 0 view .LVU928
 3903 005c 0198     		ldr	r0, [sp, #4]
 3904              	.LBB231:
  13:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  15:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3905              		.loc 29 15 9 view .LVU929
 3906 005e DFF86480 		ldr	r8, .L242+4
 3907              	.LBE231:
  12:quantum/rgb_matrix/animations/alpha_mods_anim.h **** 
 3908              		.loc 29 12 16 view .LVU930
 3909 0062 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 3910              	.LVL271:
 3911 0066 C0F30723 		ubfx	r3, r0, #8, #8
 3912 006a 8DF80D30 		strb	r3, [sp, #13]
 3913 006e C0F30743 		ubfx	r3, r0, #16, #8
 3914 0072 8DF80C00 		strb	r0, [sp, #12]
 3915 0076 8DF80E30 		strb	r3, [sp, #14]
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3916              		.loc 29 14 5 is_stmt 1 view .LVU931
 3917              	.LBB232:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3918              		.loc 29 14 10 view .LVU932
 3919              	.LVL272:
 3920              	.L234:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3921              		.loc 29 14 31 discriminator 1 view .LVU933
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3922              		.loc 29 14 5 is_stmt 0 discriminator 1 view .LVU934
 3923 007a E3B2     		uxtb	r3, r4
 3924 007c 9F42     		cmp	r7, r3
 3925 007e 06D8     		bhi	.L237
 3926              	.LBE232:
  16:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
  17:quantum/rgb_matrix/animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb2.r, rgb2.g, rgb2.b);
  18:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         } else {
  19:quantum/rgb_matrix/animations/alpha_mods_anim.h ****             rgb_matrix_set_color(i, rgb1.r, rgb1.g, rgb1.b);
  20:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         }
  21:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     }
  22:quantum/rgb_matrix/animations/alpha_mods_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 3927              		.loc 29 22 5 is_stmt 1 view .LVU935
  23:quantum/rgb_matrix/animations/alpha_mods_anim.h **** }
 3928              		.loc 29 23 1 is_stmt 0 view .LVU936
 3929 0080 612D     		cmp	r5, #97
 3930 0082 8CBF     		ite	hi
 3931 0084 0020     		movhi	r0, #0
 3932 0086 0120     		movls	r0, #1
 3933 0088 05B0     		add	sp, sp, #20
 3934              		.cfi_remember_state
 3935              		.cfi_def_cfa_offset 28
 3936              		@ sp needed
 3937 008a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3938              	.LVL273:
 3939              	.L237:
 3940              		.cfi_restore_state
 3941              	.LBB233:
  15:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 3942              		.loc 29 15 9 is_stmt 1 view .LVU937
 3943 008e 14F80830 		ldrb	r3, [r4, r8]	@ zero_extendqisi2
 3944 0092 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3945 0094 1342     		tst	r3, r2
 3946 0096 11D0     		beq	.L235
  16:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 3947              		.loc 29 16 9 view .LVU938
  16:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         if (HAS_FLAGS(g_led_config.flags[i], LED_FLAG_MODIFIER)) {
 3948              		.loc 29 16 12 is_stmt 0 view .LVU939
 3949 0098 DB07     		lsls	r3, r3, #31
  17:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         } else {
 3950              		.loc 29 17 13 is_stmt 1 view .LVU940
 3951 009a 43BF     		ittte	mi
 3952 009c 9DF80E30 		ldrbmi	r3, [sp, #14]	@ zero_extendqisi2
 3953 00a0 9DF80C20 		ldrbmi	r2, [sp, #12]	@ zero_extendqisi2
 3954 00a4 9DF80D10 		ldrbmi	r1, [sp, #13]	@ zero_extendqisi2
  19:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         }
 3955              		.loc 29 19 13 view .LVU941
 3956 00a8 9DF80A30 		ldrbpl	r3, [sp, #10]	@ zero_extendqisi2
 3957 00ac 5CBF     		itt	pl
 3958 00ae 9DF80820 		ldrbpl	r2, [sp, #8]	@ zero_extendqisi2
 3959 00b2 9DF80910 		ldrbpl	r1, [sp, #9]	@ zero_extendqisi2
 3960 00b6 2046     		mov	r0, r4
 3961 00b8 FFF7FEFF 		bl	rgb_matrix_set_color
 3962              	.LVL274:
 3963              	.L235:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3964              		.loc 29 14 44 discriminator 2 view .LVU942
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3965              		.loc 29 14 44 is_stmt 0 discriminator 2 view .LVU943
 3966 00bc 0134     		adds	r4, r4, #1
 3967              	.LVL275:
  14:quantum/rgb_matrix/animations/alpha_mods_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 3968              		.loc 29 14 44 discriminator 2 view .LVU944
 3969 00be DCE7     		b	.L234
 3970              	.L243:
 3971              		.align	2
 3972              	.L242:
 3973 00c0 00000000 		.word	rgb_matrix_config
 3974 00c4 1C010000 		.word	g_led_config+284
 3975              	.LBE233:
 3976              		.cfi_endproc
 3977              	.LFE369:
 3979              		.section	.text.GRADIENT_UP_DOWN,"ax",%progbits
 3980              		.align	1
 3981              		.global	GRADIENT_UP_DOWN
 3982              		.syntax unified
 3983              		.thumb
 3984              		.thumb_func
 3985              		.fpu fpv4-sp-d16
 3987              	GRADIENT_UP_DOWN:
 3988              	.LVL276:
 3989              	.LFB370:
 3990              		.file 30 "quantum/rgb_matrix/animations/gradient_up_down_anim.h"
   1:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_UP_DOWN
   2:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_UP_DOWN)
   3:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
   5:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** bool GRADIENT_UP_DOWN(effect_params_t* params) {
 3991              		.loc 30 5 48 is_stmt 1 view -0
 3992              		.cfi_startproc
 3993              		@ args = 0, pretend = 0, frame = 8
 3994              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3995              		.loc 30 6 5 view .LVU946
   5:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 3996              		.loc 30 5 48 is_stmt 0 view .LVU947
 3997 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3998              		.cfi_def_cfa_offset 48
 3999              		.cfi_offset 4, -36
 4000              		.cfi_offset 5, -32
 4001              		.cfi_offset 6, -28
 4002              		.cfi_offset 7, -24
 4003              		.cfi_offset 8, -20
 4004              		.cfi_offset 9, -16
 4005              		.cfi_offset 10, -12
 4006              		.cfi_offset 11, -8
 4007              		.cfi_offset 14, -4
 4008              		.loc 30 6 5 view .LVU948
 4009 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 4010              		.loc 30 8 13 view .LVU949
 4011 0006 204F     		ldr	r7, .L249
 4012              	.LBB234:
 4013              	.LBB235:
   9:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  11:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4014              		.loc 30 11 9 view .LVU950
 4015 0008 DFF88090 		ldr	r9, .L249+4
 4016              	.LBE235:
 4017              	.LBE234:
 4018              	.LBB238:
 4019              	.LBB239:
  26:./lib/lib8tion/scale8.h **** #endif
 4020              		.loc 4 26 25 view .LVU951
 4021 000c 97F80480 		ldrb	r8, [r7, #4]	@ zero_extendqisi2
 4022              	.LBE239:
 4023              	.LBE238:
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4024              		.loc 30 8 13 view .LVU952
 4025 0010 B7F80120 		ldrh	r2, [r7, #1]	@ unaligned
 4026 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4027 0016 ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 4028              		.loc 30 6 5 view .LVU953
 4029 001a 04EB8404 		add	r4, r4, r4, lsl #2
 4030 001e A400     		lsls	r4, r4, #2
 4031 0020 E4B2     		uxtb	r4, r4
 4032              	.LVL277:
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 4033              		.loc 30 6 5 is_stmt 1 view .LVU954
 4034 0022 04F11405 		add	r5, r4, #20
 4035 0026 EDB2     		uxtb	r5, r5
 4036              	.LVL278:
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 4037              		.loc 30 6 5 view .LVU955
 4038 0028 622D     		cmp	r5, #98
 4039 002a AA46     		mov	r10, r5
   5:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4040              		.loc 30 5 48 is_stmt 0 view .LVU956
 4041 002c 0646     		mov	r6, r0
 4042 002e 28BF     		it	cs
 4043 0030 4FF0620A 		movcs	r10, #98
 4044              	.LVL279:
   6:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** 
 4045              		.loc 30 6 44 is_stmt 1 view .LVU957
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4046              		.loc 30 8 5 view .LVU958
   8:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4047              		.loc 30 8 13 is_stmt 0 view .LVU959
 4048 0034 8DF80230 		strb	r3, [sp, #2]
   9:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4049              		.loc 30 9 5 is_stmt 1 view .LVU960
 4050              	.LVL280:
 4051              	.LBB241:
 4052              	.LBI238:
  20:./lib/lib8tion/scale8.h **** {
 4053              		.loc 4 20 34 view .LVU961
 4054              	.LBB240:
  26:./lib/lib8tion/scale8.h **** #endif
 4055              		.loc 4 26 5 view .LVU962
  26:./lib/lib8tion/scale8.h **** #endif
 4056              		.loc 4 26 47 is_stmt 0 view .LVU963
 4057 0038 4FEA9808 		lsr	r8, r8, #2
 4058              	.LVL281:
  26:./lib/lib8tion/scale8.h **** #endif
 4059              		.loc 4 26 47 view .LVU964
 4060              	.LBE240:
 4061              	.LBE241:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4062              		.loc 30 10 5 is_stmt 1 view .LVU965
 4063              	.LBB242:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4064              		.loc 30 10 10 view .LVU966
 4065              	.LBB236:
  12:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         // The y range will be 0..64, map this to 0..4
  13:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + scale * (g_led_config.point[i].y >> 4);
 4066              		.loc 30 14 75 is_stmt 0 view .LVU967
 4067 003c A9F1C30B 		sub	fp, r9, #195
 4068              	.LVL282:
 4069              	.L245:
 4070              		.loc 30 14 75 view .LVU968
 4071              	.LBE236:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4072              		.loc 30 10 31 is_stmt 1 discriminator 1 view .LVU969
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4073              		.loc 30 10 5 is_stmt 0 discriminator 1 view .LVU970
 4074 0040 E3B2     		uxtb	r3, r4
 4075 0042 9A45     		cmp	r10, r3
 4076 0044 06D8     		bhi	.L248
 4077              	.LBE242:
  15:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
  16:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     }
  18:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 4078              		.loc 30 18 5 is_stmt 1 view .LVU971
  19:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** }
 4079              		.loc 30 19 1 is_stmt 0 view .LVU972
 4080 0046 612D     		cmp	r5, #97
 4081 0048 8CBF     		ite	hi
 4082 004a 0020     		movhi	r0, #0
 4083 004c 0120     		movls	r0, #1
 4084 004e 03B0     		add	sp, sp, #12
 4085              		.cfi_remember_state
 4086              		.cfi_def_cfa_offset 36
 4087              		@ sp needed
 4088 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4089              	.LVL283:
 4090              	.L248:
 4091              		.cfi_restore_state
 4092              	.LBB243:
 4093              	.LBB237:
  11:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         // The y range will be 0..64, map this to 0..4
 4094              		.loc 30 11 9 is_stmt 1 view .LVU973
 4095 0054 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 4096 0058 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 4097 005a 1A42     		tst	r2, r3
 4098 005c 12D0     		beq	.L247
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4099              		.loc 30 14 9 view .LVU974
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4100              		.loc 30 14 51 is_stmt 0 view .LVU975
 4101 005e 1BF81430 		ldrb	r3, [fp, r4, lsl #1]	@ zero_extendqisi2
 4102 0062 1A09     		lsrs	r2, r3, #4
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4103              		.loc 30 14 43 view .LVU976
 4104 0064 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4105 0066 02FB0833 		mla	r3, r2, r8, r3
  14:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4106              		.loc 30 14 17 view .LVU977
 4107 006a 8DF80030 		strb	r3, [sp]
  15:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4108              		.loc 30 15 9 is_stmt 1 view .LVU978
  15:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4109              		.loc 30 15 19 is_stmt 0 view .LVU979
 4110 006e 0098     		ldr	r0, [sp]
 4111 0070 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4112              	.LVL284:
  16:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****     }
 4113              		.loc 30 16 9 is_stmt 1 view .LVU980
 4114 0074 C0F30743 		ubfx	r3, r0, #16, #8
 4115 0078 C2B2     		uxtb	r2, r0
 4116 007a C0F30721 		ubfx	r1, r0, #8, #8
 4117 007e 2046     		mov	r0, r4
 4118 0080 FFF7FEFF 		bl	rgb_matrix_set_color
 4119              	.LVL285:
 4120              	.L247:
 4121              	.LBE237:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4122              		.loc 30 10 44 discriminator 2 view .LVU981
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4123              		.loc 30 10 44 is_stmt 0 discriminator 2 view .LVU982
 4124 0084 0134     		adds	r4, r4, #1
 4125              	.LVL286:
  10:quantum/rgb_matrix/animations/gradient_up_down_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4126              		.loc 30 10 44 discriminator 2 view .LVU983
 4127 0086 DBE7     		b	.L245
 4128              	.L250:
 4129              		.align	2
 4130              	.L249:
 4131 0088 00000000 		.word	rgb_matrix_config
 4132 008c 1C010000 		.word	g_led_config+284
 4133              	.LBE243:
 4134              		.cfi_endproc
 4135              	.LFE370:
 4137              		.section	.text.GRADIENT_LEFT_RIGHT,"ax",%progbits
 4138              		.align	1
 4139              		.global	GRADIENT_LEFT_RIGHT
 4140              		.syntax unified
 4141              		.thumb
 4142              		.thumb_func
 4143              		.fpu fpv4-sp-d16
 4145              	GRADIENT_LEFT_RIGHT:
 4146              	.LVL287:
 4147              	.LFB371:
 4148              		.file 31 "quantum/rgb_matrix/animations/gradient_left_right_anim.h"
   1:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #ifndef DISABLE_RGB_MATRIX_GRADIENT_LEFT_RIGHT
   2:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** RGB_MATRIX_EFFECT(GRADIENT_LEFT_RIGHT)
   3:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
   5:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** bool GRADIENT_LEFT_RIGHT(effect_params_t* params) {
 4149              		.loc 31 5 51 is_stmt 1 view -0
 4150              		.cfi_startproc
 4151              		@ args = 0, pretend = 0, frame = 8
 4152              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4153              		.loc 31 6 5 view .LVU985
   5:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4154              		.loc 31 5 51 is_stmt 0 view .LVU986
 4155 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4156              		.cfi_def_cfa_offset 48
 4157              		.cfi_offset 4, -36
 4158              		.cfi_offset 5, -32
 4159              		.cfi_offset 6, -28
 4160              		.cfi_offset 7, -24
 4161              		.cfi_offset 8, -20
 4162              		.cfi_offset 9, -16
 4163              		.cfi_offset 10, -12
 4164              		.cfi_offset 11, -8
 4165              		.cfi_offset 14, -4
 4166              		.loc 31 6 5 view .LVU987
 4167 0004 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     HSV     hsv   = rgb_matrix_config.hsv;
 4168              		.loc 31 8 13 view .LVU988
 4169 0006 214F     		ldr	r7, .L256
 4170              	.LBB244:
 4171              	.LBB245:
   9:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  11:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4172              		.loc 31 11 9 view .LVU989
 4173 0008 DFF88490 		ldr	r9, .L256+4
 4174              	.LBE245:
 4175              	.LBE244:
 4176              	.LBB248:
 4177              	.LBB249:
  26:./lib/lib8tion/scale8.h **** #endif
 4178              		.loc 4 26 25 view .LVU990
 4179 000c 97F80480 		ldrb	r8, [r7, #4]	@ zero_extendqisi2
 4180              	.LBE249:
 4181              	.LBE248:
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4182              		.loc 31 8 13 view .LVU991
 4183 0010 B7F80120 		ldrh	r2, [r7, #1]	@ unaligned
 4184 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4185 0016 ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4186              		.loc 31 6 5 view .LVU992
 4187 001a 04EB8404 		add	r4, r4, r4, lsl #2
 4188 001e A400     		lsls	r4, r4, #2
 4189 0020 E4B2     		uxtb	r4, r4
 4190              	.LVL288:
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4191              		.loc 31 6 5 is_stmt 1 view .LVU993
 4192 0022 04F11405 		add	r5, r4, #20
 4193 0026 EDB2     		uxtb	r5, r5
 4194              	.LVL289:
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4195              		.loc 31 6 5 view .LVU994
 4196 0028 622D     		cmp	r5, #98
 4197 002a AA46     		mov	r10, r5
   5:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4198              		.loc 31 5 51 is_stmt 0 view .LVU995
 4199 002c 0646     		mov	r6, r0
 4200 002e 28BF     		it	cs
 4201 0030 4FF0620A 		movcs	r10, #98
 4202              	.LVL290:
   6:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** 
 4203              		.loc 31 6 44 is_stmt 1 view .LVU996
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4204              		.loc 31 8 5 view .LVU997
   8:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     uint8_t scale = scale8(64, rgb_matrix_config.speed);
 4205              		.loc 31 8 13 is_stmt 0 view .LVU998
 4206 0034 8DF80230 		strb	r3, [sp, #2]
   9:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4207              		.loc 31 9 5 is_stmt 1 view .LVU999
 4208              	.LVL291:
 4209              	.LBB251:
 4210              	.LBI248:
  20:./lib/lib8tion/scale8.h **** {
 4211              		.loc 4 20 34 view .LVU1000
 4212              	.LBB250:
  26:./lib/lib8tion/scale8.h **** #endif
 4213              		.loc 4 26 5 view .LVU1001
  26:./lib/lib8tion/scale8.h **** #endif
 4214              		.loc 4 26 47 is_stmt 0 view .LVU1002
 4215 0038 4FEA9808 		lsr	r8, r8, #2
 4216              	.LVL292:
  26:./lib/lib8tion/scale8.h **** #endif
 4217              		.loc 4 26 47 view .LVU1003
 4218              	.LBE250:
 4219              	.LBE251:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4220              		.loc 31 10 5 is_stmt 1 view .LVU1004
 4221              	.LBB252:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4222              		.loc 31 10 10 view .LVU1005
 4223              	.LBB246:
  12:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         // The x range will be 0..224, map this to 0..7
  13:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         // Relies on hue being 8-bit and wrapping
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         hsv.h   = rgb_matrix_config.hsv.h + (scale * g_led_config.point[i].x >> 5);
 4224              		.loc 31 14 75 is_stmt 0 view .LVU1006
 4225 003c A9F1C40B 		sub	fp, r9, #196
 4226              	.LVL293:
 4227              	.L252:
 4228              		.loc 31 14 75 view .LVU1007
 4229              	.LBE246:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4230              		.loc 31 10 31 is_stmt 1 discriminator 1 view .LVU1008
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4231              		.loc 31 10 5 is_stmt 0 discriminator 1 view .LVU1009
 4232 0040 E3B2     		uxtb	r3, r4
 4233 0042 9A45     		cmp	r10, r3
 4234 0044 06D8     		bhi	.L255
 4235              	.LBE252:
  15:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
  16:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     }
  18:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 4236              		.loc 31 18 5 is_stmt 1 view .LVU1010
  19:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** }
 4237              		.loc 31 19 1 is_stmt 0 view .LVU1011
 4238 0046 612D     		cmp	r5, #97
 4239 0048 8CBF     		ite	hi
 4240 004a 0020     		movhi	r0, #0
 4241 004c 0120     		movls	r0, #1
 4242 004e 03B0     		add	sp, sp, #12
 4243              		.cfi_remember_state
 4244              		.cfi_def_cfa_offset 36
 4245              		@ sp needed
 4246 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4247              	.LVL294:
 4248              	.L255:
 4249              		.cfi_restore_state
 4250              	.LBB253:
 4251              	.LBB247:
  11:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         // The x range will be 0..224, map this to 0..7
 4252              		.loc 31 11 9 is_stmt 1 view .LVU1012
 4253 0054 14F80920 		ldrb	r2, [r4, r9]	@ zero_extendqisi2
 4254 0058 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 4255 005a 1A42     		tst	r2, r3
 4256 005c 13D0     		beq	.L254
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4257              		.loc 31 14 9 view .LVU1013
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4258              		.loc 31 14 75 is_stmt 0 view .LVU1014
 4259 005e 1BF81430 		ldrb	r3, [fp, r4, lsl #1]	@ zero_extendqisi2
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4260              		.loc 31 14 52 view .LVU1015
 4261 0062 08FB03F2 		mul	r2, r8, r3
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4262              		.loc 31 14 43 view .LVU1016
 4263 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4264 0068 03EB5213 		add	r3, r3, r2, lsr #5
  14:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4265              		.loc 31 14 17 view .LVU1017
 4266 006c 8DF80030 		strb	r3, [sp]
  15:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4267              		.loc 31 15 9 is_stmt 1 view .LVU1018
  15:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4268              		.loc 31 15 19 is_stmt 0 view .LVU1019
 4269 0070 0098     		ldr	r0, [sp]
 4270 0072 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4271              	.LVL295:
  16:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****     }
 4272              		.loc 31 16 9 is_stmt 1 view .LVU1020
 4273 0076 C0F30743 		ubfx	r3, r0, #16, #8
 4274 007a C2B2     		uxtb	r2, r0
 4275 007c C0F30721 		ubfx	r1, r0, #8, #8
 4276 0080 2046     		mov	r0, r4
 4277 0082 FFF7FEFF 		bl	rgb_matrix_set_color
 4278              	.LVL296:
 4279              	.L254:
 4280              	.LBE247:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4281              		.loc 31 10 44 discriminator 2 view .LVU1021
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4282              		.loc 31 10 44 is_stmt 0 discriminator 2 view .LVU1022
 4283 0086 0134     		adds	r4, r4, #1
 4284              	.LVL297:
  10:quantum/rgb_matrix/animations/gradient_left_right_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4285              		.loc 31 10 44 discriminator 2 view .LVU1023
 4286 0088 DAE7     		b	.L252
 4287              	.L257:
 4288 008a 00BF     		.align	2
 4289              	.L256:
 4290 008c 00000000 		.word	rgb_matrix_config
 4291 0090 1C010000 		.word	g_led_config+284
 4292              	.LBE253:
 4293              		.cfi_endproc
 4294              	.LFE371:
 4296              		.section	.text.BREATHING,"ax",%progbits
 4297              		.align	1
 4298              		.global	BREATHING
 4299              		.syntax unified
 4300              		.thumb
 4301              		.thumb_func
 4302              		.fpu fpv4-sp-d16
 4304              	BREATHING:
 4305              	.LVL298:
 4306              	.LFB372:
 4307              		.file 32 "quantum/rgb_matrix/animations/breathing_anim.h"
   1:quantum/rgb_matrix/animations/breathing_anim.h **** #ifndef DISABLE_RGB_MATRIX_BREATHING
   2:quantum/rgb_matrix/animations/breathing_anim.h **** RGB_MATRIX_EFFECT(BREATHING)
   3:quantum/rgb_matrix/animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/breathing_anim.h **** 
   5:quantum/rgb_matrix/animations/breathing_anim.h **** bool BREATHING(effect_params_t* params) {
 4308              		.loc 32 5 41 is_stmt 1 view -0
 4309              		.cfi_startproc
 4310              		@ args = 0, pretend = 0, frame = 8
 4311              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4312              		.loc 32 6 5 view .LVU1025
   5:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4313              		.loc 32 5 41 is_stmt 0 view .LVU1026
 4314 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 4315              		.cfi_def_cfa_offset 32
 4316              		.cfi_offset 4, -24
 4317              		.cfi_offset 5, -20
 4318              		.cfi_offset 6, -16
 4319              		.cfi_offset 7, -12
 4320              		.cfi_offset 8, -8
 4321              		.cfi_offset 14, -4
   7:quantum/rgb_matrix/animations/breathing_anim.h **** 
   8:quantum/rgb_matrix/animations/breathing_anim.h ****     HSV      hsv  = rgb_matrix_config.hsv;
 4322              		.loc 32 8 14 view .LVU1027
 4323 0004 2A4B     		ldr	r3, .L266
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4324              		.loc 32 6 5 view .LVU1028
 4325 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 4326              		.loc 32 8 14 view .LVU1029
 4327 0008 B3F80120 		ldrh	r2, [r3, #1]	@ unaligned
 4328 000c ADF80020 		strh	r2, [sp]	@ unaligned
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4329              		.loc 32 6 5 view .LVU1030
 4330 0010 04EB8404 		add	r4, r4, r4, lsl #2
 4331              	.LBB254:
 4332              	.LBB255:
 253:./lib/lib8tion/scale8.h **** #endif
 4333              		.loc 4 253 17 view .LVU1031
 4334 0014 274A     		ldr	r2, .L266+4
 4335              	.LBE255:
 4336              	.LBE254:
 4337              		.loc 32 8 14 view .LVU1032
 4338 0016 93F80380 		ldrb	r8, [r3, #3]	@ zero_extendqisi2
   9:quantum/rgb_matrix/animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 4339              		.loc 32 9 21 view .LVU1033
 4340 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4341              		.loc 32 6 5 view .LVU1034
 4342 001c A400     		lsls	r4, r4, #2
   5:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 4343              		.loc 32 5 41 view .LVU1035
 4344 001e 0646     		mov	r6, r0
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4345              		.loc 32 6 5 view .LVU1036
 4346 0020 E4B2     		uxtb	r4, r4
 4347              	.LVL299:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4348              		.loc 32 6 5 is_stmt 1 view .LVU1037
 4349              	.LBB259:
 4350              	.LBB256:
 253:./lib/lib8tion/scale8.h **** #endif
 4351              		.loc 4 253 17 is_stmt 0 view .LVU1038
 4352 0022 1088     		ldrh	r0, [r2]
 4353              	.LVL300:
 253:./lib/lib8tion/scale8.h **** #endif
 4354              		.loc 4 253 17 view .LVU1039
 4355 0024 DB08     		lsrs	r3, r3, #3
 4356              	.LBE256:
 4357              	.LBE259:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4358              		.loc 32 6 5 view .LVU1040
 4359 0026 04F11405 		add	r5, r4, #20
 4360              	.LBB260:
 4361              	.LBB257:
 253:./lib/lib8tion/scale8.h **** #endif
 4362              		.loc 4 253 17 view .LVU1041
 4363 002a 5843     		muls	r0, r3, r0
 4364              	.LBE257:
 4365              	.LBE260:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4366              		.loc 32 6 5 view .LVU1042
 4367 002c EDB2     		uxtb	r5, r5
 4368              	.LVL301:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4369              		.loc 32 6 5 is_stmt 1 view .LVU1043
 4370 002e 622D     		cmp	r5, #98
  10:quantum/rgb_matrix/animations/breathing_anim.h ****     hsv.v         = scale8(abs8(sin8(time) - 128) * 2, hsv.v);
 4371              		.loc 32 10 33 is_stmt 0 view .LVU1044
 4372 0030 C0F30720 		ubfx	r0, r0, #8, #8
 4373 0034 2F46     		mov	r7, r5
 4374 0036 28BF     		it	cs
 4375 0038 6227     		movcs	r7, #98
 4376              	.LVL302:
   6:quantum/rgb_matrix/animations/breathing_anim.h **** 
 4377              		.loc 32 6 44 is_stmt 1 view .LVU1045
   8:quantum/rgb_matrix/animations/breathing_anim.h ****     uint16_t time = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 4378              		.loc 32 8 5 view .LVU1046
   9:quantum/rgb_matrix/animations/breathing_anim.h ****     hsv.v         = scale8(abs8(sin8(time) - 128) * 2, hsv.v);
 4379              		.loc 32 9 5 view .LVU1047
 4380              	.LBB261:
 4381              	.LBI254:
 246:./lib/lib8tion/scale8.h **** {
 4382              		.loc 4 246 35 view .LVU1048
 4383              	.LBB258:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4384              		.loc 4 249 5 view .LVU1049
 253:./lib/lib8tion/scale8.h **** #endif
 4385              		.loc 4 253 5 view .LVU1050
 4386              		.loc 4 255 5 view .LVU1051
 4387              		.loc 4 255 5 is_stmt 0 view .LVU1052
 4388              	.LBE258:
 4389              	.LBE261:
 4390              		.loc 32 10 5 is_stmt 1 view .LVU1053
 4391              		.loc 32 10 33 is_stmt 0 view .LVU1054
 4392 003a FFF7FEFF 		bl	sin8_C
 4393              	.LVL303:
 4394              		.loc 32 10 44 view .LVU1055
 4395 003e A0F18003 		sub	r3, r0, #128
 4396              		.loc 32 10 28 view .LVU1056
 4397 0042 5BB2     		sxtb	r3, r3
 4398              	.LVL304:
 4399              	.LBB262:
 4400              	.LBI262:
 404:./lib/lib8tion/math8.h **** {
 4401              		.loc 1 404 33 is_stmt 1 view .LVU1057
 4402              	.LBB263:
 407:./lib/lib8tion/math8.h ****     return i;
 4403              		.loc 1 407 5 view .LVU1058
 407:./lib/lib8tion/math8.h ****     return i;
 4404              		.loc 1 407 7 is_stmt 0 view .LVU1059
 4405 0044 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 4406              		.loc 1 407 16 is_stmt 1 view .LVU1060
 407:./lib/lib8tion/math8.h ****     return i;
 4407              		.loc 1 407 18 is_stmt 0 view .LVU1061
 4408 0046 BCBF     		itt	lt
 4409 0048 C0F18000 		rsblt	r0, r0, #128
 4410 004c 43B2     		sxtblt	r3, r0
 4411              	.LVL305:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 4412              		.loc 1 408 5 is_stmt 1 view .LVU1062
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 4413              		.loc 1 408 5 is_stmt 0 view .LVU1063
 4414              	.LBE263:
 4415              	.LBE262:
 4416              	.LBB264:
 4417              	.LBI264:
  20:./lib/lib8tion/scale8.h **** {
 4418              		.loc 4 20 34 is_stmt 1 view .LVU1064
 4419              	.LBB265:
  26:./lib/lib8tion/scale8.h **** #endif
 4420              		.loc 4 26 5 view .LVU1065
  26:./lib/lib8tion/scale8.h **** #endif
 4421              		.loc 4 26 5 is_stmt 0 view .LVU1066
 4422              	.LBE265:
 4423              	.LBE264:
  11:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB rgb       = rgb_matrix_hsv_to_rgb(hsv);
 4424              		.loc 32 11 5 is_stmt 1 view .LVU1067
  10:quantum/rgb_matrix/animations/breathing_anim.h ****     RGB rgb       = rgb_matrix_hsv_to_rgb(hsv);
 4425              		.loc 32 10 21 is_stmt 0 view .LVU1068
 4426 004e 5B00     		lsls	r3, r3, #1
 4427              	.LVL306:
 4428              	.LBB267:
 4429              	.LBB266:
  26:./lib/lib8tion/scale8.h **** #endif
 4430              		.loc 4 26 25 view .LVU1069
 4431 0050 DBB2     		uxtb	r3, r3
 4432 0052 13FB08F3 		smulbb	r3, r3, r8
  26:./lib/lib8tion/scale8.h **** #endif
 4433              		.loc 4 26 47 view .LVU1070
 4434 0056 1B12     		asrs	r3, r3, #8
 4435 0058 8DF80230 		strb	r3, [sp, #2]
 4436              	.LBE266:
 4437              	.LBE267:
 4438              		.loc 32 11 21 view .LVU1071
 4439 005c 0098     		ldr	r0, [sp]
 4440              	.LBB268:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  13:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4441              		.loc 32 13 9 view .LVU1072
 4442 005e DFF85880 		ldr	r8, .L266+8
 4443              	.LBE268:
  11:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4444              		.loc 32 11 21 view .LVU1073
 4445 0062 FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4446              	.LVL307:
  11:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4447              		.loc 32 11 21 view .LVU1074
 4448 0066 C0F30723 		ubfx	r3, r0, #8, #8
 4449 006a 8DF80400 		strb	r0, [sp, #4]
 4450 006e C0F30740 		ubfx	r0, r0, #16, #8
 4451 0072 8DF80530 		strb	r3, [sp, #5]
 4452 0076 8DF80600 		strb	r0, [sp, #6]
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4453              		.loc 32 12 5 is_stmt 1 view .LVU1075
 4454              	.LBB269:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4455              		.loc 32 12 10 view .LVU1076
 4456              	.LVL308:
 4457              	.L260:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4458              		.loc 32 12 31 discriminator 1 view .LVU1077
  12:quantum/rgb_matrix/animations/breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 4459              		.loc 32 12 5 is_stmt 0 discriminator 1 view .LVU1078
 4460 007a E3B2     		uxtb	r3, r4
 4461 007c 9F42     		cmp	r7, r3
 4462 007e 06D8     		bhi	.L262
 4463              	.LBE269:
  14:quantum/rgb_matrix/animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  15:quantum/rgb_matrix/animations/breathing_anim.h ****     }
  16:quantum/rgb_matrix/animations/breathing_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 4464              		.loc 32 16 5 is_stmt 1 view .LVU1079
  17:quantum/rgb_matrix/animations/breathing_anim.h **** }
 4465              		.loc 32 17 1 is_stmt 0 view .LVU1080
 4466 0080 612D     		cmp	r5, #97
 4467 0082 8CBF     		ite	hi
 4468 0084 0020     		movhi	r0, #0
 4469 0086 0120     		movls	r0, #1
 4470 0088 02B0     		add	sp, sp, #8
 4471              		.cfi_remember_state
 4472              		.cfi_def_cfa_offset 24
 4473              		@ sp needed
 4474 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4475              	.LVL309:
 4476              	.L262:
 4477              		.cfi_restore_state
 4478              	.LBB270:
  13:quantum/rgb_matrix/animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4479              		.loc 32 13 9 is_stmt 1 view .LVU1081
 4480 008e 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 4481 0092 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 4482 0094 1A42     		tst	r2, r3
 4483 0096 08D0     		beq	.L261
  14:quantum/rgb_matrix/animations/breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4484              		.loc 32 14 9 view .LVU1082
 4485 0098 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 4486 009c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 4487 00a0 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 4488 00a4 2046     		mov	r0, r4
 4489 00a6 FFF7FEFF 		bl	rgb_matrix_set_color
 4490              	.LVL310:
 4491              	.L261:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4492              		.loc 32 12 44 discriminator 2 view .LVU1083
  12:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4493              		.loc 32 12 44 is_stmt 0 discriminator 2 view .LVU1084
 4494 00aa 0134     		adds	r4, r4, #1
 4495              	.LVL311:
  12:quantum/rgb_matrix/animations/breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 4496              		.loc 32 12 44 discriminator 2 view .LVU1085
 4497 00ac E5E7     		b	.L260
 4498              	.L267:
 4499 00ae 00BF     		.align	2
 4500              	.L266:
 4501 00b0 00000000 		.word	rgb_matrix_config
 4502 00b4 00000000 		.word	g_rgb_timer
 4503 00b8 1C010000 		.word	g_led_config+284
 4504              	.LBE270:
 4505              		.cfi_endproc
 4506              	.LFE372:
 4508              		.section	.text.raindrops_set_color.isra.0,"ax",%progbits
 4509              		.align	1
 4510              		.syntax unified
 4511              		.thumb
 4512              		.thumb_func
 4513              		.fpu fpv4-sp-d16
 4515              	raindrops_set_color.isra.0:
 4516              	.LVL312:
 4517              	.LFB510:
 4518              		.file 33 "quantum/rgb_matrix/animations/raindrops_anim.h"
   1:quantum/rgb_matrix/animations/raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_RAINDROPS
   2:quantum/rgb_matrix/animations/raindrops_anim.h **** RGB_MATRIX_EFFECT(RAINDROPS)
   3:quantum/rgb_matrix/animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/raindrops_anim.h **** 
   5:quantum/rgb_matrix/animations/raindrops_anim.h **** static void raindrops_set_color(int i, effect_params_t* params) {
 4519              		.loc 33 5 13 is_stmt 1 view -0
 4520              		.cfi_startproc
 4521              		@ args = 0, pretend = 0, frame = 8
 4522              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4523              		.loc 33 6 5 view .LVU1087
   5:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4524              		.loc 33 5 13 is_stmt 0 view .LVU1088
 4525 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 4526              		.cfi_def_cfa_offset 24
 4527              		.cfi_offset 4, -12
 4528              		.cfi_offset 5, -8
 4529              		.cfi_offset 14, -4
 4530              		.loc 33 6 10 view .LVU1089
 4531 0002 1A4B     		ldr	r3, .L271
 4532 0004 0344     		add	r3, r3, r0
   5:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4533              		.loc 33 5 13 view .LVU1090
 4534 0006 0546     		mov	r5, r0
 4535              		.loc 33 6 9 view .LVU1091
 4536 0008 93F81C31 		ldrb	r3, [r3, #284]	@ zero_extendqisi2
 4537              		.loc 33 6 8 view .LVU1092
 4538 000c 1942     		tst	r1, r3
 4539 000e 2AD0     		beq	.L268
 4540              	.LVL313:
 4541              	.LBB273:
 4542              	.LBI273:
   5:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4543              		.loc 33 5 13 is_stmt 1 view .LVU1093
 4544              	.LBB274:
   7:quantum/rgb_matrix/animations/raindrops_anim.h ****     HSV hsv = {0, rgb_matrix_config.hsv.s, rgb_matrix_config.hsv.v};
 4545              		.loc 33 7 5 view .LVU1094
 4546              		.loc 33 7 40 is_stmt 0 view .LVU1095
 4547 0010 174B     		ldr	r3, .L271+4
   8:quantum/rgb_matrix/animations/raindrops_anim.h **** 
   9:quantum/rgb_matrix/animations/raindrops_anim.h ****     // Take the shortest path between hues
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     int16_t deltaH = ((rgb_matrix_config.hsv.h + 180) % 360 - rgb_matrix_config.hsv.h) / 4;
 4548              		.loc 33 10 45 view .LVU1096
 4549 0012 5C78     		ldrb	r4, [r3, #1]	@ zero_extendqisi2
   7:quantum/rgb_matrix/animations/raindrops_anim.h ****     HSV hsv = {0, rgb_matrix_config.hsv.s, rgb_matrix_config.hsv.v};
 4550              		.loc 33 7 9 view .LVU1097
 4551 0014 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 4552 0016 8DF80120 		strb	r2, [sp, #1]
 4553 001a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4554 001c 8DF80220 		strb	r2, [sp, #2]
 4555              		.loc 33 10 5 is_stmt 1 view .LVU1098
 4556              	.LVL314:
  11:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4557              		.loc 33 11 5 view .LVU1099
  12:quantum/rgb_matrix/animations/raindrops_anim.h ****         deltaH -= 256;
  13:quantum/rgb_matrix/animations/raindrops_anim.h ****     } else if (deltaH < -127) {
 4558              		.loc 33 13 12 view .LVU1100
  14:quantum/rgb_matrix/animations/raindrops_anim.h ****         deltaH += 256;
  15:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
  16:quantum/rgb_matrix/animations/raindrops_anim.h **** 
  17:quantum/rgb_matrix/animations/raindrops_anim.h ****     hsv.h   = rgb_matrix_config.hsv.h + (deltaH * (rand() & 0x03));
 4559              		.loc 33 17 5 view .LVU1101
 4560              		.loc 33 17 52 is_stmt 0 view .LVU1102
 4561 0020 FFF7FEFF 		bl	rand
 4562              	.LVL315:
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4563              		.loc 33 10 55 view .LVU1103
 4564 0024 4FF4B472 		mov	r2, #360
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4565              		.loc 33 10 48 view .LVU1104
 4566 0028 04F1B403 		add	r3, r4, #180
 4567              	.LVL316:
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4568              		.loc 33 10 55 view .LVU1105
 4569 002c B3FBF2F1 		udiv	r1, r3, r2
 4570 0030 02FB1133 		mls	r3, r2, r1, r3
 4571              	.LVL317:
  10:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (deltaH > 127) {
 4572              		.loc 33 10 88 view .LVU1106
 4573 0034 1B1B     		subs	r3, r3, r4
 4574 0036 48BF     		it	mi
 4575 0038 0333     		addmi	r3, r3, #3
 4576              		.loc 33 17 39 view .LVU1107
 4577 003a 00F00300 		and	r0, r0, #3
 4578 003e 43F38F03 		sbfx	r3, r3, #2, #16
 4579 0042 03FB0043 		mla	r3, r3, r0, r4
 4580              		.loc 33 17 13 view .LVU1108
 4581 0046 8DF80030 		strb	r3, [sp]
  18:quantum/rgb_matrix/animations/raindrops_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4582              		.loc 33 18 5 is_stmt 1 view .LVU1109
 4583              		.loc 33 18 15 is_stmt 0 view .LVU1110
 4584 004a 0098     		ldr	r0, [sp]
 4585 004c FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4586              	.LVL318:
  19:quantum/rgb_matrix/animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4587              		.loc 33 19 5 is_stmt 1 view .LVU1111
 4588 0050 C0F30743 		ubfx	r3, r0, #16, #8
 4589 0054 C2B2     		uxtb	r2, r0
 4590 0056 C0F30721 		ubfx	r1, r0, #8, #8
 4591 005a 2846     		mov	r0, r5
 4592              	.LBE274:
 4593              	.LBE273:
  20:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4594              		.loc 33 20 1 is_stmt 0 view .LVU1112
 4595 005c 03B0     		add	sp, sp, #12
 4596              		.cfi_remember_state
 4597              		.cfi_def_cfa_offset 12
 4598              		@ sp needed
 4599 005e BDE83040 		pop	{r4, r5, lr}
 4600              		.cfi_restore 14
 4601              		.cfi_restore 5
 4602              		.cfi_restore 4
 4603              		.cfi_def_cfa_offset 0
 4604              	.LVL319:
 4605              	.LBB276:
 4606              	.LBB275:
  19:quantum/rgb_matrix/animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4607              		.loc 33 19 5 view .LVU1113
 4608 0062 FFF7FEBF 		b	rgb_matrix_set_color
 4609              	.LVL320:
 4610              	.L268:
 4611              		.cfi_restore_state
  19:quantum/rgb_matrix/animations/raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4612              		.loc 33 19 5 view .LVU1114
 4613              	.LBE275:
 4614              	.LBE276:
 4615              		.loc 33 20 1 view .LVU1115
 4616 0066 03B0     		add	sp, sp, #12
 4617              		.cfi_def_cfa_offset 12
 4618              		@ sp needed
 4619 0068 30BD     		pop	{r4, r5, pc}
 4620              	.L272:
 4621 006a 00BF     		.align	2
 4622              	.L271:
 4623 006c 00000000 		.word	g_led_config
 4624 0070 00000000 		.word	rgb_matrix_config
 4625              		.cfi_endproc
 4626              	.LFE510:
 4628              		.section	.text.RAINDROPS,"ax",%progbits
 4629              		.align	1
 4630              		.global	RAINDROPS
 4631              		.syntax unified
 4632              		.thumb
 4633              		.thumb_func
 4634              		.fpu fpv4-sp-d16
 4636              	RAINDROPS:
 4637              	.LVL321:
 4638              	.LFB408:
  21:quantum/rgb_matrix/animations/raindrops_anim.h **** 
  22:quantum/rgb_matrix/animations/raindrops_anim.h **** bool RAINDROPS(effect_params_t* params) {
 4639              		.loc 33 22 41 is_stmt 1 view -0
 4640              		.cfi_startproc
 4641              		@ args = 0, pretend = 0, frame = 0
 4642              		@ frame_needed = 0, uses_anonymous_args = 0
  23:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4643              		.loc 33 23 5 view .LVU1117
  22:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4644              		.loc 33 22 41 is_stmt 0 view .LVU1118
 4645 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4646              		.cfi_def_cfa_offset 24
 4647              		.cfi_offset 3, -24
 4648              		.cfi_offset 4, -20
 4649              		.cfi_offset 5, -16
 4650              		.cfi_offset 6, -12
 4651              		.cfi_offset 7, -8
 4652              		.cfi_offset 14, -4
 4653              		.loc 33 23 16 view .LVU1119
 4654 0002 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
  22:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4655              		.loc 33 22 41 view .LVU1120
 4656 0004 0546     		mov	r5, r0
 4657              		.loc 33 23 8 view .LVU1121
 4658 0006 EEB9     		cbnz	r6, .L274
 4659              	.LVL322:
 4660              	.LBB285:
 4661              	.LBI285:
  22:quantum/rgb_matrix/animations/raindrops_anim.h ****     if (!params->init) {
 4662              		.loc 33 22 6 is_stmt 1 view .LVU1122
 4663              	.LBB286:
  24:quantum/rgb_matrix/animations/raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  25:quantum/rgb_matrix/animations/raindrops_anim.h ****         if (scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed, 16)) % 10 == 0) {
 4664              		.loc 33 25 9 view .LVU1123
 4665              	.LBB287:
 4666              	.LBI287:
  23:./lib/lib8tion/math8.h **** {
 4667              		.loc 1 23 34 view .LVU1124
 4668              	.LBB288:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4669              		.loc 1 26 5 view .LVU1125
 4670              	.LBE288:
 4671              	.LBE287:
 4672              		.loc 33 25 13 is_stmt 0 view .LVU1126
 4673 0008 1B4B     		ldr	r3, .L278
 4674              	.LBB292:
 4675              	.LBB293:
 253:./lib/lib8tion/scale8.h **** #endif
 4676              		.loc 4 253 17 view .LVU1127
 4677 000a 1C4A     		ldr	r2, .L278+4
 4678              	.LBE293:
 4679              	.LBE292:
 4680              	.LBB296:
 4681              	.LBB289:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4682              		.loc 1 26 20 view .LVU1128
 4683 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4684              	.LBE289:
 4685              	.LBE296:
 4686              	.LBB297:
 4687              	.LBB294:
 253:./lib/lib8tion/scale8.h **** #endif
 4688              		.loc 4 253 17 view .LVU1129
 4689 000e 1288     		ldrh	r2, [r2]
 4690              	.LBE294:
 4691              	.LBE297:
 4692              	.LBB298:
 4693              	.LBB290:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4694              		.loc 1 26 14 view .LVU1130
 4695 0010 1033     		adds	r3, r3, #16
 4696              	.LVL323:
  27:./lib/lib8tion/math8.h ****     return t;
 4697              		.loc 1 27 5 is_stmt 1 view .LVU1131
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4698              		.loc 1 28 5 view .LVU1132
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4699              		.loc 1 28 5 is_stmt 0 view .LVU1133
 4700              	.LBE290:
 4701              	.LBE298:
 4702              	.LBB299:
 4703              	.LBI292:
 246:./lib/lib8tion/scale8.h **** {
 4704              		.loc 4 246 35 is_stmt 1 view .LVU1134
 4705              	.LBB295:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4706              		.loc 4 249 5 view .LVU1135
 253:./lib/lib8tion/scale8.h **** #endif
 4707              		.loc 4 253 5 view .LVU1136
 4708              		.loc 4 255 5 view .LVU1137
 253:./lib/lib8tion/scale8.h **** #endif
 4709              		.loc 4 253 17 is_stmt 0 view .LVU1138
 4710 0012 FF2B     		cmp	r3, #255
 4711 0014 28BF     		it	cs
 4712 0016 FF23     		movcs	r3, #255
 4713 0018 5343     		muls	r3, r2, r3
 4714              	.LBE295:
 4715              	.LBE299:
 4716              	.LBB300:
 4717              	.LBB291:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4718              		.loc 1 26 14 view .LVU1139
 4719 001a C3F30F23 		ubfx	r3, r3, #8, #16
 4720 001e 0A22     		movs	r2, #10
 4721 0020 B3FBF2F1 		udiv	r1, r3, r2
 4722 0024 02FB1133 		mls	r3, r2, r1, r3
 4723              	.LBE291:
 4724              	.LBE300:
 4725              		.loc 33 25 12 view .LVU1140
 4726 0028 9BB2     		uxth	r3, r3
 4727 002a 4BB9     		cbnz	r3, .L275
  26:quantum/rgb_matrix/animations/raindrops_anim.h ****             raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 4728              		.loc 33 26 13 is_stmt 1 view .LVU1141
 4729              		.loc 33 26 33 is_stmt 0 view .LVU1142
 4730 002c FFF7FEFF 		bl	rand
 4731              	.LVL324:
 4732              		.loc 33 26 13 view .LVU1143
 4733 0030 6223     		movs	r3, #98
 4734 0032 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 4735 0034 90FBF3F2 		sdiv	r2, r0, r3
 4736 0038 02FB1300 		mls	r0, r2, r3, r0
 4737 003c FFF7FEFF 		bl	raindrops_set_color.isra.0
 4738              	.LVL325:
 4739              	.L275:
 4740              		.loc 33 26 13 view .LVU1144
 4741              	.LBE286:
 4742              	.LBE285:
  27:quantum/rgb_matrix/animations/raindrops_anim.h ****         }
  28:quantum/rgb_matrix/animations/raindrops_anim.h ****         return false;
  29:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
  30:quantum/rgb_matrix/animations/raindrops_anim.h **** 
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  33:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
  34:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
  35:quantum/rgb_matrix/animations/raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  36:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4743              		.loc 33 36 1 view .LVU1145
 4744 0040 3046     		mov	r0, r6
 4745 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4746              	.LVL326:
 4747              	.L274:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4748              		.loc 33 31 5 is_stmt 1 view .LVU1146
 4749 0044 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 4750 0046 04EB8404 		add	r4, r4, r4, lsl #2
 4751 004a A400     		lsls	r4, r4, #2
 4752 004c E4B2     		uxtb	r4, r4
 4753              	.LVL327:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4754              		.loc 33 31 5 view .LVU1147
 4755 004e 04F11406 		add	r6, r4, #20
 4756 0052 F6B2     		uxtb	r6, r6
 4757              	.LVL328:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4758              		.loc 33 31 5 view .LVU1148
 4759 0054 622E     		cmp	r6, #98
 4760 0056 3746     		mov	r7, r6
 4761 0058 28BF     		it	cs
 4762 005a 6227     		movcs	r7, #98
 4763              	.LVL329:
  31:quantum/rgb_matrix/animations/raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 4764              		.loc 33 31 44 view .LVU1149
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4765              		.loc 33 32 5 view .LVU1150
 4766              	.LBB301:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4767              		.loc 33 32 10 view .LVU1151
 4768              	.L276:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4769              		.loc 33 32 27 discriminator 1 view .LVU1152
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4770              		.loc 33 32 5 is_stmt 0 discriminator 1 view .LVU1153
 4771 005c A742     		cmp	r7, r4
 4772 005e 04DC     		bgt	.L277
 4773              	.LBE301:
  35:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4774              		.loc 33 35 5 is_stmt 1 view .LVU1154
 4775 0060 612E     		cmp	r6, #97
 4776 0062 8CBF     		ite	hi
 4777 0064 0026     		movhi	r6, #0
 4778 0066 0126     		movls	r6, #1
  35:quantum/rgb_matrix/animations/raindrops_anim.h **** }
 4779              		.loc 33 35 20 is_stmt 0 view .LVU1155
 4780 0068 EAE7     		b	.L275
 4781              	.L277:
 4782              	.LBB302:
  33:quantum/rgb_matrix/animations/raindrops_anim.h ****     }
 4783              		.loc 33 33 9 is_stmt 1 discriminator 3 view .LVU1156
 4784 006a 2046     		mov	r0, r4
 4785 006c 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 4786 006e FFF7FEFF 		bl	raindrops_set_color.isra.0
 4787              	.LVL330:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4788              		.loc 33 32 40 discriminator 3 view .LVU1157
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4789              		.loc 33 32 41 is_stmt 0 discriminator 3 view .LVU1158
 4790 0072 0134     		adds	r4, r4, #1
 4791              	.LVL331:
  32:quantum/rgb_matrix/animations/raindrops_anim.h ****         raindrops_set_color(i, params);
 4792              		.loc 33 32 41 discriminator 3 view .LVU1159
 4793 0074 F2E7     		b	.L276
 4794              	.L279:
 4795 0076 00BF     		.align	2
 4796              	.L278:
 4797 0078 00000000 		.word	rgb_matrix_config
 4798 007c 00000000 		.word	g_rgb_timer
 4799              	.LBE302:
 4800              		.cfi_endproc
 4801              	.LFE408:
 4803              		.section	.text.jellybean_raindrops_set_color.isra.0,"ax",%progbits
 4804              		.align	1
 4805              		.syntax unified
 4806              		.thumb
 4807              		.thumb_func
 4808              		.fpu fpv4-sp-d16
 4810              	jellybean_raindrops_set_color.isra.0:
 4811              	.LVL332:
 4812              	.LFB511:
 4813              		.file 34 "quantum/rgb_matrix/animations/jellybean_raindrops_anim.h"
   1:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #ifndef DISABLE_RGB_MATRIX_JELLYBEAN_RAINDROPS
   2:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** RGB_MATRIX_EFFECT(JELLYBEAN_RAINDROPS)
   3:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** 
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** static void jellybean_raindrops_set_color(int i, effect_params_t* params) {
 4814              		.loc 34 5 13 is_stmt 1 view -0
 4815              		.cfi_startproc
 4816              		@ args = 0, pretend = 0, frame = 8
 4817              		@ frame_needed = 0, uses_anonymous_args = 0
   6:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4818              		.loc 34 6 5 view .LVU1161
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4819              		.loc 34 5 13 is_stmt 0 view .LVU1162
 4820 0000 13B5     		push	{r0, r1, r4, lr}
 4821              		.cfi_def_cfa_offset 16
 4822              		.cfi_offset 4, -8
 4823              		.cfi_offset 14, -4
 4824              		.loc 34 6 10 view .LVU1163
 4825 0002 124B     		ldr	r3, .L282
 4826 0004 0344     		add	r3, r3, r0
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4827              		.loc 34 5 13 view .LVU1164
 4828 0006 0446     		mov	r4, r0
 4829              		.loc 34 6 9 view .LVU1165
 4830 0008 93F81C31 		ldrb	r3, [r3, #284]	@ zero_extendqisi2
 4831              		.loc 34 6 8 view .LVU1166
 4832 000c 1942     		tst	r1, r3
 4833 000e 1BD0     		beq	.L280
 4834              	.LVL333:
 4835              	.LBB307:
 4836              	.LBI307:
   5:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!HAS_ANY_FLAGS(g_led_config.flags[i], params->flags)) return;
 4837              		.loc 34 5 13 is_stmt 1 view .LVU1167
 4838              	.LBB308:
   7:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     HSV hsv = {rand() & 0xFF, qadd8(rand() & 0x7F, 0x80), rgb_matrix_config.hsv.v};
 4839              		.loc 34 7 5 view .LVU1168
 4840              		.loc 34 7 16 is_stmt 0 view .LVU1169
 4841 0010 FFF7FEFF 		bl	rand
 4842              	.LVL334:
 4843              		.loc 34 7 9 view .LVU1170
 4844 0014 8DF80000 		strb	r0, [sp]
 4845              		.loc 34 7 37 view .LVU1171
 4846 0018 FFF7FEFF 		bl	rand
 4847              	.LVL335:
 4848              		.loc 34 7 37 view .LVU1172
 4849              	.LBE308:
 4850              	.LBE307:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4851              		.loc 1 26 5 is_stmt 1 view .LVU1173
  27:./lib/lib8tion/math8.h ****     return t;
 4852              		.loc 1 27 5 view .LVU1174
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4853              		.loc 1 28 5 view .LVU1175
 4854              	.LBB311:
 4855              	.LBB309:
 4856              		.loc 34 7 80 is_stmt 0 view .LVU1176
 4857 001c 0C4B     		ldr	r3, .L282+4
 4858              		.loc 34 7 9 view .LVU1177
 4859 001e 60F07F00 		orn	r0, r0, #127
 4860 0022 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4861 0024 8DF80230 		strb	r3, [sp, #2]
   8:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4862              		.loc 34 8 5 is_stmt 1 view .LVU1178
   7:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     RGB rgb = rgb_matrix_hsv_to_rgb(hsv);
 4863              		.loc 34 7 9 is_stmt 0 view .LVU1179
 4864 0028 8DF80100 		strb	r0, [sp, #1]
 4865              		.loc 34 8 15 view .LVU1180
 4866 002c 0098     		ldr	r0, [sp]
 4867 002e FFF7FEFF 		bl	rgb_matrix_hsv_to_rgb
 4868              	.LVL336:
   9:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4869              		.loc 34 9 5 is_stmt 1 view .LVU1181
 4870 0032 C0F30743 		ubfx	r3, r0, #16, #8
 4871 0036 C2B2     		uxtb	r2, r0
 4872 0038 C0F30721 		ubfx	r1, r0, #8, #8
 4873 003c 2046     		mov	r0, r4
 4874              	.LBE309:
 4875              	.LBE311:
  10:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 4876              		.loc 34 10 1 is_stmt 0 view .LVU1182
 4877 003e 02B0     		add	sp, sp, #8
 4878              		.cfi_remember_state
 4879              		.cfi_def_cfa_offset 8
 4880              		@ sp needed
 4881 0040 BDE81040 		pop	{r4, lr}
 4882              		.cfi_restore 14
 4883              		.cfi_restore 4
 4884              		.cfi_def_cfa_offset 0
 4885              	.LVL337:
 4886              	.LBB312:
 4887              	.LBB310:
   9:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4888              		.loc 34 9 5 view .LVU1183
 4889 0044 FFF7FEBF 		b	rgb_matrix_set_color
 4890              	.LVL338:
 4891              	.L280:
 4892              		.cfi_restore_state
   9:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 4893              		.loc 34 9 5 view .LVU1184
 4894              	.LBE310:
 4895              	.LBE312:
 4896              		.loc 34 10 1 view .LVU1185
 4897 0048 02B0     		add	sp, sp, #8
 4898              		.cfi_def_cfa_offset 8
 4899              		@ sp needed
 4900 004a 10BD     		pop	{r4, pc}
 4901              	.L283:
 4902              		.align	2
 4903              	.L282:
 4904 004c 00000000 		.word	g_led_config
 4905 0050 00000000 		.word	rgb_matrix_config
 4906              		.cfi_endproc
 4907              	.LFE511:
 4909              		.section	.text.JELLYBEAN_RAINDROPS,"ax",%progbits
 4910              		.align	1
 4911              		.global	JELLYBEAN_RAINDROPS
 4912              		.syntax unified
 4913              		.thumb
 4914              		.thumb_func
 4915              		.fpu fpv4-sp-d16
 4917              	JELLYBEAN_RAINDROPS:
 4918              	.LVL339:
 4919              	.LFB410:
  11:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** 
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** bool JELLYBEAN_RAINDROPS(effect_params_t* params) {
 4920              		.loc 34 12 51 is_stmt 1 view -0
 4921              		.cfi_startproc
 4922              		@ args = 0, pretend = 0, frame = 0
 4923              		@ frame_needed = 0, uses_anonymous_args = 0
  13:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4924              		.loc 34 13 5 view .LVU1187
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4925              		.loc 34 12 51 is_stmt 0 view .LVU1188
 4926 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4927              		.cfi_def_cfa_offset 24
 4928              		.cfi_offset 3, -24
 4929              		.cfi_offset 4, -20
 4930              		.cfi_offset 5, -16
 4931              		.cfi_offset 6, -12
 4932              		.cfi_offset 7, -8
 4933              		.cfi_offset 14, -4
 4934              		.loc 34 13 16 view .LVU1189
 4935 0002 8678     		ldrb	r6, [r0, #2]	@ zero_extendqisi2
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4936              		.loc 34 12 51 view .LVU1190
 4937 0004 0546     		mov	r5, r0
 4938              		.loc 34 13 8 view .LVU1191
 4939 0006 F6B9     		cbnz	r6, .L285
 4940              	.LVL340:
 4941              	.LBB321:
 4942              	.LBI321:
  12:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     if (!params->init) {
 4943              		.loc 34 12 6 is_stmt 1 view .LVU1192
 4944              	.LBB322:
  14:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         // Change one LED every tick, make sure speed is not 0
  15:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         if (scale16by8(g_rgb_timer, qadd8(rgb_matrix_config.speed, 16)) % 5 == 0) {
 4945              		.loc 34 15 9 view .LVU1193
 4946              	.LBB323:
 4947              	.LBI323:
  23:./lib/lib8tion/math8.h **** {
 4948              		.loc 1 23 34 view .LVU1194
 4949              	.LBB324:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4950              		.loc 1 26 5 view .LVU1195
 4951              	.LBE324:
 4952              	.LBE323:
 4953              		.loc 34 15 13 is_stmt 0 view .LVU1196
 4954 0008 1B4B     		ldr	r3, .L289
 4955              	.LBB328:
 4956              	.LBB329:
 253:./lib/lib8tion/scale8.h **** #endif
 4957              		.loc 4 253 17 view .LVU1197
 4958 000a 1C4A     		ldr	r2, .L289+4
 4959              	.LBE329:
 4960              	.LBE328:
 4961              	.LBB332:
 4962              	.LBB325:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4963              		.loc 1 26 20 view .LVU1198
 4964 000c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4965              	.LBE325:
 4966              	.LBE332:
 4967              	.LBB333:
 4968              	.LBB330:
 253:./lib/lib8tion/scale8.h **** #endif
 4969              		.loc 4 253 17 view .LVU1199
 4970 000e 1288     		ldrh	r2, [r2]
 4971              	.LBE330:
 4972              	.LBE333:
 4973              	.LBB334:
 4974              	.LBB326:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4975              		.loc 1 26 14 view .LVU1200
 4976 0010 1033     		adds	r3, r3, #16
 4977              	.LVL341:
  27:./lib/lib8tion/math8.h ****     return t;
 4978              		.loc 1 27 5 is_stmt 1 view .LVU1201
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4979              		.loc 1 28 5 view .LVU1202
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 4980              		.loc 1 28 5 is_stmt 0 view .LVU1203
 4981              	.LBE326:
 4982              	.LBE334:
 4983              	.LBB335:
 4984              	.LBI328:
 246:./lib/lib8tion/scale8.h **** {
 4985              		.loc 4 246 35 is_stmt 1 view .LVU1204
 4986              	.LBB331:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 4987              		.loc 4 249 5 view .LVU1205
 253:./lib/lib8tion/scale8.h **** #endif
 4988              		.loc 4 253 5 view .LVU1206
 4989              		.loc 4 255 5 view .LVU1207
 253:./lib/lib8tion/scale8.h **** #endif
 4990              		.loc 4 253 17 is_stmt 0 view .LVU1208
 4991 0012 FF2B     		cmp	r3, #255
 4992 0014 28BF     		it	cs
 4993 0016 FF23     		movcs	r3, #255
 4994 0018 5343     		muls	r3, r2, r3
 4995              	.LBE331:
 4996              	.LBE335:
 4997              	.LBB336:
 4998              	.LBB327:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 4999              		.loc 1 26 14 view .LVU1209
 5000 001a C3F30F23 		ubfx	r3, r3, #8, #16
 5001 001e 0522     		movs	r2, #5
 5002 0020 B3FBF2F2 		udiv	r2, r3, r2
 5003 0024 02EB8202 		add	r2, r2, r2, lsl #2
 5004 0028 9B1A     		subs	r3, r3, r2
 5005              	.LBE327:
 5006              	.LBE336:
 5007              		.loc 34 15 12 view .LVU1210
 5008 002a 9BB2     		uxth	r3, r3
 5009 002c 4BB9     		cbnz	r3, .L286
  16:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****             jellybean_raindrops_set_color(rand() % DRIVER_LED_TOTAL, params);
 5010              		.loc 34 16 13 is_stmt 1 view .LVU1211
 5011              		.loc 34 16 43 is_stmt 0 view .LVU1212
 5012 002e FFF7FEFF 		bl	rand
 5013              	.LVL342:
 5014              		.loc 34 16 13 view .LVU1213
 5015 0032 6223     		movs	r3, #98
 5016 0034 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 5017 0036 90FBF3F2 		sdiv	r2, r0, r3
 5018 003a 02FB1300 		mls	r0, r2, r3, r0
 5019 003e FFF7FEFF 		bl	jellybean_raindrops_set_color.isra.0
 5020              	.LVL343:
 5021              	.L286:
 5022              		.loc 34 16 13 view .LVU1214
 5023              	.LBE322:
 5024              	.LBE321:
  17:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         }
  18:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         return false;
  19:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     }
  20:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** 
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
  23:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
  24:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     }
  25:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     return led_max < DRIVER_LED_TOTAL;
  26:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 5025              		.loc 34 26 1 view .LVU1215
 5026 0042 3046     		mov	r0, r6
 5027 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5028              	.LVL344:
 5029              	.L285:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 5030              		.loc 34 21 5 is_stmt 1 view .LVU1216
 5031 0046 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 5032 0048 04EB8404 		add	r4, r4, r4, lsl #2
 5033 004c A400     		lsls	r4, r4, #2
 5034 004e E4B2     		uxtb	r4, r4
 5035              	.LVL345:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 5036              		.loc 34 21 5 view .LVU1217
 5037 0050 04F11406 		add	r6, r4, #20
 5038 0054 F6B2     		uxtb	r6, r6
 5039              	.LVL346:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 5040              		.loc 34 21 5 view .LVU1218
 5041 0056 622E     		cmp	r6, #98
 5042 0058 3746     		mov	r7, r6
 5043 005a 28BF     		it	cs
 5044 005c 6227     		movcs	r7, #98
 5045              	.LVL347:
  21:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     for (int i = led_min; i < led_max; i++) {
 5046              		.loc 34 21 44 view .LVU1219
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 5047              		.loc 34 22 5 view .LVU1220
 5048              	.LBB337:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 5049              		.loc 34 22 10 view .LVU1221
 5050              	.L287:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 5051              		.loc 34 22 27 discriminator 1 view .LVU1222
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 5052              		.loc 34 22 5 is_stmt 0 discriminator 1 view .LVU1223
 5053 005e A742     		cmp	r7, r4
 5054 0060 04DC     		bgt	.L288
 5055              	.LBE337:
  25:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 5056              		.loc 34 25 5 is_stmt 1 view .LVU1224
 5057 0062 612E     		cmp	r6, #97
 5058 0064 8CBF     		ite	hi
 5059 0066 0026     		movhi	r6, #0
 5060 0068 0126     		movls	r6, #1
  25:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** }
 5061              		.loc 34 25 20 is_stmt 0 view .LVU1225
 5062 006a EAE7     		b	.L286
 5063              	.L288:
 5064              	.LBB338:
  23:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****     }
 5065              		.loc 34 23 9 is_stmt 1 discriminator 3 view .LVU1226
 5066 006c 2046     		mov	r0, r4
 5067 006e 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 5068 0070 FFF7FEFF 		bl	jellybean_raindrops_set_color.isra.0
 5069              	.LVL348:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 5070              		.loc 34 22 40 discriminator 3 view .LVU1227
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 5071              		.loc 34 22 41 is_stmt 0 discriminator 3 view .LVU1228
 5072 0074 0134     		adds	r4, r4, #1
 5073              	.LVL349:
  22:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h ****         jellybean_raindrops_set_color(i, params);
 5074              		.loc 34 22 41 discriminator 3 view .LVU1229
 5075 0076 F2E7     		b	.L287
 5076              	.L290:
 5077              		.align	2
 5078              	.L289:
 5079 0078 00000000 		.word	rgb_matrix_config
 5080 007c 00000000 		.word	g_rgb_timer
 5081              	.LBE338:
 5082              		.cfi_endproc
 5083              	.LFE410:
 5085              		.section	.text.HUE_BREATHING,"ax",%progbits
 5086              		.align	1
 5087              		.global	HUE_BREATHING
 5088              		.syntax unified
 5089              		.thumb
 5090              		.thumb_func
 5091              		.fpu fpv4-sp-d16
 5093              	HUE_BREATHING:
 5094              	.LVL350:
 5095              	.LFB411:
 5096              		.file 35 "quantum/rgb_matrix/animations/hue_breathing_anim.h"
   1:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #ifndef DISABLE_RGB_MATRIX_HUE_BREATHING
   2:quantum/rgb_matrix/animations/hue_breathing_anim.h **** RGB_MATRIX_EFFECT(HUE_BREATHING)
   3:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
   4:quantum/rgb_matrix/animations/hue_breathing_anim.h **** 
   5:quantum/rgb_matrix/animations/hue_breathing_anim.h **** // Change huedelta to adjust range of hue change. 0-255.
   6:quantum/rgb_matrix/animations/hue_breathing_anim.h **** // Hue Breathing - All LED's light up
   7:quantum/rgb_matrix/animations/hue_breathing_anim.h **** bool HUE_BREATHING(effect_params_t* params) {
 5097              		.loc 35 7 45 is_stmt 1 view -0
 5098              		.cfi_startproc
 5099              		@ args = 0, pretend = 0, frame = 8
 5100              		@ frame_needed = 0, uses_anonymous_args = 0
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5101              		.loc 35 8 5 view .LVU1231
   7:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5102              		.loc 35 7 45 is_stmt 0 view .LVU1232
 5103 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 5104              		.cfi_def_cfa_offset 32
 5105              		.cfi_offset 4, -24
 5106              		.cfi_offset 5, -20
 5107              		.cfi_offset 6, -16
 5108              		.cfi_offset 7, -12
 5109              		.cfi_offset 8, -8
 5110              		.cfi_offset 14, -4
   9:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
  10:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     HSV      hsv      = rgb_matrix_config.hsv;
 5111              		.loc 35 10 14 view .LVU1233
 5112 0004 2C4B     		ldr	r3, .L299
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5113              		.loc 35 8 5 view .LVU1234
 5114 0006 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 5115              		.loc 35 10 14 view .LVU1235
 5116 0008 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5117 000a 8DF80220 		strb	r2, [sp, #2]
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5118              		.loc 35 8 5 view .LVU1236
 5119 000e 04EB8404 		add	r4, r4, r4, lsl #2
 5120              	.LBB339:
 5121              	.LBB340:
 253:./lib/lib8tion/scale8.h **** #endif
 5122              		.loc 4 253 17 view .LVU1237
 5123 0012 2A4A     		ldr	r2, .L299+4
 5124              	.LBE340:
 5125              	.LBE339:
 5126              		.loc 35 10 14 view .LVU1238
 5127 0014 B3F80110 		ldrh	r1, [r3, #1]	@ unaligned
 5128 0018 93F80180 		ldrb	r8, [r3, #1]	@ zero_extendqisi2
  11:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint16_t time     = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5129              		.loc 35 11 25 view .LVU1239
 5130 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  10:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint16_t time     = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5131              		.loc 35 10 14 view .LVU1240
 5132 001e ADF80010 		strh	r1, [sp]	@ unaligned
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5133              		.loc 35 8 5 view .LVU1241
 5134 0022 A400     		lsls	r4, r4, #2
   7:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB_MATRIX_USE_LIMITS(led_min, led_max);
 5135              		.loc 35 7 45 view .LVU1242
 5136 0024 0646     		mov	r6, r0
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5137              		.loc 35 8 5 view .LVU1243
 5138 0026 E4B2     		uxtb	r4, r4
 5139              	.LVL351:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5140              		.loc 35 8 5 is_stmt 1 view .LVU1244
 5141              	.LBB344:
 5142              	.LBB341:
 253:./lib/lib8tion/scale8.h **** #endif
 5143              		.loc 4 253 17 is_stmt 0 view .LVU1245
 5144 0028 1088     		ldrh	r0, [r2]
 5145              	.LVL352:
 253:./lib/lib8tion/scale8.h **** #endif
 5146              		.loc 4 253 17 view .LVU1246
 5147 002a DB08     		lsrs	r3, r3, #3
 5148              	.LBE341:
 5149              	.LBE344:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5150              		.loc 35 8 5 view .LVU1247
 5151 002c 04F11405 		add	r5, r4, #20
 5152              	.LBB345:
 5153              	.LBB342:
 253:./lib/lib8tion/scale8.h **** #endif
 5154              		.loc 4 253 17 view .LVU1248
 5155 0030 5843     		muls	r0, r3, r0
 5156              	.LBE342:
 5157              	.LBE345:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5158              		.loc 35 8 5 view .LVU1249
 5159 0032 EDB2     		uxtb	r5, r5
 5160              	.LVL353:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5161              		.loc 35 8 5 is_stmt 1 view .LVU1250
 5162 0034 622D     		cmp	r5, #98
  12:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     hsv.h             = hsv.h + scale8(abs8(sin8(time) - 128) * 2, huedelta);
 5163              		.loc 35 12 45 is_stmt 0 view .LVU1251
 5164 0036 C0F30720 		ubfx	r0, r0, #8, #8
 5165 003a 2F46     		mov	r7, r5
 5166 003c 28BF     		it	cs
 5167 003e 6227     		movcs	r7, #98
 5168              	.LVL354:
   8:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint8_t  huedelta = 12;
 5169              		.loc 35 8 44 is_stmt 1 view .LVU1252
   9:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     HSV      hsv      = rgb_matrix_config.hsv;
 5170              		.loc 35 9 5 view .LVU1253
  10:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     uint16_t time     = scale16by8(g_rgb_timer, rgb_matrix_config.speed / 8);
 5171              		.loc 35 10 5 view .LVU1254
  11:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     hsv.h             = hsv.h + scale8(abs8(sin8(time) - 128) * 2, huedelta);
 5172              		.loc 35 11 5 view .LVU1255
 5173              	.LBB346:
 5174              	.LBI339:
 246:./lib/lib8tion/scale8.h **** {
 5175              		.loc 4 246 35 view .LVU1256
 5176              	.LBB343:
 249:./lib/lib8tion/scale8.h **** #if FASTLED_SCALE8_FIXED == 1
 5177              		.loc 4 249 5 view .LVU1257
 253:./lib/lib8tion/scale8.h **** #endif
 5178              		.loc 4 253 5 view .LVU1258
 5179              		.loc 4 255 5 view .LVU1259
 5180              		.loc 4 255 5 is_stmt 0 view .LVU1260
 5181              	.LBE343:
 5182              	.LBE346:
 5183              		.loc 35 12 5 is_stmt 1 view .LVU1261
 5184              		.loc 35 12 45 is_stmt 0 view .LVU1262
 5185 0040 FFF7FEFF 		bl	sin8_C
 5186              	.LVL355:
 5187              		.loc 35 12 56 view .LVU1263
 5188 0044 A0F18003 		sub	r3, r0, #128
 5189              		.loc 35 12 40 view .LVU1264
 5190 0048 5BB2     		sxtb	r3, r3
 5191              	.LVL356:
 5192              	.LBB347:
 5193              	.LBI347:
 404:./lib/lib8tion/math8.h **** {
 5194              		.loc 1 404 33 is_stmt 1 view .LVU1265
 5195              	.LBB348:
 407:./lib/lib8tion/math8.h ****     return i;
 5196              		.loc 1 407 5 view .LVU1266
 407:./lib/lib8tion/math8.h ****     return i;
 5197              		.loc 1 407 7 is_stmt 0 view .LVU1267
 5198 004a 002B     		cmp	r3, #0
 407:./lib/lib8tion/math8.h ****     return i;
 5199              		.loc 1 407 16 is_stmt 1 view .LVU1268
 407:./lib/lib8tion/math8.h ****     return i;
 5200              		.loc 1 407 18 is_stmt 0 view .LVU1269
 5201 004c BCBF     		itt	lt
 5202 004e C0F18000 		rsblt	r0, r0, #128
 5203 0052 43B2     		sxtblt	r3, r0
 5204              	.LVL357:
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 5205              		.loc 1 408 5 is_stmt 1 view .LVU1270
 408:./lib/lib8tion/math8.h **** #elif ABS8_AVRASM == 1
 5206              		.loc 1 408 5 is_stmt 0 view .LVU1271
 5207              	.LBE348:
 5208              	.LBE347:
 5209              	.LBB349:
 5210              	.LBI349:
  20:./lib/lib8tion/scale8.h **** {
 5211              		.loc 4 20 34 is_stmt 1 view .LVU1272
 5212              	.LBB350:
  26:./lib/lib8tion/scale8.h **** #endif
 5213              		.loc 4 26 5 view .LVU1273
  26:./lib/lib8tion/scale8.h **** #endif
 5214              		.loc 4 26 5 is_stmt 0 view .LVU1274
 5215              	.LBE350:
 5216              	.LBE349:
  13:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB rgb           = hsv_to_rgb(hsv);
 5217              		.loc 35 13 5 is_stmt 1 view .LVU1275
  12:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB rgb           = hsv_to_rgb(hsv);
 5218              		.loc 35 12 33 is_stmt 0 view .LVU1276
 5219 0054 5B00     		lsls	r3, r3, #1
 5220              	.LVL358:
 5221              	.LBB352:
 5222              	.LBB351:
  26:./lib/lib8tion/scale8.h **** #endif
 5223              		.loc 4 26 25 view .LVU1277
 5224 0056 03F0FE03 		and	r3, r3, #254
 5225 005a 03EB4303 		add	r3, r3, r3, lsl #1
 5226              	.LBE351:
 5227              	.LBE352:
  12:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     RGB rgb           = hsv_to_rgb(hsv);
 5228              		.loc 35 12 31 view .LVU1278
 5229 005e 08EB9313 		add	r3, r8, r3, lsr #6
 5230              		.loc 35 13 25 view .LVU1279
 5231 0062 8DF80030 		strb	r3, [sp]
 5232 0066 0098     		ldr	r0, [sp]
 5233              	.LBB353:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
  15:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5234              		.loc 35 15 9 view .LVU1280
 5235 0068 DFF85480 		ldr	r8, .L299+8
 5236              	.LBE353:
  13:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5237              		.loc 35 13 25 view .LVU1281
 5238 006c FFF7FEFF 		bl	hsv_to_rgb
 5239              	.LVL359:
  13:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5240              		.loc 35 13 25 view .LVU1282
 5241 0070 C0F30723 		ubfx	r3, r0, #8, #8
 5242 0074 8DF80400 		strb	r0, [sp, #4]
 5243 0078 C0F30740 		ubfx	r0, r0, #16, #8
 5244 007c 8DF80530 		strb	r3, [sp, #5]
 5245 0080 8DF80600 		strb	r0, [sp, #6]
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5246              		.loc 35 14 5 is_stmt 1 view .LVU1283
 5247              	.LBB354:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5248              		.loc 35 14 10 view .LVU1284
 5249              	.LVL360:
 5250              	.L293:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5251              		.loc 35 14 31 discriminator 1 view .LVU1285
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     for (uint8_t i = led_min; i < led_max; i++) {
 5252              		.loc 35 14 5 is_stmt 0 discriminator 1 view .LVU1286
 5253 0084 E3B2     		uxtb	r3, r4
 5254 0086 9F42     		cmp	r7, r3
 5255 0088 06D8     		bhi	.L295
 5256              	.LBE354:
  16:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
  17:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     }
  18:quantum/rgb_matrix/animations/hue_breathing_anim.h ****     return led_max < DRIVER_LED_TOTAL;
 5257              		.loc 35 18 5 is_stmt 1 view .LVU1287
  19:quantum/rgb_matrix/animations/hue_breathing_anim.h **** }
 5258              		.loc 35 19 1 is_stmt 0 view .LVU1288
 5259 008a 612D     		cmp	r5, #97
 5260 008c 8CBF     		ite	hi
 5261 008e 0020     		movhi	r0, #0
 5262 0090 0120     		movls	r0, #1
 5263 0092 02B0     		add	sp, sp, #8
 5264              		.cfi_remember_state
 5265              		.cfi_def_cfa_offset 24
 5266              		@ sp needed
 5267 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5268              	.LVL361:
 5269              	.L295:
 5270              		.cfi_restore_state
 5271              	.LBB355:
  15:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5272              		.loc 35 15 9 is_stmt 1 view .LVU1289
 5273 0098 14F80820 		ldrb	r2, [r4, r8]	@ zero_extendqisi2
 5274 009c 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 5275 009e 1A42     		tst	r2, r3
 5276 00a0 08D0     		beq	.L294
  16:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         rgb_matrix_set_color(i, rgb.r, rgb.g, rgb.b);
 5277              		.loc 35 16 9 view .LVU1290
 5278 00a2 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 5279 00a6 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 5280 00aa 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 5281 00ae 2046     		mov	r0, r4
 5282 00b0 FFF7FEFF 		bl	rgb_matrix_set_color
 5283              	.LVL362:
 5284              	.L294:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5285              		.loc 35 14 44 discriminator 2 view .LVU1291
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5286              		.loc 35 14 44 is_stmt 0 discriminator 2 view .LVU1292
 5287 00b4 0134     		adds	r4, r4, #1
 5288              	.LVL363:
  14:quantum/rgb_matrix/animations/hue_breathing_anim.h ****         RGB_MATRIX_TEST_LED_FLAGS();
 5289              		.loc 35 14 44 discriminator 2 view .LVU1293
 5290 00b6 E5E7     		b	.L293
 5291              	.L300:
 5292              		.align	2
 5293              	.L299:
 5294 00b8 00000000 		.word	rgb_matrix_config
 5295 00bc 00000000 		.word	g_rgb_timer
 5296 00c0 1C010000 		.word	g_led_config+284
 5297              	.LBE355:
 5298              		.cfi_endproc
 5299              	.LFE411:
 5301              		.section	.text.rgb_matrix_set_color_all,"ax",%progbits
 5302              		.align	1
 5303              		.global	rgb_matrix_set_color_all
 5304              		.syntax unified
 5305              		.thumb
 5306              		.thumb_func
 5307              		.fpu fpv4-sp-d16
 5309              	rgb_matrix_set_color_all:
 5310              	.LVL364:
 5311              	.LFB424:
 198:quantum/rgb_matrix/rgb_matrix.c **** 
 199:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_color_all(uint8_t red, uint8_t green, uint8_t blue) {
 5312              		.loc 23 199 73 is_stmt 1 view -0
 5313              		.cfi_startproc
 5314              		@ args = 0, pretend = 0, frame = 0
 5315              		@ frame_needed = 0, uses_anonymous_args = 0
 5316              		@ link register save eliminated.
 200:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_ENABLE) && defined(RGB_MATRIX_SPLIT)
 201:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < DRIVER_LED_TOTAL; i++) rgb_matrix_set_color(i, red, green, blue);
 202:quantum/rgb_matrix/rgb_matrix.c **** #else
 203:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_driver.set_color_all(red, green, blue);
 5317              		.loc 23 203 5 view .LVU1295
 5318              		.loc 23 203 22 is_stmt 0 view .LVU1296
 5319 0000 014B     		ldr	r3, .L302
 5320              		.loc 23 203 5 view .LVU1297
 5321 0002 9B68     		ldr	r3, [r3, #8]
 5322 0004 1847     		bx	r3	@ indirect register sibling call
 5323              	.LVL365:
 5324              	.L303:
 5325              		.loc 23 203 5 view .LVU1298
 5326 0006 00BF     		.align	2
 5327              	.L302:
 5328 0008 00000000 		.word	rgb_matrix_driver
 5329              		.cfi_endproc
 5330              	.LFE424:
 5332              		.section	.text.process_rgb_matrix,"ax",%progbits
 5333              		.align	1
 5334              		.global	process_rgb_matrix
 5335              		.syntax unified
 5336              		.thumb
 5337              		.thumb_func
 5338              		.fpu fpv4-sp-d16
 5340              	process_rgb_matrix:
 5341              	.LVL366:
 5342              	.LFB425:
 204:quantum/rgb_matrix/rgb_matrix.c **** #endif
 205:quantum/rgb_matrix/rgb_matrix.c **** }
 206:quantum/rgb_matrix/rgb_matrix.c **** 
 207:quantum/rgb_matrix/rgb_matrix.c **** void process_rgb_matrix(uint8_t row, uint8_t col, bool pressed) {
 5343              		.loc 23 207 65 is_stmt 1 view -0
 5344              		.cfi_startproc
 5345              		@ args = 0, pretend = 0, frame = 0
 5346              		@ frame_needed = 0, uses_anonymous_args = 0
 5347              		@ link register save eliminated.
 208:quantum/rgb_matrix/rgb_matrix.c **** #ifndef RGB_MATRIX_SPLIT
 209:quantum/rgb_matrix/rgb_matrix.c ****     if (!is_keyboard_master()) return;
 5348              		.loc 23 209 5 view .LVU1300
 5349              		.loc 23 209 10 is_stmt 0 view .LVU1301
 5350 0000 FFF7FEBF 		b	is_keyboard_master
 5351              	.LVL367:
 5352              		.loc 23 209 10 view .LVU1302
 5353              		.cfi_endproc
 5354              	.LFE425:
 5356              		.section	.text.rgb_matrix_test,"ax",%progbits
 5357              		.align	1
 5358              		.global	rgb_matrix_test
 5359              		.syntax unified
 5360              		.thumb
 5361              		.thumb_func
 5362              		.fpu fpv4-sp-d16
 5364              	rgb_matrix_test:
 5365              	.LFB426:
 210:quantum/rgb_matrix/rgb_matrix.c **** #endif
 211:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 212:quantum/rgb_matrix/rgb_matrix.c ****     rgb_anykey_timer = 0;
 213:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 214:quantum/rgb_matrix/rgb_matrix.c **** 
 215:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 216:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led[LED_HITS_TO_REMEMBER];
 217:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t led_count = 0;
 218:quantum/rgb_matrix/rgb_matrix.c **** 
 219:quantum/rgb_matrix/rgb_matrix.c **** #    if defined(RGB_MATRIX_KEYRELEASES)
 220:quantum/rgb_matrix/rgb_matrix.c ****     if (!pressed)
 221:quantum/rgb_matrix/rgb_matrix.c **** #    elif defined(RGB_MATRIX_KEYPRESSES)
 222:quantum/rgb_matrix/rgb_matrix.c ****     if (pressed)
 223:quantum/rgb_matrix/rgb_matrix.c **** #    endif  // defined(RGB_MATRIX_KEYRELEASES)
 224:quantum/rgb_matrix/rgb_matrix.c ****     {
 225:quantum/rgb_matrix/rgb_matrix.c ****         led_count = rgb_matrix_map_row_column_to_led(row, col, led);
 226:quantum/rgb_matrix/rgb_matrix.c ****     }
 227:quantum/rgb_matrix/rgb_matrix.c **** 
 228:quantum/rgb_matrix/rgb_matrix.c ****     if (last_hit_buffer.count + led_count > LED_HITS_TO_REMEMBER) {
 229:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.x[0], &last_hit_buffer.x[led_count], LED_HITS_TO_REMEMBER - led_cou
 230:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.y[0], &last_hit_buffer.y[led_count], LED_HITS_TO_REMEMBER - led_cou
 231:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.tick[0], &last_hit_buffer.tick[led_count], (LED_HITS_TO_REMEMBER - 
 232:quantum/rgb_matrix/rgb_matrix.c ****         memcpy(&last_hit_buffer.index[0], &last_hit_buffer.index[led_count], LED_HITS_TO_REMEMBER -
 233:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.count = LED_HITS_TO_REMEMBER - led_count;
 234:quantum/rgb_matrix/rgb_matrix.c ****     }
 235:quantum/rgb_matrix/rgb_matrix.c **** 
 236:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < led_count; i++) {
 237:quantum/rgb_matrix/rgb_matrix.c ****         uint8_t index                = last_hit_buffer.count;
 238:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.x[index]     = g_led_config.point[led[i]].x;
 239:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.y[index]     = g_led_config.point[led[i]].y;
 240:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.index[index] = led[i];
 241:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.tick[index]  = 0;
 242:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.count++;
 243:quantum/rgb_matrix/rgb_matrix.c ****     }
 244:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 245:quantum/rgb_matrix/rgb_matrix.c **** 
 246:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 247:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_matrix_config.mode == RGB_MATRIX_TYPING_HEATMAP) {
 248:quantum/rgb_matrix/rgb_matrix.c ****         process_rgb_matrix_typing_heatmap(row, col);
 249:quantum/rgb_matrix/rgb_matrix.c ****     }
 250:quantum/rgb_matrix/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_FRAMEBUFFER_EFFECTS) && !defined(DISABLE_RGB_MATRIX_TYPING_HEATMAP)
 251:quantum/rgb_matrix/rgb_matrix.c **** }
 252:quantum/rgb_matrix/rgb_matrix.c **** 
 253:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_test(void) {
 5366              		.loc 23 253 28 is_stmt 1 view -0
 5367              		.cfi_startproc
 5368              		@ args = 0, pretend = 0, frame = 0
 5369              		@ frame_needed = 0, uses_anonymous_args = 0
 5370              		@ link register save eliminated.
 254:quantum/rgb_matrix/rgb_matrix.c ****     // Mask out bits 4 and 5
 255:quantum/rgb_matrix/rgb_matrix.c ****     // Increase the factor to make the test animation slower (and reduce to make it faster)
 256:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t factor = 10;
 5371              		.loc 23 256 5 view .LVU1304
 5372              	.LVL368:
 257:quantum/rgb_matrix/rgb_matrix.c ****     switch ((g_rgb_timer & (0b11 << factor)) >> factor) {
 5373              		.loc 23 257 5 view .LVU1305
 5374              		.loc 23 257 26 is_stmt 0 view .LVU1306
 5375 0000 0C4B     		ldr	r3, .L311
 5376              		.loc 23 257 46 view .LVU1307
 5377 0002 1B68     		ldr	r3, [r3]
 5378 0004 C3F38123 		ubfx	r3, r3, #10, #2
 5379              		.loc 23 257 5 view .LVU1308
 5380 0008 022B     		cmp	r3, #2
 5381 000a 0CD0     		beq	.L306
 5382 000c 032B     		cmp	r3, #3
 5383 000e 0ED0     		beq	.L307
 5384 0010 012B     		cmp	r3, #1
 258:quantum/rgb_matrix/rgb_matrix.c ****         case 0: {
 259:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 0, 0);
 5385              		.loc 23 259 13 view .LVU1309
 5386 0012 4FF00002 		mov	r2, #0
 257:quantum/rgb_matrix/rgb_matrix.c ****     switch ((g_rgb_timer & (0b11 << factor)) >> factor) {
 5387              		.loc 23 257 5 view .LVU1310
 5388 0016 03D0     		beq	.L308
 5389              	.L309:
 5390              		.loc 23 259 13 is_stmt 1 view .LVU1311
 5391 0018 1146     		mov	r1, r2
 5392 001a 1420     		movs	r0, #20
 5393              	.L310:
 260:quantum/rgb_matrix/rgb_matrix.c ****             break;
 261:quantum/rgb_matrix/rgb_matrix.c ****         }
 262:quantum/rgb_matrix/rgb_matrix.c ****         case 1: {
 263:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 20, 0);
 264:quantum/rgb_matrix/rgb_matrix.c ****             break;
 265:quantum/rgb_matrix/rgb_matrix.c ****         }
 266:quantum/rgb_matrix/rgb_matrix.c ****         case 2: {
 267:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(0, 0, 20);
 5394              		.loc 23 267 13 is_stmt 0 view .LVU1312
 5395 001c FFF7FEBF 		b	rgb_matrix_set_color_all
 5396              	.LVL369:
 5397              	.L308:
 263:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5398              		.loc 23 263 13 is_stmt 1 view .LVU1313
 5399 0020 1421     		movs	r1, #20
 5400 0022 1046     		mov	r0, r2
 5401 0024 FAE7     		b	.L310
 5402              	.L306:
 5403              		.loc 23 267 13 view .LVU1314
 5404 0026 0021     		movs	r1, #0
 5405 0028 1422     		movs	r2, #20
 5406 002a 0846     		mov	r0, r1
 5407 002c F6E7     		b	.L310
 5408              	.L307:
 268:quantum/rgb_matrix/rgb_matrix.c ****             break;
 269:quantum/rgb_matrix/rgb_matrix.c ****         }
 270:quantum/rgb_matrix/rgb_matrix.c ****         case 3: {
 271:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_set_color_all(20, 20, 20);
 5409              		.loc 23 271 13 view .LVU1315
 5410 002e 1422     		movs	r2, #20
 5411 0030 F2E7     		b	.L309
 5412              	.L312:
 5413 0032 00BF     		.align	2
 5414              	.L311:
 5415 0034 00000000 		.word	g_rgb_timer
 5416              		.cfi_endproc
 5417              	.LFE426:
 5419              		.section	.text.rgb_matrix_indicators_kb,"ax",%progbits
 5420              		.align	1
 5421              		.weak	rgb_matrix_indicators_kb
 5422              		.syntax unified
 5423              		.thumb
 5424              		.thumb_func
 5425              		.fpu fpv4-sp-d16
 5427              	rgb_matrix_indicators_kb:
 5428              	.LFB435:
 272:quantum/rgb_matrix/rgb_matrix.c ****             break;
 273:quantum/rgb_matrix/rgb_matrix.c ****         }
 274:quantum/rgb_matrix/rgb_matrix.c ****     }
 275:quantum/rgb_matrix/rgb_matrix.c **** }
 276:quantum/rgb_matrix/rgb_matrix.c **** 
 277:quantum/rgb_matrix/rgb_matrix.c **** static bool rgb_matrix_none(effect_params_t *params) {
 278:quantum/rgb_matrix/rgb_matrix.c ****     if (!params->init) {
 279:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 280:quantum/rgb_matrix/rgb_matrix.c ****     }
 281:quantum/rgb_matrix/rgb_matrix.c **** 
 282:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_set_color_all(0, 0, 0);
 283:quantum/rgb_matrix/rgb_matrix.c ****     return false;
 284:quantum/rgb_matrix/rgb_matrix.c **** }
 285:quantum/rgb_matrix/rgb_matrix.c **** 
 286:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_timers(void) {
 287:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 288:quantum/rgb_matrix/rgb_matrix.c ****     uint32_t deltaTime = sync_timer_elapsed32(rgb_timer_buffer);
 289:quantum/rgb_matrix/rgb_matrix.c **** #endif  // defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 290:quantum/rgb_matrix/rgb_matrix.c ****     rgb_timer_buffer = sync_timer_read32();
 291:quantum/rgb_matrix/rgb_matrix.c **** 
 292:quantum/rgb_matrix/rgb_matrix.c ****     // Update double buffer timers
 293:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 294:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_anykey_timer < UINT32_MAX) {
 295:quantum/rgb_matrix/rgb_matrix.c ****         if (UINT32_MAX - deltaTime < rgb_anykey_timer) {
 296:quantum/rgb_matrix/rgb_matrix.c ****             rgb_anykey_timer = UINT32_MAX;
 297:quantum/rgb_matrix/rgb_matrix.c ****         } else {
 298:quantum/rgb_matrix/rgb_matrix.c ****             rgb_anykey_timer += deltaTime;
 299:quantum/rgb_matrix/rgb_matrix.c ****         }
 300:quantum/rgb_matrix/rgb_matrix.c ****     }
 301:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 302:quantum/rgb_matrix/rgb_matrix.c **** 
 303:quantum/rgb_matrix/rgb_matrix.c ****     // Update double buffer last hit timers
 304:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 305:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t count = last_hit_buffer.count;
 306:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < count; ++i) {
 307:quantum/rgb_matrix/rgb_matrix.c ****         if (UINT16_MAX - deltaTime < last_hit_buffer.tick[i]) {
 308:quantum/rgb_matrix/rgb_matrix.c ****             last_hit_buffer.count--;
 309:quantum/rgb_matrix/rgb_matrix.c ****             continue;
 310:quantum/rgb_matrix/rgb_matrix.c ****         }
 311:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.tick[i] += deltaTime;
 312:quantum/rgb_matrix/rgb_matrix.c ****     }
 313:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 314:quantum/rgb_matrix/rgb_matrix.c **** }
 315:quantum/rgb_matrix/rgb_matrix.c **** 
 316:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_sync(void) {
 317:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 318:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_update_eeprom) eeconfig_update_rgb_matrix();
 319:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 320:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 321:quantum/rgb_matrix/rgb_matrix.c **** }
 322:quantum/rgb_matrix/rgb_matrix.c **** 
 323:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_start(void) {
 324:quantum/rgb_matrix/rgb_matrix.c ****     // reset iter
 325:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.iter = 0;
 326:quantum/rgb_matrix/rgb_matrix.c **** 
 327:quantum/rgb_matrix/rgb_matrix.c ****     // update double buffers
 328:quantum/rgb_matrix/rgb_matrix.c ****     g_rgb_timer = rgb_timer_buffer;
 329:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 330:quantum/rgb_matrix/rgb_matrix.c ****     g_last_hit_tracker = last_hit_buffer;
 331:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 332:quantum/rgb_matrix/rgb_matrix.c **** 
 333:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 334:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = RENDERING;
 335:quantum/rgb_matrix/rgb_matrix.c **** }
 336:quantum/rgb_matrix/rgb_matrix.c **** 
 337:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_render(uint8_t effect) {
 338:quantum/rgb_matrix/rgb_matrix.c ****     bool rendering         = false;
 339:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 340:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 341:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 342:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);
 343:quantum/rgb_matrix/rgb_matrix.c ****     }
 344:quantum/rgb_matrix/rgb_matrix.c **** 
 345:quantum/rgb_matrix/rgb_matrix.c ****     // each effect can opt to do calculations
 346:quantum/rgb_matrix/rgb_matrix.c ****     // and/or request PWM buffer updates.
 347:quantum/rgb_matrix/rgb_matrix.c ****     switch (effect) {
 348:quantum/rgb_matrix/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 349:quantum/rgb_matrix/rgb_matrix.c ****             rendering = rgb_matrix_none(&rgb_effect_params);
 350:quantum/rgb_matrix/rgb_matrix.c ****             break;
 351:quantum/rgb_matrix/rgb_matrix.c **** 
 352:quantum/rgb_matrix/rgb_matrix.c **** // ---------------------------------------------
 353:quantum/rgb_matrix/rgb_matrix.c **** // -----Begin rgb effect switch case macros-----
 354:quantum/rgb_matrix/rgb_matrix.c **** #define RGB_MATRIX_EFFECT(name, ...)          \
 355:quantum/rgb_matrix/rgb_matrix.c ****     case RGB_MATRIX_##name:                   \
 356:quantum/rgb_matrix/rgb_matrix.c ****         rendering = name(&rgb_effect_params); \
 357:quantum/rgb_matrix/rgb_matrix.c ****         break;
 358:quantum/rgb_matrix/rgb_matrix.c **** #include "rgb_matrix_effects.inc"
 359:quantum/rgb_matrix/rgb_matrix.c **** #undef RGB_MATRIX_EFFECT
 360:quantum/rgb_matrix/rgb_matrix.c **** 
 361:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_CUSTOM_KB) || defined(RGB_MATRIX_CUSTOM_USER)
 362:quantum/rgb_matrix/rgb_matrix.c **** #    define RGB_MATRIX_EFFECT(name, ...)          \
 363:quantum/rgb_matrix/rgb_matrix.c ****         case RGB_MATRIX_CUSTOM_##name:            \
 364:quantum/rgb_matrix/rgb_matrix.c ****             rendering = name(&rgb_effect_params); \
 365:quantum/rgb_matrix/rgb_matrix.c ****             break;
 366:quantum/rgb_matrix/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_KB
 367:quantum/rgb_matrix/rgb_matrix.c **** #        include "rgb_matrix_kb.inc"
 368:quantum/rgb_matrix/rgb_matrix.c **** #    endif
 369:quantum/rgb_matrix/rgb_matrix.c **** #    ifdef RGB_MATRIX_CUSTOM_USER
 370:quantum/rgb_matrix/rgb_matrix.c **** #        include "rgb_matrix_user.inc"
 371:quantum/rgb_matrix/rgb_matrix.c **** #    endif
 372:quantum/rgb_matrix/rgb_matrix.c **** #    undef RGB_MATRIX_EFFECT
 373:quantum/rgb_matrix/rgb_matrix.c **** #endif
 374:quantum/rgb_matrix/rgb_matrix.c ****             // -----End rgb effect switch case macros-------
 375:quantum/rgb_matrix/rgb_matrix.c ****             // ---------------------------------------------
 376:quantum/rgb_matrix/rgb_matrix.c **** 
 377:quantum/rgb_matrix/rgb_matrix.c ****         // Factory default magic value
 378:quantum/rgb_matrix/rgb_matrix.c ****         case UINT8_MAX: {
 379:quantum/rgb_matrix/rgb_matrix.c ****             rgb_matrix_test();
 380:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_state = FLUSHING;
 381:quantum/rgb_matrix/rgb_matrix.c ****         }
 382:quantum/rgb_matrix/rgb_matrix.c ****             return;
 383:quantum/rgb_matrix/rgb_matrix.c ****     }
 384:quantum/rgb_matrix/rgb_matrix.c **** 
 385:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.iter++;
 386:quantum/rgb_matrix/rgb_matrix.c **** 
 387:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 388:quantum/rgb_matrix/rgb_matrix.c ****     if (!rendering) {
 389:quantum/rgb_matrix/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 390:quantum/rgb_matrix/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 391:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 392:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_state = SYNCING;
 393:quantum/rgb_matrix/rgb_matrix.c ****         }
 394:quantum/rgb_matrix/rgb_matrix.c ****     }
 395:quantum/rgb_matrix/rgb_matrix.c **** }
 396:quantum/rgb_matrix/rgb_matrix.c **** 
 397:quantum/rgb_matrix/rgb_matrix.c **** static void rgb_task_flush(uint8_t effect) {
 398:quantum/rgb_matrix/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_effect = effect;
 400:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 401:quantum/rgb_matrix/rgb_matrix.c **** 
 402:quantum/rgb_matrix/rgb_matrix.c ****     // update pwm buffers
 403:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_update_pwm_buffers();
 404:quantum/rgb_matrix/rgb_matrix.c **** 
 405:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 406:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = SYNCING;
 407:quantum/rgb_matrix/rgb_matrix.c **** }
 408:quantum/rgb_matrix/rgb_matrix.c **** 
 409:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_task(void) {
 410:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_timers();
 411:quantum/rgb_matrix/rgb_matrix.c **** 
 412:quantum/rgb_matrix/rgb_matrix.c ****     // Ideally we would also stop sending zeros to the LED driver PWM buffers
 413:quantum/rgb_matrix/rgb_matrix.c ****     // while suspended and just do a software shutdown. This is a cheap hack for now.
 414:quantum/rgb_matrix/rgb_matrix.c ****     bool suspend_backlight = suspend_state ||
 415:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 416:quantum/rgb_matrix/rgb_matrix.c ****                              (rgb_anykey_timer > (uint32_t)RGB_DISABLE_TIMEOUT) ||
 417:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_DISABLE_TIMEOUT > 0
 418:quantum/rgb_matrix/rgb_matrix.c ****                              false;
 419:quantum/rgb_matrix/rgb_matrix.c **** 
 420:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t effect = suspend_backlight || !rgb_matrix_config.enable ? 0 : rgb_matrix_config.mode;
 421:quantum/rgb_matrix/rgb_matrix.c **** 
 422:quantum/rgb_matrix/rgb_matrix.c ****     switch (rgb_task_state) {
 423:quantum/rgb_matrix/rgb_matrix.c ****         case STARTING:
 424:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_start();
 425:quantum/rgb_matrix/rgb_matrix.c ****             break;
 426:quantum/rgb_matrix/rgb_matrix.c ****         case RENDERING:
 427:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_render(effect);
 428:quantum/rgb_matrix/rgb_matrix.c ****             if (effect) {
 429:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 430:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators_advanced(&rgb_effect_params);
 431:quantum/rgb_matrix/rgb_matrix.c ****             }
 432:quantum/rgb_matrix/rgb_matrix.c ****             break;
 433:quantum/rgb_matrix/rgb_matrix.c ****         case FLUSHING:
 434:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_flush(effect);
 435:quantum/rgb_matrix/rgb_matrix.c ****             break;
 436:quantum/rgb_matrix/rgb_matrix.c ****         case SYNCING:
 437:quantum/rgb_matrix/rgb_matrix.c ****             rgb_task_sync();
 438:quantum/rgb_matrix/rgb_matrix.c ****             break;
 439:quantum/rgb_matrix/rgb_matrix.c ****     }
 440:quantum/rgb_matrix/rgb_matrix.c **** }
 441:quantum/rgb_matrix/rgb_matrix.c **** 
 442:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_indicators(void) {
 443:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 444:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_user();
 445:quantum/rgb_matrix/rgb_matrix.c **** }
 446:quantum/rgb_matrix/rgb_matrix.c **** 
 447:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_kb(void) {}
 5429              		.loc 23 447 59 view -0
 5430              		.cfi_startproc
 5431              		@ args = 0, pretend = 0, frame = 0
 5432              		@ frame_needed = 0, uses_anonymous_args = 0
 5433              		@ link register save eliminated.
 5434              		.loc 23 447 60 view .LVU1317
 5435 0000 7047     		bx	lr
 5436              		.cfi_endproc
 5437              	.LFE435:
 5439              		.section	.text.rgb_matrix_indicators_user,"ax",%progbits
 5440              		.align	1
 5441              		.weak	rgb_matrix_indicators_user
 5442              		.syntax unified
 5443              		.thumb
 5444              		.thumb_func
 5445              		.fpu fpv4-sp-d16
 5447              	rgb_matrix_indicators_user:
 5448              	.LFB507:
 5449              		.cfi_startproc
 5450              		@ args = 0, pretend = 0, frame = 0
 5451              		@ frame_needed = 0, uses_anonymous_args = 0
 5452              		@ link register save eliminated.
 5453 0000 7047     		bx	lr
 5454              		.cfi_endproc
 5455              	.LFE507:
 5457              		.section	.text.rgb_matrix_indicators,"ax",%progbits
 5458              		.align	1
 5459              		.global	rgb_matrix_indicators
 5460              		.syntax unified
 5461              		.thumb
 5462              		.thumb_func
 5463              		.fpu fpv4-sp-d16
 5465              	rgb_matrix_indicators:
 5466              	.LFB434:
 442:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 5467              		.loc 23 442 34 view -0
 5468              		.cfi_startproc
 5469              		@ args = 0, pretend = 0, frame = 0
 5470              		@ frame_needed = 0, uses_anonymous_args = 0
 443:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_user();
 5471              		.loc 23 443 5 view .LVU1319
 442:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_kb();
 5472              		.loc 23 442 34 is_stmt 0 view .LVU1320
 5473 0000 08B5     		push	{r3, lr}
 5474              		.cfi_def_cfa_offset 8
 5475              		.cfi_offset 3, -8
 5476              		.cfi_offset 14, -4
 443:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_user();
 5477              		.loc 23 443 5 view .LVU1321
 5478 0002 FFF7FEFF 		bl	rgb_matrix_indicators_kb
 5479              	.LVL370:
 444:quantum/rgb_matrix/rgb_matrix.c **** }
 5480              		.loc 23 444 5 is_stmt 1 view .LVU1322
 5481 0006 FFF7FEFF 		bl	rgb_matrix_indicators_user
 5482              	.LVL371:
 445:quantum/rgb_matrix/rgb_matrix.c **** 
 5483              		.loc 23 445 1 is_stmt 0 view .LVU1323
 5484 000a 08BD     		pop	{r3, pc}
 5485              		.cfi_endproc
 5486              	.LFE434:
 5488              		.section	.text.rgb_matrix_indicators_advanced_kb,"ax",%progbits
 5489              		.align	1
 5490              		.weak	rgb_matrix_indicators_advanced_kb
 5491              		.syntax unified
 5492              		.thumb
 5493              		.thumb_func
 5494              		.fpu fpv4-sp-d16
 5496              	rgb_matrix_indicators_advanced_kb:
 5497              	.LVL372:
 5498              	.LFB438:
 448:quantum/rgb_matrix/rgb_matrix.c **** 
 449:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_user(void) {}
 450:quantum/rgb_matrix/rgb_matrix.c **** 
 451:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_indicators_advanced(effect_params_t *params) {
 452:quantum/rgb_matrix/rgb_matrix.c ****     /* special handling is needed for "params->iter", since it's already been incremented.
 453:quantum/rgb_matrix/rgb_matrix.c ****      * Could move the invocations to rgb_task_render, but then it's missing a few checks
 454:quantum/rgb_matrix/rgb_matrix.c ****      * and not sure which would be better. Otherwise, this should be called from
 455:quantum/rgb_matrix/rgb_matrix.c ****      * rgb_task_render, right before the iter++ line.
 456:quantum/rgb_matrix/rgb_matrix.c ****      */
 457:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_LED_PROCESS_LIMIT) && RGB_MATRIX_LED_PROCESS_LIMIT > 0 && RGB_MATRIX_LED_PRO
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t min = RGB_MATRIX_LED_PROCESS_LIMIT * (params->iter - 1);
 459:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 460:quantum/rgb_matrix/rgb_matrix.c ****     if (max > DRIVER_LED_TOTAL) max = DRIVER_LED_TOTAL;
 461:quantum/rgb_matrix/rgb_matrix.c **** #else
 462:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t min = 0;
 463:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = DRIVER_LED_TOTAL;
 464:quantum/rgb_matrix/rgb_matrix.c **** #endif
 465:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_advanced_kb(min, max);
 466:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_advanced_user(min, max);
 467:quantum/rgb_matrix/rgb_matrix.c **** }
 468:quantum/rgb_matrix/rgb_matrix.c **** 
 469:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_advanced_kb(uint8_t led_min, uint8_t led_max) {}
 5499              		.loc 23 469 96 is_stmt 1 view -0
 5500              		.cfi_startproc
 5501              		@ args = 0, pretend = 0, frame = 0
 5502              		@ frame_needed = 0, uses_anonymous_args = 0
 5503              		@ link register save eliminated.
 5504              		.loc 23 469 97 view .LVU1325
 5505 0000 7047     		bx	lr
 5506              		.cfi_endproc
 5507              	.LFE438:
 5509              		.section	.text.rgb_matrix_indicators_advanced_user,"ax",%progbits
 5510              		.align	1
 5511              		.weak	rgb_matrix_indicators_advanced_user
 5512              		.syntax unified
 5513              		.thumb
 5514              		.thumb_func
 5515              		.fpu fpv4-sp-d16
 5517              	rgb_matrix_indicators_advanced_user:
 5518              	.LFB509:
 5519              		.cfi_startproc
 5520              		@ args = 0, pretend = 0, frame = 0
 5521              		@ frame_needed = 0, uses_anonymous_args = 0
 5522              		@ link register save eliminated.
 5523 0000 7047     		bx	lr
 5524              		.cfi_endproc
 5525              	.LFE509:
 5527              		.section	.text.rgb_matrix_indicators_advanced,"ax",%progbits
 5528              		.align	1
 5529              		.global	rgb_matrix_indicators_advanced
 5530              		.syntax unified
 5531              		.thumb
 5532              		.thumb_func
 5533              		.fpu fpv4-sp-d16
 5535              	rgb_matrix_indicators_advanced:
 5536              	.LVL373:
 5537              	.LFB437:
 451:quantum/rgb_matrix/rgb_matrix.c ****     /* special handling is needed for "params->iter", since it's already been incremented.
 5538              		.loc 23 451 62 view -0
 5539              		.cfi_startproc
 5540              		@ args = 0, pretend = 0, frame = 8
 5541              		@ frame_needed = 0, uses_anonymous_args = 0
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 5542              		.loc 23 458 5 view .LVU1327
 451:quantum/rgb_matrix/rgb_matrix.c ****     /* special handling is needed for "params->iter", since it's already been incremented.
 5543              		.loc 23 451 62 is_stmt 0 view .LVU1328
 5544 0000 07B5     		push	{r0, r1, r2, lr}
 5545              		.cfi_def_cfa_offset 16
 5546              		.cfi_offset 14, -4
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 5547              		.loc 23 458 13 view .LVU1329
 5548 0002 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 5549 0004 01EB8101 		add	r1, r1, r1, lsl #2
 5550 0008 8900     		lsls	r1, r1, #2
 5551 000a C9B2     		uxtb	r1, r1
 5552 000c 6229     		cmp	r1, #98
 5553 000e A1F11400 		sub	r0, r1, #20
 5554              	.LVL374:
 458:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t max = min + RGB_MATRIX_LED_PROCESS_LIMIT;
 5555              		.loc 23 458 13 view .LVU1330
 5556 0012 C0B2     		uxtb	r0, r0
 5557              	.LVL375:
 459:quantum/rgb_matrix/rgb_matrix.c ****     if (max > DRIVER_LED_TOTAL) max = DRIVER_LED_TOTAL;
 5558              		.loc 23 459 5 is_stmt 1 view .LVU1331
 460:quantum/rgb_matrix/rgb_matrix.c **** #else
 5559              		.loc 23 460 5 view .LVU1332
 5560 0014 28BF     		it	cs
 5561 0016 6221     		movcs	r1, #98
 5562              	.LVL376:
 465:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_indicators_advanced_user(min, max);
 5563              		.loc 23 465 5 view .LVU1333
 5564 0018 CDE90001 		strd	r0, r1, [sp]
 5565 001c FFF7FEFF 		bl	rgb_matrix_indicators_advanced_kb
 5566              	.LVL377:
 466:quantum/rgb_matrix/rgb_matrix.c **** }
 5567              		.loc 23 466 5 view .LVU1334
 5568 0020 DDE90001 		ldrd	r0, r1, [sp]
 5569 0024 FFF7FEFF 		bl	rgb_matrix_indicators_advanced_user
 5570              	.LVL378:
 467:quantum/rgb_matrix/rgb_matrix.c **** 
 5571              		.loc 23 467 1 is_stmt 0 view .LVU1335
 5572 0028 03B0     		add	sp, sp, #12
 5573              		.cfi_def_cfa_offset 4
 5574              	.LVL379:
 467:quantum/rgb_matrix/rgb_matrix.c **** 
 5575              		.loc 23 467 1 view .LVU1336
 5576              		@ sp needed
 5577 002a 5DF804FB 		ldr	pc, [sp], #4
 467:quantum/rgb_matrix/rgb_matrix.c **** 
 5578              		.loc 23 467 1 view .LVU1337
 5579              		.cfi_endproc
 5580              	.LFE437:
 5582              		.section	.text.rgb_matrix_task,"ax",%progbits
 5583              		.align	1
 5584              		.global	rgb_matrix_task
 5585              		.syntax unified
 5586              		.thumb
 5587              		.thumb_func
 5588              		.fpu fpv4-sp-d16
 5590              	rgb_matrix_task:
 5591              	.LFB433:
 409:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_timers();
 5592              		.loc 23 409 28 is_stmt 1 view -0
 5593              		.cfi_startproc
 5594              		@ args = 0, pretend = 0, frame = 0
 5595              		@ frame_needed = 0, uses_anonymous_args = 0
 410:quantum/rgb_matrix/rgb_matrix.c **** 
 5596              		.loc 23 410 5 view .LVU1339
 5597              	.LBB368:
 5598              	.LBI368:
 286:quantum/rgb_matrix/rgb_matrix.c **** #if defined(RGB_MATRIX_KEYREACTIVE_ENABLED) || RGB_DISABLE_TIMEOUT > 0
 5599              		.loc 23 286 13 view .LVU1340
 5600              	.LBB369:
 290:quantum/rgb_matrix/rgb_matrix.c **** 
 5601              		.loc 23 290 5 view .LVU1341
 5602              	.LBE369:
 5603              	.LBE368:
 409:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_timers();
 5604              		.loc 23 409 28 is_stmt 0 view .LVU1342
 5605 0000 70B5     		push	{r4, r5, r6, lr}
 5606              		.cfi_def_cfa_offset 16
 5607              		.cfi_offset 4, -16
 5608              		.cfi_offset 5, -12
 5609              		.cfi_offset 6, -8
 5610              		.cfi_offset 14, -4
 5611              	.LBB371:
 5612              	.LBB370:
 290:quantum/rgb_matrix/rgb_matrix.c **** 
 5613              		.loc 23 290 24 view .LVU1343
 5614 0002 FFF7FEFF 		bl	timer_read32
 5615              	.LVL380:
 290:quantum/rgb_matrix/rgb_matrix.c **** 
 5616              		.loc 23 290 22 view .LVU1344
 5617 0006 794B     		ldr	r3, .L377
 5618 0008 1860     		str	r0, [r3]
 5619              	.LBE370:
 5620              	.LBE371:
 414:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 5621              		.loc 23 414 5 is_stmt 1 view .LVU1345
 5622              	.LVL381:
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5623              		.loc 23 420 5 view .LVU1346
 414:quantum/rgb_matrix/rgb_matrix.c **** #if RGB_DISABLE_TIMEOUT > 0
 5624              		.loc 23 414 44 is_stmt 0 view .LVU1347
 5625 000a 794B     		ldr	r3, .L377+4
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5626              		.loc 23 420 13 view .LVU1348
 5627 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5628 000e 7BB9     		cbnz	r3, .L364
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5629              		.loc 23 420 43 discriminator 1 view .LVU1349
 5630 0010 784B     		ldr	r3, .L377+8
 5631 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5632              		.loc 23 420 40 discriminator 1 view .LVU1350
 5633 0014 13F00304 		ands	r4, r3, #3
 5634 0018 00D0     		beq	.L320
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5635              		.loc 23 420 13 discriminator 3 view .LVU1351
 5636 001a 9C08     		lsrs	r4, r3, #2
 5637              	.L320:
 5638              	.LVL382:
 422:quantum/rgb_matrix/rgb_matrix.c ****         case STARTING:
 5639              		.loc 23 422 5 is_stmt 1 discriminator 6 view .LVU1352
 5640 001c 764E     		ldr	r6, .L377+12
 5641 001e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 5642 0020 032B     		cmp	r3, #3
 5643 0022 0ED8     		bhi	.L319
 5644 0024 DFE813F0 		tbh	[pc, r3, lsl #1]
 5645              	.L323:
 5646 0028 0600     		.2byte	(.L326-.L323)/2
 5647 002a 0E00     		.2byte	(.L325-.L323)/2
 5648 002c C600     		.2byte	(.L324-.L323)/2
 5649 002e D200     		.2byte	(.L322-.L323)/2
 5650              	.LVL383:
 5651              		.p2align 1
 5652              	.L364:
 420:quantum/rgb_matrix/rgb_matrix.c **** 
 5653              		.loc 23 420 13 is_stmt 0 view .LVU1353
 5654 0030 0024     		movs	r4, #0
 5655 0032 F3E7     		b	.L320
 5656              	.LVL384:
 5657              	.L326:
 424:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5658              		.loc 23 424 13 is_stmt 1 view .LVU1354
 5659              	.LBB372:
 5660              	.LBI372:
 323:quantum/rgb_matrix/rgb_matrix.c ****     // reset iter
 5661              		.loc 23 323 13 view .LVU1355
 5662              	.LBB373:
 325:quantum/rgb_matrix/rgb_matrix.c **** 
 5663              		.loc 23 325 5 view .LVU1356
 325:quantum/rgb_matrix/rgb_matrix.c **** 
 5664              		.loc 23 325 28 is_stmt 0 view .LVU1357
 5665 0034 714B     		ldr	r3, .L377+16
 5666 0036 0022     		movs	r2, #0
 5667 0038 1A70     		strb	r2, [r3]
 328:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 5668              		.loc 23 328 5 is_stmt 1 view .LVU1358
 328:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 5669              		.loc 23 328 17 is_stmt 0 view .LVU1359
 5670 003a 714B     		ldr	r3, .L377+20
 5671 003c 1860     		str	r0, [r3]
 334:quantum/rgb_matrix/rgb_matrix.c **** }
 5672              		.loc 23 334 5 is_stmt 1 view .LVU1360
 334:quantum/rgb_matrix/rgb_matrix.c **** }
 5673              		.loc 23 334 20 is_stmt 0 view .LVU1361
 5674 003e 0123     		movs	r3, #1
 5675              	.LVL385:
 5676              	.L376:
 334:quantum/rgb_matrix/rgb_matrix.c **** }
 5677              		.loc 23 334 20 view .LVU1362
 5678              	.LBE373:
 5679              	.LBE372:
 5680              	.LBB374:
 5681              	.LBB375:
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 5682              		.loc 23 392 28 view .LVU1363
 5683 0040 3370     		strb	r3, [r6]
 5684              	.LBE375:
 5685              	.LBE374:
 428:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 5686              		.loc 23 428 13 is_stmt 1 view .LVU1364
 5687              	.LVL386:
 5688              	.L319:
 440:quantum/rgb_matrix/rgb_matrix.c **** 
 5689              		.loc 23 440 1 is_stmt 0 view .LVU1365
 5690 0042 70BD     		pop	{r4, r5, r6, pc}
 5691              	.LVL387:
 5692              	.L325:
 427:quantum/rgb_matrix/rgb_matrix.c ****             if (effect) {
 5693              		.loc 23 427 13 is_stmt 1 view .LVU1366
 5694              	.LBB381:
 5695              	.LBI374:
 337:quantum/rgb_matrix/rgb_matrix.c ****     bool rendering         = false;
 5696              		.loc 23 337 13 view .LVU1367
 5697              	.LBB378:
 338:quantum/rgb_matrix/rgb_matrix.c ****     rgb_effect_params.init = (effect != rgb_last_effect) || (rgb_matrix_config.enable != rgb_last_e
 5698              		.loc 23 338 5 view .LVU1368
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5699              		.loc 23 339 5 view .LVU1369
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5700              		.loc 23 339 38 is_stmt 0 view .LVU1370
 5701 0044 6F4B     		ldr	r3, .L377+24
 5702 0046 6B4A     		ldr	r2, .L377+8
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5703              		.loc 23 339 58 view .LVU1371
 5704 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5705 004a A342     		cmp	r3, r4
 5706 004c 25D1     		bne	.L365
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5707              		.loc 23 339 87 view .LVU1372
 5708 004e 6E49     		ldr	r1, .L377+28
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5709              		.loc 23 339 79 view .LVU1373
 5710 0050 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5711              		.loc 23 339 87 view .LVU1374
 5712 0052 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5713              		.loc 23 339 79 view .LVU1375
 5714 0054 03F00303 		and	r3, r3, #3
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5715              		.loc 23 339 58 view .LVU1376
 5716 0058 5B1A     		subs	r3, r3, r1
 5717 005a 18BF     		it	ne
 5718 005c 0123     		movne	r3, #1
 5719              	.L327:
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5720              		.loc 23 339 28 view .LVU1377
 5721 005e 674D     		ldr	r5, .L377+16
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5722              		.loc 23 339 58 view .LVU1378
 5723 0060 AB70     		strb	r3, [r5, #2]
 340:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 5724              		.loc 23 340 5 is_stmt 1 view .LVU1379
 340:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 5725              		.loc 23 340 53 is_stmt 0 view .LVU1380
 5726 0062 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 340:quantum/rgb_matrix/rgb_matrix.c ****         rgb_effect_params.flags = rgb_matrix_config.flags;
 5727              		.loc 23 340 8 view .LVU1381
 5728 0064 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 5729 0066 9A42     		cmp	r2, r3
 5730 0068 05D0     		beq	.L328
 341:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);
 5731              		.loc 23 341 9 is_stmt 1 view .LVU1382
 342:quantum/rgb_matrix/rgb_matrix.c ****     }
 5732              		.loc 23 342 9 is_stmt 0 view .LVU1383
 5733 006a 0022     		movs	r2, #0
 5734 006c 1146     		mov	r1, r2
 5735 006e 1046     		mov	r0, r2
 341:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);
 5736              		.loc 23 341 33 view .LVU1384
 5737 0070 6B70     		strb	r3, [r5, #1]
 342:quantum/rgb_matrix/rgb_matrix.c ****     }
 5738              		.loc 23 342 9 is_stmt 1 view .LVU1385
 5739 0072 FFF7FEFF 		bl	rgb_matrix_set_color_all
 5740              	.LVL388:
 5741              	.L328:
 347:quantum/rgb_matrix/rgb_matrix.c ****         case RGB_MATRIX_NONE:
 5742              		.loc 23 347 5 view .LVU1386
 5743 0076 1B2C     		cmp	r4, #27
 5744 0078 18D8     		bhi	.L366
 5745 007a DFE804F0 		tbb	[pc, r4]
 5746              	.L331:
 5747 007e 10       		.byte	(.L358-.L331)/2
 5748 007f 19       		.byte	(.L357-.L331)/2
 5749 0080 2F       		.byte	(.L356-.L331)/2
 5750 0081 33       		.byte	(.L355-.L331)/2
 5751 0082 37       		.byte	(.L354-.L331)/2
 5752 0083 3B       		.byte	(.L353-.L331)/2
 5753 0084 3F       		.byte	(.L352-.L331)/2
 5754 0085 43       		.byte	(.L351-.L331)/2
 5755 0086 47       		.byte	(.L350-.L331)/2
 5756 0087 4B       		.byte	(.L349-.L331)/2
 5757 0088 4F       		.byte	(.L348-.L331)/2
 5758 0089 53       		.byte	(.L347-.L331)/2
 5759 008a 57       		.byte	(.L346-.L331)/2
 5760 008b 5B       		.byte	(.L345-.L331)/2
 5761 008c 5F       		.byte	(.L344-.L331)/2
 5762 008d 63       		.byte	(.L343-.L331)/2
 5763 008e 67       		.byte	(.L342-.L331)/2
 5764 008f 6B       		.byte	(.L341-.L331)/2
 5765 0090 6F       		.byte	(.L340-.L331)/2
 5766 0091 73       		.byte	(.L339-.L331)/2
 5767 0092 77       		.byte	(.L338-.L331)/2
 5768 0093 7B       		.byte	(.L337-.L331)/2
 5769 0094 7F       		.byte	(.L336-.L331)/2
 5770 0095 83       		.byte	(.L335-.L331)/2
 5771 0096 87       		.byte	(.L334-.L331)/2
 5772 0097 8B       		.byte	(.L333-.L331)/2
 5773 0098 8F       		.byte	(.L332-.L331)/2
 5774 0099 93       		.byte	(.L330-.L331)/2
 5775              	.LVL389:
 5776              		.p2align 1
 5777              	.L365:
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5778              		.loc 23 339 58 is_stmt 0 view .LVU1387
 5779 009a 0123     		movs	r3, #1
 5780 009c DFE7     		b	.L327
 5781              	.LVL390:
 5782              	.L358:
 349:quantum/rgb_matrix/rgb_matrix.c ****             break;
 5783              		.loc 23 349 13 is_stmt 1 view .LVU1388
 5784              	.LBB376:
 5785              	.LBI376:
 277:quantum/rgb_matrix/rgb_matrix.c ****     if (!params->init) {
 5786              		.loc 23 277 13 view .LVU1389
 5787              	.LBB377:
 278:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 5788              		.loc 23 278 5 view .LVU1390
 278:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 5789              		.loc 23 278 16 is_stmt 0 view .LVU1391
 5790 009e A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 278:quantum/rgb_matrix/rgb_matrix.c ****         return false;
 5791              		.loc 23 278 8 view .LVU1392
 5792 00a0 48B1     		cbz	r0, .L329
 282:quantum/rgb_matrix/rgb_matrix.c ****     return false;
 5793              		.loc 23 282 5 is_stmt 1 view .LVU1393
 5794 00a2 0022     		movs	r2, #0
 5795 00a4 1146     		mov	r1, r2
 5796 00a6 1046     		mov	r0, r2
 5797 00a8 FFF7FEFF 		bl	rgb_matrix_set_color_all
 5798              	.LVL391:
 283:quantum/rgb_matrix/rgb_matrix.c **** }
 5799              		.loc 23 283 5 view .LVU1394
 5800              	.L366:
 283:quantum/rgb_matrix/rgb_matrix.c **** }
 5801              		.loc 23 283 5 is_stmt 0 view .LVU1395
 5802              	.LBE377:
 5803              	.LBE376:
 339:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_effect_params.flags != rgb_matrix_config.flags) {
 5804              		.loc 23 339 58 view .LVU1396
 5805 00ac 0020     		movs	r0, #0
 5806 00ae 02E0     		b	.L329
 5807              	.L357:
   1:quantum/rgb_matrix/animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5808              		.loc 28 1 1 is_stmt 1 view .LVU1397
 5809 00b0 5248     		ldr	r0, .L377+16
 5810 00b2 FFF7FEFF 		bl	SOLID_COLOR
 5811              	.LVL392:
   1:quantum/rgb_matrix/animations/solid_color_anim.h **** #ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5812              		.loc 28 1 1 view .LVU1398
 5813              	.L329:
 385:quantum/rgb_matrix/rgb_matrix.c **** 
 5814              		.loc 23 385 5 view .LVU1399
 385:quantum/rgb_matrix/rgb_matrix.c **** 
 5815              		.loc 23 385 27 is_stmt 0 view .LVU1400
 5816 00b6 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5817 00b8 0133     		adds	r3, r3, #1
 5818 00ba 2B70     		strb	r3, [r5]
 388:quantum/rgb_matrix/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 5819              		.loc 23 388 5 is_stmt 1 view .LVU1401
 388:quantum/rgb_matrix/rgb_matrix.c ****         rgb_task_state = FLUSHING;
 5820              		.loc 23 388 8 is_stmt 0 view .LVU1402
 5821 00bc 0028     		cmp	r0, #0
 5822 00be 75D1     		bne	.L359
 5823              	.LVL393:
 389:quantum/rgb_matrix/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 5824              		.loc 23 389 9 is_stmt 1 view .LVU1403
 389:quantum/rgb_matrix/rgb_matrix.c ****         if (!rgb_effect_params.init && effect == RGB_MATRIX_NONE) {
 5825              		.loc 23 389 24 is_stmt 0 view .LVU1404
 5826 00c0 0223     		movs	r3, #2
 5827 00c2 3370     		strb	r3, [r6]
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5828              		.loc 23 390 9 is_stmt 1 view .LVU1405
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5829              		.loc 23 390 12 is_stmt 0 view .LVU1406
 5830 00c4 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 5831 00c6 002B     		cmp	r3, #0
 5832 00c8 70D1     		bne	.L359
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5833              		.loc 23 390 37 view .LVU1407
 5834 00ca 002C     		cmp	r4, #0
 5835 00cc 7CD0     		beq	.L360
 5836              	.LVL394:
 5837              	.L361:
 390:quantum/rgb_matrix/rgb_matrix.c ****             // We only need to flush once if we are RGB_MATRIX_NONE
 5838              		.loc 23 390 37 view .LVU1408
 5839              	.LBE378:
 5840              	.LBE381:
 429:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators_advanced(&rgb_effect_params);
 5841              		.loc 23 429 17 is_stmt 1 view .LVU1409
 5842 00ce FFF7FEFF 		bl	rgb_matrix_indicators
 5843              	.LVL395:
 430:quantum/rgb_matrix/rgb_matrix.c ****             }
 5844              		.loc 23 430 17 view .LVU1410
 440:quantum/rgb_matrix/rgb_matrix.c **** 
 5845              		.loc 23 440 1 is_stmt 0 view .LVU1411
 5846 00d2 BDE87040 		pop	{r4, r5, r6, lr}
 5847              		.cfi_remember_state
 5848              		.cfi_restore 14
 5849              		.cfi_restore 6
 5850              		.cfi_restore 5
 5851              		.cfi_restore 4
 5852              		.cfi_def_cfa_offset 0
 5853              	.LVL396:
 430:quantum/rgb_matrix/rgb_matrix.c ****             }
 5854              		.loc 23 430 17 view .LVU1412
 5855 00d6 4948     		ldr	r0, .L377+16
 5856 00d8 FFF7FEBF 		b	rgb_matrix_indicators_advanced
 5857              	.LVL397:
 5858              	.L356:
 5859              		.cfi_restore_state
 5860              	.LBB382:
 5861              	.LBB379:
   2:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5862              		.loc 29 2 1 is_stmt 1 view .LVU1413
 5863 00dc 4748     		ldr	r0, .L377+16
 5864 00de FFF7FEFF 		bl	ALPHAS_MODS
 5865              	.LVL398:
   2:quantum/rgb_matrix/animations/alpha_mods_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5866              		.loc 29 2 1 view .LVU1414
 5867 00e2 E8E7     		b	.L329
 5868              	.LVL399:
 5869              	.L355:
   2:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5870              		.loc 30 2 1 view .LVU1415
 5871 00e4 4548     		ldr	r0, .L377+16
 5872 00e6 FFF7FEFF 		bl	GRADIENT_UP_DOWN
 5873              	.LVL400:
   2:quantum/rgb_matrix/animations/gradient_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5874              		.loc 30 2 1 view .LVU1416
 5875 00ea E4E7     		b	.L329
 5876              	.LVL401:
 5877              	.L354:
   2:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5878              		.loc 31 2 1 view .LVU1417
 5879 00ec 4348     		ldr	r0, .L377+16
 5880 00ee FFF7FEFF 		bl	GRADIENT_LEFT_RIGHT
 5881              	.LVL402:
   2:quantum/rgb_matrix/animations/gradient_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5882              		.loc 31 2 1 view .LVU1418
 5883 00f2 E0E7     		b	.L329
 5884              	.LVL403:
 5885              	.L353:
   2:quantum/rgb_matrix/animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5886              		.loc 32 2 1 view .LVU1419
 5887 00f4 4148     		ldr	r0, .L377+16
 5888 00f6 FFF7FEFF 		bl	BREATHING
 5889              	.LVL404:
   2:quantum/rgb_matrix/animations/breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5890              		.loc 32 2 1 view .LVU1420
 5891 00fa DCE7     		b	.L329
 5892              	.LVL405:
 5893              	.L352:
   2:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5894              		.loc 3 2 1 view .LVU1421
 5895 00fc 3F48     		ldr	r0, .L377+16
 5896 00fe FFF7FEFF 		bl	BAND_SAT
 5897              	.LVL406:
   2:quantum/rgb_matrix/animations/colorband_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5898              		.loc 3 2 1 view .LVU1422
 5899 0102 D8E7     		b	.L329
 5900              	.LVL407:
 5901              	.L351:
   2:quantum/rgb_matrix/animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5902              		.loc 5 2 1 view .LVU1423
 5903 0104 3D48     		ldr	r0, .L377+16
 5904 0106 FFF7FEFF 		bl	BAND_VAL
 5905              	.LVL408:
   2:quantum/rgb_matrix/animations/colorband_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5906              		.loc 5 2 1 view .LVU1424
 5907 010a D4E7     		b	.L329
 5908              	.LVL409:
 5909              	.L350:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5910              		.loc 17 2 1 view .LVU1425
 5911 010c 3B48     		ldr	r0, .L377+16
 5912 010e FFF7FEFF 		bl	BAND_PINWHEEL_SAT
 5913              	.LVL410:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5914              		.loc 17 2 1 view .LVU1426
 5915 0112 D0E7     		b	.L329
 5916              	.LVL411:
 5917              	.L349:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5918              		.loc 18 2 1 view .LVU1427
 5919 0114 3948     		ldr	r0, .L377+16
 5920 0116 FFF7FEFF 		bl	BAND_PINWHEEL_VAL
 5921              	.LVL412:
   2:quantum/rgb_matrix/animations/colorband_pinwheel_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5922              		.loc 18 2 1 view .LVU1428
 5923 011a CCE7     		b	.L329
 5924              	.LVL413:
 5925              	.L348:
   2:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5926              		.loc 19 2 1 view .LVU1429
 5927 011c 3748     		ldr	r0, .L377+16
 5928 011e FFF7FEFF 		bl	BAND_SPIRAL_SAT
 5929              	.LVL414:
   2:quantum/rgb_matrix/animations/colorband_spiral_sat_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5930              		.loc 19 2 1 view .LVU1430
 5931 0122 C8E7     		b	.L329
 5932              	.LVL415:
 5933              	.L347:
   2:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5934              		.loc 20 2 1 view .LVU1431
 5935 0124 3548     		ldr	r0, .L377+16
 5936 0126 FFF7FEFF 		bl	BAND_SPIRAL_VAL
 5937              	.LVL416:
   2:quantum/rgb_matrix/animations/colorband_spiral_val_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5938              		.loc 20 2 1 view .LVU1432
 5939 012a C4E7     		b	.L329
 5940              	.LVL417:
 5941              	.L346:
   2:quantum/rgb_matrix/animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5942              		.loc 6 2 1 view .LVU1433
 5943 012c 3348     		ldr	r0, .L377+16
 5944 012e FFF7FEFF 		bl	CYCLE_ALL
 5945              	.LVL418:
   2:quantum/rgb_matrix/animations/cycle_all_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5946              		.loc 6 2 1 view .LVU1434
 5947 0132 C0E7     		b	.L329
 5948              	.LVL419:
 5949              	.L345:
   2:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5950              		.loc 7 2 1 view .LVU1435
 5951 0134 3148     		ldr	r0, .L377+16
 5952 0136 FFF7FEFF 		bl	CYCLE_LEFT_RIGHT
 5953              	.LVL420:
   2:quantum/rgb_matrix/animations/cycle_left_right_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5954              		.loc 7 2 1 view .LVU1436
 5955 013a BCE7     		b	.L329
 5956              	.LVL421:
 5957              	.L344:
   2:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5958              		.loc 8 2 1 view .LVU1437
 5959 013c 2F48     		ldr	r0, .L377+16
 5960 013e FFF7FEFF 		bl	CYCLE_UP_DOWN
 5961              	.LVL422:
   2:quantum/rgb_matrix/animations/cycle_up_down_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5962              		.loc 8 2 1 view .LVU1438
 5963 0142 B8E7     		b	.L329
 5964              	.LVL423:
 5965              	.L343:
   2:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5966              		.loc 9 2 1 view .LVU1439
 5967 0144 2D48     		ldr	r0, .L377+16
 5968 0146 FFF7FEFF 		bl	RAINBOW_MOVING_CHEVRON
 5969              	.LVL424:
   2:quantum/rgb_matrix/animations/rainbow_moving_chevron_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5970              		.loc 9 2 1 view .LVU1440
 5971 014a B4E7     		b	.L329
 5972              	.LVL425:
 5973              	.L342:
   2:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5974              		.loc 10 2 1 view .LVU1441
 5975 014c 2B48     		ldr	r0, .L377+16
 5976 014e FFF7FEFF 		bl	CYCLE_OUT_IN
 5977              	.LVL426:
   2:quantum/rgb_matrix/animations/cycle_out_in_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5978              		.loc 10 2 1 view .LVU1442
 5979 0152 B0E7     		b	.L329
 5980              	.LVL427:
 5981              	.L341:
   2:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5982              		.loc 11 2 1 view .LVU1443
 5983 0154 2948     		ldr	r0, .L377+16
 5984 0156 FFF7FEFF 		bl	CYCLE_OUT_IN_DUAL
 5985              	.LVL428:
   2:quantum/rgb_matrix/animations/cycle_out_in_dual_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5986              		.loc 11 2 1 view .LVU1444
 5987 015a ACE7     		b	.L329
 5988              	.LVL429:
 5989              	.L340:
   2:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5990              		.loc 21 2 1 view .LVU1445
 5991 015c 2748     		ldr	r0, .L377+16
 5992 015e FFF7FEFF 		bl	CYCLE_PINWHEEL
 5993              	.LVL430:
   2:quantum/rgb_matrix/animations/cycle_pinwheel_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5994              		.loc 21 2 1 view .LVU1446
 5995 0162 A8E7     		b	.L329
 5996              	.LVL431:
 5997              	.L339:
   2:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 5998              		.loc 22 2 1 view .LVU1447
 5999 0164 2548     		ldr	r0, .L377+16
 6000 0166 FFF7FEFF 		bl	CYCLE_SPIRAL
 6001              	.LVL432:
   2:quantum/rgb_matrix/animations/cycle_spiral_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6002              		.loc 22 2 1 view .LVU1448
 6003 016a A4E7     		b	.L329
 6004              	.LVL433:
 6005              	.L338:
   2:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6006              		.loc 12 2 1 view .LVU1449
 6007 016c 2348     		ldr	r0, .L377+16
 6008 016e FFF7FEFF 		bl	DUAL_BEACON
 6009              	.LVL434:
   2:quantum/rgb_matrix/animations/dual_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6010              		.loc 12 2 1 view .LVU1450
 6011 0172 A0E7     		b	.L329
 6012              	.LVL435:
 6013              	.L337:
   2:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6014              		.loc 13 2 1 view .LVU1451
 6015 0174 2148     		ldr	r0, .L377+16
 6016 0176 FFF7FEFF 		bl	RAINBOW_BEACON
 6017              	.LVL436:
   2:quantum/rgb_matrix/animations/rainbow_beacon_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6018              		.loc 13 2 1 view .LVU1452
 6019 017a 9CE7     		b	.L329
 6020              	.LVL437:
 6021              	.L336:
   2:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6022              		.loc 14 2 1 view .LVU1453
 6023 017c 1F48     		ldr	r0, .L377+16
 6024 017e FFF7FEFF 		bl	RAINBOW_PINWHEELS
 6025              	.LVL438:
   2:quantum/rgb_matrix/animations/rainbow_pinwheels_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6026              		.loc 14 2 1 view .LVU1454
 6027 0182 98E7     		b	.L329
 6028              	.LVL439:
 6029              	.L335:
   2:quantum/rgb_matrix/animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6030              		.loc 33 2 1 view .LVU1455
 6031 0184 1D48     		ldr	r0, .L377+16
 6032 0186 FFF7FEFF 		bl	RAINDROPS
 6033              	.LVL440:
   2:quantum/rgb_matrix/animations/raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6034              		.loc 33 2 1 view .LVU1456
 6035 018a 94E7     		b	.L329
 6036              	.LVL441:
 6037              	.L334:
   2:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6038              		.loc 34 2 1 view .LVU1457
 6039 018c 1B48     		ldr	r0, .L377+16
 6040 018e FFF7FEFF 		bl	JELLYBEAN_RAINDROPS
 6041              	.LVL442:
   2:quantum/rgb_matrix/animations/jellybean_raindrops_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6042              		.loc 34 2 1 view .LVU1458
 6043 0192 90E7     		b	.L329
 6044              	.LVL443:
 6045              	.L333:
   2:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6046              		.loc 35 2 1 view .LVU1459
 6047 0194 1948     		ldr	r0, .L377+16
 6048 0196 FFF7FEFF 		bl	HUE_BREATHING
 6049              	.LVL444:
   2:quantum/rgb_matrix/animations/hue_breathing_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6050              		.loc 35 2 1 view .LVU1460
 6051 019a 8CE7     		b	.L329
 6052              	.LVL445:
 6053              	.L332:
   2:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6054              		.loc 15 2 1 view .LVU1461
 6055 019c 1748     		ldr	r0, .L377+16
 6056 019e FFF7FEFF 		bl	HUE_PENDULUM
 6057              	.LVL446:
   2:quantum/rgb_matrix/animations/hue_pendulum_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6058              		.loc 15 2 1 view .LVU1462
 6059 01a2 88E7     		b	.L329
 6060              	.LVL447:
 6061              	.L330:
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6062              		.loc 16 2 1 view .LVU1463
 6063 01a4 1548     		ldr	r0, .L377+16
 6064 01a6 FFF7FEFF 		bl	HUE_WAVE
 6065              	.LVL448:
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6066              		.loc 16 2 1 view .LVU1464
 6067 01aa 84E7     		b	.L329
 6068              	.LVL449:
 6069              	.L359:
   2:quantum/rgb_matrix/animations/hue_wave_anim.h **** #    ifdef RGB_MATRIX_CUSTOM_EFFECT_IMPLS
 6070              		.loc 16 2 1 is_stmt 0 view .LVU1465
 6071              	.LBE379:
 6072              	.LBE382:
 428:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 6073              		.loc 23 428 13 is_stmt 1 view .LVU1466
 428:quantum/rgb_matrix/rgb_matrix.c ****                 rgb_matrix_indicators();
 6074              		.loc 23 428 16 is_stmt 0 view .LVU1467
 6075 01ac 002C     		cmp	r4, #0
 6076 01ae 3FF448AF 		beq	.L319
 6077 01b2 8CE7     		b	.L361
 6078              	.LVL450:
 6079              	.L324:
 434:quantum/rgb_matrix/rgb_matrix.c ****             break;
 6080              		.loc 23 434 13 is_stmt 1 view .LVU1468
 6081              	.LBB383:
 6082              	.LBI383:
 397:quantum/rgb_matrix/rgb_matrix.c ****     // update last trackers after the first full render so we can init over several frames
 6083              		.loc 23 397 13 view .LVU1469
 6084              	.LBB384:
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 6085              		.loc 23 399 5 view .LVU1470
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 6086              		.loc 23 399 21 is_stmt 0 view .LVU1471
 6087 01b4 134B     		ldr	r3, .L377+24
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 6088              		.loc 23 400 21 view .LVU1472
 6089 01b6 144A     		ldr	r2, .L377+28
 399:quantum/rgb_matrix/rgb_matrix.c ****     rgb_last_enable = rgb_matrix_config.enable;
 6090              		.loc 23 399 21 view .LVU1473
 6091 01b8 1C70     		strb	r4, [r3]
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 6092              		.loc 23 400 5 is_stmt 1 view .LVU1474
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 6093              		.loc 23 400 40 is_stmt 0 view .LVU1475
 6094 01ba 0E4B     		ldr	r3, .L377+8
 6095 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6096 01be C3F30103 		ubfx	r3, r3, #0, #2
 400:quantum/rgb_matrix/rgb_matrix.c **** 
 6097              		.loc 23 400 21 view .LVU1476
 6098 01c2 1370     		strb	r3, [r2]
 403:quantum/rgb_matrix/rgb_matrix.c **** 
 6099              		.loc 23 403 5 is_stmt 1 view .LVU1477
 6100 01c4 FFF7FEFF 		bl	rgb_matrix_update_pwm_buffers
 6101              	.LVL451:
 406:quantum/rgb_matrix/rgb_matrix.c **** }
 6102              		.loc 23 406 5 view .LVU1478
 6103              	.L360:
 406:quantum/rgb_matrix/rgb_matrix.c **** }
 6104              		.loc 23 406 5 is_stmt 0 view .LVU1479
 6105              	.LBE384:
 6106              	.LBE383:
 6107              	.LBB385:
 6108              	.LBB380:
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 6109              		.loc 23 392 13 is_stmt 1 view .LVU1480
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 6110              		.loc 23 392 28 is_stmt 0 view .LVU1481
 6111 01c8 0323     		movs	r3, #3
 6112 01ca 39E7     		b	.L376
 6113              	.LVL452:
 6114              	.L322:
 392:quantum/rgb_matrix/rgb_matrix.c ****         }
 6115              		.loc 23 392 28 view .LVU1482
 6116              	.LBE380:
 6117              	.LBE385:
 437:quantum/rgb_matrix/rgb_matrix.c ****             break;
 6118              		.loc 23 437 13 is_stmt 1 view .LVU1483
 6119              	.LBB386:
 6120              	.LBI386:
 316:quantum/rgb_matrix/rgb_matrix.c ****     // next task
 6121              		.loc 23 316 13 view .LVU1484
 6122              	.LBB387:
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 6123              		.loc 23 318 5 view .LVU1485
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 6124              		.loc 23 318 9 is_stmt 0 view .LVU1486
 6125 01cc 0F4D     		ldr	r5, .L377+32
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 6126              		.loc 23 318 8 view .LVU1487
 6127 01ce 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6128 01d0 0BB1     		cbz	r3, .L362
 318:quantum/rgb_matrix/rgb_matrix.c ****     rgb_update_eeprom = false;
 6129              		.loc 23 318 28 is_stmt 1 view .LVU1488
 6130 01d2 FFF7FEFF 		bl	eeconfig_update_rgb_matrix
 6131              	.LVL453:
 6132              	.L362:
 319:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 6133              		.loc 23 319 5 view .LVU1489
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 6134              		.loc 23 320 9 is_stmt 0 view .LVU1490
 6135 01d6 0A4B     		ldr	r3, .L377+20
 319:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 6136              		.loc 23 319 23 view .LVU1491
 6137 01d8 0024     		movs	r4, #0
 6138              	.LVL454:
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 6139              		.loc 23 320 9 view .LVU1492
 6140 01da 1868     		ldr	r0, [r3]
 319:quantum/rgb_matrix/rgb_matrix.c ****     if (sync_timer_elapsed32(g_rgb_timer) >= RGB_MATRIX_LED_FLUSH_LIMIT) rgb_task_state = STARTING;
 6141              		.loc 23 319 23 view .LVU1493
 6142 01dc 2C70     		strb	r4, [r5]
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 6143              		.loc 23 320 5 is_stmt 1 view .LVU1494
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 6144              		.loc 23 320 9 is_stmt 0 view .LVU1495
 6145 01de FFF7FEFF 		bl	timer_elapsed32
 6146              	.LVL455:
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 6147              		.loc 23 320 8 view .LVU1496
 6148 01e2 0F28     		cmp	r0, #15
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 6149              		.loc 23 320 74 is_stmt 1 view .LVU1497
 320:quantum/rgb_matrix/rgb_matrix.c **** }
 6150              		.loc 23 320 89 is_stmt 0 view .LVU1498
 6151 01e4 88BF     		it	hi
 6152 01e6 3470     		strbhi	r4, [r6]
 6153              	.LBE387:
 6154              	.LBE386:
 440:quantum/rgb_matrix/rgb_matrix.c **** 
 6155              		.loc 23 440 1 view .LVU1499
 6156 01e8 2BE7     		b	.L319
 6157              	.L378:
 6158 01ea 00BF     		.align	2
 6159              	.L377:
 6160 01ec 00000000 		.word	.LANCHOR2
 6161 01f0 00000000 		.word	.LANCHOR3
 6162 01f4 00000000 		.word	rgb_matrix_config
 6163 01f8 00000000 		.word	.LANCHOR4
 6164 01fc 00000000 		.word	.LANCHOR5
 6165 0200 00000000 		.word	g_rgb_timer
 6166 0204 00000000 		.word	.LANCHOR6
 6167 0208 00000000 		.word	.LANCHOR7
 6168 020c 00000000 		.word	.LANCHOR8
 6169              		.cfi_endproc
 6170              	.LFE433:
 6172              		.section	.rodata.rgb_matrix_init.str1.1,"aMS",%progbits,1
 6173              	.LC10:
 6174 0000 7267625F 		.ascii	"rgb_matrix_init_drivers eeconfig is not enabled.\012"
 6174      6D617472 
 6174      69785F69 
 6174      6E69745F 
 6174      64726976 
 6175 0031 00       		.ascii	"\000"
 6176              	.LC11:
 6177 0032 7267625F 		.ascii	"rgb_matrix_init_drivers rgb_matrix_config.mode = 0."
 6177      6D617472 
 6177      69785F69 
 6177      6E69745F 
 6177      64726976 
 6178 0065 20577269 		.ascii	" Write default values to EEPROM.\012\000"
 6178      74652064 
 6178      65666175 
 6178      6C742076 
 6178      616C7565 
 6179              		.section	.text.rgb_matrix_init,"ax",%progbits
 6180              		.align	1
 6181              		.global	rgb_matrix_init
 6182              		.syntax unified
 6183              		.thumb
 6184              		.thumb_func
 6185              		.fpu fpv4-sp-d16
 6187              	rgb_matrix_init:
 6188              	.LFB440:
 470:quantum/rgb_matrix/rgb_matrix.c **** 
 471:quantum/rgb_matrix/rgb_matrix.c **** __attribute__((weak)) void rgb_matrix_indicators_advanced_user(uint8_t led_min, uint8_t led_max) {}
 472:quantum/rgb_matrix/rgb_matrix.c **** 
 473:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_init(void) {
 6189              		.loc 23 473 28 is_stmt 1 view -0
 6190              		.cfi_startproc
 6191              		@ args = 0, pretend = 0, frame = 0
 6192              		@ frame_needed = 0, uses_anonymous_args = 0
 474:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_driver.init();
 6193              		.loc 23 474 5 view .LVU1501
 473:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_driver.init();
 6194              		.loc 23 473 28 is_stmt 0 view .LVU1502
 6195 0000 08B5     		push	{r3, lr}
 6196              		.cfi_def_cfa_offset 8
 6197              		.cfi_offset 3, -8
 6198              		.cfi_offset 14, -4
 6199              		.loc 23 474 22 view .LVU1503
 6200 0002 124B     		ldr	r3, .L390
 6201              		.loc 23 474 5 view .LVU1504
 6202 0004 1B68     		ldr	r3, [r3]
 6203 0006 9847     		blx	r3
 6204              	.LVL456:
 475:quantum/rgb_matrix/rgb_matrix.c **** 
 476:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_MATRIX_KEYREACTIVE_ENABLED
 477:quantum/rgb_matrix/rgb_matrix.c ****     g_last_hit_tracker.count = 0;
 478:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 479:quantum/rgb_matrix/rgb_matrix.c ****         g_last_hit_tracker.tick[i] = UINT16_MAX;
 480:quantum/rgb_matrix/rgb_matrix.c ****     }
 481:quantum/rgb_matrix/rgb_matrix.c **** 
 482:quantum/rgb_matrix/rgb_matrix.c ****     last_hit_buffer.count = 0;
 483:quantum/rgb_matrix/rgb_matrix.c ****     for (uint8_t i = 0; i < LED_HITS_TO_REMEMBER; ++i) {
 484:quantum/rgb_matrix/rgb_matrix.c ****         last_hit_buffer.tick[i] = UINT16_MAX;
 485:quantum/rgb_matrix/rgb_matrix.c ****     }
 486:quantum/rgb_matrix/rgb_matrix.c **** #endif  // RGB_MATRIX_KEYREACTIVE_ENABLED
 487:quantum/rgb_matrix/rgb_matrix.c **** 
 488:quantum/rgb_matrix/rgb_matrix.c ****     if (!eeconfig_is_enabled()) {
 6205              		.loc 23 488 5 is_stmt 1 view .LVU1505
 6206              		.loc 23 488 10 is_stmt 0 view .LVU1506
 6207 0008 FFF7FEFF 		bl	eeconfig_is_enabled
 6208              	.LVL457:
 6209              		.loc 23 488 8 view .LVU1507
 6210 000c 50B9     		cbnz	r0, .L380
 489:quantum/rgb_matrix/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers eeconfig is not enabled.\n");
 6211              		.loc 23 489 9 is_stmt 1 view .LVU1508
 6212              		.loc 23 489 9 view .LVU1509
 6213 000e 104B     		ldr	r3, .L390+4
 6214 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6215 0012 DA07     		lsls	r2, r3, #31
 6216 0014 02D5     		bpl	.L381
 6217              		.loc 23 489 9 discriminator 1 view .LVU1510
 6218 0016 0F48     		ldr	r0, .L390+8
 6219 0018 FFF7FEFF 		bl	printf_
 6220              	.LVL458:
 6221              	.L381:
 6222              		.loc 23 489 9 discriminator 3 view .LVU1511
 490:quantum/rgb_matrix/rgb_matrix.c ****         eeconfig_init();
 6223              		.loc 23 490 9 discriminator 3 view .LVU1512
 6224 001c FFF7FEFF 		bl	eeconfig_init
 6225              	.LVL459:
 491:quantum/rgb_matrix/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 6226              		.loc 23 491 9 discriminator 3 view .LVU1513
 6227 0020 FFF7FEFF 		bl	eeconfig_update_rgb_matrix_default
 6228              	.LVL460:
 6229              	.L380:
 492:quantum/rgb_matrix/rgb_matrix.c ****     }
 493:quantum/rgb_matrix/rgb_matrix.c **** 
 494:quantum/rgb_matrix/rgb_matrix.c ****     eeconfig_read_rgb_matrix();
 6230              		.loc 23 494 5 view .LVU1514
 6231 0024 FFF7FEFF 		bl	eeconfig_read_rgb_matrix
 6232              	.LVL461:
 495:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.mode) {
 6233              		.loc 23 495 5 view .LVU1515
 6234              		.loc 23 495 9 is_stmt 0 view .LVU1516
 6235 0028 0B4B     		ldr	r3, .L390+12
 6236 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6237              		.loc 23 495 8 view .LVU1517
 6238 002c 13F0FC0F 		tst	r3, #252
 6239 0030 08D1     		bne	.L382
 496:quantum/rgb_matrix/rgb_matrix.c ****         dprintf("rgb_matrix_init_drivers rgb_matrix_config.mode = 0. Write default values to EEPROM
 6240              		.loc 23 496 9 is_stmt 1 view .LVU1518
 6241              		.loc 23 496 9 view .LVU1519
 6242 0032 074B     		ldr	r3, .L390+4
 6243 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6244 0036 DB07     		lsls	r3, r3, #31
 6245 0038 02D5     		bpl	.L383
 6246              		.loc 23 496 9 discriminator 1 view .LVU1520
 6247 003a 0848     		ldr	r0, .L390+16
 6248 003c FFF7FEFF 		bl	printf_
 6249              	.LVL462:
 6250              	.L383:
 6251              		.loc 23 496 9 discriminator 3 view .LVU1521
 497:quantum/rgb_matrix/rgb_matrix.c ****         eeconfig_update_rgb_matrix_default();
 6252              		.loc 23 497 9 discriminator 3 view .LVU1522
 6253 0040 FFF7FEFF 		bl	eeconfig_update_rgb_matrix_default
 6254              	.LVL463:
 6255              	.L382:
 498:quantum/rgb_matrix/rgb_matrix.c ****     }
 499:quantum/rgb_matrix/rgb_matrix.c ****     eeconfig_debug_rgb_matrix();  // display current eeprom values
 6256              		.loc 23 499 5 view .LVU1523
 500:quantum/rgb_matrix/rgb_matrix.c **** }
 6257              		.loc 23 500 1 is_stmt 0 view .LVU1524
 6258 0044 BDE80840 		pop	{r3, lr}
 6259              		.cfi_restore 14
 6260              		.cfi_restore 3
 6261              		.cfi_def_cfa_offset 0
 499:quantum/rgb_matrix/rgb_matrix.c **** }
 6262              		.loc 23 499 5 view .LVU1525
 6263 0048 FFF7FEBF 		b	eeconfig_debug_rgb_matrix
 6264              	.LVL464:
 6265              	.L391:
 6266              		.align	2
 6267              	.L390:
 6268 004c 00000000 		.word	rgb_matrix_driver
 6269 0050 00000000 		.word	debug_config
 6270 0054 00000000 		.word	.LC10
 6271 0058 00000000 		.word	rgb_matrix_config
 6272 005c 32000000 		.word	.LC11
 6273              		.cfi_endproc
 6274              	.LFE440:
 6276              		.section	.text.rgb_matrix_set_suspend_state,"ax",%progbits
 6277              		.align	1
 6278              		.global	rgb_matrix_set_suspend_state
 6279              		.syntax unified
 6280              		.thumb
 6281              		.thumb_func
 6282              		.fpu fpv4-sp-d16
 6284              	rgb_matrix_set_suspend_state:
 6285              	.LVL465:
 6286              	.LFB441:
 501:quantum/rgb_matrix/rgb_matrix.c **** 
 502:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_suspend_state(bool state) {
 6287              		.loc 23 502 47 is_stmt 1 view -0
 6288              		.cfi_startproc
 6289              		@ args = 0, pretend = 0, frame = 0
 6290              		@ frame_needed = 0, uses_anonymous_args = 0
 503:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_DISABLE_WHEN_USB_SUSPENDED
 504:quantum/rgb_matrix/rgb_matrix.c ****     if (state) {
 6291              		.loc 23 504 5 view .LVU1527
 502:quantum/rgb_matrix/rgb_matrix.c **** #ifdef RGB_DISABLE_WHEN_USB_SUSPENDED
 6292              		.loc 23 502 47 is_stmt 0 view .LVU1528
 6293 0000 10B5     		push	{r4, lr}
 6294              		.cfi_def_cfa_offset 8
 6295              		.cfi_offset 4, -8
 6296              		.cfi_offset 14, -4
 6297              		.loc 23 504 8 view .LVU1529
 6298 0002 0446     		mov	r4, r0
 6299 0004 20B1     		cbz	r0, .L393
 505:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_set_color_all(0, 0, 0);  // turn off all LEDs when suspending
 6300              		.loc 23 505 9 is_stmt 1 view .LVU1530
 6301 0006 0022     		movs	r2, #0
 6302 0008 1146     		mov	r1, r2
 6303 000a 1046     		mov	r0, r2
 6304              	.LVL466:
 6305              		.loc 23 505 9 is_stmt 0 view .LVU1531
 6306 000c FFF7FEFF 		bl	rgb_matrix_set_color_all
 6307              	.LVL467:
 6308              	.L393:
 506:quantum/rgb_matrix/rgb_matrix.c ****     }
 507:quantum/rgb_matrix/rgb_matrix.c ****     suspend_state = state;
 6309              		.loc 23 507 5 is_stmt 1 view .LVU1532
 6310              		.loc 23 507 19 is_stmt 0 view .LVU1533
 6311 0010 014B     		ldr	r3, .L397
 6312 0012 1C70     		strb	r4, [r3]
 508:quantum/rgb_matrix/rgb_matrix.c **** #endif
 509:quantum/rgb_matrix/rgb_matrix.c **** }
 6313              		.loc 23 509 1 view .LVU1534
 6314 0014 10BD     		pop	{r4, pc}
 6315              	.L398:
 6316 0016 00BF     		.align	2
 6317              	.L397:
 6318 0018 00000000 		.word	.LANCHOR3
 6319              		.cfi_endproc
 6320              	.LFE441:
 6322              		.section	.text.rgb_matrix_get_suspend_state,"ax",%progbits
 6323              		.align	1
 6324              		.global	rgb_matrix_get_suspend_state
 6325              		.syntax unified
 6326              		.thumb
 6327              		.thumb_func
 6328              		.fpu fpv4-sp-d16
 6330              	rgb_matrix_get_suspend_state:
 6331              	.LFB442:
 510:quantum/rgb_matrix/rgb_matrix.c **** 
 511:quantum/rgb_matrix/rgb_matrix.c **** bool rgb_matrix_get_suspend_state(void) { return suspend_state; }
 6332              		.loc 23 511 41 is_stmt 1 view -0
 6333              		.cfi_startproc
 6334              		@ args = 0, pretend = 0, frame = 0
 6335              		@ frame_needed = 0, uses_anonymous_args = 0
 6336              		@ link register save eliminated.
 6337              		.loc 23 511 43 view .LVU1536
 6338              		.loc 23 511 65 is_stmt 0 view .LVU1537
 6339 0000 014B     		ldr	r3, .L400
 6340 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6341 0004 7047     		bx	lr
 6342              	.L401:
 6343 0006 00BF     		.align	2
 6344              	.L400:
 6345 0008 00000000 		.word	.LANCHOR3
 6346              		.cfi_endproc
 6347              	.LFE442:
 6349              		.section	.rodata.rgb_matrix_toggle_eeprom_helper.str1.1,"aMS",%progbits,1
 6350              	.LC12:
 6351 0000 45455052 		.ascii	"EEPROM\000"
 6351      4F4D00
 6352              	.LC13:
 6353 0007 4E4F4545 		.ascii	"NOEEPROM\000"
 6353      50524F4D 
 6353      00
 6354              	.LC14:
 6355 0010 72676220 		.ascii	"rgb matrix toggle [%s]: rgb_matrix_config.enable = "
 6355      6D617472 
 6355      69782074 
 6355      6F67676C 
 6355      65205B25 
 6356 0043 25750A00 		.ascii	"%u\012\000"
 6357              		.section	.text.rgb_matrix_toggle_eeprom_helper,"ax",%progbits
 6358              		.align	1
 6359              		.global	rgb_matrix_toggle_eeprom_helper
 6360              		.syntax unified
 6361              		.thumb
 6362              		.thumb_func
 6363              		.fpu fpv4-sp-d16
 6365              	rgb_matrix_toggle_eeprom_helper:
 6366              	.LVL468:
 6367              	.LFB443:
 512:quantum/rgb_matrix/rgb_matrix.c **** 
 513:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_toggle_eeprom_helper(bool write_to_eeprom) {
 6368              		.loc 23 513 60 is_stmt 1 view -0
 6369              		.cfi_startproc
 6370              		@ args = 0, pretend = 0, frame = 0
 6371              		@ frame_needed = 0, uses_anonymous_args = 0
 6372              		@ link register save eliminated.
 514:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable ^= 1;
 6373              		.loc 23 514 5 view .LVU1539
 6374              		.loc 23 514 30 is_stmt 0 view .LVU1540
 6375 0000 0E49     		ldr	r1, .L406
 6376 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 6377 0004 03F00302 		and	r2, r3, #3
 6378 0008 82F00102 		eor	r2, r2, #1
 6379 000c 62F30103 		bfi	r3, r2, #0, #2
 6380 0010 0B70     		strb	r3, [r1]
 515:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = STARTING;
 6381              		.loc 23 515 5 is_stmt 1 view .LVU1541
 6382              		.loc 23 515 20 is_stmt 0 view .LVU1542
 6383 0012 0B4B     		ldr	r3, .L406+4
 6384 0014 0021     		movs	r1, #0
 6385 0016 1970     		strb	r1, [r3]
 516:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 6386              		.loc 23 516 5 is_stmt 1 view .LVU1543
 6387 0018 0A49     		ldr	r1, .L406+8
 6388 001a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 6389 001c 0343     		orrs	r3, r3, r0
 6390 001e 0B70     		strb	r3, [r1]
 517:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix toggle [%s]: rgb_matrix_config.enable = %u\n", (write_to_eeprom) ? "EEPROM"
 6391              		.loc 23 517 5 view .LVU1544
 6392              		.loc 23 517 5 view .LVU1545
 6393 0020 094B     		ldr	r3, .L406+12
 6394 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6395 0024 DB07     		lsls	r3, r3, #31
 6396 0026 07D5     		bpl	.L402
 6397              		.loc 23 517 5 discriminator 1 view .LVU1546
 6398 0028 0849     		ldr	r1, .L406+16
 6399 002a 094B     		ldr	r3, .L406+20
 6400 002c 0028     		cmp	r0, #0
 6401 002e 08BF     		it	eq
 6402 0030 1946     		moveq	r1, r3
 6403 0032 0848     		ldr	r0, .L406+24
 6404              	.LVL469:
 6405              		.loc 23 517 5 is_stmt 0 discriminator 1 view .LVU1547
 6406 0034 FFF7FEBF 		b	printf_
 6407              	.LVL470:
 6408              	.L402:
 518:quantum/rgb_matrix/rgb_matrix.c **** }
 6409              		.loc 23 518 1 view .LVU1548
 6410 0038 7047     		bx	lr
 6411              	.L407:
 6412 003a 00BF     		.align	2
 6413              	.L406:
 6414 003c 00000000 		.word	rgb_matrix_config
 6415 0040 00000000 		.word	.LANCHOR4
 6416 0044 00000000 		.word	.LANCHOR8
 6417 0048 00000000 		.word	debug_config
 6418 004c 00000000 		.word	.LC12
 6419 0050 07000000 		.word	.LC13
 6420 0054 10000000 		.word	.LC14
 6421              		.cfi_endproc
 6422              	.LFE443:
 6424              		.section	.text.rgb_matrix_toggle_noeeprom,"ax",%progbits
 6425              		.align	1
 6426              		.global	rgb_matrix_toggle_noeeprom
 6427              		.syntax unified
 6428              		.thumb
 6429              		.thumb_func
 6430              		.fpu fpv4-sp-d16
 6432              	rgb_matrix_toggle_noeeprom:
 6433              	.LFB444:
 519:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_toggle_noeeprom(void) { rgb_matrix_toggle_eeprom_helper(false); }
 6434              		.loc 23 519 39 is_stmt 1 view -0
 6435              		.cfi_startproc
 6436              		@ args = 0, pretend = 0, frame = 0
 6437              		@ frame_needed = 0, uses_anonymous_args = 0
 6438              		@ link register save eliminated.
 6439              		.loc 23 519 41 view .LVU1550
 6440 0000 0020     		movs	r0, #0
 6441 0002 FFF7FEBF 		b	rgb_matrix_toggle_eeprom_helper
 6442              	.LVL471:
 6443              		.cfi_endproc
 6444              	.LFE444:
 6446              		.section	.text.rgb_matrix_toggle,"ax",%progbits
 6447              		.align	1
 6448              		.global	rgb_matrix_toggle
 6449              		.syntax unified
 6450              		.thumb
 6451              		.thumb_func
 6452              		.fpu fpv4-sp-d16
 6454              	rgb_matrix_toggle:
 6455              	.LFB445:
 520:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_toggle(void) { rgb_matrix_toggle_eeprom_helper(true); }
 6456              		.loc 23 520 30 view -0
 6457              		.cfi_startproc
 6458              		@ args = 0, pretend = 0, frame = 0
 6459              		@ frame_needed = 0, uses_anonymous_args = 0
 6460              		@ link register save eliminated.
 6461              		.loc 23 520 32 view .LVU1552
 6462 0000 0120     		movs	r0, #1
 6463 0002 FFF7FEBF 		b	rgb_matrix_toggle_eeprom_helper
 6464              	.LVL472:
 6465              		.cfi_endproc
 6466              	.LFE445:
 6468              		.section	.text.rgb_matrix_enable_noeeprom,"ax",%progbits
 6469              		.align	1
 6470              		.global	rgb_matrix_enable_noeeprom
 6471              		.syntax unified
 6472              		.thumb
 6473              		.thumb_func
 6474              		.fpu fpv4-sp-d16
 6476              	rgb_matrix_enable_noeeprom:
 6477              	.LFB447:
 521:quantum/rgb_matrix/rgb_matrix.c **** 
 522:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_enable(void) {
 523:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 524:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 525:quantum/rgb_matrix/rgb_matrix.c **** }
 526:quantum/rgb_matrix/rgb_matrix.c **** 
 527:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_enable_noeeprom(void) {
 6478              		.loc 23 527 39 view -0
 6479              		.cfi_startproc
 6480              		@ args = 0, pretend = 0, frame = 0
 6481              		@ frame_needed = 0, uses_anonymous_args = 0
 6482              		@ link register save eliminated.
 528:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) rgb_task_state = STARTING;
 6483              		.loc 23 528 5 view .LVU1554
 6484              		.loc 23 528 9 is_stmt 0 view .LVU1555
 6485 0000 064A     		ldr	r2, .L412
 6486 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6487              		.loc 23 528 8 view .LVU1556
 6488 0004 13F00303 		ands	r3, r3, #3
 6489              		.loc 23 528 36 is_stmt 1 view .LVU1557
 6490              		.loc 23 528 51 is_stmt 0 view .LVU1558
 6491 0008 04BF     		itt	eq
 6492 000a 0549     		ldreq	r1, .L412+4
 6493 000c 0B70     		strbeq	r3, [r1]
 529:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 1;
 6494              		.loc 23 529 5 is_stmt 1 view .LVU1559
 6495              		.loc 23 529 30 is_stmt 0 view .LVU1560
 6496 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6497 0010 0121     		movs	r1, #1
 6498 0012 61F30103 		bfi	r3, r1, #0, #2
 6499 0016 1370     		strb	r3, [r2]
 530:quantum/rgb_matrix/rgb_matrix.c **** }
 6500              		.loc 23 530 1 view .LVU1561
 6501 0018 7047     		bx	lr
 6502              	.L413:
 6503 001a 00BF     		.align	2
 6504              	.L412:
 6505 001c 00000000 		.word	rgb_matrix_config
 6506 0020 00000000 		.word	.LANCHOR4
 6507              		.cfi_endproc
 6508              	.LFE447:
 6510              		.section	.text.rgb_matrix_enable,"ax",%progbits
 6511              		.align	1
 6512              		.global	rgb_matrix_enable
 6513              		.syntax unified
 6514              		.thumb
 6515              		.thumb_func
 6516              		.fpu fpv4-sp-d16
 6518              	rgb_matrix_enable:
 6519              	.LFB446:
 522:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 6520              		.loc 23 522 30 is_stmt 1 view -0
 6521              		.cfi_startproc
 6522              		@ args = 0, pretend = 0, frame = 0
 6523              		@ frame_needed = 0, uses_anonymous_args = 0
 523:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6524              		.loc 23 523 5 view .LVU1563
 522:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_enable_noeeprom();
 6525              		.loc 23 522 30 is_stmt 0 view .LVU1564
 6526 0000 08B5     		push	{r3, lr}
 6527              		.cfi_def_cfa_offset 8
 6528              		.cfi_offset 3, -8
 6529              		.cfi_offset 14, -4
 523:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6530              		.loc 23 523 5 view .LVU1565
 6531 0002 FFF7FEFF 		bl	rgb_matrix_enable_noeeprom
 6532              	.LVL473:
 524:quantum/rgb_matrix/rgb_matrix.c **** }
 6533              		.loc 23 524 5 is_stmt 1 view .LVU1566
 6534 0006 024B     		ldr	r3, .L415
 6535 0008 0122     		movs	r2, #1
 6536 000a 1A70     		strb	r2, [r3]
 525:quantum/rgb_matrix/rgb_matrix.c **** 
 6537              		.loc 23 525 1 is_stmt 0 view .LVU1567
 6538 000c 08BD     		pop	{r3, pc}
 6539              	.L416:
 6540 000e 00BF     		.align	2
 6541              	.L415:
 6542 0010 00000000 		.word	.LANCHOR8
 6543              		.cfi_endproc
 6544              	.LFE446:
 6546              		.section	.text.rgb_matrix_disable_noeeprom,"ax",%progbits
 6547              		.align	1
 6548              		.global	rgb_matrix_disable_noeeprom
 6549              		.syntax unified
 6550              		.thumb
 6551              		.thumb_func
 6552              		.fpu fpv4-sp-d16
 6554              	rgb_matrix_disable_noeeprom:
 6555              	.LFB449:
 531:quantum/rgb_matrix/rgb_matrix.c **** 
 532:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_disable(void) {
 533:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 534:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 535:quantum/rgb_matrix/rgb_matrix.c **** }
 536:quantum/rgb_matrix/rgb_matrix.c **** 
 537:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_disable_noeeprom(void) {
 6556              		.loc 23 537 40 is_stmt 1 view -0
 6557              		.cfi_startproc
 6558              		@ args = 0, pretend = 0, frame = 0
 6559              		@ frame_needed = 0, uses_anonymous_args = 0
 6560              		@ link register save eliminated.
 538:quantum/rgb_matrix/rgb_matrix.c ****     if (rgb_matrix_config.enable) rgb_task_state = STARTING;
 6561              		.loc 23 538 5 view .LVU1569
 6562              		.loc 23 538 9 is_stmt 0 view .LVU1570
 6563 0000 054B     		ldr	r3, .L422
 6564 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6565              		.loc 23 538 8 view .LVU1571
 6566 0004 9207     		lsls	r2, r2, #30
 6567              		.loc 23 538 35 is_stmt 1 view .LVU1572
 6568              		.loc 23 538 50 is_stmt 0 view .LVU1573
 6569 0006 1EBF     		ittt	ne
 6570 0008 044A     		ldrne	r2, .L422+4
 6571 000a 0021     		movne	r1, #0
 6572 000c 1170     		strbne	r1, [r2]
 539:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.enable = 0;
 6573              		.loc 23 539 5 is_stmt 1 view .LVU1574
 6574              		.loc 23 539 30 is_stmt 0 view .LVU1575
 6575 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6576 0010 6FF30102 		bfc	r2, #0, #2
 6577 0014 1A70     		strb	r2, [r3]
 540:quantum/rgb_matrix/rgb_matrix.c **** }
 6578              		.loc 23 540 1 view .LVU1576
 6579 0016 7047     		bx	lr
 6580              	.L423:
 6581              		.align	2
 6582              	.L422:
 6583 0018 00000000 		.word	rgb_matrix_config
 6584 001c 00000000 		.word	.LANCHOR4
 6585              		.cfi_endproc
 6586              	.LFE449:
 6588              		.section	.text.rgb_matrix_disable,"ax",%progbits
 6589              		.align	1
 6590              		.global	rgb_matrix_disable
 6591              		.syntax unified
 6592              		.thumb
 6593              		.thumb_func
 6594              		.fpu fpv4-sp-d16
 6596              	rgb_matrix_disable:
 6597              	.LFB448:
 532:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 6598              		.loc 23 532 31 is_stmt 1 view -0
 6599              		.cfi_startproc
 6600              		@ args = 0, pretend = 0, frame = 0
 6601              		@ frame_needed = 0, uses_anonymous_args = 0
 533:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6602              		.loc 23 533 5 view .LVU1578
 532:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_disable_noeeprom();
 6603              		.loc 23 532 31 is_stmt 0 view .LVU1579
 6604 0000 08B5     		push	{r3, lr}
 6605              		.cfi_def_cfa_offset 8
 6606              		.cfi_offset 3, -8
 6607              		.cfi_offset 14, -4
 533:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(true);
 6608              		.loc 23 533 5 view .LVU1580
 6609 0002 FFF7FEFF 		bl	rgb_matrix_disable_noeeprom
 6610              	.LVL474:
 534:quantum/rgb_matrix/rgb_matrix.c **** }
 6611              		.loc 23 534 5 is_stmt 1 view .LVU1581
 6612 0006 024B     		ldr	r3, .L425
 6613 0008 0122     		movs	r2, #1
 6614 000a 1A70     		strb	r2, [r3]
 535:quantum/rgb_matrix/rgb_matrix.c **** 
 6615              		.loc 23 535 1 is_stmt 0 view .LVU1582
 6616 000c 08BD     		pop	{r3, pc}
 6617              	.L426:
 6618 000e 00BF     		.align	2
 6619              	.L425:
 6620 0010 00000000 		.word	.LANCHOR8
 6621              		.cfi_endproc
 6622              	.LFE448:
 6624              		.section	.text.rgb_matrix_is_enabled,"ax",%progbits
 6625              		.align	1
 6626              		.global	rgb_matrix_is_enabled
 6627              		.syntax unified
 6628              		.thumb
 6629              		.thumb_func
 6630              		.fpu fpv4-sp-d16
 6632              	rgb_matrix_is_enabled:
 6633              	.LFB450:
 541:quantum/rgb_matrix/rgb_matrix.c **** 
 542:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_is_enabled(void) { return rgb_matrix_config.enable; }
 6634              		.loc 23 542 37 is_stmt 1 view -0
 6635              		.cfi_startproc
 6636              		@ args = 0, pretend = 0, frame = 0
 6637              		@ frame_needed = 0, uses_anonymous_args = 0
 6638              		@ link register save eliminated.
 6639              		.loc 23 542 39 view .LVU1584
 6640              		.loc 23 542 63 is_stmt 0 view .LVU1585
 6641 0000 024B     		ldr	r3, .L428
 6642 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6643              		.loc 23 542 72 view .LVU1586
 6644 0004 00F00300 		and	r0, r0, #3
 6645 0008 7047     		bx	lr
 6646              	.L429:
 6647 000a 00BF     		.align	2
 6648              	.L428:
 6649 000c 00000000 		.word	rgb_matrix_config
 6650              		.cfi_endproc
 6651              	.LFE450:
 6653              		.section	.rodata.rgb_matrix_mode_eeprom_helper.str1.1,"aMS",%progbits,1
 6654              	.LC15:
 6655 0000 72676220 		.ascii	"rgb matrix mode [%s]: %u\012\000"
 6655      6D617472 
 6655      6978206D 
 6655      6F646520 
 6655      5B25735D 
 6656              		.section	.text.rgb_matrix_mode_eeprom_helper,"ax",%progbits
 6657              		.align	1
 6658              		.global	rgb_matrix_mode_eeprom_helper
 6659              		.syntax unified
 6660              		.thumb
 6661              		.thumb_func
 6662              		.fpu fpv4-sp-d16
 6664              	rgb_matrix_mode_eeprom_helper:
 6665              	.LVL475:
 6666              	.LFB451:
 543:quantum/rgb_matrix/rgb_matrix.c **** 
 544:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_mode_eeprom_helper(uint8_t mode, bool write_to_eeprom) {
 6667              		.loc 23 544 72 is_stmt 1 view -0
 6668              		.cfi_startproc
 6669              		@ args = 0, pretend = 0, frame = 0
 6670              		@ frame_needed = 0, uses_anonymous_args = 0
 6671              		@ link register save eliminated.
 545:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 6672              		.loc 23 545 5 view .LVU1588
 6673              		.loc 23 545 9 is_stmt 0 view .LVU1589
 6674 0000 124A     		ldr	r2, .L442
 6675 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6676              		.loc 23 545 8 view .LVU1590
 6677 0004 13F0030F 		tst	r3, #3
 6678 0008 1ED0     		beq	.L430
 546:quantum/rgb_matrix/rgb_matrix.c ****         return;
 547:quantum/rgb_matrix/rgb_matrix.c ****     }
 548:quantum/rgb_matrix/rgb_matrix.c ****     if (mode < 1) {
 6679              		.loc 23 548 5 is_stmt 1 view .LVU1591
 6680              		.loc 23 548 8 is_stmt 0 view .LVU1592
 6681 000a C8B9     		cbnz	r0, .L433
 549:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = 1;
 6682              		.loc 23 549 9 is_stmt 1 view .LVU1593
 6683              		.loc 23 549 32 is_stmt 0 view .LVU1594
 6684 000c 0120     		movs	r0, #1
 6685              	.LVL476:
 6686              	.L435:
 550:quantum/rgb_matrix/rgb_matrix.c ****     } else if (mode >= RGB_MATRIX_EFFECT_MAX) {
 551:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 552:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 553:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = mode;
 6687              		.loc 23 553 9 is_stmt 1 view .LVU1595
 6688              		.loc 23 553 32 is_stmt 0 view .LVU1596
 6689 000e 60F38703 		bfi	r3, r0, #2, #6
 6690 0012 1370     		strb	r3, [r2]
 554:quantum/rgb_matrix/rgb_matrix.c ****     }
 555:quantum/rgb_matrix/rgb_matrix.c ****     rgb_task_state = STARTING;
 6691              		.loc 23 555 5 is_stmt 1 view .LVU1597
 6692              		.loc 23 555 20 is_stmt 0 view .LVU1598
 6693 0014 0E4B     		ldr	r3, .L442+4
 6694 0016 0020     		movs	r0, #0
 6695 0018 1870     		strb	r0, [r3]
 556:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 6696              		.loc 23 556 5 is_stmt 1 view .LVU1599
 6697 001a 0E48     		ldr	r0, .L442+8
 6698 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 6699 001e 0B43     		orrs	r3, r3, r1
 6700 0020 0370     		strb	r3, [r0]
 557:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix mode [%s]: %u\n", (write_to_eeprom) ? "EEPROM" : "NOEEPROM", rgb_matrix_con
 6701              		.loc 23 557 5 view .LVU1600
 6702              		.loc 23 557 5 view .LVU1601
 6703 0022 0D4B     		ldr	r3, .L442+12
 6704 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6705 0026 DB07     		lsls	r3, r3, #31
 6706 0028 0ED5     		bpl	.L430
 6707              	.LVL477:
 6708              	.LBB390:
 6709              	.LBI390:
 544:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 6710              		.loc 23 544 6 view .LVU1602
 6711              	.LBB391:
 6712              		.loc 23 557 5 view .LVU1603
 6713 002a 0C48     		ldr	r0, .L442+16
 6714 002c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6715 002e 0C4B     		ldr	r3, .L442+20
 6716 0030 9208     		lsrs	r2, r2, #2
 6717 0032 0029     		cmp	r1, #0
 6718 0034 14BF     		ite	ne
 6719 0036 0146     		movne	r1, r0
 6720 0038 1946     		moveq	r1, r3
 6721              	.LVL478:
 6722              		.loc 23 557 5 is_stmt 0 view .LVU1604
 6723 003a 0A48     		ldr	r0, .L442+24
 6724 003c FFF7FEBF 		b	printf_
 6725              	.LVL479:
 6726              	.L433:
 6727              		.loc 23 557 5 view .LVU1605
 6728              	.LBE391:
 6729              	.LBE390:
 550:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 6730              		.loc 23 550 12 is_stmt 1 view .LVU1606
 550:quantum/rgb_matrix/rgb_matrix.c ****         rgb_matrix_config.mode = RGB_MATRIX_EFFECT_MAX - 1;
 6731              		.loc 23 550 15 is_stmt 0 view .LVU1607
 6732 0040 1B28     		cmp	r0, #27
 551:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 6733              		.loc 23 551 9 is_stmt 1 view .LVU1608
 551:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 6734              		.loc 23 551 32 is_stmt 0 view .LVU1609
 6735 0042 88BF     		it	hi
 6736 0044 1B20     		movhi	r0, #27
 6737              	.LVL480:
 551:quantum/rgb_matrix/rgb_matrix.c ****     } else {
 6738              		.loc 23 551 32 view .LVU1610
 6739 0046 E2E7     		b	.L435
 6740              	.L430:
 558:quantum/rgb_matrix/rgb_matrix.c **** }
 6741              		.loc 23 558 1 view .LVU1611
 6742 0048 7047     		bx	lr
 6743              	.L443:
 6744 004a 00BF     		.align	2
 6745              	.L442:
 6746 004c 00000000 		.word	rgb_matrix_config
 6747 0050 00000000 		.word	.LANCHOR4
 6748 0054 00000000 		.word	.LANCHOR8
 6749 0058 00000000 		.word	debug_config
 6750 005c 00000000 		.word	.LC12
 6751 0060 07000000 		.word	.LC13
 6752 0064 00000000 		.word	.LC15
 6753              		.cfi_endproc
 6754              	.LFE451:
 6756              		.section	.text.rgb_matrix_mode_noeeprom,"ax",%progbits
 6757              		.align	1
 6758              		.global	rgb_matrix_mode_noeeprom
 6759              		.syntax unified
 6760              		.thumb
 6761              		.thumb_func
 6762              		.fpu fpv4-sp-d16
 6764              	rgb_matrix_mode_noeeprom:
 6765              	.LVL481:
 6766              	.LFB452:
 559:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_mode_noeeprom(uint8_t mode) { rgb_matrix_mode_eeprom_helper(mode, false); }
 6767              		.loc 23 559 45 is_stmt 1 view -0
 6768              		.cfi_startproc
 6769              		@ args = 0, pretend = 0, frame = 0
 6770              		@ frame_needed = 0, uses_anonymous_args = 0
 6771              		@ link register save eliminated.
 6772              		.loc 23 559 47 view .LVU1613
 6773 0000 0021     		movs	r1, #0
 6774 0002 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6775              	.LVL482:
 6776              		.loc 23 559 47 is_stmt 0 view .LVU1614
 6777              		.cfi_endproc
 6778              	.LFE452:
 6780              		.section	.text.rgb_matrix_mode,"ax",%progbits
 6781              		.align	1
 6782              		.global	rgb_matrix_mode
 6783              		.syntax unified
 6784              		.thumb
 6785              		.thumb_func
 6786              		.fpu fpv4-sp-d16
 6788              	rgb_matrix_mode:
 6789              	.LVL483:
 6790              	.LFB453:
 560:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_mode(uint8_t mode) { rgb_matrix_mode_eeprom_helper(mode, true); }
 6791              		.loc 23 560 36 is_stmt 1 view -0
 6792              		.cfi_startproc
 6793              		@ args = 0, pretend = 0, frame = 0
 6794              		@ frame_needed = 0, uses_anonymous_args = 0
 6795              		@ link register save eliminated.
 6796              		.loc 23 560 38 view .LVU1616
 6797 0000 0121     		movs	r1, #1
 6798 0002 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6799              	.LVL484:
 6800              		.loc 23 560 38 is_stmt 0 view .LVU1617
 6801              		.cfi_endproc
 6802              	.LFE453:
 6804              		.section	.text.rgb_matrix_get_mode,"ax",%progbits
 6805              		.align	1
 6806              		.global	rgb_matrix_get_mode
 6807              		.syntax unified
 6808              		.thumb
 6809              		.thumb_func
 6810              		.fpu fpv4-sp-d16
 6812              	rgb_matrix_get_mode:
 6813              	.LFB454:
 561:quantum/rgb_matrix/rgb_matrix.c **** 
 562:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_mode(void) { return rgb_matrix_config.mode; }
 6814              		.loc 23 562 35 is_stmt 1 view -0
 6815              		.cfi_startproc
 6816              		@ args = 0, pretend = 0, frame = 0
 6817              		@ frame_needed = 0, uses_anonymous_args = 0
 6818              		@ link register save eliminated.
 6819              		.loc 23 562 37 view .LVU1619
 6820              		.loc 23 562 61 is_stmt 0 view .LVU1620
 6821 0000 014B     		ldr	r3, .L447
 6822 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6823              		.loc 23 562 68 view .LVU1621
 6824 0004 8008     		lsrs	r0, r0, #2
 6825 0006 7047     		bx	lr
 6826              	.L448:
 6827              		.align	2
 6828              	.L447:
 6829 0008 00000000 		.word	rgb_matrix_config
 6830              		.cfi_endproc
 6831              	.LFE454:
 6833              		.section	.text.rgb_matrix_step_helper,"ax",%progbits
 6834              		.align	1
 6835              		.global	rgb_matrix_step_helper
 6836              		.syntax unified
 6837              		.thumb
 6838              		.thumb_func
 6839              		.fpu fpv4-sp-d16
 6841              	rgb_matrix_step_helper:
 6842              	.LVL485:
 6843              	.LFB455:
 563:quantum/rgb_matrix/rgb_matrix.c **** 
 564:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_helper(bool write_to_eeprom) {
 6844              		.loc 23 564 51 is_stmt 1 view -0
 6845              		.cfi_startproc
 6846              		@ args = 0, pretend = 0, frame = 0
 6847              		@ frame_needed = 0, uses_anonymous_args = 0
 6848              		@ link register save eliminated.
 565:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode + 1;
 6849              		.loc 23 565 5 view .LVU1623
 6850              		.loc 23 565 37 is_stmt 0 view .LVU1624
 6851 0000 054B     		ldr	r3, .L452
 6852 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6853              		.loc 23 565 13 view .LVU1625
 6854 0004 9B08     		lsrs	r3, r3, #2
 6855 0006 0133     		adds	r3, r3, #1
 6856              	.LVL486:
 566:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_mode_eeprom_helper((mode < RGB_MATRIX_EFFECT_MAX) ? mode : 1, write_to_eeprom);
 6857              		.loc 23 566 5 is_stmt 1 view .LVU1626
 6858 0008 1C2B     		cmp	r3, #28
 564:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode + 1;
 6859              		.loc 23 564 51 is_stmt 0 view .LVU1627
 6860 000a 0146     		mov	r1, r0
 6861              		.loc 23 566 5 view .LVU1628
 6862 000c 34BF     		ite	cc
 6863 000e 1846     		movcc	r0, r3
 6864              	.LVL487:
 6865              		.loc 23 566 5 view .LVU1629
 6866 0010 0120     		movcs	r0, #1
 6867 0012 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6868              	.LVL488:
 6869              	.L453:
 6870              		.loc 23 566 5 view .LVU1630
 6871 0016 00BF     		.align	2
 6872              	.L452:
 6873 0018 00000000 		.word	rgb_matrix_config
 6874              		.cfi_endproc
 6875              	.LFE455:
 6877              		.section	.text.rgb_matrix_step_noeeprom,"ax",%progbits
 6878              		.align	1
 6879              		.global	rgb_matrix_step_noeeprom
 6880              		.syntax unified
 6881              		.thumb
 6882              		.thumb_func
 6883              		.fpu fpv4-sp-d16
 6885              	rgb_matrix_step_noeeprom:
 6886              	.LFB456:
 567:quantum/rgb_matrix/rgb_matrix.c **** }
 568:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_noeeprom(void) { rgb_matrix_step_helper(false); }
 6887              		.loc 23 568 37 is_stmt 1 view -0
 6888              		.cfi_startproc
 6889              		@ args = 0, pretend = 0, frame = 0
 6890              		@ frame_needed = 0, uses_anonymous_args = 0
 6891              		@ link register save eliminated.
 6892              		.loc 23 568 39 view .LVU1632
 6893 0000 0020     		movs	r0, #0
 6894 0002 FFF7FEBF 		b	rgb_matrix_step_helper
 6895              	.LVL489:
 6896              		.cfi_endproc
 6897              	.LFE456:
 6899              		.section	.text.rgb_matrix_step,"ax",%progbits
 6900              		.align	1
 6901              		.global	rgb_matrix_step
 6902              		.syntax unified
 6903              		.thumb
 6904              		.thumb_func
 6905              		.fpu fpv4-sp-d16
 6907              	rgb_matrix_step:
 6908              	.LFB457:
 569:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step(void) { rgb_matrix_step_helper(true); }
 6909              		.loc 23 569 28 view -0
 6910              		.cfi_startproc
 6911              		@ args = 0, pretend = 0, frame = 0
 6912              		@ frame_needed = 0, uses_anonymous_args = 0
 6913              		@ link register save eliminated.
 6914              		.loc 23 569 30 view .LVU1634
 6915 0000 0120     		movs	r0, #1
 6916 0002 FFF7FEBF 		b	rgb_matrix_step_helper
 6917              	.LVL490:
 6918              		.cfi_endproc
 6919              	.LFE457:
 6921              		.section	.text.rgb_matrix_step_reverse_helper,"ax",%progbits
 6922              		.align	1
 6923              		.global	rgb_matrix_step_reverse_helper
 6924              		.syntax unified
 6925              		.thumb
 6926              		.thumb_func
 6927              		.fpu fpv4-sp-d16
 6929              	rgb_matrix_step_reverse_helper:
 6930              	.LVL491:
 6931              	.LFB458:
 570:quantum/rgb_matrix/rgb_matrix.c **** 
 571:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_reverse_helper(bool write_to_eeprom) {
 6932              		.loc 23 571 59 view -0
 6933              		.cfi_startproc
 6934              		@ args = 0, pretend = 0, frame = 0
 6935              		@ frame_needed = 0, uses_anonymous_args = 0
 6936              		@ link register save eliminated.
 572:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode - 1;
 6937              		.loc 23 572 5 view .LVU1636
 6938              		.loc 23 572 37 is_stmt 0 view .LVU1637
 6939 0000 064B     		ldr	r3, .L458
 6940 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6941 0004 C3F38503 		ubfx	r3, r3, #2, #6
 6942              		.loc 23 572 13 view .LVU1638
 6943 0008 013B     		subs	r3, r3, #1
 6944              	.LVL492:
 573:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_mode_eeprom_helper((mode < 1) ? RGB_MATRIX_EFFECT_MAX - 1 : mode, write_to_eeprom);
 6945              		.loc 23 573 5 is_stmt 1 view .LVU1639
 6946 000a 13F0FF03 		ands	r3, r3, #255
 6947              	.LVL493:
 571:quantum/rgb_matrix/rgb_matrix.c ****     uint8_t mode = rgb_matrix_config.mode - 1;
 6948              		.loc 23 571 59 is_stmt 0 view .LVU1640
 6949 000e 0146     		mov	r1, r0
 6950              		.loc 23 573 5 view .LVU1641
 6951 0010 14BF     		ite	ne
 6952 0012 1846     		movne	r0, r3
 6953              	.LVL494:
 6954              		.loc 23 573 5 view .LVU1642
 6955 0014 1B20     		moveq	r0, #27
 6956 0016 FFF7FEBF 		b	rgb_matrix_mode_eeprom_helper
 6957              	.LVL495:
 6958              	.L459:
 6959              		.loc 23 573 5 view .LVU1643
 6960 001a 00BF     		.align	2
 6961              	.L458:
 6962 001c 00000000 		.word	rgb_matrix_config
 6963              		.cfi_endproc
 6964              	.LFE458:
 6966              		.section	.text.rgb_matrix_step_reverse_noeeprom,"ax",%progbits
 6967              		.align	1
 6968              		.global	rgb_matrix_step_reverse_noeeprom
 6969              		.syntax unified
 6970              		.thumb
 6971              		.thumb_func
 6972              		.fpu fpv4-sp-d16
 6974              	rgb_matrix_step_reverse_noeeprom:
 6975              	.LFB459:
 574:quantum/rgb_matrix/rgb_matrix.c **** }
 575:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_reverse_noeeprom(void) { rgb_matrix_step_reverse_helper(false); }
 6976              		.loc 23 575 45 is_stmt 1 view -0
 6977              		.cfi_startproc
 6978              		@ args = 0, pretend = 0, frame = 0
 6979              		@ frame_needed = 0, uses_anonymous_args = 0
 6980              		@ link register save eliminated.
 6981              		.loc 23 575 47 view .LVU1645
 6982 0000 0020     		movs	r0, #0
 6983 0002 FFF7FEBF 		b	rgb_matrix_step_reverse_helper
 6984              	.LVL496:
 6985              		.cfi_endproc
 6986              	.LFE459:
 6988              		.section	.text.rgb_matrix_step_reverse,"ax",%progbits
 6989              		.align	1
 6990              		.global	rgb_matrix_step_reverse
 6991              		.syntax unified
 6992              		.thumb
 6993              		.thumb_func
 6994              		.fpu fpv4-sp-d16
 6996              	rgb_matrix_step_reverse:
 6997              	.LFB460:
 576:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_step_reverse(void) { rgb_matrix_step_reverse_helper(true); }
 6998              		.loc 23 576 36 view -0
 6999              		.cfi_startproc
 7000              		@ args = 0, pretend = 0, frame = 0
 7001              		@ frame_needed = 0, uses_anonymous_args = 0
 7002              		@ link register save eliminated.
 7003              		.loc 23 576 38 view .LVU1647
 7004 0000 0120     		movs	r0, #1
 7005 0002 FFF7FEBF 		b	rgb_matrix_step_reverse_helper
 7006              	.LVL497:
 7007              		.cfi_endproc
 7008              	.LFE460:
 7010              		.section	.rodata.rgb_matrix_sethsv_eeprom_helper.str1.1,"aMS",%progbits,1
 7011              	.LC16:
 7012 0000 72676220 		.ascii	"rgb matrix set hsv [%s]: %u,%u,%u\012\000"
 7012      6D617472 
 7012      69782073 
 7012      65742068 
 7012      7376205B 
 7013              		.section	.text.rgb_matrix_sethsv_eeprom_helper,"ax",%progbits
 7014              		.align	1
 7015              		.global	rgb_matrix_sethsv_eeprom_helper
 7016              		.syntax unified
 7017              		.thumb
 7018              		.thumb_func
 7019              		.fpu fpv4-sp-d16
 7021              	rgb_matrix_sethsv_eeprom_helper:
 7022              	.LVL498:
 7023              	.LFB461:
 577:quantum/rgb_matrix/rgb_matrix.c **** 
 578:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_sethsv_eeprom_helper(uint16_t hue, uint8_t sat, uint8_t val, bool write_to_eeprom) 
 7024              		.loc 23 578 100 view -0
 7025              		.cfi_startproc
 7026              		@ args = 0, pretend = 0, frame = 0
 7027              		@ frame_needed = 0, uses_anonymous_args = 0
 579:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 7028              		.loc 23 579 5 view .LVU1649
 578:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 7029              		.loc 23 578 100 is_stmt 0 view .LVU1650
 7030 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 7031              		.cfi_def_cfa_offset 24
 7032              		.cfi_offset 4, -12
 7033              		.cfi_offset 5, -8
 7034              		.cfi_offset 14, -4
 578:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 7035              		.loc 23 578 100 view .LVU1651
 7036 0002 1C46     		mov	r4, r3
 7037              		.loc 23 579 9 view .LVU1652
 7038 0004 0E4B     		ldr	r3, .L471
 7039              	.LVL499:
 578:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 7040              		.loc 23 578 100 view .LVU1653
 7041 0006 1546     		mov	r5, r2
 7042              		.loc 23 579 9 view .LVU1654
 7043 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7044              	.LVL500:
 7045              		.loc 23 579 8 view .LVU1655
 7046 000a 9207     		lsls	r2, r2, #30
 7047 000c 15D0     		beq	.L462
 7048              	.LVL501:
 7049              	.LBB394:
 7050              	.LBI394:
 578:quantum/rgb_matrix/rgb_matrix.c ****     if (!rgb_matrix_config.enable) {
 7051              		.loc 23 578 6 is_stmt 1 view .LVU1656
 7052              	.LBB395:
 580:quantum/rgb_matrix/rgb_matrix.c ****         return;
 581:quantum/rgb_matrix/rgb_matrix.c ****     }
 582:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.h = hue;
 7053              		.loc 23 582 5 view .LVU1657
 7054              		.loc 23 582 29 is_stmt 0 view .LVU1658
 7055 000e C2B2     		uxtb	r2, r0
 583:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 584:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.v = (val > RGB_MATRIX_MAXIMUM_BRIGHTNESS) ? RGB_MATRIX_MAXIMUM_BRIGHTNESS
 585:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 7056              		.loc 23 585 5 view .LVU1659
 7057 0010 0C48     		ldr	r0, .L471+4
 7058              	.LVL502:
 582:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 7059              		.loc 23 582 29 view .LVU1660
 7060 0012 5A70     		strb	r2, [r3, #1]
 583:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 7061              		.loc 23 583 5 is_stmt 1 view .LVU1661
 583:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.hsv.s = sat;
 7062              		.loc 23 583 29 is_stmt 0 view .LVU1662
 7063 0014 9970     		strb	r1, [r3, #2]
 584:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 7064              		.loc 23 584 5 is_stmt 1 view .LVU1663
 584:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 7065              		.loc 23 584 29 is_stmt 0 view .LVU1664
 7066 0016 DD70     		strb	r5, [r3, #3]
 7067              		.loc 23 585 5 is_stmt 1 view .LVU1665
 7068 0018 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 7069 001a 2343     		orrs	r3, r3, r4
 7070 001c 0370     		strb	r3, [r0]
 586:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix set hsv [%s]: %u,%u,%u\n", (write_to_eeprom) ? "EEPROM" : "NOEEPROM", rgb_m
 7071              		.loc 23 586 5 view .LVU1666
 7072              		.loc 23 586 5 view .LVU1667
 7073 001e 0A4B     		ldr	r3, .L471+8
 7074 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7075 0022 DB07     		lsls	r3, r3, #31
 7076 0024 09D5     		bpl	.L462
 7077              		.loc 23 586 5 view .LVU1668
 7078 0026 0948     		ldr	r0, .L471+12
 7079 0028 0095     		str	r5, [sp]
 7080 002a 0B46     		mov	r3, r1
 7081 002c 0849     		ldr	r1, .L471+16
 7082              	.LVL503:
 7083              		.loc 23 586 5 is_stmt 0 view .LVU1669
 7084 002e 002C     		cmp	r4, #0
 7085 0030 18BF     		it	ne
 7086 0032 0146     		movne	r1, r0
 7087 0034 0748     		ldr	r0, .L471+20
 7088 0036 FFF7FEFF 		bl	printf_
 7089              	.LVL504:
 7090              		.loc 23 586 5 view .LVU1670
 7091              	.LBE395:
 7092              	.LBE394:
 7093              		.loc 23 586 5 is_stmt 1 view .LVU1671
 7094              	.L462:
 587:quantum/rgb_matrix/rgb_matrix.c **** }
 7095              		.loc 23 587 1 is_stmt 0 view .LVU1672
 7096 003a 03B0     		add	sp, sp, #12
 7097              		.cfi_def_cfa_offset 12
 7098              		@ sp needed
 7099 003c 30BD     		pop	{r4, r5, pc}
 7100              	.L472:
 7101 003e 00BF     		.align	2
 7102              	.L471:
 7103 0040 00000000 		.word	rgb_matrix_config
 7104 0044 00000000 		.word	.LANCHOR8
 7105 0048 00000000 		.word	debug_config
 7106 004c 00000000 		.word	.LC12
 7107 0050 07000000 		.word	.LC13
 7108 0054 00000000 		.word	.LC16
 7109              		.cfi_endproc
 7110              	.LFE461:
 7112              		.section	.text.rgb_matrix_sethsv_noeeprom,"ax",%progbits
 7113              		.align	1
 7114              		.global	rgb_matrix_sethsv_noeeprom
 7115              		.syntax unified
 7116              		.thumb
 7117              		.thumb_func
 7118              		.fpu fpv4-sp-d16
 7120              	rgb_matrix_sethsv_noeeprom:
 7121              	.LVL505:
 7122              	.LFB462:
 588:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_sethsv_noeeprom(uint16_t hue, uint8_t sat, uint8_t val) { rgb_matrix_sethsv_eeprom_
 7123              		.loc 23 588 73 is_stmt 1 view -0
 7124              		.cfi_startproc
 7125              		@ args = 0, pretend = 0, frame = 0
 7126              		@ frame_needed = 0, uses_anonymous_args = 0
 7127              		@ link register save eliminated.
 7128              		.loc 23 588 75 view .LVU1674
 7129 0000 0023     		movs	r3, #0
 7130 0002 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7131              	.LVL506:
 7132              		.loc 23 588 75 is_stmt 0 view .LVU1675
 7133              		.cfi_endproc
 7134              	.LFE462:
 7136              		.section	.text.rgb_matrix_sethsv,"ax",%progbits
 7137              		.align	1
 7138              		.global	rgb_matrix_sethsv
 7139              		.syntax unified
 7140              		.thumb
 7141              		.thumb_func
 7142              		.fpu fpv4-sp-d16
 7144              	rgb_matrix_sethsv:
 7145              	.LVL507:
 7146              	.LFB463:
 589:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_sethsv(uint16_t hue, uint8_t sat, uint8_t val) { rgb_matrix_sethsv_eeprom_helper(hu
 7147              		.loc 23 589 64 is_stmt 1 view -0
 7148              		.cfi_startproc
 7149              		@ args = 0, pretend = 0, frame = 0
 7150              		@ frame_needed = 0, uses_anonymous_args = 0
 7151              		@ link register save eliminated.
 7152              		.loc 23 589 66 view .LVU1677
 7153 0000 0123     		movs	r3, #1
 7154 0002 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7155              	.LVL508:
 7156              		.loc 23 589 66 is_stmt 0 view .LVU1678
 7157              		.cfi_endproc
 7158              	.LFE463:
 7160              		.section	.text.rgb_matrix_get_hsv,"ax",%progbits
 7161              		.align	1
 7162              		.global	rgb_matrix_get_hsv
 7163              		.syntax unified
 7164              		.thumb
 7165              		.thumb_func
 7166              		.fpu fpv4-sp-d16
 7168              	rgb_matrix_get_hsv:
 7169              	.LFB464:
 590:quantum/rgb_matrix/rgb_matrix.c **** 
 591:quantum/rgb_matrix/rgb_matrix.c **** HSV     rgb_matrix_get_hsv(void) { return rgb_matrix_config.hsv; }
 7170              		.loc 23 591 34 is_stmt 1 view -0
 7171              		.cfi_startproc
 7172              		@ args = 0, pretend = 0, frame = 8
 7173              		@ frame_needed = 0, uses_anonymous_args = 0
 7174              		@ link register save eliminated.
 7175              		.loc 23 591 36 view .LVU1680
 7176              		.loc 23 591 60 is_stmt 0 view .LVU1681
 7177 0000 094B     		ldr	r3, .L476
 7178              		.loc 23 591 34 view .LVU1682
 7179 0002 82B0     		sub	sp, sp, #8
 7180              		.cfi_def_cfa_offset 8
 7181              		.loc 23 591 60 view .LVU1683
 7182 0004 B3F80120 		ldrh	r2, [r3, #1]	@ unaligned
 7183 0008 ADF80420 		strh	r2, [sp, #4]	@ unaligned
 7184 000c 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 7185 0010 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 7186 0012 0020     		movs	r0, #0
 7187 0014 62F30700 		bfi	r0, r2, #0, #8
 7188 0018 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 7189 001c 62F30F20 		bfi	r0, r2, #8, #8
 7190 0020 63F31740 		bfi	r0, r3, #16, #8
 7191              		.loc 23 591 66 view .LVU1684
 7192 0024 02B0     		add	sp, sp, #8
 7193              		.cfi_def_cfa_offset 0
 7194              		@ sp needed
 7195 0026 7047     		bx	lr
 7196              	.L477:
 7197              		.align	2
 7198              	.L476:
 7199 0028 00000000 		.word	rgb_matrix_config
 7200              		.cfi_endproc
 7201              	.LFE464:
 7203              		.section	.text.rgb_matrix_get_hue,"ax",%progbits
 7204              		.align	1
 7205              		.global	rgb_matrix_get_hue
 7206              		.syntax unified
 7207              		.thumb
 7208              		.thumb_func
 7209              		.fpu fpv4-sp-d16
 7211              	rgb_matrix_get_hue:
 7212              	.LFB465:
 592:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_hue(void) { return rgb_matrix_config.hsv.h; }
 7213              		.loc 23 592 34 is_stmt 1 view -0
 7214              		.cfi_startproc
 7215              		@ args = 0, pretend = 0, frame = 0
 7216              		@ frame_needed = 0, uses_anonymous_args = 0
 7217              		@ link register save eliminated.
 7218              		.loc 23 592 36 view .LVU1686
 7219              		.loc 23 592 68 is_stmt 0 view .LVU1687
 7220 0000 014B     		ldr	r3, .L479
 7221 0002 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 7222 0004 7047     		bx	lr
 7223              	.L480:
 7224 0006 00BF     		.align	2
 7225              	.L479:
 7226 0008 00000000 		.word	rgb_matrix_config
 7227              		.cfi_endproc
 7228              	.LFE465:
 7230              		.section	.text.rgb_matrix_get_sat,"ax",%progbits
 7231              		.align	1
 7232              		.global	rgb_matrix_get_sat
 7233              		.syntax unified
 7234              		.thumb
 7235              		.thumb_func
 7236              		.fpu fpv4-sp-d16
 7238              	rgb_matrix_get_sat:
 7239              	.LFB466:
 593:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_sat(void) { return rgb_matrix_config.hsv.s; }
 7240              		.loc 23 593 34 is_stmt 1 view -0
 7241              		.cfi_startproc
 7242              		@ args = 0, pretend = 0, frame = 0
 7243              		@ frame_needed = 0, uses_anonymous_args = 0
 7244              		@ link register save eliminated.
 7245              		.loc 23 593 36 view .LVU1689
 7246              		.loc 23 593 68 is_stmt 0 view .LVU1690
 7247 0000 014B     		ldr	r3, .L482
 7248 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 7249 0004 7047     		bx	lr
 7250              	.L483:
 7251 0006 00BF     		.align	2
 7252              	.L482:
 7253 0008 00000000 		.word	rgb_matrix_config
 7254              		.cfi_endproc
 7255              	.LFE466:
 7257              		.section	.text.rgb_matrix_get_val,"ax",%progbits
 7258              		.align	1
 7259              		.global	rgb_matrix_get_val
 7260              		.syntax unified
 7261              		.thumb
 7262              		.thumb_func
 7263              		.fpu fpv4-sp-d16
 7265              	rgb_matrix_get_val:
 7266              	.LFB467:
 594:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_val(void) { return rgb_matrix_config.hsv.v; }
 7267              		.loc 23 594 34 is_stmt 1 view -0
 7268              		.cfi_startproc
 7269              		@ args = 0, pretend = 0, frame = 0
 7270              		@ frame_needed = 0, uses_anonymous_args = 0
 7271              		@ link register save eliminated.
 7272              		.loc 23 594 36 view .LVU1692
 7273              		.loc 23 594 68 is_stmt 0 view .LVU1693
 7274 0000 014B     		ldr	r3, .L485
 7275 0002 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 7276 0004 7047     		bx	lr
 7277              	.L486:
 7278 0006 00BF     		.align	2
 7279              	.L485:
 7280 0008 00000000 		.word	rgb_matrix_config
 7281              		.cfi_endproc
 7282              	.LFE467:
 7284              		.section	.text.rgb_matrix_increase_hue_helper,"ax",%progbits
 7285              		.align	1
 7286              		.global	rgb_matrix_increase_hue_helper
 7287              		.syntax unified
 7288              		.thumb
 7289              		.thumb_func
 7290              		.fpu fpv4-sp-d16
 7292              	rgb_matrix_increase_hue_helper:
 7293              	.LVL509:
 7294              	.LFB468:
 595:quantum/rgb_matrix/rgb_matrix.c **** 
 596:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_hue_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7295              		.loc 23 596 59 is_stmt 1 view -0
 7296              		.cfi_startproc
 7297              		@ args = 0, pretend = 0, frame = 0
 7298              		@ frame_needed = 0, uses_anonymous_args = 0
 7299              		@ link register save eliminated.
 7300              		.loc 23 596 61 view .LVU1695
 7301 0000 0349     		ldr	r1, .L488
 7302              		.loc 23 596 59 is_stmt 0 view .LVU1696
 7303 0002 0346     		mov	r3, r0
 7304              		.loc 23 596 114 view .LVU1697
 7305 0004 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 7306              	.LVL510:
 7307              		.loc 23 596 61 view .LVU1698
 7308 0006 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 7309 0008 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 7310 000a 0830     		adds	r0, r0, #8
 7311 000c FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7312              	.LVL511:
 7313              	.L489:
 7314              		.align	2
 7315              	.L488:
 7316 0010 00000000 		.word	rgb_matrix_config
 7317              		.cfi_endproc
 7318              	.LFE468:
 7320              		.section	.text.rgb_matrix_increase_hue_noeeprom,"ax",%progbits
 7321              		.align	1
 7322              		.global	rgb_matrix_increase_hue_noeeprom
 7323              		.syntax unified
 7324              		.thumb
 7325              		.thumb_func
 7326              		.fpu fpv4-sp-d16
 7328              	rgb_matrix_increase_hue_noeeprom:
 7329              	.LFB469:
 597:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_hue_noeeprom(void) { rgb_matrix_increase_hue_helper(false); }
 7330              		.loc 23 597 45 is_stmt 1 view -0
 7331              		.cfi_startproc
 7332              		@ args = 0, pretend = 0, frame = 0
 7333              		@ frame_needed = 0, uses_anonymous_args = 0
 7334              		@ link register save eliminated.
 7335              		.loc 23 597 47 view .LVU1700
 7336 0000 0020     		movs	r0, #0
 7337 0002 FFF7FEBF 		b	rgb_matrix_increase_hue_helper
 7338              	.LVL512:
 7339              		.cfi_endproc
 7340              	.LFE469:
 7342              		.section	.text.rgb_matrix_increase_hue,"ax",%progbits
 7343              		.align	1
 7344              		.global	rgb_matrix_increase_hue
 7345              		.syntax unified
 7346              		.thumb
 7347              		.thumb_func
 7348              		.fpu fpv4-sp-d16
 7350              	rgb_matrix_increase_hue:
 7351              	.LFB470:
 598:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_hue(void) { rgb_matrix_increase_hue_helper(true); }
 7352              		.loc 23 598 36 view -0
 7353              		.cfi_startproc
 7354              		@ args = 0, pretend = 0, frame = 0
 7355              		@ frame_needed = 0, uses_anonymous_args = 0
 7356              		@ link register save eliminated.
 7357              		.loc 23 598 38 view .LVU1702
 7358 0000 0120     		movs	r0, #1
 7359 0002 FFF7FEBF 		b	rgb_matrix_increase_hue_helper
 7360              	.LVL513:
 7361              		.cfi_endproc
 7362              	.LFE470:
 7364              		.section	.text.rgb_matrix_decrease_hue_helper,"ax",%progbits
 7365              		.align	1
 7366              		.global	rgb_matrix_decrease_hue_helper
 7367              		.syntax unified
 7368              		.thumb
 7369              		.thumb_func
 7370              		.fpu fpv4-sp-d16
 7372              	rgb_matrix_decrease_hue_helper:
 7373              	.LVL514:
 7374              	.LFB471:
 599:quantum/rgb_matrix/rgb_matrix.c **** 
 600:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_hue_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7375              		.loc 23 600 59 view -0
 7376              		.cfi_startproc
 7377              		@ args = 0, pretend = 0, frame = 0
 7378              		@ frame_needed = 0, uses_anonymous_args = 0
 7379              		@ link register save eliminated.
 7380              		.loc 23 600 61 view .LVU1704
 7381 0000 0549     		ldr	r1, .L493
 7382              		.loc 23 600 59 is_stmt 0 view .LVU1705
 7383 0002 10B4     		push	{r4}
 7384              		.cfi_def_cfa_offset 4
 7385              		.cfi_offset 4, -4
 7386              		.loc 23 600 114 view .LVU1706
 7387 0004 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 7388              		.loc 23 600 61 view .LVU1707
 7389 0006 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 7390 0008 8978     		ldrb	r1, [r1, #2]	@ zero_extendqisi2
 7391 000a 083C     		subs	r4, r4, #8
 7392              		.loc 23 600 59 view .LVU1708
 7393 000c 0346     		mov	r3, r0
 7394              		.loc 23 600 61 view .LVU1709
 7395 000e A0B2     		uxth	r0, r4
 7396              	.LVL515:
 7397              		.loc 23 600 208 view .LVU1710
 7398 0010 5DF8044B 		ldr	r4, [sp], #4
 7399              		.cfi_restore 4
 7400              		.cfi_def_cfa_offset 0
 7401              		.loc 23 600 61 view .LVU1711
 7402 0014 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7403              	.LVL516:
 7404              	.L494:
 7405              		.align	2
 7406              	.L493:
 7407 0018 00000000 		.word	rgb_matrix_config
 7408              		.cfi_endproc
 7409              	.LFE471:
 7411              		.section	.text.rgb_matrix_decrease_hue_noeeprom,"ax",%progbits
 7412              		.align	1
 7413              		.global	rgb_matrix_decrease_hue_noeeprom
 7414              		.syntax unified
 7415              		.thumb
 7416              		.thumb_func
 7417              		.fpu fpv4-sp-d16
 7419              	rgb_matrix_decrease_hue_noeeprom:
 7420              	.LFB472:
 601:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_hue_noeeprom(void) { rgb_matrix_decrease_hue_helper(false); }
 7421              		.loc 23 601 45 is_stmt 1 view -0
 7422              		.cfi_startproc
 7423              		@ args = 0, pretend = 0, frame = 0
 7424              		@ frame_needed = 0, uses_anonymous_args = 0
 7425              		@ link register save eliminated.
 7426              		.loc 23 601 47 view .LVU1713
 7427 0000 0020     		movs	r0, #0
 7428 0002 FFF7FEBF 		b	rgb_matrix_decrease_hue_helper
 7429              	.LVL517:
 7430              		.cfi_endproc
 7431              	.LFE472:
 7433              		.section	.text.rgb_matrix_decrease_hue,"ax",%progbits
 7434              		.align	1
 7435              		.global	rgb_matrix_decrease_hue
 7436              		.syntax unified
 7437              		.thumb
 7438              		.thumb_func
 7439              		.fpu fpv4-sp-d16
 7441              	rgb_matrix_decrease_hue:
 7442              	.LFB473:
 602:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_hue(void) { rgb_matrix_decrease_hue_helper(true); }
 7443              		.loc 23 602 36 view -0
 7444              		.cfi_startproc
 7445              		@ args = 0, pretend = 0, frame = 0
 7446              		@ frame_needed = 0, uses_anonymous_args = 0
 7447              		@ link register save eliminated.
 7448              		.loc 23 602 38 view .LVU1715
 7449 0000 0120     		movs	r0, #1
 7450 0002 FFF7FEBF 		b	rgb_matrix_decrease_hue_helper
 7451              	.LVL518:
 7452              		.cfi_endproc
 7453              	.LFE473:
 7455              		.section	.text.rgb_matrix_increase_sat_helper,"ax",%progbits
 7456              		.align	1
 7457              		.global	rgb_matrix_increase_sat_helper
 7458              		.syntax unified
 7459              		.thumb
 7460              		.thumb_func
 7461              		.fpu fpv4-sp-d16
 7463              	rgb_matrix_increase_sat_helper:
 7464              	.LVL519:
 7465              	.LFB474:
 603:quantum/rgb_matrix/rgb_matrix.c **** 
 604:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_sat_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7466              		.loc 23 604 59 view -0
 7467              		.cfi_startproc
 7468              		@ args = 0, pretend = 0, frame = 0
 7469              		@ frame_needed = 0, uses_anonymous_args = 0
 7470              		@ link register save eliminated.
 7471              		.loc 23 604 61 view .LVU1717
 7472              	.LBB396:
 7473              	.LBI396:
  23:./lib/lib8tion/math8.h **** {
 7474              		.loc 1 23 34 view .LVU1718
 7475              	.LBB397:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7476              		.loc 1 26 5 view .LVU1719
 7477              	.LBE397:
 7478              	.LBE396:
 7479              		.loc 23 604 59 is_stmt 0 view .LVU1720
 7480 0000 10B4     		push	{r4}
 7481              		.cfi_def_cfa_offset 4
 7482              		.cfi_offset 4, -4
 7483              		.loc 23 604 61 view .LVU1721
 7484 0002 074C     		ldr	r4, .L498
 7485              	.LBB400:
 7486              	.LBB398:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7487              		.loc 1 26 20 view .LVU1722
 7488 0004 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7489              	.LBE398:
 7490              	.LBE400:
 7491              		.loc 23 604 61 view .LVU1723
 7492 0006 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7493              	.LBB401:
 7494              	.LBB399:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7495              		.loc 1 26 14 view .LVU1724
 7496 0008 1031     		adds	r1, r1, #16
 7497              	.LVL520:
  27:./lib/lib8tion/math8.h ****     return t;
 7498              		.loc 1 27 5 is_stmt 1 view .LVU1725
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7499              		.loc 1 28 5 view .LVU1726
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7500              		.loc 1 28 12 is_stmt 0 view .LVU1727
 7501 000a FF29     		cmp	r1, #255
 7502 000c 28BF     		it	cs
 7503 000e FF21     		movcs	r1, #255
 7504              	.LBE399:
 7505              	.LBE401:
 7506              		.loc 23 604 59 view .LVU1728
 7507 0010 0346     		mov	r3, r0
 7508              		.loc 23 604 61 view .LVU1729
 7509 0012 C9B2     		uxtb	r1, r1
 7510 0014 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7511              	.LVL521:
 7512              		.loc 23 604 214 view .LVU1730
 7513 0016 5DF8044B 		ldr	r4, [sp], #4
 7514              		.cfi_restore 4
 7515              		.cfi_def_cfa_offset 0
 7516              		.loc 23 604 61 view .LVU1731
 7517 001a FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7518              	.LVL522:
 7519              	.L499:
 7520 001e 00BF     		.align	2
 7521              	.L498:
 7522 0020 00000000 		.word	rgb_matrix_config
 7523              		.cfi_endproc
 7524              	.LFE474:
 7526              		.section	.text.rgb_matrix_increase_sat_noeeprom,"ax",%progbits
 7527              		.align	1
 7528              		.global	rgb_matrix_increase_sat_noeeprom
 7529              		.syntax unified
 7530              		.thumb
 7531              		.thumb_func
 7532              		.fpu fpv4-sp-d16
 7534              	rgb_matrix_increase_sat_noeeprom:
 7535              	.LFB475:
 605:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_sat_noeeprom(void) { rgb_matrix_increase_sat_helper(false); }
 7536              		.loc 23 605 45 is_stmt 1 view -0
 7537              		.cfi_startproc
 7538              		@ args = 0, pretend = 0, frame = 0
 7539              		@ frame_needed = 0, uses_anonymous_args = 0
 7540              		@ link register save eliminated.
 7541              		.loc 23 605 47 view .LVU1733
 7542 0000 0020     		movs	r0, #0
 7543 0002 FFF7FEBF 		b	rgb_matrix_increase_sat_helper
 7544              	.LVL523:
 7545              		.cfi_endproc
 7546              	.LFE475:
 7548              		.section	.text.rgb_matrix_increase_sat,"ax",%progbits
 7549              		.align	1
 7550              		.global	rgb_matrix_increase_sat
 7551              		.syntax unified
 7552              		.thumb
 7553              		.thumb_func
 7554              		.fpu fpv4-sp-d16
 7556              	rgb_matrix_increase_sat:
 7557              	.LFB476:
 606:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_sat(void) { rgb_matrix_increase_sat_helper(true); }
 7558              		.loc 23 606 36 view -0
 7559              		.cfi_startproc
 7560              		@ args = 0, pretend = 0, frame = 0
 7561              		@ frame_needed = 0, uses_anonymous_args = 0
 7562              		@ link register save eliminated.
 7563              		.loc 23 606 38 view .LVU1735
 7564 0000 0120     		movs	r0, #1
 7565 0002 FFF7FEBF 		b	rgb_matrix_increase_sat_helper
 7566              	.LVL524:
 7567              		.cfi_endproc
 7568              	.LFE476:
 7570              		.section	.text.rgb_matrix_decrease_sat_helper,"ax",%progbits
 7571              		.align	1
 7572              		.global	rgb_matrix_decrease_sat_helper
 7573              		.syntax unified
 7574              		.thumb
 7575              		.thumb_func
 7576              		.fpu fpv4-sp-d16
 7578              	rgb_matrix_decrease_sat_helper:
 7579              	.LVL525:
 7580              	.LFB477:
 607:quantum/rgb_matrix/rgb_matrix.c **** 
 608:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_sat_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7581              		.loc 23 608 59 view -0
 7582              		.cfi_startproc
 7583              		@ args = 0, pretend = 0, frame = 0
 7584              		@ frame_needed = 0, uses_anonymous_args = 0
 7585              		@ link register save eliminated.
 7586              		.loc 23 608 61 view .LVU1737
 7587              	.LBB402:
 7588              	.LBI402:
  88:./lib/lib8tion/math8.h **** {
 7589              		.loc 1 88 34 view .LVU1738
 7590              	.LBB403:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7591              		.loc 1 91 5 view .LVU1739
 7592              	.LBE403:
 7593              	.LBE402:
 7594              		.loc 23 608 59 is_stmt 0 view .LVU1740
 7595 0000 10B4     		push	{r4}
 7596              		.cfi_def_cfa_offset 4
 7597              		.cfi_offset 4, -4
 7598              		.loc 23 608 61 view .LVU1741
 7599 0002 064C     		ldr	r4, .L503
 7600              	.LBB406:
 7601              	.LBB404:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7602              		.loc 1 91 19 view .LVU1742
 7603 0004 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7604              	.LBE404:
 7605              	.LBE406:
 7606              		.loc 23 608 61 view .LVU1743
 7607 0006 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7608              	.LBB407:
 7609              	.LBB405:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7610              		.loc 1 91 19 view .LVU1744
 7611 0008 1039     		subs	r1, r1, #16
 7612              	.LVL526:
  92:./lib/lib8tion/math8.h ****     return t;
 7613              		.loc 1 92 5 is_stmt 1 view .LVU1745
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7614              		.loc 1 93 5 view .LVU1746
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7615              		.loc 1 93 12 is_stmt 0 view .LVU1747
 7616 000a 21EAE171 		bic	r1, r1, r1, asr #31
 7617              	.LBE405:
 7618              	.LBE407:
 7619              		.loc 23 608 59 view .LVU1748
 7620 000e 0346     		mov	r3, r0
 7621              		.loc 23 608 61 view .LVU1749
 7622 0010 C9B2     		uxtb	r1, r1
 7623 0012 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7624              	.LVL527:
 7625              		.loc 23 608 214 view .LVU1750
 7626 0014 5DF8044B 		ldr	r4, [sp], #4
 7627              		.cfi_restore 4
 7628              		.cfi_def_cfa_offset 0
 7629              		.loc 23 608 61 view .LVU1751
 7630 0018 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7631              	.LVL528:
 7632              	.L504:
 7633              		.align	2
 7634              	.L503:
 7635 001c 00000000 		.word	rgb_matrix_config
 7636              		.cfi_endproc
 7637              	.LFE477:
 7639              		.section	.text.rgb_matrix_decrease_sat_noeeprom,"ax",%progbits
 7640              		.align	1
 7641              		.global	rgb_matrix_decrease_sat_noeeprom
 7642              		.syntax unified
 7643              		.thumb
 7644              		.thumb_func
 7645              		.fpu fpv4-sp-d16
 7647              	rgb_matrix_decrease_sat_noeeprom:
 7648              	.LFB478:
 609:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_sat_noeeprom(void) { rgb_matrix_decrease_sat_helper(false); }
 7649              		.loc 23 609 45 is_stmt 1 view -0
 7650              		.cfi_startproc
 7651              		@ args = 0, pretend = 0, frame = 0
 7652              		@ frame_needed = 0, uses_anonymous_args = 0
 7653              		@ link register save eliminated.
 7654              		.loc 23 609 47 view .LVU1753
 7655 0000 0020     		movs	r0, #0
 7656 0002 FFF7FEBF 		b	rgb_matrix_decrease_sat_helper
 7657              	.LVL529:
 7658              		.cfi_endproc
 7659              	.LFE478:
 7661              		.section	.text.rgb_matrix_decrease_sat,"ax",%progbits
 7662              		.align	1
 7663              		.global	rgb_matrix_decrease_sat
 7664              		.syntax unified
 7665              		.thumb
 7666              		.thumb_func
 7667              		.fpu fpv4-sp-d16
 7669              	rgb_matrix_decrease_sat:
 7670              	.LFB479:
 610:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_sat(void) { rgb_matrix_decrease_sat_helper(true); }
 7671              		.loc 23 610 36 view -0
 7672              		.cfi_startproc
 7673              		@ args = 0, pretend = 0, frame = 0
 7674              		@ frame_needed = 0, uses_anonymous_args = 0
 7675              		@ link register save eliminated.
 7676              		.loc 23 610 38 view .LVU1755
 7677 0000 0120     		movs	r0, #1
 7678 0002 FFF7FEBF 		b	rgb_matrix_decrease_sat_helper
 7679              	.LVL530:
 7680              		.cfi_endproc
 7681              	.LFE479:
 7683              		.section	.text.rgb_matrix_increase_val_helper,"ax",%progbits
 7684              		.align	1
 7685              		.global	rgb_matrix_increase_val_helper
 7686              		.syntax unified
 7687              		.thumb
 7688              		.thumb_func
 7689              		.fpu fpv4-sp-d16
 7691              	rgb_matrix_increase_val_helper:
 7692              	.LVL531:
 7693              	.LFB480:
 611:quantum/rgb_matrix/rgb_matrix.c **** 
 612:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_val_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7694              		.loc 23 612 59 view -0
 7695              		.cfi_startproc
 7696              		@ args = 0, pretend = 0, frame = 0
 7697              		@ frame_needed = 0, uses_anonymous_args = 0
 7698              		@ link register save eliminated.
 7699              		.loc 23 612 61 view .LVU1757
 7700              	.LBB408:
 7701              	.LBI408:
  23:./lib/lib8tion/math8.h **** {
 7702              		.loc 1 23 34 view .LVU1758
 7703              	.LBB409:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7704              		.loc 1 26 5 view .LVU1759
 7705              	.LBE409:
 7706              	.LBE408:
 7707              		.loc 23 612 59 is_stmt 0 view .LVU1760
 7708 0000 10B4     		push	{r4}
 7709              		.cfi_def_cfa_offset 4
 7710              		.cfi_offset 4, -4
 7711              		.loc 23 612 61 view .LVU1761
 7712 0002 074C     		ldr	r4, .L508
 7713              	.LBB412:
 7714              	.LBB410:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7715              		.loc 1 26 20 view .LVU1762
 7716 0004 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7717              	.LBE410:
 7718              	.LBE412:
 7719              		.loc 23 612 61 view .LVU1763
 7720 0006 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7721              	.LBB413:
 7722              	.LBB411:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 7723              		.loc 1 26 14 view .LVU1764
 7724 0008 1032     		adds	r2, r2, #16
 7725              	.LVL532:
  27:./lib/lib8tion/math8.h ****     return t;
 7726              		.loc 1 27 5 is_stmt 1 view .LVU1765
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7727              		.loc 1 28 5 view .LVU1766
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 7728              		.loc 1 28 12 is_stmt 0 view .LVU1767
 7729 000a FF2A     		cmp	r2, #255
 7730 000c 28BF     		it	cs
 7731 000e FF22     		movcs	r2, #255
 7732              	.LBE411:
 7733              	.LBE413:
 7734              		.loc 23 612 59 view .LVU1768
 7735 0010 0346     		mov	r3, r0
 7736              		.loc 23 612 61 view .LVU1769
 7737 0012 D2B2     		uxtb	r2, r2
 7738 0014 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7739              	.LVL533:
 7740              		.loc 23 612 214 view .LVU1770
 7741 0016 5DF8044B 		ldr	r4, [sp], #4
 7742              		.cfi_restore 4
 7743              		.cfi_def_cfa_offset 0
 7744              		.loc 23 612 61 view .LVU1771
 7745 001a FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7746              	.LVL534:
 7747              	.L509:
 7748 001e 00BF     		.align	2
 7749              	.L508:
 7750 0020 00000000 		.word	rgb_matrix_config
 7751              		.cfi_endproc
 7752              	.LFE480:
 7754              		.section	.text.rgb_matrix_increase_val_noeeprom,"ax",%progbits
 7755              		.align	1
 7756              		.global	rgb_matrix_increase_val_noeeprom
 7757              		.syntax unified
 7758              		.thumb
 7759              		.thumb_func
 7760              		.fpu fpv4-sp-d16
 7762              	rgb_matrix_increase_val_noeeprom:
 7763              	.LFB481:
 613:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_val_noeeprom(void) { rgb_matrix_increase_val_helper(false); }
 7764              		.loc 23 613 45 is_stmt 1 view -0
 7765              		.cfi_startproc
 7766              		@ args = 0, pretend = 0, frame = 0
 7767              		@ frame_needed = 0, uses_anonymous_args = 0
 7768              		@ link register save eliminated.
 7769              		.loc 23 613 47 view .LVU1773
 7770 0000 0020     		movs	r0, #0
 7771 0002 FFF7FEBF 		b	rgb_matrix_increase_val_helper
 7772              	.LVL535:
 7773              		.cfi_endproc
 7774              	.LFE481:
 7776              		.section	.text.rgb_matrix_increase_val,"ax",%progbits
 7777              		.align	1
 7778              		.global	rgb_matrix_increase_val
 7779              		.syntax unified
 7780              		.thumb
 7781              		.thumb_func
 7782              		.fpu fpv4-sp-d16
 7784              	rgb_matrix_increase_val:
 7785              	.LFB482:
 614:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_val(void) { rgb_matrix_increase_val_helper(true); }
 7786              		.loc 23 614 36 view -0
 7787              		.cfi_startproc
 7788              		@ args = 0, pretend = 0, frame = 0
 7789              		@ frame_needed = 0, uses_anonymous_args = 0
 7790              		@ link register save eliminated.
 7791              		.loc 23 614 38 view .LVU1775
 7792 0000 0120     		movs	r0, #1
 7793 0002 FFF7FEBF 		b	rgb_matrix_increase_val_helper
 7794              	.LVL536:
 7795              		.cfi_endproc
 7796              	.LFE482:
 7798              		.section	.text.rgb_matrix_decrease_val_helper,"ax",%progbits
 7799              		.align	1
 7800              		.global	rgb_matrix_decrease_val_helper
 7801              		.syntax unified
 7802              		.thumb
 7803              		.thumb_func
 7804              		.fpu fpv4-sp-d16
 7806              	rgb_matrix_decrease_val_helper:
 7807              	.LVL537:
 7808              	.LFB483:
 615:quantum/rgb_matrix/rgb_matrix.c **** 
 616:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_val_helper(bool write_to_eeprom) { rgb_matrix_sethsv_eeprom_helper(rgb_mat
 7809              		.loc 23 616 59 view -0
 7810              		.cfi_startproc
 7811              		@ args = 0, pretend = 0, frame = 0
 7812              		@ frame_needed = 0, uses_anonymous_args = 0
 7813              		@ link register save eliminated.
 7814              		.loc 23 616 61 view .LVU1777
 7815              	.LBB414:
 7816              	.LBI414:
  88:./lib/lib8tion/math8.h **** {
 7817              		.loc 1 88 34 view .LVU1778
 7818              	.LBB415:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7819              		.loc 1 91 5 view .LVU1779
 7820              	.LBE415:
 7821              	.LBE414:
 7822              		.loc 23 616 59 is_stmt 0 view .LVU1780
 7823 0000 10B4     		push	{r4}
 7824              		.cfi_def_cfa_offset 4
 7825              		.cfi_offset 4, -4
 7826              		.loc 23 616 61 view .LVU1781
 7827 0002 064C     		ldr	r4, .L513
 7828              	.LBB418:
 7829              	.LBB416:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7830              		.loc 1 91 19 view .LVU1782
 7831 0004 E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 7832              	.LBE416:
 7833              	.LBE418:
 7834              		.loc 23 616 61 view .LVU1783
 7835 0006 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 7836              	.LBB419:
 7837              	.LBB417:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 7838              		.loc 1 91 19 view .LVU1784
 7839 0008 103A     		subs	r2, r2, #16
 7840              	.LVL538:
  92:./lib/lib8tion/math8.h ****     return t;
 7841              		.loc 1 92 5 is_stmt 1 view .LVU1785
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7842              		.loc 1 93 5 view .LVU1786
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 7843              		.loc 1 93 12 is_stmt 0 view .LVU1787
 7844 000a 22EAE272 		bic	r2, r2, r2, asr #31
 7845              	.LBE417:
 7846              	.LBE419:
 7847              		.loc 23 616 59 view .LVU1788
 7848 000e 0346     		mov	r3, r0
 7849              		.loc 23 616 61 view .LVU1789
 7850 0010 D2B2     		uxtb	r2, r2
 7851 0012 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 7852              	.LVL539:
 7853              		.loc 23 616 214 view .LVU1790
 7854 0014 5DF8044B 		ldr	r4, [sp], #4
 7855              		.cfi_restore 4
 7856              		.cfi_def_cfa_offset 0
 7857              		.loc 23 616 61 view .LVU1791
 7858 0018 FFF7FEBF 		b	rgb_matrix_sethsv_eeprom_helper
 7859              	.LVL540:
 7860              	.L514:
 7861              		.align	2
 7862              	.L513:
 7863 001c 00000000 		.word	rgb_matrix_config
 7864              		.cfi_endproc
 7865              	.LFE483:
 7867              		.section	.text.rgb_matrix_decrease_val_noeeprom,"ax",%progbits
 7868              		.align	1
 7869              		.global	rgb_matrix_decrease_val_noeeprom
 7870              		.syntax unified
 7871              		.thumb
 7872              		.thumb_func
 7873              		.fpu fpv4-sp-d16
 7875              	rgb_matrix_decrease_val_noeeprom:
 7876              	.LFB484:
 617:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_val_noeeprom(void) { rgb_matrix_decrease_val_helper(false); }
 7877              		.loc 23 617 45 is_stmt 1 view -0
 7878              		.cfi_startproc
 7879              		@ args = 0, pretend = 0, frame = 0
 7880              		@ frame_needed = 0, uses_anonymous_args = 0
 7881              		@ link register save eliminated.
 7882              		.loc 23 617 47 view .LVU1793
 7883 0000 0020     		movs	r0, #0
 7884 0002 FFF7FEBF 		b	rgb_matrix_decrease_val_helper
 7885              	.LVL541:
 7886              		.cfi_endproc
 7887              	.LFE484:
 7889              		.section	.text.rgb_matrix_decrease_val,"ax",%progbits
 7890              		.align	1
 7891              		.global	rgb_matrix_decrease_val
 7892              		.syntax unified
 7893              		.thumb
 7894              		.thumb_func
 7895              		.fpu fpv4-sp-d16
 7897              	rgb_matrix_decrease_val:
 7898              	.LFB485:
 618:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_val(void) { rgb_matrix_decrease_val_helper(true); }
 7899              		.loc 23 618 36 view -0
 7900              		.cfi_startproc
 7901              		@ args = 0, pretend = 0, frame = 0
 7902              		@ frame_needed = 0, uses_anonymous_args = 0
 7903              		@ link register save eliminated.
 7904              		.loc 23 618 38 view .LVU1795
 7905 0000 0120     		movs	r0, #1
 7906 0002 FFF7FEBF 		b	rgb_matrix_decrease_val_helper
 7907              	.LVL542:
 7908              		.cfi_endproc
 7909              	.LFE485:
 7911              		.section	.rodata.rgb_matrix_set_speed_eeprom_helper.str1.1,"aMS",%progbits,1
 7912              	.LC17:
 7913 0000 72676220 		.ascii	"rgb matrix set speed [%s]: %u\012\000"
 7913      6D617472 
 7913      69782073 
 7913      65742073 
 7913      70656564 
 7914              		.section	.text.rgb_matrix_set_speed_eeprom_helper,"ax",%progbits
 7915              		.align	1
 7916              		.global	rgb_matrix_set_speed_eeprom_helper
 7917              		.syntax unified
 7918              		.thumb
 7919              		.thumb_func
 7920              		.fpu fpv4-sp-d16
 7922              	rgb_matrix_set_speed_eeprom_helper:
 7923              	.LVL543:
 7924              	.LFB486:
 619:quantum/rgb_matrix/rgb_matrix.c **** 
 620:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_speed_eeprom_helper(uint8_t speed, bool write_to_eeprom) {
 7925              		.loc 23 620 78 view -0
 7926              		.cfi_startproc
 7927              		@ args = 0, pretend = 0, frame = 0
 7928              		@ frame_needed = 0, uses_anonymous_args = 0
 7929              		@ link register save eliminated.
 621:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed = speed;
 7930              		.loc 23 621 5 view .LVU1797
 7931              		.loc 23 621 29 is_stmt 0 view .LVU1798
 7932 0000 0A4B     		ldr	r3, .L521
 622:quantum/rgb_matrix/rgb_matrix.c ****     rgb_eeconfig_update(write_to_eeprom);
 7933              		.loc 23 622 5 view .LVU1799
 7934 0002 0B4A     		ldr	r2, .L521+4
 621:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed = speed;
 7935              		.loc 23 621 29 view .LVU1800
 7936 0004 1871     		strb	r0, [r3, #4]
 7937              		.loc 23 622 5 is_stmt 1 view .LVU1801
 7938 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 7939 0008 0B43     		orrs	r3, r3, r1
 7940 000a 1370     		strb	r3, [r2]
 623:quantum/rgb_matrix/rgb_matrix.c ****     dprintf("rgb matrix set speed [%s]: %u\n", (write_to_eeprom) ? "EEPROM" : "NOEEPROM", rgb_matri
 7941              		.loc 23 623 5 view .LVU1802
 7942              		.loc 23 623 5 view .LVU1803
 7943 000c 094B     		ldr	r3, .L521+8
 7944 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7945 0010 DB07     		lsls	r3, r3, #31
 7946 0012 09D5     		bpl	.L517
 7947              	.LVL544:
 7948              	.LBB422:
 7949              	.LBI422:
 620:quantum/rgb_matrix/rgb_matrix.c ****     rgb_matrix_config.speed = speed;
 7950              		.loc 23 620 6 view .LVU1804
 7951              	.LBB423:
 7952              		.loc 23 623 5 view .LVU1805
 7953 0014 084B     		ldr	r3, .L521+12
 7954 0016 0246     		mov	r2, r0
 7955 0018 0848     		ldr	r0, .L521+16
 7956              	.LVL545:
 7957              		.loc 23 623 5 is_stmt 0 view .LVU1806
 7958 001a 0029     		cmp	r1, #0
 7959 001c 14BF     		ite	ne
 7960 001e 0146     		movne	r1, r0
 7961 0020 1946     		moveq	r1, r3
 7962              	.LVL546:
 7963              		.loc 23 623 5 view .LVU1807
 7964 0022 0748     		ldr	r0, .L521+20
 7965 0024 FFF7FEBF 		b	printf_
 7966              	.LVL547:
 7967              	.L517:
 7968              		.loc 23 623 5 view .LVU1808
 7969              	.LBE423:
 7970              	.LBE422:
 624:quantum/rgb_matrix/rgb_matrix.c **** }
 7971              		.loc 23 624 1 view .LVU1809
 7972 0028 7047     		bx	lr
 7973              	.L522:
 7974 002a 00BF     		.align	2
 7975              	.L521:
 7976 002c 00000000 		.word	rgb_matrix_config
 7977 0030 00000000 		.word	.LANCHOR8
 7978 0034 00000000 		.word	debug_config
 7979 0038 07000000 		.word	.LC13
 7980 003c 00000000 		.word	.LC12
 7981 0040 00000000 		.word	.LC17
 7982              		.cfi_endproc
 7983              	.LFE486:
 7985              		.section	.text.rgb_matrix_set_speed_noeeprom,"ax",%progbits
 7986              		.align	1
 7987              		.global	rgb_matrix_set_speed_noeeprom
 7988              		.syntax unified
 7989              		.thumb
 7990              		.thumb_func
 7991              		.fpu fpv4-sp-d16
 7993              	rgb_matrix_set_speed_noeeprom:
 7994              	.LVL548:
 7995              	.LFB487:
 625:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_speed_noeeprom(uint8_t speed) { rgb_matrix_set_speed_eeprom_helper(speed, false
 7996              		.loc 23 625 51 is_stmt 1 view -0
 7997              		.cfi_startproc
 7998              		@ args = 0, pretend = 0, frame = 0
 7999              		@ frame_needed = 0, uses_anonymous_args = 0
 8000              		@ link register save eliminated.
 8001              		.loc 23 625 53 view .LVU1811
 8002 0000 0021     		movs	r1, #0
 8003 0002 FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 8004              	.LVL549:
 8005              		.loc 23 625 53 is_stmt 0 view .LVU1812
 8006              		.cfi_endproc
 8007              	.LFE487:
 8009              		.section	.text.rgb_matrix_set_speed,"ax",%progbits
 8010              		.align	1
 8011              		.global	rgb_matrix_set_speed
 8012              		.syntax unified
 8013              		.thumb
 8014              		.thumb_func
 8015              		.fpu fpv4-sp-d16
 8017              	rgb_matrix_set_speed:
 8018              	.LVL550:
 8019              	.LFB488:
 626:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_speed(uint8_t speed) { rgb_matrix_set_speed_eeprom_helper(speed, true); }
 8020              		.loc 23 626 42 is_stmt 1 view -0
 8021              		.cfi_startproc
 8022              		@ args = 0, pretend = 0, frame = 0
 8023              		@ frame_needed = 0, uses_anonymous_args = 0
 8024              		@ link register save eliminated.
 8025              		.loc 23 626 44 view .LVU1814
 8026 0000 0121     		movs	r1, #1
 8027 0002 FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 8028              	.LVL551:
 8029              		.loc 23 626 44 is_stmt 0 view .LVU1815
 8030              		.cfi_endproc
 8031              	.LFE488:
 8033              		.section	.text.rgb_matrix_get_speed,"ax",%progbits
 8034              		.align	1
 8035              		.global	rgb_matrix_get_speed
 8036              		.syntax unified
 8037              		.thumb
 8038              		.thumb_func
 8039              		.fpu fpv4-sp-d16
 8041              	rgb_matrix_get_speed:
 8042              	.LFB489:
 627:quantum/rgb_matrix/rgb_matrix.c **** 
 628:quantum/rgb_matrix/rgb_matrix.c **** uint8_t rgb_matrix_get_speed(void) { return rgb_matrix_config.speed; }
 8043              		.loc 23 628 36 is_stmt 1 view -0
 8044              		.cfi_startproc
 8045              		@ args = 0, pretend = 0, frame = 0
 8046              		@ frame_needed = 0, uses_anonymous_args = 0
 8047              		@ link register save eliminated.
 8048              		.loc 23 628 38 view .LVU1817
 8049              		.loc 23 628 70 is_stmt 0 view .LVU1818
 8050 0000 014B     		ldr	r3, .L526
 8051 0002 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 8052 0004 7047     		bx	lr
 8053              	.L527:
 8054 0006 00BF     		.align	2
 8055              	.L526:
 8056 0008 00000000 		.word	rgb_matrix_config
 8057              		.cfi_endproc
 8058              	.LFE489:
 8060              		.section	.text.rgb_matrix_increase_speed_helper,"ax",%progbits
 8061              		.align	1
 8062              		.global	rgb_matrix_increase_speed_helper
 8063              		.syntax unified
 8064              		.thumb
 8065              		.thumb_func
 8066              		.fpu fpv4-sp-d16
 8068              	rgb_matrix_increase_speed_helper:
 8069              	.LVL552:
 8070              	.LFB490:
 629:quantum/rgb_matrix/rgb_matrix.c **** 
 630:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_speed_helper(bool write_to_eeprom) { rgb_matrix_set_speed_eeprom_helper(qa
 8071              		.loc 23 630 61 is_stmt 1 view -0
 8072              		.cfi_startproc
 8073              		@ args = 0, pretend = 0, frame = 0
 8074              		@ frame_needed = 0, uses_anonymous_args = 0
 8075              		@ link register save eliminated.
 8076              		.loc 23 630 63 view .LVU1820
 8077              	.LBB424:
 8078              	.LBI424:
  23:./lib/lib8tion/math8.h **** {
 8079              		.loc 1 23 34 view .LVU1821
 8080              	.LBB425:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8081              		.loc 1 26 5 view .LVU1822
 8082              	.LBE425:
 8083              	.LBE424:
 8084              		.loc 23 630 63 is_stmt 0 view .LVU1823
 8085 0000 044B     		ldr	r3, .L529
 8086              	.LBB427:
 8087              	.LBB426:
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8088              		.loc 1 26 20 view .LVU1824
 8089 0002 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  26:./lib/lib8tion/math8.h ****     if (t > 255) t = 255;
 8090              		.loc 1 26 14 view .LVU1825
 8091 0004 1033     		adds	r3, r3, #16
 8092              	.LVL553:
  27:./lib/lib8tion/math8.h ****     return t;
 8093              		.loc 1 27 5 is_stmt 1 view .LVU1826
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8094              		.loc 1 28 5 view .LVU1827
  28:./lib/lib8tion/math8.h **** #elif QADD8_AVRASM == 1
 8095              		.loc 1 28 12 is_stmt 0 view .LVU1828
 8096 0006 FF2B     		cmp	r3, #255
 8097 0008 28BF     		it	cs
 8098 000a FF23     		movcs	r3, #255
 8099              	.LBE426:
 8100              	.LBE427:
 8101              		.loc 23 630 61 view .LVU1829
 8102 000c 0146     		mov	r1, r0
 8103              		.loc 23 630 63 view .LVU1830
 8104 000e D8B2     		uxtb	r0, r3
 8105              	.LVL554:
 8106              		.loc 23 630 63 view .LVU1831
 8107 0010 FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 8108              	.LVL555:
 8109              	.L530:
 8110              		.align	2
 8111              	.L529:
 8112 0014 00000000 		.word	rgb_matrix_config
 8113              		.cfi_endproc
 8114              	.LFE490:
 8116              		.section	.text.rgb_matrix_increase_speed_noeeprom,"ax",%progbits
 8117              		.align	1
 8118              		.global	rgb_matrix_increase_speed_noeeprom
 8119              		.syntax unified
 8120              		.thumb
 8121              		.thumb_func
 8122              		.fpu fpv4-sp-d16
 8124              	rgb_matrix_increase_speed_noeeprom:
 8125              	.LFB491:
 631:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_speed_noeeprom(void) { rgb_matrix_increase_speed_helper(false); }
 8126              		.loc 23 631 47 is_stmt 1 view -0
 8127              		.cfi_startproc
 8128              		@ args = 0, pretend = 0, frame = 0
 8129              		@ frame_needed = 0, uses_anonymous_args = 0
 8130              		@ link register save eliminated.
 8131              		.loc 23 631 49 view .LVU1833
 8132 0000 0020     		movs	r0, #0
 8133 0002 FFF7FEBF 		b	rgb_matrix_increase_speed_helper
 8134              	.LVL556:
 8135              		.cfi_endproc
 8136              	.LFE491:
 8138              		.section	.text.rgb_matrix_increase_speed,"ax",%progbits
 8139              		.align	1
 8140              		.global	rgb_matrix_increase_speed
 8141              		.syntax unified
 8142              		.thumb
 8143              		.thumb_func
 8144              		.fpu fpv4-sp-d16
 8146              	rgb_matrix_increase_speed:
 8147              	.LFB492:
 632:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_increase_speed(void) { rgb_matrix_increase_speed_helper(true); }
 8148              		.loc 23 632 38 view -0
 8149              		.cfi_startproc
 8150              		@ args = 0, pretend = 0, frame = 0
 8151              		@ frame_needed = 0, uses_anonymous_args = 0
 8152              		@ link register save eliminated.
 8153              		.loc 23 632 40 view .LVU1835
 8154 0000 0120     		movs	r0, #1
 8155 0002 FFF7FEBF 		b	rgb_matrix_increase_speed_helper
 8156              	.LVL557:
 8157              		.cfi_endproc
 8158              	.LFE492:
 8160              		.section	.text.rgb_matrix_decrease_speed_helper,"ax",%progbits
 8161              		.align	1
 8162              		.global	rgb_matrix_decrease_speed_helper
 8163              		.syntax unified
 8164              		.thumb
 8165              		.thumb_func
 8166              		.fpu fpv4-sp-d16
 8168              	rgb_matrix_decrease_speed_helper:
 8169              	.LVL558:
 8170              	.LFB493:
 633:quantum/rgb_matrix/rgb_matrix.c **** 
 634:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_speed_helper(bool write_to_eeprom) { rgb_matrix_set_speed_eeprom_helper(qs
 8171              		.loc 23 634 61 view -0
 8172              		.cfi_startproc
 8173              		@ args = 0, pretend = 0, frame = 0
 8174              		@ frame_needed = 0, uses_anonymous_args = 0
 8175              		@ link register save eliminated.
 8176              		.loc 23 634 63 view .LVU1837
 8177              	.LBB428:
 8178              	.LBI428:
  88:./lib/lib8tion/math8.h **** {
 8179              		.loc 1 88 34 view .LVU1838
 8180              	.LBB429:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8181              		.loc 1 91 5 view .LVU1839
 8182              	.LBE429:
 8183              	.LBE428:
 8184              		.loc 23 634 63 is_stmt 0 view .LVU1840
 8185 0000 044B     		ldr	r3, .L534
 8186              	.LBB431:
 8187              	.LBB430:
  91:./lib/lib8tion/math8.h ****     if (t < 0) t = 0;
 8188              		.loc 1 91 19 view .LVU1841
 8189 0002 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8190 0004 103B     		subs	r3, r3, #16
 8191              	.LVL559:
  92:./lib/lib8tion/math8.h ****     return t;
 8192              		.loc 1 92 5 is_stmt 1 view .LVU1842
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8193              		.loc 1 93 5 view .LVU1843
  93:./lib/lib8tion/math8.h **** #elif QSUB8_AVRASM == 1
 8194              		.loc 1 93 12 is_stmt 0 view .LVU1844
 8195 0006 23EAE373 		bic	r3, r3, r3, asr #31
 8196              	.LBE430:
 8197              	.LBE431:
 8198              		.loc 23 634 61 view .LVU1845
 8199 000a 0146     		mov	r1, r0
 8200              		.loc 23 634 63 view .LVU1846
 8201 000c D8B2     		uxtb	r0, r3
 8202              	.LVL560:
 8203              		.loc 23 634 63 view .LVU1847
 8204 000e FFF7FEBF 		b	rgb_matrix_set_speed_eeprom_helper
 8205              	.LVL561:
 8206              	.L535:
 8207 0012 00BF     		.align	2
 8208              	.L534:
 8209 0014 00000000 		.word	rgb_matrix_config
 8210              		.cfi_endproc
 8211              	.LFE493:
 8213              		.section	.text.rgb_matrix_decrease_speed_noeeprom,"ax",%progbits
 8214              		.align	1
 8215              		.global	rgb_matrix_decrease_speed_noeeprom
 8216              		.syntax unified
 8217              		.thumb
 8218              		.thumb_func
 8219              		.fpu fpv4-sp-d16
 8221              	rgb_matrix_decrease_speed_noeeprom:
 8222              	.LFB494:
 635:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_speed_noeeprom(void) { rgb_matrix_decrease_speed_helper(false); }
 8223              		.loc 23 635 47 is_stmt 1 view -0
 8224              		.cfi_startproc
 8225              		@ args = 0, pretend = 0, frame = 0
 8226              		@ frame_needed = 0, uses_anonymous_args = 0
 8227              		@ link register save eliminated.
 8228              		.loc 23 635 49 view .LVU1849
 8229 0000 0020     		movs	r0, #0
 8230 0002 FFF7FEBF 		b	rgb_matrix_decrease_speed_helper
 8231              	.LVL562:
 8232              		.cfi_endproc
 8233              	.LFE494:
 8235              		.section	.text.rgb_matrix_decrease_speed,"ax",%progbits
 8236              		.align	1
 8237              		.global	rgb_matrix_decrease_speed
 8238              		.syntax unified
 8239              		.thumb
 8240              		.thumb_func
 8241              		.fpu fpv4-sp-d16
 8243              	rgb_matrix_decrease_speed:
 8244              	.LFB495:
 636:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_decrease_speed(void) { rgb_matrix_decrease_speed_helper(true); }
 8245              		.loc 23 636 38 view -0
 8246              		.cfi_startproc
 8247              		@ args = 0, pretend = 0, frame = 0
 8248              		@ frame_needed = 0, uses_anonymous_args = 0
 8249              		@ link register save eliminated.
 8250              		.loc 23 636 40 view .LVU1851
 8251 0000 0120     		movs	r0, #1
 8252 0002 FFF7FEBF 		b	rgb_matrix_decrease_speed_helper
 8253              	.LVL563:
 8254              		.cfi_endproc
 8255              	.LFE495:
 8257              		.section	.text.rgb_matrix_get_flags,"ax",%progbits
 8258              		.align	1
 8259              		.global	rgb_matrix_get_flags
 8260              		.syntax unified
 8261              		.thumb
 8262              		.thumb_func
 8263              		.fpu fpv4-sp-d16
 8265              	rgb_matrix_get_flags:
 8266              	.LFB496:
 637:quantum/rgb_matrix/rgb_matrix.c **** 
 638:quantum/rgb_matrix/rgb_matrix.c **** led_flags_t rgb_matrix_get_flags(void) { return rgb_matrix_config.flags; }
 8267              		.loc 23 638 40 view -0
 8268              		.cfi_startproc
 8269              		@ args = 0, pretend = 0, frame = 0
 8270              		@ frame_needed = 0, uses_anonymous_args = 0
 8271              		@ link register save eliminated.
 8272              		.loc 23 638 42 view .LVU1853
 8273              		.loc 23 638 74 is_stmt 0 view .LVU1854
 8274 0000 014B     		ldr	r3, .L539
 8275 0002 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 8276 0004 7047     		bx	lr
 8277              	.L540:
 8278 0006 00BF     		.align	2
 8279              	.L539:
 8280 0008 00000000 		.word	rgb_matrix_config
 8281              		.cfi_endproc
 8282              	.LFE496:
 8284              		.section	.text.rgb_matrix_set_flags,"ax",%progbits
 8285              		.align	1
 8286              		.global	rgb_matrix_set_flags
 8287              		.syntax unified
 8288              		.thumb
 8289              		.thumb_func
 8290              		.fpu fpv4-sp-d16
 8292              	rgb_matrix_set_flags:
 8293              	.LVL564:
 8294              	.LFB497:
 639:quantum/rgb_matrix/rgb_matrix.c **** 
 640:quantum/rgb_matrix/rgb_matrix.c **** void rgb_matrix_set_flags(led_flags_t flags) { rgb_matrix_config.flags = flags; }
 8295              		.loc 23 640 46 is_stmt 1 view -0
 8296              		.cfi_startproc
 8297              		@ args = 0, pretend = 0, frame = 0
 8298              		@ frame_needed = 0, uses_anonymous_args = 0
 8299              		@ link register save eliminated.
 8300              		.loc 23 640 48 view .LVU1856
 8301              		.loc 23 640 72 is_stmt 0 view .LVU1857
 8302 0000 014B     		ldr	r3, .L542
 8303 0002 5871     		strb	r0, [r3, #5]
 8304              		.loc 23 640 81 view .LVU1858
 8305 0004 7047     		bx	lr
 8306              	.L543:
 8307 0006 00BF     		.align	2
 8308              	.L542:
 8309 0008 00000000 		.word	rgb_matrix_config
 8310              		.cfi_endproc
 8311              	.LFE497:
 8313              		.comm	g_rgb_timer,4,4
 8314              		.comm	rgb_matrix_config,8,4
 8315              		.global	k_rgb_matrix_center
 8316              		.section	.rodata
 8317              		.set	.LANCHOR1,. + 0
 8318              	.LC0:
 8319 0000 00       		.byte	0
 8320 0001 FF       		.byte	-1
 8321 0002 FF       		.byte	-1
 8322              		.section	.bss.rgb_timer_buffer,"aw",%nobits
 8323              		.align	2
 8324              		.set	.LANCHOR2,. + 0
 8327              	rgb_timer_buffer:
 8328 0000 00000000 		.space	4
 8329              		.section	.bss.rgb_update_eeprom,"aw",%nobits
 8330              		.set	.LANCHOR8,. + 0
 8333              	rgb_update_eeprom:
 8334 0000 00       		.space	1
 8335              		.section	.bss.suspend_state,"aw",%nobits
 8336              		.set	.LANCHOR3,. + 0
 8339              	suspend_state:
 8340 0000 00       		.space	1
 8341              		.section	.data.rgb_effect_params,"aw"
 8342              		.set	.LANCHOR5,. + 0
 8345              	rgb_effect_params:
 8346 0000 00       		.byte	0
 8347 0001 FF       		.byte	-1
 8348 0002 00       		.byte	0
 8349              		.section	.data.rgb_last_effect,"aw"
 8350              		.set	.LANCHOR6,. + 0
 8353              	rgb_last_effect:
 8354 0000 FF       		.byte	-1
 8355              		.section	.data.rgb_last_enable,"aw"
 8356              		.set	.LANCHOR7,. + 0
 8359              	rgb_last_enable:
 8360 0000 FF       		.byte	-1
 8361              		.section	.data.rgb_task_state,"aw"
 8362              		.set	.LANCHOR4,. + 0
 8365              	rgb_task_state:
 8366 0000 03       		.byte	3
 8367              		.section	.rodata.b_m16_interleave,"a"
 8368              		.set	.LANCHOR0,. + 0
 8371              	b_m16_interleave:
 8372 0000 00313129 		.ascii	"\00011)Z\033u\012"
 8372      5A1B750A 
 8373              		.section	.rodata.k_rgb_matrix_center,"a"
 8376              	k_rgb_matrix_center:
 8377 0000 70       		.byte	112
 8378 0001 20       		.byte	32
 8379              		.text
 8380              	.Letext0:
 8381              		.file 36 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 8382              		.file 37 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 8383              		.file 38 "quantum/color.h"
 8384              		.file 39 "quantum/rgb_matrix/rgb_matrix_types.h"
 8385              		.file 40 "quantum/logging/debug.h"
 8386              		.file 41 "quantum/rgb_matrix/rgb_matrix.h"
 8387              		.file 42 "./lib/lib8tion/lib8tion.h"
 8388              		.file 43 "lib/printf/printf.h"
 8389              		.file 44 "tmk_core/common/eeconfig.h"
 8390              		.file 45 "tmk_core/common/timer.h"
 8391              		.file 46 "tmk_core/common/keyboard.h"
 8392              		.file 47 "tmk_core/common/eeprom.h"
 8393              		.file 48 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\stdlib.h"
 8394              		.file 49 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgb_matrix.c
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:18     .text.sqrt16:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:25     .text.sqrt16:0000000000000000 sqrt16
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:133    .text.sin8_C:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:139    .text.sin8_C:0000000000000000 sin8_C
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:228    .text.sin8_C:0000000000000040 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:233    .text.BAND_SAT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:239    .text.BAND_SAT_math:0000000000000000 BAND_SAT_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:331    .text.BAND_SAT_math:0000000000000054 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:336    .text.BAND_VAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:342    .text.BAND_VAL_math:0000000000000000 BAND_VAL_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:433    .text.BAND_VAL_math:0000000000000054 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:438    .text.CYCLE_ALL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:444    .text.CYCLE_ALL_math:0000000000000000 CYCLE_ALL_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:484    .text.CYCLE_LEFT_RIGHT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:490    .text.CYCLE_LEFT_RIGHT_math:0000000000000000 CYCLE_LEFT_RIGHT_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:534    .text.CYCLE_LEFT_RIGHT_math:0000000000000030 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:539    .text.CYCLE_UP_DOWN_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:545    .text.CYCLE_UP_DOWN_math:0000000000000000 CYCLE_UP_DOWN_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:589    .text.CYCLE_UP_DOWN_math:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:594    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:600    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000000 RAINBOW_MOVING_CHEVRON_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:683    .text.RAINBOW_MOVING_CHEVRON_math:0000000000000050 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:688    .text.CYCLE_OUT_IN_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:694    .text.CYCLE_OUT_IN_math:0000000000000000 CYCLE_OUT_IN_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:740    .text.CYCLE_OUT_IN_DUAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:746    .text.CYCLE_OUT_IN_DUAL_math:0000000000000000 CYCLE_OUT_IN_DUAL_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:827    .text.DUAL_BEACON_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:833    .text.DUAL_BEACON_math:0000000000000000 DUAL_BEACON_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:902    .text.DUAL_BEACON_math:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:907    .text.RAINBOW_BEACON_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:913    .text.RAINBOW_BEACON_math:0000000000000000 RAINBOW_BEACON_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:982    .text.RAINBOW_BEACON_math:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:987    .text.RAINBOW_PINWHEELS_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:993    .text.RAINBOW_PINWHEELS_math:0000000000000000 RAINBOW_PINWHEELS_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1086   .text.RAINBOW_PINWHEELS_math:0000000000000060 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1091   .text.HUE_PENDULUM_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1097   .text.HUE_PENDULUM_math:0000000000000000 HUE_PENDULUM_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1195   .text.HUE_PENDULUM_math:000000000000005c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1200   .text.HUE_WAVE_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1206   .text.HUE_WAVE_math:0000000000000000 HUE_WAVE_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1297   .text.HUE_WAVE_math:0000000000000048 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1302   .text.atan2_8:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1308   .text.atan2_8:0000000000000000 atan2_8
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1395   .text.BAND_PINWHEEL_SAT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1401   .text.BAND_PINWHEEL_SAT_math:0000000000000000 BAND_PINWHEEL_SAT_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1475   .text.BAND_PINWHEEL_VAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1481   .text.BAND_PINWHEEL_VAL_math:0000000000000000 BAND_PINWHEEL_VAL_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1555   .text.BAND_SPIRAL_SAT_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1561   .text.BAND_SPIRAL_SAT_math:0000000000000000 BAND_SPIRAL_SAT_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1636   .text.BAND_SPIRAL_VAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1642   .text.BAND_SPIRAL_VAL_math:0000000000000000 BAND_SPIRAL_VAL_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1717   .text.CYCLE_PINWHEEL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1723   .text.CYCLE_PINWHEEL_math:0000000000000000 CYCLE_PINWHEEL_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1771   .text.CYCLE_SPIRAL_math:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1777   .text.CYCLE_SPIRAL_math:0000000000000000 CYCLE_SPIRAL_math
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1831   .text.rgb_matrix_hsv_to_rgb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1838   .text.rgb_matrix_hsv_to_rgb:0000000000000000 rgb_matrix_hsv_to_rgb
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1861   .text.eeconfig_read_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1868   .text.eeconfig_read_rgb_matrix:0000000000000000 eeconfig_read_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1884   .text.eeconfig_read_rgb_matrix:000000000000000c $d
                            *COM*:0000000000000008 rgb_matrix_config
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1889   .text.eeconfig_update_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1896   .text.eeconfig_update_rgb_matrix:0000000000000000 eeconfig_update_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1912   .text.eeconfig_update_rgb_matrix:000000000000000c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1920   .text.eeconfig_update_rgb_matrix_default:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1927   .text.eeconfig_update_rgb_matrix_default:0000000000000000 eeconfig_update_rgb_matrix_default
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:1984   .text.eeconfig_update_rgb_matrix_default:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2009   .text.eeconfig_debug_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2016   .text.eeconfig_debug_rgb_matrix:0000000000000000 eeconfig_debug_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2136   .text.eeconfig_debug_rgb_matrix:0000000000000080 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2150   .text.rgb_matrix_map_row_column_to_led_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2157   .text.rgb_matrix_map_row_column_to_led_kb:0000000000000000 rgb_matrix_map_row_column_to_led_kb
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2175   .text.rgb_matrix_map_row_column_to_led:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2182   .text.rgb_matrix_map_row_column_to_led:0000000000000000 rgb_matrix_map_row_column_to_led
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2232   .text.rgb_matrix_map_row_column_to_led:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2237   .text.rgb_matrix_update_pwm_buffers:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2244   .text.rgb_matrix_update_pwm_buffers:0000000000000000 rgb_matrix_update_pwm_buffers
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2261   .text.rgb_matrix_update_pwm_buffers:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2266   .text.rgb_matrix_set_color:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2273   .text.rgb_matrix_set_color:0000000000000000 rgb_matrix_set_color
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2302   .text.rgb_matrix_set_color:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2307   .text.effect_runner_dx_dy_dist:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2314   .text.effect_runner_dx_dy_dist:0000000000000000 effect_runner_dx_dy_dist
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2521   .text.effect_runner_dx_dy_dist:00000000000000dc $d
                            *COM*:0000000000000004 g_rgb_timer
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2529   .text.BAND_SPIRAL_SAT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2536   .text.BAND_SPIRAL_SAT:0000000000000000 BAND_SPIRAL_SAT
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2553   .text.BAND_SPIRAL_SAT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2558   .text.BAND_SPIRAL_VAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2565   .text.BAND_SPIRAL_VAL:0000000000000000 BAND_SPIRAL_VAL
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2582   .text.BAND_SPIRAL_VAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2587   .text.CYCLE_OUT_IN:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2594   .text.CYCLE_OUT_IN:0000000000000000 CYCLE_OUT_IN
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2611   .text.CYCLE_OUT_IN:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2616   .text.CYCLE_SPIRAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2623   .text.CYCLE_SPIRAL:0000000000000000 CYCLE_SPIRAL
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2640   .text.CYCLE_SPIRAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2645   .text.effect_runner_dx_dy:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2652   .text.effect_runner_dx_dy:0000000000000000 effect_runner_dx_dy
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2842   .text.effect_runner_dx_dy:00000000000000c8 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2850   .text.BAND_PINWHEEL_SAT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2857   .text.BAND_PINWHEEL_SAT:0000000000000000 BAND_PINWHEEL_SAT
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2874   .text.BAND_PINWHEEL_SAT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2879   .text.BAND_PINWHEEL_VAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2886   .text.BAND_PINWHEEL_VAL:0000000000000000 BAND_PINWHEEL_VAL
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2903   .text.BAND_PINWHEEL_VAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2908   .text.CYCLE_OUT_IN_DUAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2915   .text.CYCLE_OUT_IN_DUAL:0000000000000000 CYCLE_OUT_IN_DUAL
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2932   .text.CYCLE_OUT_IN_DUAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2937   .text.CYCLE_PINWHEEL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2944   .text.CYCLE_PINWHEEL:0000000000000000 CYCLE_PINWHEEL
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2961   .text.CYCLE_PINWHEEL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2966   .text.effect_runner_i:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:2973   .text.effect_runner_i:0000000000000000 effect_runner_i
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3134   .text.effect_runner_i:00000000000000a8 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3142   .text.BAND_SAT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3149   .text.BAND_SAT:0000000000000000 BAND_SAT
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3166   .text.BAND_SAT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3171   .text.BAND_VAL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3178   .text.BAND_VAL:0000000000000000 BAND_VAL
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3195   .text.BAND_VAL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3200   .text.CYCLE_ALL:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3207   .text.CYCLE_ALL:0000000000000000 CYCLE_ALL
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3224   .text.CYCLE_ALL:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3229   .text.CYCLE_LEFT_RIGHT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3236   .text.CYCLE_LEFT_RIGHT:0000000000000000 CYCLE_LEFT_RIGHT
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3253   .text.CYCLE_LEFT_RIGHT:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3258   .text.CYCLE_UP_DOWN:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3265   .text.CYCLE_UP_DOWN:0000000000000000 CYCLE_UP_DOWN
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3282   .text.CYCLE_UP_DOWN:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3287   .text.RAINBOW_MOVING_CHEVRON:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3294   .text.RAINBOW_MOVING_CHEVRON:0000000000000000 RAINBOW_MOVING_CHEVRON
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3311   .text.RAINBOW_MOVING_CHEVRON:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3316   .text.HUE_PENDULUM:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3323   .text.HUE_PENDULUM:0000000000000000 HUE_PENDULUM
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3340   .text.HUE_PENDULUM:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3345   .text.HUE_WAVE:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3352   .text.HUE_WAVE:0000000000000000 HUE_WAVE
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3369   .text.HUE_WAVE:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3374   .text.effect_runner_sin_cos_i:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3381   .text.effect_runner_sin_cos_i:0000000000000000 effect_runner_sin_cos_i
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3590   .text.effect_runner_sin_cos_i:00000000000000d0 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3598   .text.DUAL_BEACON:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3605   .text.DUAL_BEACON:0000000000000000 DUAL_BEACON
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3622   .text.DUAL_BEACON:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3627   .text.RAINBOW_BEACON:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3634   .text.RAINBOW_BEACON:0000000000000000 RAINBOW_BEACON
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3651   .text.RAINBOW_BEACON:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3656   .text.RAINBOW_PINWHEELS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3663   .text.RAINBOW_PINWHEELS:0000000000000000 RAINBOW_PINWHEELS
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3680   .text.RAINBOW_PINWHEELS:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3685   .text.SOLID_COLOR:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3692   .text.SOLID_COLOR:0000000000000000 SOLID_COLOR
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3808   .text.SOLID_COLOR:0000000000000080 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3815   .text.ALPHAS_MODS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3822   .text.ALPHAS_MODS:0000000000000000 ALPHAS_MODS
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3973   .text.ALPHAS_MODS:00000000000000c0 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3980   .text.GRADIENT_UP_DOWN:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:3987   .text.GRADIENT_UP_DOWN:0000000000000000 GRADIENT_UP_DOWN
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4131   .text.GRADIENT_UP_DOWN:0000000000000088 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4138   .text.GRADIENT_LEFT_RIGHT:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4145   .text.GRADIENT_LEFT_RIGHT:0000000000000000 GRADIENT_LEFT_RIGHT
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4290   .text.GRADIENT_LEFT_RIGHT:000000000000008c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4297   .text.BREATHING:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4304   .text.BREATHING:0000000000000000 BREATHING
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4501   .text.BREATHING:00000000000000b0 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4509   .text.raindrops_set_color.isra.0:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4515   .text.raindrops_set_color.isra.0:0000000000000000 raindrops_set_color.isra.0
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4623   .text.raindrops_set_color.isra.0:000000000000006c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4629   .text.RAINDROPS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4636   .text.RAINDROPS:0000000000000000 RAINDROPS
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4797   .text.RAINDROPS:0000000000000078 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4804   .text.jellybean_raindrops_set_color.isra.0:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4810   .text.jellybean_raindrops_set_color.isra.0:0000000000000000 jellybean_raindrops_set_color.isra.0
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4904   .text.jellybean_raindrops_set_color.isra.0:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4910   .text.JELLYBEAN_RAINDROPS:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:4917   .text.JELLYBEAN_RAINDROPS:0000000000000000 JELLYBEAN_RAINDROPS
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5079   .text.JELLYBEAN_RAINDROPS:0000000000000078 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5086   .text.HUE_BREATHING:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5093   .text.HUE_BREATHING:0000000000000000 HUE_BREATHING
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5294   .text.HUE_BREATHING:00000000000000b8 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5302   .text.rgb_matrix_set_color_all:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5309   .text.rgb_matrix_set_color_all:0000000000000000 rgb_matrix_set_color_all
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5328   .text.rgb_matrix_set_color_all:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5333   .text.process_rgb_matrix:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5340   .text.process_rgb_matrix:0000000000000000 process_rgb_matrix
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5357   .text.rgb_matrix_test:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5364   .text.rgb_matrix_test:0000000000000000 rgb_matrix_test
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5415   .text.rgb_matrix_test:0000000000000034 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5420   .text.rgb_matrix_indicators_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5427   .text.rgb_matrix_indicators_kb:0000000000000000 rgb_matrix_indicators_kb
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5440   .text.rgb_matrix_indicators_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5447   .text.rgb_matrix_indicators_user:0000000000000000 rgb_matrix_indicators_user
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5458   .text.rgb_matrix_indicators:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5465   .text.rgb_matrix_indicators:0000000000000000 rgb_matrix_indicators
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5489   .text.rgb_matrix_indicators_advanced_kb:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5496   .text.rgb_matrix_indicators_advanced_kb:0000000000000000 rgb_matrix_indicators_advanced_kb
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5510   .text.rgb_matrix_indicators_advanced_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5517   .text.rgb_matrix_indicators_advanced_user:0000000000000000 rgb_matrix_indicators_advanced_user
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5528   .text.rgb_matrix_indicators_advanced:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5535   .text.rgb_matrix_indicators_advanced:0000000000000000 rgb_matrix_indicators_advanced
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5583   .text.rgb_matrix_task:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5590   .text.rgb_matrix_task:0000000000000000 rgb_matrix_task
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5646   .text.rgb_matrix_task:0000000000000028 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5651   .text.rgb_matrix_task:0000000000000030 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5747   .text.rgb_matrix_task:000000000000007e $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:5776   .text.rgb_matrix_task:000000000000009a $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6160   .text.rgb_matrix_task:00000000000001ec $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6180   .text.rgb_matrix_init:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6187   .text.rgb_matrix_init:0000000000000000 rgb_matrix_init
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6268   .text.rgb_matrix_init:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6277   .text.rgb_matrix_set_suspend_state:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6284   .text.rgb_matrix_set_suspend_state:0000000000000000 rgb_matrix_set_suspend_state
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6318   .text.rgb_matrix_set_suspend_state:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6323   .text.rgb_matrix_get_suspend_state:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6330   .text.rgb_matrix_get_suspend_state:0000000000000000 rgb_matrix_get_suspend_state
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6345   .text.rgb_matrix_get_suspend_state:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6358   .text.rgb_matrix_toggle_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6365   .text.rgb_matrix_toggle_eeprom_helper:0000000000000000 rgb_matrix_toggle_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6414   .text.rgb_matrix_toggle_eeprom_helper:000000000000003c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6425   .text.rgb_matrix_toggle_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6432   .text.rgb_matrix_toggle_noeeprom:0000000000000000 rgb_matrix_toggle_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6447   .text.rgb_matrix_toggle:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6454   .text.rgb_matrix_toggle:0000000000000000 rgb_matrix_toggle
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6469   .text.rgb_matrix_enable_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6476   .text.rgb_matrix_enable_noeeprom:0000000000000000 rgb_matrix_enable_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6505   .text.rgb_matrix_enable_noeeprom:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6511   .text.rgb_matrix_enable:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6518   .text.rgb_matrix_enable:0000000000000000 rgb_matrix_enable
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6542   .text.rgb_matrix_enable:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6547   .text.rgb_matrix_disable_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6554   .text.rgb_matrix_disable_noeeprom:0000000000000000 rgb_matrix_disable_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6583   .text.rgb_matrix_disable_noeeprom:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6589   .text.rgb_matrix_disable:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6596   .text.rgb_matrix_disable:0000000000000000 rgb_matrix_disable
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6620   .text.rgb_matrix_disable:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6625   .text.rgb_matrix_is_enabled:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6632   .text.rgb_matrix_is_enabled:0000000000000000 rgb_matrix_is_enabled
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6649   .text.rgb_matrix_is_enabled:000000000000000c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6657   .text.rgb_matrix_mode_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6664   .text.rgb_matrix_mode_eeprom_helper:0000000000000000 rgb_matrix_mode_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6746   .text.rgb_matrix_mode_eeprom_helper:000000000000004c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6757   .text.rgb_matrix_mode_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6764   .text.rgb_matrix_mode_noeeprom:0000000000000000 rgb_matrix_mode_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6781   .text.rgb_matrix_mode:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6788   .text.rgb_matrix_mode:0000000000000000 rgb_matrix_mode
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6805   .text.rgb_matrix_get_mode:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6812   .text.rgb_matrix_get_mode:0000000000000000 rgb_matrix_get_mode
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6829   .text.rgb_matrix_get_mode:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6834   .text.rgb_matrix_step_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6841   .text.rgb_matrix_step_helper:0000000000000000 rgb_matrix_step_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6873   .text.rgb_matrix_step_helper:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6878   .text.rgb_matrix_step_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6885   .text.rgb_matrix_step_noeeprom:0000000000000000 rgb_matrix_step_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6900   .text.rgb_matrix_step:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6907   .text.rgb_matrix_step:0000000000000000 rgb_matrix_step
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6922   .text.rgb_matrix_step_reverse_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6929   .text.rgb_matrix_step_reverse_helper:0000000000000000 rgb_matrix_step_reverse_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6962   .text.rgb_matrix_step_reverse_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6967   .text.rgb_matrix_step_reverse_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6974   .text.rgb_matrix_step_reverse_noeeprom:0000000000000000 rgb_matrix_step_reverse_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6989   .text.rgb_matrix_step_reverse:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:6996   .text.rgb_matrix_step_reverse:0000000000000000 rgb_matrix_step_reverse
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7014   .text.rgb_matrix_sethsv_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7021   .text.rgb_matrix_sethsv_eeprom_helper:0000000000000000 rgb_matrix_sethsv_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7103   .text.rgb_matrix_sethsv_eeprom_helper:0000000000000040 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7113   .text.rgb_matrix_sethsv_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7120   .text.rgb_matrix_sethsv_noeeprom:0000000000000000 rgb_matrix_sethsv_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7137   .text.rgb_matrix_sethsv:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7144   .text.rgb_matrix_sethsv:0000000000000000 rgb_matrix_sethsv
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7161   .text.rgb_matrix_get_hsv:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7168   .text.rgb_matrix_get_hsv:0000000000000000 rgb_matrix_get_hsv
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7199   .text.rgb_matrix_get_hsv:0000000000000028 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7204   .text.rgb_matrix_get_hue:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7211   .text.rgb_matrix_get_hue:0000000000000000 rgb_matrix_get_hue
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7226   .text.rgb_matrix_get_hue:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7231   .text.rgb_matrix_get_sat:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7238   .text.rgb_matrix_get_sat:0000000000000000 rgb_matrix_get_sat
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7253   .text.rgb_matrix_get_sat:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7258   .text.rgb_matrix_get_val:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7265   .text.rgb_matrix_get_val:0000000000000000 rgb_matrix_get_val
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7280   .text.rgb_matrix_get_val:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7285   .text.rgb_matrix_increase_hue_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7292   .text.rgb_matrix_increase_hue_helper:0000000000000000 rgb_matrix_increase_hue_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7316   .text.rgb_matrix_increase_hue_helper:0000000000000010 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7321   .text.rgb_matrix_increase_hue_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7328   .text.rgb_matrix_increase_hue_noeeprom:0000000000000000 rgb_matrix_increase_hue_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7343   .text.rgb_matrix_increase_hue:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7350   .text.rgb_matrix_increase_hue:0000000000000000 rgb_matrix_increase_hue
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7365   .text.rgb_matrix_decrease_hue_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7372   .text.rgb_matrix_decrease_hue_helper:0000000000000000 rgb_matrix_decrease_hue_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7407   .text.rgb_matrix_decrease_hue_helper:0000000000000018 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7412   .text.rgb_matrix_decrease_hue_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7419   .text.rgb_matrix_decrease_hue_noeeprom:0000000000000000 rgb_matrix_decrease_hue_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7434   .text.rgb_matrix_decrease_hue:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7441   .text.rgb_matrix_decrease_hue:0000000000000000 rgb_matrix_decrease_hue
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7456   .text.rgb_matrix_increase_sat_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7463   .text.rgb_matrix_increase_sat_helper:0000000000000000 rgb_matrix_increase_sat_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7522   .text.rgb_matrix_increase_sat_helper:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7527   .text.rgb_matrix_increase_sat_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7534   .text.rgb_matrix_increase_sat_noeeprom:0000000000000000 rgb_matrix_increase_sat_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7549   .text.rgb_matrix_increase_sat:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7556   .text.rgb_matrix_increase_sat:0000000000000000 rgb_matrix_increase_sat
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7571   .text.rgb_matrix_decrease_sat_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7578   .text.rgb_matrix_decrease_sat_helper:0000000000000000 rgb_matrix_decrease_sat_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7635   .text.rgb_matrix_decrease_sat_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7640   .text.rgb_matrix_decrease_sat_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7647   .text.rgb_matrix_decrease_sat_noeeprom:0000000000000000 rgb_matrix_decrease_sat_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7662   .text.rgb_matrix_decrease_sat:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7669   .text.rgb_matrix_decrease_sat:0000000000000000 rgb_matrix_decrease_sat
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7684   .text.rgb_matrix_increase_val_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7691   .text.rgb_matrix_increase_val_helper:0000000000000000 rgb_matrix_increase_val_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7750   .text.rgb_matrix_increase_val_helper:0000000000000020 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7755   .text.rgb_matrix_increase_val_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7762   .text.rgb_matrix_increase_val_noeeprom:0000000000000000 rgb_matrix_increase_val_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7777   .text.rgb_matrix_increase_val:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7784   .text.rgb_matrix_increase_val:0000000000000000 rgb_matrix_increase_val
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7799   .text.rgb_matrix_decrease_val_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7806   .text.rgb_matrix_decrease_val_helper:0000000000000000 rgb_matrix_decrease_val_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7863   .text.rgb_matrix_decrease_val_helper:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7868   .text.rgb_matrix_decrease_val_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7875   .text.rgb_matrix_decrease_val_noeeprom:0000000000000000 rgb_matrix_decrease_val_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7890   .text.rgb_matrix_decrease_val:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7897   .text.rgb_matrix_decrease_val:0000000000000000 rgb_matrix_decrease_val
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7915   .text.rgb_matrix_set_speed_eeprom_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7922   .text.rgb_matrix_set_speed_eeprom_helper:0000000000000000 rgb_matrix_set_speed_eeprom_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7976   .text.rgb_matrix_set_speed_eeprom_helper:000000000000002c $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7986   .text.rgb_matrix_set_speed_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:7993   .text.rgb_matrix_set_speed_noeeprom:0000000000000000 rgb_matrix_set_speed_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8010   .text.rgb_matrix_set_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8017   .text.rgb_matrix_set_speed:0000000000000000 rgb_matrix_set_speed
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8034   .text.rgb_matrix_get_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8041   .text.rgb_matrix_get_speed:0000000000000000 rgb_matrix_get_speed
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8056   .text.rgb_matrix_get_speed:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8061   .text.rgb_matrix_increase_speed_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8068   .text.rgb_matrix_increase_speed_helper:0000000000000000 rgb_matrix_increase_speed_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8112   .text.rgb_matrix_increase_speed_helper:0000000000000014 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8117   .text.rgb_matrix_increase_speed_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8124   .text.rgb_matrix_increase_speed_noeeprom:0000000000000000 rgb_matrix_increase_speed_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8139   .text.rgb_matrix_increase_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8146   .text.rgb_matrix_increase_speed:0000000000000000 rgb_matrix_increase_speed
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8161   .text.rgb_matrix_decrease_speed_helper:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8168   .text.rgb_matrix_decrease_speed_helper:0000000000000000 rgb_matrix_decrease_speed_helper
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8209   .text.rgb_matrix_decrease_speed_helper:0000000000000014 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8214   .text.rgb_matrix_decrease_speed_noeeprom:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8221   .text.rgb_matrix_decrease_speed_noeeprom:0000000000000000 rgb_matrix_decrease_speed_noeeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8236   .text.rgb_matrix_decrease_speed:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8243   .text.rgb_matrix_decrease_speed:0000000000000000 rgb_matrix_decrease_speed
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8258   .text.rgb_matrix_get_flags:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8265   .text.rgb_matrix_get_flags:0000000000000000 rgb_matrix_get_flags
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8280   .text.rgb_matrix_get_flags:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8285   .text.rgb_matrix_set_flags:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8292   .text.rgb_matrix_set_flags:0000000000000000 rgb_matrix_set_flags
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8309   .text.rgb_matrix_set_flags:0000000000000008 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8376   .rodata.k_rgb_matrix_center:0000000000000000 k_rgb_matrix_center
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8323   .bss.rgb_timer_buffer:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8327   .bss.rgb_timer_buffer:0000000000000000 rgb_timer_buffer
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8333   .bss.rgb_update_eeprom:0000000000000000 rgb_update_eeprom
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8334   .bss.rgb_update_eeprom:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8339   .bss.suspend_state:0000000000000000 suspend_state
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8340   .bss.suspend_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8345   .data.rgb_effect_params:0000000000000000 rgb_effect_params
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8353   .data.rgb_last_effect:0000000000000000 rgb_last_effect
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8359   .data.rgb_last_enable:0000000000000000 rgb_last_enable
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8365   .data.rgb_task_state:0000000000000000 rgb_task_state
C:\Users\lhanj\AppData\Local\Temp\ccyPHQBI.s:8371   .rodata.b_m16_interleave:0000000000000000 b_m16_interleave

UNDEFINED SYMBOLS
g_led_config
hsv_to_rgb
eeprom_read_block
eeprom_update_block
printf_
debug_config
rgb_matrix_driver
rand
is_keyboard_master
timer_read32
timer_elapsed32
eeconfig_is_enabled
eeconfig_init
