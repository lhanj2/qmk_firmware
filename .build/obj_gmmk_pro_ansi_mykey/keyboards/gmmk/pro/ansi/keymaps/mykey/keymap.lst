   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"keymap.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.timeout_reset_timer,"ax",%progbits
  18              		.align	1
  19              		.global	timeout_reset_timer
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	timeout_reset_timer:
  27              	.LFB291:
  28              		.file 1 "keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c"
   1:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** /* 20210806 HJLee - macro, mapping, knob layer added. 
   2:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    20210807 HJLee - knob function changed(brightness)
   3:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    20210808 HJLee - RGB works with RGB_TOG
   4:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    20210809 HJLee - (macro not working)
   5:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** This program is free software: you can redistribute it and/or modify
   6:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** it under the terms of the GNU General Public License as published by
   7:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** the Free Software Foundation, either version 2 of the License, or
   8:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** (at your option) any later version.
   9:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  10:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** This program is distributed in the hope that it will be useful,
  11:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** GNU General Public License for more details.
  14:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  15:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** You should have received a copy of the GNU General Public License
  16:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** */
  18:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  19:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  20:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** /******If use Via, should reset EEPROM(because enabling via saves your keymap to your EEPROM)*****/
  21:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** // EEPROM RESET : Plug cable with pressing ESC
  22:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #include QMK_KEYBOARD_H
  23:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #include "rgb_matrix_map.h"
  24:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  25:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define ARRAYSIZE(arr)  sizeof(arr)/sizeof(arr[0])
  26:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  27:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum custom_layers {
  28:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _BASE,
  29:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _FN1,
  30:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _MO2,
  31:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _MO3,
  32:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  33:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  34:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum nob_layers {
  35:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _WHEEL,
  36:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _MUSIC,
  37:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _VOLUME
  38:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  39:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum nob_layers nob_layer_state = _WHEEL;
  40:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  41:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum custom_keycodes {
  42:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     NOB_LAYER_INC = SAFE_RANGE,
  43:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     KC_00,
  44:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     KC_WINLCK,  // Toggles Win key on and off
  45:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     RGB_TOI,    // Timeout idle time up
  46:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     RGB_TOD,    // Timeout idle time down
  47:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     MY_KNOBFNKEY,
  48:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     MY_SLEEP,
  49:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  50:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  51:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** // Tap Dance Definitions
  52:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum custom_tapdance {
  53:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     TD_LSFT_CAPSLOCK,
  54:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     TD_WIN,
  55:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  56:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  57:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** qk_tap_dance_action_t tap_dance_actions[] = {//NOT SUPPORT USER CUSTOM KEY!!!
  58:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   // Tap once for shift, twice for Caps Lock
  59:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   [TD_LSFT_CAPSLOCK] = ACTION_TAP_DANCE_DOUBLE(KC_LSFT, KC_CAPS),
  60:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   // Tap once for Win, twice for File Explorer
  61:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   [TD_WIN]           = ACTION_TAP_DANCE_DOUBLE(KC_LGUI, LGUI(KC_E)),
  62:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  63:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  64:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define KC_LSFTCAPS TD(TD_LSFT_CAPSLOCK)
  65:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define KC_LGUI TD(TD_WIN)
  66:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  67:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** bool _isWinKeyDisabled = false;
  68:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  69:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  70:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  71:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  72:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      ESC      F1       F2       F3       F4       F5       F6       F7       F8       F9       F
  73:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      ~        1        2        3        4        5        6        7        8        9        0
  74:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Tab      Q        W        E        R        T        Y        U        I        O        P
  75:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Caps     A        S        D        F        G        H        J        K        L        ;
  76:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Sh_L              Z        X        C        V        B        N        M        ,        .
  77:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Ct_L     Win_L    Alt_L                               SPACE                               A
  78:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  79:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  80:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     [_BASE] = LAYOUT(
  81:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_ESC,  KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_F7,   KC_F8,   KC_F9,   K
  82:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_GRV,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    K
  83:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_TAB,  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    K
  84:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_CAPS, KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    K
  85:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_LSFT,          KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_N,    KC_M,    KC_COMM, K
  86:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_LCTL, KC_LGUI, KC_LALT,                            KC_SPC,                             K
  87:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),//set RGUI to move virtual desktop because LGUI used to doubletap 
  88:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  89:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     [_FN1] = LAYOUT(
  90:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         MY_SLEEP, KC_MYCM, KC_WHOM, KC_CALC, KC_MSEL, KC_MPRV, KC_MNXT, KC_MPLY, KC_MSTP, DM_REC1, 
  91:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, DM_REC1, DM_REC2, DM_PLY1, DM_PLY2, _______, _______, _______, _______, _______, _
  92:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, RGB_VAI, _______, _______, _______, _______, KC_PSCR, KC_SLCK, KC_PAUS, _
  93:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         TT(_MO2), _______, RGB_VAD, _______, _______, _______, _______, _______, _______, _______, 
  94:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______,          _______, RGB_HUI, _______, _______, _______, KC_NLCK, _______, RGB_TOD, R
  95:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, KC_WINLCK, _______,                            _______,                          _
  96:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),
  97:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  98:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     [_MO2] = LAYOUT(
  99:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 100:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, KC_P7,   KC_P8,   KC_P9,   K
 101:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, KC_HOME, KC_UP,   KC_END,  KC_PGUP, _______, KC_TAB,  KC_P4,   KC_P5,   KC_P6,   K
 102:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, KC_LEFT, KC_DOWN, KC_RGHT, KC_PGDN, _______, _______, KC_P1,   KC_P2,   KC_P3,   K
 103:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______,          KC_NO,   KC_DEL,  KC_INS,  KC_NO,   KC_NO,   KC_NO,   KC_P0, KC_00, KC_PD
 104:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______,                            KC_BSPC,                            _
 105:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),
 106:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 107:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    [_MO3] = LAYOUT(
 108:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 109:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 110:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 111:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 112:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______,          _______, _______, _______, _______, _______, _______, _______, _______, _
 113:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______,                            _______,                            _
 114:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),
 115:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 116:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 117:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 118:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 119:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** // TIMEOUTS
 120:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define TIMEOUT_THRESHOLD_DEFAULT   5    // default timeout minutes
 121:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define TIMEOUT_THRESHOLD_MAX       140  // upper limits (2 hours and 10 minutes -- no rgb indicato
 122:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static uint16_t timeout_timer = 0;
 123:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static uint16_t timeout_counter = 0;  //in minute intervals
 124:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static uint16_t timeout_threshold = TIMEOUT_THRESHOLD_DEFAULT;
 125:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static bool     Shift_Pressed = false;  // for knob custom 210807
 126:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static bool     RGB_TOGGLED = false;
 127:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 128:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void timeout_reset_timer(void) {
  29              		.loc 1 128 32 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 129:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     timeout_timer = timer_read();
  34              		.loc 1 129 5 view .LVU1
  35              		.loc 1 129 21 is_stmt 0 view .LVU2
  36 0000 FFF7FEBF 		b	timer_read
  37              	.LVL0:
  38              		.cfi_endproc
  39              	.LFE291:
  41              		.section	.text.timeout_update_threshold,"ax",%progbits
  42              		.align	1
  43              		.global	timeout_update_threshold
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	timeout_update_threshold:
  50              	.LVL1:
  51              	.LFB292:
 130:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     timeout_counter = 0;
 131:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 132:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void timeout_update_threshold(bool increase) {
  52              		.loc 1 133 46 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 134:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
  57              		.loc 1 134 5 view .LVU4
  58              		.loc 1 134 39 is_stmt 0 view .LVU5
  59 0000 064A     		ldr	r2, .L7
  60 0002 1388     		ldrh	r3, [r2]
  61              		.loc 1 134 8 view .LVU6
  62 0004 30B1     		cbz	r0, .L3
  63              		.loc 1 134 18 discriminator 1 view .LVU7
  64 0006 8B2B     		cmp	r3, #139
  65 0008 06D8     		bhi	.L2
  66              		.loc 1 134 64 is_stmt 1 discriminator 2 view .LVU8
  67              		.loc 1 134 81 is_stmt 0 discriminator 2 view .LVU9
  68 000a 0133     		adds	r3, r3, #1
  69              	.L6:
  70              	.LBB6:
  71              	.LBB7:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  72              		.loc 1 135 62 view .LVU10
  73 000c 1380     		strh	r3, [r2]	@ movhi
  74              	.LBE7:
  75              	.LBE6:
 136:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  76              		.loc 1 136 1 view .LVU11
  77 000e 7047     		bx	lr
  78              	.LVL2:
  79              	.L5:
  80              	.LBB10:
  81              	.LBB8:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  82              		.loc 1 135 45 is_stmt 1 view .LVU12
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  83              		.loc 1 135 62 is_stmt 0 view .LVU13
  84 0010 013B     		subs	r3, r3, #1
  85 0012 FBE7     		b	.L6
  86              	.LVL3:
  87              	.L3:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  88              		.loc 1 135 62 view .LVU14
  89              	.LBE8:
  90              	.LBE10:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  91              		.loc 1 135 5 is_stmt 1 view .LVU15
  92              	.LBB11:
  93              	.LBI6:
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
  94              		.loc 1 133 6 view .LVU16
  95              	.LBB9:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  96              		.loc 1 135 19 is_stmt 0 view .LVU17
  97 0014 002B     		cmp	r3, #0
  98 0016 FBD1     		bne	.L5
  99              	.LVL4:
 100              	.L2:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
 101              		.loc 1 135 19 view .LVU18
 102              	.LBE9:
 103              	.LBE11:
 104              		.loc 1 136 1 view .LVU19
 105 0018 7047     		bx	lr
 106              	.L8:
 107 001a 00BF     		.align	2
 108              	.L7:
 109 001c 00000000 		.word	.LANCHOR0
 110              		.cfi_endproc
 111              	.LFE292:
 113              		.section	.rodata.process_record_user.str1.1,"aMS",%progbits,1
 114              	.LC0:
 115 0000 303000   		.ascii	"00\000"
 116              	.LC1:
 117 0003 43414C43 		.ascii	"CALC\000"
 117      00
 118              		.section	.text.process_record_user,"ax",%progbits
 119              		.align	1
 120              		.global	process_record_user
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 124              		.fpu fpv4-sp-d16
 126              	process_record_user:
 127              	.LVL5:
 128              	.LFB293:
 137:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 138:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 139:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** bool process_record_user(uint16_t keycode, keyrecord_t *record) {
 129              		.loc 1 139 65 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 140:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //All of keycodes need return true or false (meaning of send origin keycode after action)
 141:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     switch (keycode) {
 133              		.loc 1 141 5 view .LVU21
 139:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //All of keycodes need return true or false (meaning of send origin keycode after action)
 134              		.loc 1 139 65 is_stmt 0 view .LVU22
 135 0000 38B5     		push	{r3, r4, r5, lr}
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 3, -16
 138              		.cfi_offset 4, -12
 139              		.cfi_offset 5, -8
 140              		.cfi_offset 14, -4
 141              		.loc 1 141 5 view .LVU23
 142 0002 45F66753 		movw	r3, #23911
 143 0006 9842     		cmp	r0, r3
 144 0008 0BD8     		bhi	.L33
 145 000a 45F66053 		movw	r3, #23904
 146 000e 9842     		cmp	r0, r3
 147 0010 09D8     		bhi	.L11
 148 0012 E528     		cmp	r0, #229
 149 0014 55D0     		beq	.L12
 150 0016 45F6C243 		movw	r3, #23746
 151 001a 9842     		cmp	r0, r3
 152 001c 6DD0     		beq	.L13
 153 001e E128     		cmp	r0, #225
 154 0020 4FD0     		beq	.L12
 155              	.L33:
 156 0022 0124     		movs	r4, #1
 157 0024 21E0     		b	.L10
 158              	.L11:
 159 0026 A0F5BA40 		sub	r0, r0, #23808
 160              	.LVL6:
 161              		.loc 1 141 5 view .LVU24
 162 002a 6238     		subs	r0, r0, #98
 163 002c 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 164 002e 0528     		cmp	r0, #5
 165 0030 35D8     		bhi	.L14
 166 0032 DFE800F0 		tbb	[pc, r0]
 167              	.L16:
 168 0036 03       		.byte	(.L21-.L16)/2
 169 0037 0A       		.byte	(.L20-.L16)/2
 170 0038 21       		.byte	(.L19-.L16)/2
 171 0039 29       		.byte	(.L18-.L16)/2
 172 003a 4E       		.byte	(.L17-.L16)/2
 173 003b 5C       		.byte	(.L15-.L16)/2
 174              		.p2align 1
 175              	.L21:
 142:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_00:
 143:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed) {
 176              		.loc 1 143 9 is_stmt 1 view .LVU25
 177              		.loc 1 143 12 is_stmt 0 view .LVU26
 178 003c 0CB9     		cbnz	r4, .L22
 179              	.LVL7:
 180              	.L52:
 144:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             // when keycode KC_00 is pressed
 145:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             SEND_STRING("00");
 146:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 147:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             // when keycode KC_00 is released
 148:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 149:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 150:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_WINLCK:
 151:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed) {
 152:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             _isWinKeyDisabled = !_isWinKeyDisabled; //toggle status
 153:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if(_isWinKeyDisabled) {
 154:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_OFF, record);
 155:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else {
 156:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_ON, record);
 157:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 158:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 159:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 160:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case RGB_TOI:
 161:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if(record->event.pressed) {
 162:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_update_threshold(true);
 163:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 164:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 181              		.loc 1 164 16 view .LVU27
 182 003e 0024     		movs	r4, #0
 183 0040 13E0     		b	.L10
 184              	.LVL8:
 185              	.L22:
 145:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 186              		.loc 1 145 13 is_stmt 1 view .LVU28
 187 0042 3748     		ldr	r0, .L55
 188 0044 FFF7FEFF 		bl	send_string_P
 189              	.LVL9:
 145:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 190              		.loc 1 145 13 is_stmt 0 view .LVU29
 191 0048 F9E7     		b	.L52
 192              	.LVL10:
 193              	.L20:
 151:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             _isWinKeyDisabled = !_isWinKeyDisabled; //toggle status
 194              		.loc 1 151 9 is_stmt 1 view .LVU30
 151:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             _isWinKeyDisabled = !_isWinKeyDisabled; //toggle status
 195              		.loc 1 151 12 is_stmt 0 view .LVU31
 196 004a 84B1     		cbz	r4, .L23
 152:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if(_isWinKeyDisabled) {
 197              		.loc 1 152 13 is_stmt 1 view .LVU32
 198 004c 354B     		ldr	r3, .L55+4
 199 004e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 200 0050 84F00104 		eor	r4, r4, #1
 152:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if(_isWinKeyDisabled) {
 201              		.loc 1 152 31 is_stmt 0 view .LVU33
 202 0054 1C70     		strb	r4, [r3]
 153:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_OFF, record);
 203              		.loc 1 153 13 is_stmt 1 view .LVU34
 153:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_OFF, record);
 204              		.loc 1 153 15 is_stmt 0 view .LVU35
 205 0056 24B1     		cbz	r4, .L24
 154:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else {
 206              		.loc 1 154 17 is_stmt 1 view .LVU36
 207 0058 45F60640 		movw	r0, #23558
 208 005c FFF7FEFF 		bl	process_magic
 209              	.LVL11:
 154:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else {
 210              		.loc 1 154 17 is_stmt 0 view .LVU37
 211 0060 EDE7     		b	.L52
 212              	.LVL12:
 213              	.L24:
 156:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 214              		.loc 1 156 17 is_stmt 1 view .LVU38
 215 0062 45F60F40 		movw	r0, #23567
 216 0066 FFF7FEFF 		bl	process_magic
 217              	.LVL13:
 218              	.L10:
 165:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case RGB_TOD:
 166:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if(record->event.pressed) {
 167:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****              timeout_update_threshold(false);  //decrease timeout
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 169:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 170:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case NOB_LAYER_INC://SHIFT KNOB
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if ((record->event.pressed) && (Shift_Pressed == false)) {
 172:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 173:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if ((record->event.pressed) && (Shift_Pressed == true)) {
 174:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             tap_code(KC_MUTE);
 175:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 176:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         //If want to use Knob Layer 3, change 2 to 3
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (nob_layer_state == 2) nob_layer_state = 0;
 178:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 179:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_RSFT:  // FOR RSFT KNOB VOLUME
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         record->event.pressed ? (Shift_Pressed = true) : (Shift_Pressed = false);
 181:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 182:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_LSFT:  // FOR LSFT KNOB VOLUME
 183:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         record->event.pressed ? (Shift_Pressed = true) : (Shift_Pressed = false);
 184:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 185:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case MY_KNOBFNKEY:  // 210809 test
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed) {
 187:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             tap_code(KC_PSCR);
 188:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             printf("CALC");
 189:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 190:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             (Shift_Pressed = false);
 191:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             printf("CALC");
 192:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 193:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 194:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         //break;
 195:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case MY_SLEEP:
 196:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed) tap_code(KC_SLEP);
 197:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 198:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case RGB_TOG:
 199:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed && !RGB_TOGGLED) {  // reset activity timer
 200:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #ifdef RGB_MATRIX_ENABLE //if rgb enabled
 201:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_enable();
 202:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             RGB_TOGGLED = true;
 203:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #endif
 204:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_reset_timer();
 205:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if (record->event.pressed && RGB_TOGGLED) {
 206:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #ifdef RGB_MATRIX_ENABLE //if rgb enabled
 207:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_disable_noeeprom();
 208:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             RGB_TOGGLED = false;
 209:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #endif
 210:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_reset_timer();
 211:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 212:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 213:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     default:
 214:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 215:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 216:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 219              		.loc 1 216 1 is_stmt 0 view .LVU39
 220 006a 2046     		mov	r0, r4
 221 006c 38BD     		pop	{r3, r4, r5, pc}
 222              	.LVL14:
 223              	.L23:
 158:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 224              		.loc 1 158 17 is_stmt 1 view .LVU40
 225 006e 45F66350 		movw	r0, #23907
 226              	.L53:
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 227              		.loc 1 168 17 is_stmt 0 view .LVU41
 228 0072 FFF7FEFF 		bl	unregister_code16
 229              	.LVL15:
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 230              		.loc 1 168 17 view .LVU42
 231 0076 F8E7     		b	.L10
 232              	.LVL16:
 233              	.L19:
 161:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_update_threshold(true);
 234              		.loc 1 161 9 is_stmt 1 view .LVU43
 161:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_update_threshold(true);
 235              		.loc 1 161 11 is_stmt 0 view .LVU44
 236 0078 1CB1     		cbz	r4, .L25
 162:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 237              		.loc 1 162 13 is_stmt 1 view .LVU45
 238 007a 0120     		movs	r0, #1
 239 007c FFF7FEFF 		bl	timeout_update_threshold
 240              	.LVL17:
 241 0080 DDE7     		b	.L52
 242              	.L25:
 163:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 243              		.loc 1 163 17 view .LVU46
 244 0082 45F66450 		movw	r0, #23908
 245 0086 F4E7     		b	.L53
 246              	.L18:
 166:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****              timeout_update_threshold(false);  //decrease timeout
 247              		.loc 1 166 9 view .LVU47
 166:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****              timeout_update_threshold(false);  //decrease timeout
 248              		.loc 1 166 11 is_stmt 0 view .LVU48
 249 0088 34B1     		cbz	r4, .L26
 167:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 250              		.loc 1 167 14 is_stmt 1 view .LVU49
 251              	.LVL18:
 252              	.LBB16:
 253              	.LBI16:
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
 254              		.loc 1 133 6 view .LVU50
 255              	.LBE16:
 134:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
 256              		.loc 1 134 5 view .LVU51
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 257              		.loc 1 135 5 view .LVU52
 258              	.LBB19:
 259              	.LBB17:
 260              	.LBI17:
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
 261              		.loc 1 133 6 view .LVU53
 262              	.LBB18:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 263              		.loc 1 135 40 is_stmt 0 view .LVU54
 264 008a 274A     		ldr	r2, .L55+8
 265 008c 1388     		ldrh	r3, [r2]
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 266              		.loc 1 135 19 view .LVU55
 267 008e 002B     		cmp	r3, #0
 268 0090 D5D0     		beq	.L52
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 269              		.loc 1 135 45 is_stmt 1 view .LVU56
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 270              		.loc 1 135 62 is_stmt 0 view .LVU57
 271 0092 013B     		subs	r3, r3, #1
 272 0094 1380     		strh	r3, [r2]	@ movhi
 273 0096 D2E7     		b	.L52
 274              	.LVL19:
 275              	.L26:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 276              		.loc 1 135 62 view .LVU58
 277              	.LBE18:
 278              	.LBE17:
 279              	.LBE19:
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 280              		.loc 1 168 17 is_stmt 1 view .LVU59
 281 0098 45F66550 		movw	r0, #23909
 282 009c E9E7     		b	.L53
 283              	.L14:
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 284              		.loc 1 171 9 view .LVU60
 285 009e 234D     		ldr	r5, .L55+12
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 286              		.loc 1 171 12 is_stmt 0 view .LVU61
 287 00a0 2CB1     		cbz	r4, .L28
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 288              		.loc 1 171 55 discriminator 1 view .LVU62
 289 00a2 234B     		ldr	r3, .L55+16
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 290              		.loc 1 171 37 discriminator 1 view .LVU63
 291 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292 00a6 43B9     		cbnz	r3, .L29
 172:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if ((record->event.pressed) && (Shift_Pressed == true)) {
 293              		.loc 1 172 13 is_stmt 1 view .LVU64
 172:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if ((record->event.pressed) && (Shift_Pressed == true)) {
 294              		.loc 1 172 28 is_stmt 0 view .LVU65
 295 00a8 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 296 00aa 0133     		adds	r3, r3, #1
 297 00ac 2B70     		strb	r3, [r5]
 298              	.LVL20:
 299              	.L28:
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 300              		.loc 1 177 9 is_stmt 1 view .LVU66
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 301              		.loc 1 177 12 is_stmt 0 view .LVU67
 302 00ae 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 303 00b0 022B     		cmp	r3, #2
 304 00b2 C4D1     		bne	.L52
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 305              		.loc 1 177 35 is_stmt 1 discriminator 1 view .LVU68
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 306              		.loc 1 177 51 is_stmt 0 discriminator 1 view .LVU69
 307 00b4 0024     		movs	r4, #0
 308 00b6 2C70     		strb	r4, [r5]
 309 00b8 D7E7     		b	.L10
 310              	.LVL21:
 311              	.L29:
 173:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             tap_code(KC_MUTE);
 312              		.loc 1 173 16 is_stmt 1 discriminator 1 view .LVU70
 174:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 313              		.loc 1 174 13 discriminator 1 view .LVU71
 314 00ba A820     		movs	r0, #168
 315 00bc FFF7FEFF 		bl	tap_code
 316              	.LVL22:
 174:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 317              		.loc 1 174 13 is_stmt 0 discriminator 1 view .LVU72
 318 00c0 F5E7     		b	.L28
 319              	.LVL23:
 320              	.L12:
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 321              		.loc 1 180 9 is_stmt 1 view .LVU73
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 322              		.loc 1 180 22 is_stmt 0 view .LVU74
 323 00c2 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 324 00c4 1A4A     		ldr	r2, .L55+16
 325 00c6 0123     		movs	r3, #1
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 326              		.loc 1 180 56 view .LVU75
 327 00c8 0CB1     		cbz	r4, .L30
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 328              		.loc 1 180 48 discriminator 1 view .LVU76
 329 00ca 1370     		strb	r3, [r2]
 330 00cc CDE7     		b	.L10
 331              	.L30:
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 332              		.loc 1 180 73 discriminator 2 view .LVU77
 333 00ce 1470     		strb	r4, [r2]
 334 00d0 A7E7     		b	.L33
 335              	.LVL24:
 336              	.L17:
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             tap_code(KC_PSCR);
 337              		.loc 1 186 9 is_stmt 1 view .LVU78
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             tap_code(KC_PSCR);
 338              		.loc 1 186 12 is_stmt 0 view .LVU79
 339 00d2 34B1     		cbz	r4, .L31
 187:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             printf("CALC");
 340              		.loc 1 187 13 is_stmt 1 view .LVU80
 341 00d4 4620     		movs	r0, #70
 342 00d6 FFF7FEFF 		bl	tap_code
 343              	.LVL25:
 188:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 344              		.loc 1 188 13 view .LVU81
 345 00da 1648     		ldr	r0, .L55+20
 346 00dc FFF7FEFF 		bl	printf_
 347              	.LVL26:
 348 00e0 ADE7     		b	.L52
 349              	.LVL27:
 350              	.L31:
 190:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             printf("CALC");
 351              		.loc 1 190 13 view .LVU82
 190:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             printf("CALC");
 352              		.loc 1 190 28 is_stmt 0 view .LVU83
 353 00e2 134B     		ldr	r3, .L55+16
 191:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 354              		.loc 1 191 13 view .LVU84
 355 00e4 1348     		ldr	r0, .L55+20
 190:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             printf("CALC");
 356              		.loc 1 190 28 view .LVU85
 357 00e6 1C70     		strb	r4, [r3]
 191:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 358              		.loc 1 191 13 is_stmt 1 view .LVU86
 359 00e8 FFF7FEFF 		bl	printf_
 360              	.LVL28:
 191:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 361              		.loc 1 191 13 is_stmt 0 view .LVU87
 362 00ec BDE7     		b	.L10
 363              	.LVL29:
 364              	.L15:
 196:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 365              		.loc 1 196 9 is_stmt 1 view .LVU88
 196:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 366              		.loc 1 196 12 is_stmt 0 view .LVU89
 367 00ee 002C     		cmp	r4, #0
 368 00f0 A5D0     		beq	.L52
 196:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 369              		.loc 1 196 36 is_stmt 1 discriminator 1 view .LVU90
 370 00f2 A620     		movs	r0, #166
 371 00f4 FFF7FEFF 		bl	tap_code
 372              	.LVL30:
 196:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 373              		.loc 1 196 36 is_stmt 0 discriminator 1 view .LVU91
 374 00f8 A1E7     		b	.L52
 375              	.LVL31:
 376              	.L13:
 199:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #ifdef RGB_MATRIX_ENABLE //if rgb enabled
 377              		.loc 1 199 9 is_stmt 1 view .LVU92
 199:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #ifdef RGB_MATRIX_ENABLE //if rgb enabled
 378              		.loc 1 199 12 is_stmt 0 view .LVU93
 379 00fa 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 380 00fc 002B     		cmp	r3, #0
 381 00fe 9ED0     		beq	.L52
 199:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #ifdef RGB_MATRIX_ENABLE //if rgb enabled
 382              		.loc 1 199 38 discriminator 1 view .LVU94
 383 0100 0D4D     		ldr	r5, .L55+24
 384 0102 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 199:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #ifdef RGB_MATRIX_ENABLE //if rgb enabled
 385              		.loc 1 199 35 discriminator 1 view .LVU95
 386 0104 34B9     		cbnz	r4, .L32
 201:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             RGB_TOGGLED = true;
 387              		.loc 1 201 13 is_stmt 1 view .LVU96
 388 0106 FFF7FEFF 		bl	rgb_matrix_enable
 389              	.LVL32:
 202:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #endif
 390              		.loc 1 202 13 view .LVU97
 202:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #endif
 391              		.loc 1 202 25 is_stmt 0 view .LVU98
 392 010a 0123     		movs	r3, #1
 393 010c 2B70     		strb	r3, [r5]
 204:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if (record->event.pressed && RGB_TOGGLED) {
 394              		.loc 1 204 13 is_stmt 1 view .LVU99
 395              	.L54:
 210:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 396              		.loc 1 210 13 discriminator 1 view .LVU100
 397 010e FFF7FEFF 		bl	timeout_reset_timer
 398              	.LVL33:
 399 0112 AAE7     		b	.L10
 400              	.LVL34:
 401              	.L32:
 205:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #ifdef RGB_MATRIX_ENABLE //if rgb enabled
 402              		.loc 1 205 16 discriminator 1 view .LVU101
 207:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             RGB_TOGGLED = false;
 403              		.loc 1 207 13 discriminator 1 view .LVU102
 208:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #endif
 404              		.loc 1 208 25 is_stmt 0 discriminator 1 view .LVU103
 405 0114 0024     		movs	r4, #0
 207:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             RGB_TOGGLED = false;
 406              		.loc 1 207 13 discriminator 1 view .LVU104
 407 0116 FFF7FEFF 		bl	rgb_matrix_disable_noeeprom
 408              	.LVL35:
 208:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #endif
 409              		.loc 1 208 13 is_stmt 1 discriminator 1 view .LVU105
 208:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             #endif
 410              		.loc 1 208 25 is_stmt 0 discriminator 1 view .LVU106
 411 011a 2C70     		strb	r4, [r5]
 412 011c F7E7     		b	.L54
 413              	.L56:
 414 011e 00BF     		.align	2
 415              	.L55:
 416 0120 00000000 		.word	.LC0
 417 0124 00000000 		.word	.LANCHOR1
 418 0128 00000000 		.word	.LANCHOR0
 419 012c 00000000 		.word	.LANCHOR3
 420 0130 00000000 		.word	.LANCHOR2
 421 0134 03000000 		.word	.LC1
 422 0138 00000000 		.word	.LANCHOR4
 423              		.cfi_endproc
 424              	.LFE293:
 426              		.section	.text.matrix_scan_user,"ax",%progbits
 427              		.align	1
 428              		.global	matrix_scan_user
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	matrix_scan_user:
 435              	.LFB294:
 217:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 218:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void matrix_scan_user(void) {
 436              		.loc 1 218 29 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //if (timeout_threshold > 0) {
 220:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    if (timer_elapsed(timeout_timer) >= 60000) { // 1 minute tick
 221:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        timeout_counter++;
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        timeout_timer = timer_read();
 223:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    }
 224:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    #ifdef RGB_MATRIX_ENABLE
 225:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        if (timeout_threshold > 0 && timeout_counter >= timeout_threshold) {
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //            rgb_matrix_disable_noeeprom();
 227:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        }
 228:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    #endif
 229:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //} // timeout_threshold = 0 will disable timeout
 230:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 441              		.loc 1 230 1 view .LVU108
 442 0000 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE294:
 446              		.section	.text.encoder_update_user,"ax",%progbits
 447              		.align	1
 448              		.global	encoder_update_user
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv4-sp-d16
 454              	encoder_update_user:
 455              	.LVL36:
 456              	.LFB295:
 231:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 232:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 233:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #ifdef ENCODER_ENABLE       // Encoder Function
 234:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     bool encoder_update_user(uint8_t index, bool clockwise) {
 457              		.loc 1 234 61 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 235:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     switch (nob_layer_state) {
 461              		.loc 1 235 5 view .LVU110
 234:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     switch (nob_layer_state) {
 462              		.loc 1 234 61 is_stmt 0 view .LVU111
 463 0000 08B5     		push	{r3, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 3, -8
 466              		.cfi_offset 14, -4
 467              		.loc 1 235 5 view .LVU112
 468 0002 134B     		ldr	r3, .L74
 469 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 470 0006 012B     		cmp	r3, #1
 471 0008 12D0     		beq	.L59
 472 000a 022B     		cmp	r3, #2
 473 000c 1DD0     		beq	.L60
 474 000e 33B9     		cbnz	r3, .L61
 236:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _WHEEL:
 237:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if (clockwise && Shift_Pressed)                 tap_code(KC_VOLU);
 475              		.loc 1 237 13 is_stmt 1 view .LVU113
 476              		.loc 1 237 27 is_stmt 0 view .LVU114
 477 0010 104B     		ldr	r3, .L74+4
 478 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479              		.loc 1 237 16 view .LVU115
 480 0014 29B1     		cbz	r1, .L62
 481              		.loc 1 237 27 discriminator 1 view .LVU116
 482 0016 3BB1     		cbz	r3, .L63
 483              	.L66:
 484              		.loc 1 237 61 is_stmt 1 discriminator 2 view .LVU117
 485 0018 A920     		movs	r0, #169
 486              	.LVL37:
 487              	.L73:
 238:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 239:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (clockwise && !Shift_Pressed)           tap_code(KC_WH_D);
 240:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code(KC_WH_U);
 488              		.loc 1 240 59 is_stmt 0 discriminator 1 view .LVU118
 489 001a FFF7FEFF 		bl	tap_code
 490              	.LVL38:
 491              	.L61:
 241:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 242:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _MUSIC:
 243:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if (clockwise && Shift_Pressed)                 tap_code(KC_VOLU);
 244:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 245:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (clockwise && !Shift_Pressed)           tap_code16(KC_MNXT);
 246:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code16(KC_MPRV);
 247:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 248:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _VOLUME:  // 210807 not use
 249:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             clockwise ? tap_code(KC_VOLU) : tap_code(KC_VOLD);
 250:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 251:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 252:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     return true;
 492              		.loc 1 252 5 is_stmt 1 view .LVU119
 253:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** }
 493              		.loc 1 253 1 is_stmt 0 view .LVU120
 494 001e 0120     		movs	r0, #1
 495 0020 08BD     		pop	{r3, pc}
 496              	.LVL39:
 497              	.L62:
 238:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 498              		.loc 1 238 18 is_stmt 1 discriminator 1 view .LVU121
 238:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 499              		.loc 1 238 33 is_stmt 0 discriminator 1 view .LVU122
 500 0022 1BB1     		cbz	r3, .L64
 501              	.L68:
 238:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 502              		.loc 1 238 59 is_stmt 1 discriminator 2 view .LVU123
 503 0024 AA20     		movs	r0, #170
 504              	.LVL40:
 238:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 505              		.loc 1 238 59 is_stmt 0 discriminator 2 view .LVU124
 506 0026 F8E7     		b	.L73
 507              	.LVL41:
 508              	.L63:
 238:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 509              		.loc 1 238 18 is_stmt 1 discriminator 1 view .LVU125
 239:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code(KC_WH_U);
 510              		.loc 1 239 18 discriminator 1 view .LVU126
 239:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code(KC_WH_U);
 511              		.loc 1 239 61 discriminator 1 view .LVU127
 512 0028 FA20     		movs	r0, #250
 513              	.LVL42:
 239:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code(KC_WH_U);
 514              		.loc 1 239 61 is_stmt 0 discriminator 1 view .LVU128
 515 002a F6E7     		b	.L73
 516              	.LVL43:
 517              	.L64:
 239:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code(KC_WH_U);
 518              		.loc 1 239 18 is_stmt 1 discriminator 1 view .LVU129
 240:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 519              		.loc 1 240 18 discriminator 1 view .LVU130
 240:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 520              		.loc 1 240 59 discriminator 1 view .LVU131
 521 002c F920     		movs	r0, #249
 522              	.LVL44:
 240:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 523              		.loc 1 240 59 is_stmt 0 discriminator 1 view .LVU132
 524 002e F4E7     		b	.L73
 525              	.LVL45:
 526              	.L59:
 243:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 527              		.loc 1 243 13 is_stmt 1 view .LVU133
 237:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 528              		.loc 1 237 27 is_stmt 0 view .LVU134
 529 0030 084B     		ldr	r3, .L74+4
 530 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 243:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 531              		.loc 1 243 16 view .LVU135
 532 0034 29B1     		cbz	r1, .L65
 243:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && Shift_Pressed)         tap_code(KC_VOLD);
 533              		.loc 1 243 27 discriminator 1 view .LVU136
 534 0036 002B     		cmp	r3, #0
 535 0038 EED1     		bne	.L66
 244:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (clockwise && !Shift_Pressed)           tap_code16(KC_MNXT);
 536              		.loc 1 244 18 is_stmt 1 discriminator 1 view .LVU137
 245:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code16(KC_MPRV);
 537              		.loc 1 245 18 discriminator 1 view .LVU138
 245:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code16(KC_MPRV);
 538              		.loc 1 245 61 discriminator 1 view .LVU139
 539 003a AB20     		movs	r0, #171
 540              	.LVL46:
 541              	.L72:
 246:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 542              		.loc 1 246 59 is_stmt 0 discriminator 1 view .LVU140
 543 003c FFF7FEFF 		bl	tap_code16
 544              	.LVL47:
 246:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 545              		.loc 1 246 59 discriminator 1 view .LVU141
 546 0040 EDE7     		b	.L61
 547              	.LVL48:
 548              	.L65:
 244:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (clockwise && !Shift_Pressed)           tap_code16(KC_MNXT);
 549              		.loc 1 244 18 is_stmt 1 discriminator 1 view .LVU142
 244:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (clockwise && !Shift_Pressed)           tap_code16(KC_MNXT);
 550              		.loc 1 244 33 is_stmt 0 discriminator 1 view .LVU143
 551 0042 002B     		cmp	r3, #0
 552 0044 EED1     		bne	.L68
 245:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (!clockwise && !Shift_Pressed)        tap_code16(KC_MPRV);
 553              		.loc 1 245 18 is_stmt 1 discriminator 1 view .LVU144
 246:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 554              		.loc 1 246 18 discriminator 1 view .LVU145
 246:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 555              		.loc 1 246 59 discriminator 1 view .LVU146
 556 0046 AC20     		movs	r0, #172
 557              	.LVL49:
 246:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 558              		.loc 1 246 59 is_stmt 0 discriminator 1 view .LVU147
 559 0048 F8E7     		b	.L72
 560              	.LVL50:
 561              	.L60:
 249:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 562              		.loc 1 249 13 is_stmt 1 view .LVU148
 249:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 563              		.loc 1 249 43 is_stmt 0 view .LVU149
 564 004a 0029     		cmp	r1, #0
 565 004c E4D1     		bne	.L66
 566 004e E9E7     		b	.L68
 567              	.L75:
 568              		.align	2
 569              	.L74:
 570 0050 00000000 		.word	.LANCHOR3
 571 0054 00000000 		.word	.LANCHOR2
 572              		.cfi_endproc
 573              	.LFE295:
 575              		.section	.text.rgb_matrix_indicators_advanced_user,"ax",%progbits
 576              		.align	1
 577              		.global	rgb_matrix_indicators_advanced_user
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	rgb_matrix_indicators_advanced_user:
 584              	.LVL51:
 585              	.LFB296:
 254:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #endif
 255:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 256:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #ifdef RGB_MATRIX_ENABLE
 257:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     // Capslock, Scroll lock and Numlock  indicator on Left side lights.
 258:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     void rgb_matrix_indicators_advanced_user(uint8_t led_min, uint8_t led_max) {
 586              		.loc 1 258 80 is_stmt 1 view -0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 259:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_SCROLL_LOCK)) {
 590              		.loc 1 259 9 view .LVU151
 258:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_SCROLL_LOCK)) {
 591              		.loc 1 258 80 is_stmt 0 view .LVU152
 592 0000 70B5     		push	{r4, r5, r6, lr}
 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 4, -16
 595              		.cfi_offset 5, -12
 596              		.cfi_offset 6, -8
 597              		.cfi_offset 14, -4
 598              		.loc 1 259 13 view .LVU153
 599 0002 FFF7FEFF 		bl	host_keyboard_leds
 600              	.LVL52:
 601              		.loc 1 259 12 view .LVU154
 602 0006 4107     		lsls	r1, r0, #29
 603 0008 0BD5     		bpl	.L77
 260:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L1, RGB_GREEN);
 604              		.loc 1 260 13 is_stmt 1 view .LVU155
 605 000a 0023     		movs	r3, #0
 606 000c 1946     		mov	r1, r3
 607 000e FF22     		movs	r2, #255
 608 0010 4320     		movs	r0, #67
 609 0012 FFF7FEFF 		bl	rgb_matrix_set_color
 610              	.LVL53:
 261:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L2, RGB_GREEN);
 611              		.loc 1 261 13 view .LVU156
 612 0016 0023     		movs	r3, #0
 613 0018 FF22     		movs	r2, #255
 614 001a 1946     		mov	r1, r3
 615 001c 4620     		movs	r0, #70
 616 001e FFF7FEFF 		bl	rgb_matrix_set_color
 617              	.LVL54:
 618              	.L77:
 262:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 263:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_NUM_LOCK)) {   // Num Lock indicator
 619              		.loc 1 263 9 view .LVU157
 620              		.loc 1 263 13 is_stmt 0 view .LVU158
 621 0022 FFF7FEFF 		bl	host_keyboard_leds
 622              	.LVL55:
 623              		.loc 1 263 12 view .LVU159
 624 0026 C207     		lsls	r2, r0, #31
 625 0028 0BD5     		bpl	.L78
 264:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L3, RGB_MAGENTA);
 626              		.loc 1 264 13 is_stmt 1 view .LVU160
 627 002a FF23     		movs	r3, #255
 628 002c 1946     		mov	r1, r3
 629 002e 0022     		movs	r2, #0
 630 0030 4920     		movs	r0, #73
 631 0032 FFF7FEFF 		bl	rgb_matrix_set_color
 632              	.LVL56:
 265:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L4, RGB_MAGENTA);
 633              		.loc 1 265 13 view .LVU161
 634 0036 FF23     		movs	r3, #255
 635 0038 0022     		movs	r2, #0
 636 003a 1946     		mov	r1, r3
 637 003c 4C20     		movs	r0, #76
 638 003e FFF7FEFF 		bl	rgb_matrix_set_color
 639              	.LVL57:
 640              	.L78:
 266:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 267:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_CAPS_LOCK)) {
 641              		.loc 1 267 9 view .LVU162
 642              		.loc 1 267 13 is_stmt 0 view .LVU163
 643 0042 FFF7FEFF 		bl	host_keyboard_leds
 644              	.LVL58:
 645              		.loc 1 267 12 view .LVU164
 646 0046 8307     		lsls	r3, r0, #30
 647 0048 11D5     		bpl	.L79
 268:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L5, RGB_RED);
 648              		.loc 1 268 13 is_stmt 1 view .LVU165
 649 004a 0023     		movs	r3, #0
 650 004c 1A46     		mov	r2, r3
 651 004e FF21     		movs	r1, #255
 652 0050 5020     		movs	r0, #80
 653 0052 FFF7FEFF 		bl	rgb_matrix_set_color
 654              	.LVL59:
 269:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L6, RGB_RED);
 655              		.loc 1 269 13 view .LVU166
 656 0056 0023     		movs	r3, #0
 657 0058 1A46     		mov	r2, r3
 658 005a FF21     		movs	r1, #255
 659 005c 5320     		movs	r0, #83
 660 005e FFF7FEFF 		bl	rgb_matrix_set_color
 661              	.LVL60:
 270:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L7, RGB_RED);
 662              		.loc 1 270 13 view .LVU167
 663 0062 0023     		movs	r3, #0
 664 0064 1A46     		mov	r2, r3
 665 0066 FF21     		movs	r1, #255
 666 0068 5720     		movs	r0, #87
 667 006a FFF7FEFF 		bl	rgb_matrix_set_color
 668              	.LVL61:
 669              	.L79:
 271:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 272:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (_isWinKeyDisabled) {
 670              		.loc 1 272 9 view .LVU168
 671              		.loc 1 272 13 is_stmt 0 view .LVU169
 672 006e 484B     		ldr	r3, .L102
 673              		.loc 1 272 12 view .LVU170
 674 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 675 0072 2BB1     		cbz	r3, .L80
 273:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_LWIN, RGB_RED);  //light up Win key when disabled
 676              		.loc 1 273 13 is_stmt 1 view .LVU171
 677 0074 0023     		movs	r3, #0
 678 0076 1A46     		mov	r2, r3
 679 0078 FF21     		movs	r1, #255
 680 007a 0B20     		movs	r0, #11
 681 007c FFF7FEFF 		bl	rgb_matrix_set_color
 682              	.LVL62:
 683              	.L80:
 274:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 275:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         switch(get_highest_layer(layer_state)){  // special handling per layer
 684              		.loc 1 275 9 view .LVU172
 685              		.loc 1 275 16 is_stmt 0 view .LVU173
 686 0080 444B     		ldr	r3, .L102+4
 687 0082 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 688 0084 FFF7FEFF 		bl	biton
 689              	.LVL63:
 690              		.loc 1 275 9 view .LVU174
 691 0088 0228     		cmp	r0, #2
 692 008a 50D0     		beq	.L81
 693 008c 0328     		cmp	r0, #3
 694 008e 6CD0     		beq	.L82
 695 0090 0128     		cmp	r0, #1
 696 0092 7BD1     		bne	.L76
 276:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _FN1:  // on Fn layer select what the encoder does when pressed
 277:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R2, RGB_RED);
 697              		.loc 1 277 13 is_stmt 1 view .LVU175
 698 0094 0023     		movs	r3, #0
 699 0096 1A46     		mov	r2, r3
 700 0098 FF21     		movs	r1, #255
 701 009a 4720     		movs	r0, #71
 702 009c FFF7FEFF 		bl	rgb_matrix_set_color
 703              	.LVL64:
 278:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R3, RGB_RED);
 704              		.loc 1 278 13 view .LVU176
 705 00a0 0023     		movs	r3, #0
 706 00a2 1A46     		mov	r2, r3
 707 00a4 FF21     		movs	r1, #255
 708 00a6 4A20     		movs	r0, #74
 709 00a8 FFF7FEFF 		bl	rgb_matrix_set_color
 710              	.LVL65:
 279:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R4, RGB_RED);
 711              		.loc 1 279 13 view .LVU177
 712 00ac 0023     		movs	r3, #0
 713 00ae 1A46     		mov	r2, r3
 714 00b0 FF21     		movs	r1, #255
 715 00b2 4D20     		movs	r0, #77
 716 00b4 FFF7FEFF 		bl	rgb_matrix_set_color
 717              	.LVL66:
 280:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_FN, RGB_RED); //FN key
 718              		.loc 1 280 13 view .LVU178
 281:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 282:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             // Add RGB Timeout Indicator -- shows 0 to 139 using F row and num row;  larger numbers
 283:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if (timeout_threshold <= 10) rgb_matrix_set_color(LED_LIST_FUNCROW[timeout_threshold], 
 719              		.loc 1 283 35 is_stmt 0 view .LVU179
 720 00b8 374D     		ldr	r5, .L102+8
 280:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_FN, RGB_RED); //FN key
 721              		.loc 1 280 13 view .LVU180
 722 00ba 0023     		movs	r3, #0
 723 00bc 3720     		movs	r0, #55
 724 00be 1A46     		mov	r2, r3
 725 00c0 FF21     		movs	r1, #255
 726 00c2 FFF7FEFF 		bl	rgb_matrix_set_color
 727              	.LVL67:
 728              		.loc 1 283 13 is_stmt 1 view .LVU181
 729              		.loc 1 283 35 is_stmt 0 view .LVU182
 730 00c6 2888     		ldrh	r0, [r5]
 731              		.loc 1 283 16 view .LVU183
 732 00c8 0A28     		cmp	r0, #10
 733 00ca 08D8     		bhi	.L84
 734              		.loc 1 283 42 is_stmt 1 discriminator 1 view .LVU184
 735 00cc 0023     		movs	r3, #0
 736 00ce 334C     		ldr	r4, .L102+12
 737 00d0 1A46     		mov	r2, r3
 738 00d2 FF21     		movs	r1, #255
 739              	.L101:
 284:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (timeout_threshold < 140) {
 285:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_FUNCROW[(timeout_threshold / 10)], RGB_RED);
 286:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 740              		.loc 1 286 17 is_stmt 0 view .LVU185
 741 00d4 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 742              	.L100:
 287:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 288:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[10], RGB_RED);
 289:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[11], RGB_RED);
 290:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[12], RGB_RED);
 291:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 292:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 293:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _MO2:
 294:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             for (uint8_t i=0; i<ARRAYSIZE(LED_LIST_NUMPAD); i++) {
 295:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 296:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 297:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R4, RGB_MAGENTA);
 298:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R5, RGB_MAGENTA);
 299:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R6, RGB_MAGENTA);
 300:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 301:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _MO3:
 302:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R6, RGB_GREEN);
 303:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R7, RGB_GREEN);
 304:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R8, RGB_GREEN);
 305:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 306:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         default:
 307:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 308:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 309:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 743              		.loc 1 309 5 view .LVU186
 744 00d6 BDE87040 		pop	{r4, r5, r6, lr}
 745              		.cfi_remember_state
 746              		.cfi_restore 14
 747              		.cfi_restore 6
 748              		.cfi_restore 5
 749              		.cfi_restore 4
 750              		.cfi_def_cfa_offset 0
 304:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 751              		.loc 1 304 13 view .LVU187
 752 00da FFF7FEBF 		b	rgb_matrix_set_color
 753              	.LVL68:
 754              	.L84:
 755              		.cfi_restore_state
 284:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (timeout_threshold < 140) {
 756              		.loc 1 284 18 is_stmt 1 view .LVU188
 284:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (timeout_threshold < 140) {
 757              		.loc 1 284 21 is_stmt 0 view .LVU189
 758 00de 8B28     		cmp	r0, #139
 759 00e0 14D8     		bhi	.L85
 285:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 760              		.loc 1 285 17 is_stmt 1 view .LVU190
 761 00e2 2E4E     		ldr	r6, .L102+12
 762 00e4 0023     		movs	r3, #0
 285:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 763              		.loc 1 285 74 is_stmt 0 view .LVU191
 764 00e6 0A24     		movs	r4, #10
 285:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 765              		.loc 1 285 17 view .LVU192
 766 00e8 1A46     		mov	r2, r3
 767 00ea FF21     		movs	r1, #255
 285:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 768              		.loc 1 285 74 view .LVU193
 769 00ec B0FBF4F0 		udiv	r0, r0, r4
 285:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 770              		.loc 1 285 17 view .LVU194
 771 00f0 305C     		ldrb	r0, [r6, r0]	@ zero_extendqisi2
 772 00f2 FFF7FEFF 		bl	rgb_matrix_set_color
 773              	.LVL69:
 286:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 774              		.loc 1 286 17 is_stmt 1 view .LVU195
 286:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 775              		.loc 1 286 73 is_stmt 0 view .LVU196
 776 00f6 2B88     		ldrh	r3, [r5]
 777 00f8 B3FBF4F0 		udiv	r0, r3, r4
 778 00fc 04FB1033 		mls	r3, r4, r0, r3
 779 0100 98B2     		uxth	r0, r3
 286:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 780              		.loc 1 286 17 view .LVU197
 781 0102 0023     		movs	r3, #0
 782 0104 264C     		ldr	r4, .L102+16
 783 0106 1A46     		mov	r2, r3
 784 0108 FF21     		movs	r1, #255
 785 010a E3E7     		b	.L101
 786              	.L85:
 288:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[11], RGB_RED);
 787              		.loc 1 288 17 is_stmt 1 view .LVU198
 788 010c 0023     		movs	r3, #0
 789 010e 1A46     		mov	r2, r3
 790 0110 FF21     		movs	r1, #255
 791 0112 3920     		movs	r0, #57
 792 0114 FFF7FEFF 		bl	rgb_matrix_set_color
 793              	.LVL70:
 289:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[12], RGB_RED);
 794              		.loc 1 289 17 view .LVU199
 795 0118 0023     		movs	r3, #0
 796 011a 1A46     		mov	r2, r3
 797 011c FF21     		movs	r1, #255
 798 011e 3E20     		movs	r0, #62
 799 0120 FFF7FEFF 		bl	rgb_matrix_set_color
 800              	.LVL71:
 290:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 801              		.loc 1 290 17 view .LVU200
 802 0124 0023     		movs	r3, #0
 803 0126 1A46     		mov	r2, r3
 804 0128 FF21     		movs	r1, #255
 805 012a 4E20     		movs	r0, #78
 806 012c D3E7     		b	.L100
 807              	.L81:
 808 012e 1D4D     		ldr	r5, .L102+20
 275:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _FN1:  // on Fn layer select what the encoder does when pressed
 809              		.loc 1 275 9 is_stmt 0 view .LVU201
 810 0130 0C24     		movs	r4, #12
 811              	.L86:
 812              	.LVL72:
 813              	.LBB20:
 295:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 814              		.loc 1 295 17 is_stmt 1 discriminator 3 view .LVU202
 815 0132 FF23     		movs	r3, #255
 816 0134 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 817              	.LVL73:
 295:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 818              		.loc 1 295 17 is_stmt 0 discriminator 3 view .LVU203
 819 0138 0022     		movs	r2, #0
 820 013a 1946     		mov	r1, r3
 294:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 821              		.loc 1 294 13 discriminator 3 view .LVU204
 822 013c 013C     		subs	r4, r4, #1
 295:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 823              		.loc 1 295 17 discriminator 3 view .LVU205
 824 013e FFF7FEFF 		bl	rgb_matrix_set_color
 825              	.LVL74:
 294:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 826              		.loc 1 294 61 is_stmt 1 discriminator 3 view .LVU206
 294:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 827              		.loc 1 294 31 discriminator 3 view .LVU207
 294:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 828              		.loc 1 294 13 is_stmt 0 discriminator 3 view .LVU208
 829 0142 14F0FF04 		ands	r4, r4, #255
 830 0146 F4D1     		bne	.L86
 831              	.LBE20:
 297:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R5, RGB_MAGENTA);
 832              		.loc 1 297 13 is_stmt 1 view .LVU209
 833 0148 FF23     		movs	r3, #255
 834 014a 1946     		mov	r1, r3
 835 014c 2246     		mov	r2, r4
 836 014e 4D20     		movs	r0, #77
 837 0150 FFF7FEFF 		bl	rgb_matrix_set_color
 838              	.LVL75:
 298:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R6, RGB_MAGENTA);
 839              		.loc 1 298 13 view .LVU210
 840 0154 FF23     		movs	r3, #255
 841 0156 1946     		mov	r1, r3
 842 0158 2246     		mov	r2, r4
 843 015a 5120     		movs	r0, #81
 844 015c FFF7FEFF 		bl	rgb_matrix_set_color
 845              	.LVL76:
 299:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 846              		.loc 1 299 13 view .LVU211
 847 0160 FF23     		movs	r3, #255
 848 0162 2246     		mov	r2, r4
 849 0164 1946     		mov	r1, r3
 850 0166 5420     		movs	r0, #84
 851 0168 B5E7     		b	.L100
 852              	.LVL77:
 853              	.L82:
 302:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R7, RGB_GREEN);
 854              		.loc 1 302 13 view .LVU212
 855 016a 0023     		movs	r3, #0
 856 016c 1946     		mov	r1, r3
 857 016e FF22     		movs	r2, #255
 858 0170 5420     		movs	r0, #84
 859 0172 FFF7FEFF 		bl	rgb_matrix_set_color
 860              	.LVL78:
 303:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R8, RGB_GREEN);
 861              		.loc 1 303 13 view .LVU213
 862 0176 0023     		movs	r3, #0
 863 0178 1946     		mov	r1, r3
 864 017a FF22     		movs	r2, #255
 865 017c 5820     		movs	r0, #88
 866 017e FFF7FEFF 		bl	rgb_matrix_set_color
 867              	.LVL79:
 304:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 868              		.loc 1 304 13 view .LVU214
 869 0182 0023     		movs	r3, #0
 870 0184 FF22     		movs	r2, #255
 871 0186 1946     		mov	r1, r3
 872 0188 5C20     		movs	r0, #92
 873 018a A4E7     		b	.L100
 874              	.L76:
 875              		.loc 1 309 5 is_stmt 0 view .LVU215
 876 018c 70BD     		pop	{r4, r5, r6, pc}
 877              	.L103:
 878 018e 00BF     		.align	2
 879              	.L102:
 880 0190 00000000 		.word	.LANCHOR1
 881 0194 00000000 		.word	layer_state
 882 0198 00000000 		.word	.LANCHOR0
 883 019c 00000000 		.word	.LANCHOR5
 884 01a0 00000000 		.word	.LANCHOR6
 885 01a4 00000000 		.word	.LANCHOR7
 886              		.cfi_endproc
 887              	.LFE296:
 889              		.section	.text.keyboard_post_init_user,"ax",%progbits
 890              		.align	1
 891              		.global	keyboard_post_init_user
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv4-sp-d16
 897              	keyboard_post_init_user:
 898              	.LFB297:
 310:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //LED SLEEP 210809 remarked
 311:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //void suspend_power_down_user(void) {
 312:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    rgb_matrix_set_suspend_state(true);
 313:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //}
 314:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 315:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //void suspend_wakeup_init_user(void) {
 316:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    rgb_matrix_set_suspend_state(false);
 317:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //}
 318:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #endif
 319:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 320:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 321:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void keyboard_post_init_user(void) {
 899              		.loc 1 321 36 is_stmt 1 view -0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 322:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 323:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (IS_HOST_LED_ON(USB_LED_NUM_LOCK)) { // turn on Num lock by default so that the numpad layer
 903              		.loc 1 323 5 view .LVU217
 321:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 904              		.loc 1 321 36 is_stmt 0 view .LVU218
 905 0000 08B5     		push	{r3, lr}
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 3, -8
 908              		.cfi_offset 14, -4
 909              		.loc 1 323 9 view .LVU219
 910 0002 FFF7FEFF 		bl	host_keyboard_leds
 911              	.LVL80:
 912              		.loc 1 323 8 view .LVU220
 913 0006 C307     		lsls	r3, r0, #31
 914 0008 02D5     		bpl	.L105
 324:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         tap_code(KC_NUMLOCK);
 915              		.loc 1 324 9 is_stmt 1 view .LVU221
 916 000a 5320     		movs	r0, #83
 917 000c FFF7FEFF 		bl	tap_code
 918              	.LVL81:
 919              	.L105:
 325:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 326:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     timeout_timer = timer_read(); // set inital time for ide timeout
 920              		.loc 1 326 5 view .LVU222
 921              		.loc 1 326 21 is_stmt 0 view .LVU223
 922 0010 FFF7FEFF 		bl	timer_read
 923              	.LVL82:
 327:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     #ifdef RGB_MATRIX_ENABLE
 328:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         rgb_matrix_set_color_all(RGB_NAUTILUS); // Default startup colour
 924              		.loc 1 328 9 is_stmt 1 view .LVU224
 329:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     #endif
 330:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** }
 925              		.loc 1 330 1 is_stmt 0 view .LVU225
 926 0014 BDE80840 		pop	{r3, lr}
 927              		.cfi_restore 14
 928              		.cfi_restore 3
 929              		.cfi_def_cfa_offset 0
 328:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     #endif
 930              		.loc 1 328 9 view .LVU226
 931 0018 A922     		movs	r2, #169
 932 001a A421     		movs	r1, #164
 933 001c 0020     		movs	r0, #0
 934 001e FFF7FEBF 		b	rgb_matrix_set_color_all
 935              	.LVL83:
 936              		.cfi_endproc
 937              	.LFE297:
 939              		.global	keymaps
 940              		.global	_isWinKeyDisabled
 941              		.global	tap_dance_actions
 942              		.global	nob_layer_state
 943              		.global	LED_SIDE_RIGHT
 944              		.global	LED_SIDE_LEFT
 945              		.global	LED_LIST_NUMPAD
 946              		.global	LED_LIST_NUMROW
 947              		.global	LED_LIST_FUNCROW
 948              		.global	LED_LIST_ARROWS
 949              		.global	LED_LIST_WASD
 950              		.section	.bss.RGB_TOGGLED,"aw",%nobits
 951              		.set	.LANCHOR4,. + 0
 954              	RGB_TOGGLED:
 955 0000 00       		.space	1
 956              		.section	.bss.Shift_Pressed,"aw",%nobits
 957              		.set	.LANCHOR2,. + 0
 960              	Shift_Pressed:
 961 0000 00       		.space	1
 962              		.section	.bss._isWinKeyDisabled,"aw",%nobits
 963              		.set	.LANCHOR1,. + 0
 966              	_isWinKeyDisabled:
 967 0000 00       		.space	1
 968              		.section	.bss.nob_layer_state,"aw",%nobits
 969              		.set	.LANCHOR3,. + 0
 972              	nob_layer_state:
 973 0000 00       		.space	1
 974              		.section	.data.__compound_literal.0,"aw"
 975              		.align	1
 978              	__compound_literal.0:
 979 0000 E100     		.short	225
 980 0002 3900     		.short	57
 981              		.section	.data.__compound_literal.1,"aw"
 982              		.align	1
 985              	__compound_literal.1:
 986 0000 E300     		.short	227
 987 0002 0808     		.short	2056
 988              		.section	.data.tap_dance_actions,"aw"
 989              		.align	2
 992              	tap_dance_actions:
 993 0000 00000000 		.word	qk_tap_dance_pair_on_each_tap
 994 0004 00000000 		.word	qk_tap_dance_pair_finished
 995 0008 00000000 		.word	qk_tap_dance_pair_reset
 996 000c 00000000 		.space	16
 996      00000000 
 996      00000000 
 996      00000000 
 997 001c 00000000 		.word	__compound_literal.0
 998 0020 00000000 		.word	qk_tap_dance_pair_on_each_tap
 999 0024 00000000 		.word	qk_tap_dance_pair_finished
 1000 0028 00000000 		.word	qk_tap_dance_pair_reset
 1001 002c 00000000 		.space	16
 1001      00000000 
 1001      00000000 
 1001      00000000 
 1002 003c 00000000 		.word	__compound_literal.1
 1003              		.section	.data.timeout_threshold,"aw"
 1004              		.align	1
 1005              		.set	.LANCHOR0,. + 0
 1008              	timeout_threshold:
 1009 0000 0500     		.short	5
 1010              		.section	.rodata.LED_LIST_ARROWS,"a"
 1013              	LED_LIST_ARROWS:
 1014 0000 5F4F5E61 		.ascii	"_O^a"
 1015              		.section	.rodata.LED_LIST_FUNCROW,"a"
 1016              		.set	.LANCHOR5,. + 0
 1019              	LED_LIST_FUNCROW:
 1020 0000 00060C12 		.ascii	"\000\006\014\022\027\034\"',28=BE"
 1020      171C2227 
 1020      2C32383D 
 1020      4245
 1021              		.section	.rodata.LED_LIST_NUMPAD,"a"
 1022              		.set	.LANCHOR7,. + 0
 1025              	LED_LIST_NUMPAD:
 1026 0000 282D3329 		.ascii	"(-3).4*/5+06"
 1026      2E342A2F 
 1026      352B3036 
 1027              		.section	.rodata.LED_LIST_NUMROW,"a"
 1028              		.set	.LANCHOR6,. + 0
 1031              	LED_LIST_NUMROW:
 1032 0000 01070D13 		.ascii	"\001\007\015\023\030\035#(-39>NUH"
 1032      181D2328 
 1032      2D33393E 
 1032      4E5548
 1033              		.section	.rodata.LED_LIST_WASD,"a"
 1036              	LED_LIST_WASD:
 1037 0000 0E090F15 		.ascii	"\016\011\017\025"
 1038              		.section	.rodata.LED_SIDE_LEFT,"a"
 1041              	LED_SIDE_LEFT:
 1042 0000 4346494C 		.ascii	"CFILPSW["
 1042      5053575B 
 1043              		.section	.rodata.LED_SIDE_RIGHT,"a"
 1046              	LED_SIDE_RIGHT:
 1047 0000 44474A4D 		.ascii	"DGJMQTX\\"
 1047      5154585C 
 1048              		.section	.rodata.keymaps,"a"
 1049              		.align	1
 1052              	keymaps:
 1053 0000 E100     		.short	225
 1054 0002 615D     		.short	23905
 1055 0004 0000     		.short	0
 1056 0006 5000     		.short	80
 1057 0008 E701     		.short	487
 1058 000a 4F00     		.short	79
 1059 000c E000     		.short	224
 1060 000e 3E00     		.short	62
 1061 0010 1400     		.short	20
 1062 0012 2B00     		.short	43
 1063 0014 0400     		.short	4
 1064 0016 2900     		.short	41
 1065 0018 1D00     		.short	29
 1066 001a 4B00     		.short	75
 1067 001c 3500     		.short	53
 1068 001e 1E00     		.short	30
 1069 0020 1A00     		.short	26
 1070 0022 3900     		.short	57
 1071 0024 1600     		.short	22
 1072 0026 0000     		.short	0
 1073 0028 1B00     		.short	27
 1074 002a 4E00     		.short	78
 1075 002c 3A00     		.short	58
 1076 002e 1F00     		.short	31
 1077 0030 0800     		.short	8
 1078 0032 3C00     		.short	60
 1079 0034 0700     		.short	7
 1080 0036 3D00     		.short	61
 1081 0038 0600     		.short	6
 1082 003a 5200     		.short	82
 1083 003c 3B00     		.short	59
 1084 003e 2000     		.short	32
 1085 0040 1500     		.short	21
 1086 0042 1700     		.short	23
 1087 0044 0900     		.short	9
 1088 0046 0A00     		.short	10
 1089 0048 1900     		.short	25
 1090 004a 0500     		.short	5
 1091 004c 2200     		.short	34
 1092 004e 2100     		.short	33
 1093 0050 1800     		.short	24
 1094 0052 1C00     		.short	28
 1095 0054 0D00     		.short	13
 1096 0056 0B00     		.short	11
 1097 0058 1000     		.short	16
 1098 005a 1100     		.short	17
 1099 005c 2300     		.short	35
 1100 005e 2400     		.short	36
 1101 0060 0C00     		.short	12
 1102 0062 3000     		.short	48
 1103 0064 0E00     		.short	14
 1104 0066 3F00     		.short	63
 1105 0068 3600     		.short	54
 1106 006a 4600     		.short	70
 1107 006c 2E00     		.short	46
 1108 006e 2500     		.short	37
 1109 0070 1200     		.short	18
 1110 0072 4000     		.short	64
 1111 0074 0F00     		.short	15
 1112 0076 5100     		.short	81
 1113 0078 3700     		.short	55
 1114 007a 4C00     		.short	76
 1115 007c 4100     		.short	65
 1116 007e 2600     		.short	38
 1117 0080 1300     		.short	19
 1118 0082 2F00     		.short	47
 1119 0084 3300     		.short	51
 1120 0086 3400     		.short	52
 1121 0088 0000     		.short	0
 1122 008a 3800     		.short	56
 1123 008c 2D00     		.short	45
 1124 008e 2700     		.short	39
 1125 0090 0157     		.short	22273
 1126 0092 E500     		.short	229
 1127 0094 0151     		.short	20737
 1128 0096 E200     		.short	226
 1129 0098 2C00     		.short	44
 1130 009a E600     		.short	230
 1131 009c 0000     		.short	0
 1132 009e AE00     		.short	174
 1133 00a0 0000     		.short	0
 1134 00a2 2A00     		.short	42
 1135 00a4 3100     		.short	49
 1136 00a6 4400     		.short	68
 1137 00a8 2800     		.short	40
 1138 00aa 4500     		.short	69
 1139 00ac 4200     		.short	66
 1140 00ae 4300     		.short	67
 1141 00b0 0100     		.short	1
 1142 00b2 0100     		.short	1
 1143 00b4 0000     		.short	0
 1144 00b6 CC5C     		.short	23756
 1145 00b8 0100     		.short	1
 1146 00ba CB5C     		.short	23755
 1147 00bc 0100     		.short	1
 1148 00be AC00     		.short	172
 1149 00c0 0100     		.short	1
 1150 00c2 0100     		.short	1
 1151 00c4 0100     		.short	1
 1152 00c6 675D     		.short	23911
 1153 00c8 0100     		.short	1
 1154 00ca 4A00     		.short	74
 1155 00cc 0100     		.short	1
 1156 00ce 035D     		.short	23811
 1157 00d0 C95C     		.short	23753
 1158 00d2 0258     		.short	22530
 1159 00d4 CA5C     		.short	23754
 1160 00d6 0000     		.short	0
 1161 00d8 C55C     		.short	23749
 1162 00da 4D00     		.short	77
 1163 00dc B300     		.short	179
 1164 00de 045D     		.short	23812
 1165 00e0 0100     		.short	1
 1166 00e2 B200     		.short	178
 1167 00e4 0100     		.short	1
 1168 00e6 AF00     		.short	175
 1169 00e8 0100     		.short	1
 1170 00ea C35C     		.short	23747
 1171 00ec B500     		.short	181
 1172 00ee 065D     		.short	23814
 1173 00f0 0100     		.short	1
 1174 00f2 0100     		.short	1
 1175 00f4 0100     		.short	1
 1176 00f6 0100     		.short	1
 1177 00f8 0100     		.short	1
 1178 00fa 0100     		.short	1
 1179 00fc 0100     		.short	1
 1180 00fe 075D     		.short	23815
 1181 0100 4600     		.short	70
 1182 0102 0100     		.short	1
 1183 0104 0100     		.short	1
 1184 0106 0100     		.short	1
 1185 0108 0100     		.short	1
 1186 010a 5300     		.short	83
 1187 010c 0100     		.short	1
 1188 010e 0100     		.short	1
 1189 0110 4700     		.short	71
 1190 0112 0100     		.short	1
 1191 0114 0100     		.short	1
 1192 0116 AB00     		.short	171
 1193 0118 655D     		.short	23909
 1194 011a C25C     		.short	23746
 1195 011c 0100     		.short	1
 1196 011e 0100     		.short	1
 1197 0120 4800     		.short	72
 1198 0122 AE00     		.short	174
 1199 0124 0100     		.short	1
 1200 0126 C45C     		.short	23748
 1201 0128 645D     		.short	23908
 1202 012a 0100     		.short	1
 1203 012c AD00     		.short	173
 1204 012e 0100     		.short	1
 1205 0130 0100     		.short	1
 1206 0132 0100     		.short	1
 1207 0134 0100     		.short	1
 1208 0136 0100     		.short	1
 1209 0138 0000     		.short	0
 1210 013a 0100     		.short	1
 1211 013c 0100     		.short	1
 1212 013e 0100     		.short	1
 1213 0140 635D     		.short	23907
 1214 0142 0100     		.short	1
 1215 0144 0100     		.short	1
 1216 0146 0100     		.short	1
 1217 0148 0100     		.short	1
 1218 014a 0100     		.short	1
 1219 014c 0000     		.short	0
 1220 014e B200     		.short	178
 1221 0150 0000     		.short	0
 1222 0152 0100     		.short	1
 1223 0154 005C     		.short	23552
 1224 0156 065D     		.short	23814
 1225 0158 0100     		.short	1
 1226 015a 075D     		.short	23815
 1227 015c 035D     		.short	23811
 1228 015e 045D     		.short	23812
 1229 0160 0100     		.short	1
 1230 0162 0100     		.short	1
 1231 0164 0000     		.short	0
 1232 0166 5011     		.short	4432
 1233 0168 0100     		.short	1
 1234 016a 4F11     		.short	4431
 1235 016c 0100     		.short	1
 1236 016e 0100     		.short	1
 1237 0170 4A00     		.short	74
 1238 0172 0100     		.short	1
 1239 0174 5000     		.short	80
 1240 0176 0100     		.short	1
 1241 0178 0000     		.short	0
 1242 017a 4A00     		.short	74
 1243 017c 0100     		.short	1
 1244 017e 0100     		.short	1
 1245 0180 5200     		.short	82
 1246 0182 0100     		.short	1
 1247 0184 5100     		.short	81
 1248 0186 0000     		.short	0
 1249 0188 4C00     		.short	76
 1250 018a 4D00     		.short	77
 1251 018c 0100     		.short	1
 1252 018e 0100     		.short	1
 1253 0190 4D00     		.short	77
 1254 0192 0100     		.short	1
 1255 0194 4F00     		.short	79
 1256 0196 0100     		.short	1
 1257 0198 4900     		.short	73
 1258 019a 4B11     		.short	4427
 1259 019c 0100     		.short	1
 1260 019e 0100     		.short	1
 1261 01a0 4B00     		.short	75
 1262 01a2 0100     		.short	1
 1263 01a4 4E00     		.short	78
 1264 01a6 0100     		.short	1
 1265 01a8 0000     		.short	0
 1266 01aa 0000     		.short	0
 1267 01ac 0100     		.short	1
 1268 01ae 0100     		.short	1
 1269 01b0 5C00     		.short	92
 1270 01b2 2B00     		.short	43
 1271 01b4 5900     		.short	89
 1272 01b6 0100     		.short	1
 1273 01b8 6200     		.short	98
 1274 01ba 0000     		.short	0
 1275 01bc 0100     		.short	1
 1276 01be 5F00     		.short	95
 1277 01c0 5D00     		.short	93
 1278 01c2 0100     		.short	1
 1279 01c4 5A00     		.short	90
 1280 01c6 0100     		.short	1
 1281 01c8 625D     		.short	23906
 1282 01ca 0100     		.short	1
 1283 01cc 5700     		.short	87
 1284 01ce 6000     		.short	96
 1285 01d0 5E00     		.short	94
 1286 01d2 0100     		.short	1
 1287 01d4 5B00     		.short	91
 1288 01d6 4E11     		.short	4430
 1289 01d8 6300     		.short	99
 1290 01da 0100     		.short	1
 1291 01dc 0100     		.short	1
 1292 01de 6100     		.short	97
 1293 01e0 6300     		.short	99
 1294 01e2 0100     		.short	1
 1295 01e4 0000     		.short	0
 1296 01e6 5500     		.short	85
 1297 01e8 0000     		.short	0
 1298 01ea 5400     		.short	84
 1299 01ec 5600     		.short	86
 1300 01ee 6200     		.short	98
 1301 01f0 0100     		.short	1
 1302 01f2 0100     		.short	1
 1303 01f4 0100     		.short	1
 1304 01f6 0100     		.short	1
 1305 01f8 2A00     		.short	42
 1306 01fa 0100     		.short	1
 1307 01fc 0000     		.short	0
 1308 01fe 0100     		.short	1
 1309 0200 0000     		.short	0
 1310 0202 0100     		.short	1
 1311 0204 0100     		.short	1
 1312 0206 0100     		.short	1
 1313 0208 5800     		.short	88
 1314 020a 0100     		.short	1
 1315 020c 0100     		.short	1
 1316 020e 0100     		.short	1
 1317 0210 0100     		.short	1
 1318 0212 0100     		.short	1
 1319 0214 0000     		.short	0
 1320 0216 0100     		.short	1
 1321 0218 0100     		.short	1
 1322 021a 0100     		.short	1
 1323 021c 0100     		.short	1
 1324 021e 0100     		.short	1
 1325 0220 0100     		.short	1
 1326 0222 0100     		.short	1
 1327 0224 0100     		.short	1
 1328 0226 0100     		.short	1
 1329 0228 0100     		.short	1
 1330 022a 0100     		.short	1
 1331 022c 0100     		.short	1
 1332 022e 0100     		.short	1
 1333 0230 0100     		.short	1
 1334 0232 0100     		.short	1
 1335 0234 0100     		.short	1
 1336 0236 0000     		.short	0
 1337 0238 0100     		.short	1
 1338 023a 0100     		.short	1
 1339 023c 0100     		.short	1
 1340 023e 0100     		.short	1
 1341 0240 0100     		.short	1
 1342 0242 0100     		.short	1
 1343 0244 0100     		.short	1
 1344 0246 0100     		.short	1
 1345 0248 0100     		.short	1
 1346 024a 0100     		.short	1
 1347 024c 0100     		.short	1
 1348 024e 0100     		.short	1
 1349 0250 0100     		.short	1
 1350 0252 0100     		.short	1
 1351 0254 0100     		.short	1
 1352 0256 0100     		.short	1
 1353 0258 0100     		.short	1
 1354 025a 0100     		.short	1
 1355 025c 0100     		.short	1
 1356 025e 0100     		.short	1
 1357 0260 0100     		.short	1
 1358 0262 0100     		.short	1
 1359 0264 0100     		.short	1
 1360 0266 0100     		.short	1
 1361 0268 0100     		.short	1
 1362 026a 0100     		.short	1
 1363 026c 0100     		.short	1
 1364 026e 0100     		.short	1
 1365 0270 0100     		.short	1
 1366 0272 0100     		.short	1
 1367 0274 0100     		.short	1
 1368 0276 0100     		.short	1
 1369 0278 0100     		.short	1
 1370 027a 0100     		.short	1
 1371 027c 0100     		.short	1
 1372 027e 0100     		.short	1
 1373 0280 0100     		.short	1
 1374 0282 0100     		.short	1
 1375 0284 0100     		.short	1
 1376 0286 0100     		.short	1
 1377 0288 0100     		.short	1
 1378 028a 0100     		.short	1
 1379 028c 0100     		.short	1
 1380 028e 0100     		.short	1
 1381 0290 0100     		.short	1
 1382 0292 0100     		.short	1
 1383 0294 0100     		.short	1
 1384 0296 0100     		.short	1
 1385 0298 0000     		.short	0
 1386 029a 0100     		.short	1
 1387 029c 0100     		.short	1
 1388 029e 0100     		.short	1
 1389 02a0 0100     		.short	1
 1390 02a2 0100     		.short	1
 1391 02a4 0100     		.short	1
 1392 02a6 0100     		.short	1
 1393 02a8 0100     		.short	1
 1394 02aa 0100     		.short	1
 1395 02ac 0000     		.short	0
 1396 02ae 0100     		.short	1
 1397 02b0 0000     		.short	0
 1398 02b2 0100     		.short	1
 1399 02b4 0100     		.short	1
 1400 02b6 0100     		.short	1
 1401 02b8 0100     		.short	1
 1402 02ba 0100     		.short	1
 1403 02bc 0100     		.short	1
 1404 02be 0100     		.short	1
 1405              		.text
 1406              	.Letext0:
 1407              		.file 2 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 1408              		.file 3 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 1409              		.file 4 "tmk_core/common/keyboard.h"
 1410              		.file 5 "tmk_core/common/keycode.h"
 1411              		.file 6 "tmk_core/common/action.h"
 1412              		.file 7 "quantum/quantum_keycodes.h"
 1413              		.file 8 "tmk_core/common/action_layer.h"
 1414              		.file 9 "quantum/keymap.h"
 1415              		.file 10 "quantum/process_keycode/process_tap_dance.h"
 1416              		.file 11 "keyboards/gmmk/pro/ansi/keymaps/mykey/rgb_matrix_map.h"
 1417              		.file 12 "tmk_core/common/host.h"
 1418              		.file 13 "tmk_core/common/timer.h"
 1419              		.file 14 "quantum/rgb_matrix/rgb_matrix.h"
 1420              		.file 15 "quantum/bitwise.h"
 1421              		.file 16 "quantum/quantum.h"
 1422              		.file 17 "quantum/send_string.h"
 1423              		.file 18 "quantum/process_keycode/process_magic.h"
 1424              		.file 19 "lib/printf/printf.h"
 1425              		.file 20 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:18     .text.timeout_reset_timer:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:26     .text.timeout_reset_timer:0000000000000000 timeout_reset_timer
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:42     .text.timeout_update_threshold:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:49     .text.timeout_update_threshold:0000000000000000 timeout_update_threshold
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:109    .text.timeout_update_threshold:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:119    .text.process_record_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:126    .text.process_record_user:0000000000000000 process_record_user
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:168    .text.process_record_user:0000000000000036 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:174    .text.process_record_user:000000000000003c $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:416    .text.process_record_user:0000000000000120 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:427    .text.matrix_scan_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:434    .text.matrix_scan_user:0000000000000000 matrix_scan_user
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:447    .text.encoder_update_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:454    .text.encoder_update_user:0000000000000000 encoder_update_user
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:570    .text.encoder_update_user:0000000000000050 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:576    .text.rgb_matrix_indicators_advanced_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:583    .text.rgb_matrix_indicators_advanced_user:0000000000000000 rgb_matrix_indicators_advanced_user
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:880    .text.rgb_matrix_indicators_advanced_user:0000000000000190 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:890    .text.keyboard_post_init_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:897    .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1052   .rodata.keymaps:0000000000000000 keymaps
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:966    .bss._isWinKeyDisabled:0000000000000000 _isWinKeyDisabled
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:992    .data.tap_dance_actions:0000000000000000 tap_dance_actions
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:972    .bss.nob_layer_state:0000000000000000 nob_layer_state
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1046   .rodata.LED_SIDE_RIGHT:0000000000000000 LED_SIDE_RIGHT
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1041   .rodata.LED_SIDE_LEFT:0000000000000000 LED_SIDE_LEFT
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1025   .rodata.LED_LIST_NUMPAD:0000000000000000 LED_LIST_NUMPAD
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1031   .rodata.LED_LIST_NUMROW:0000000000000000 LED_LIST_NUMROW
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1019   .rodata.LED_LIST_FUNCROW:0000000000000000 LED_LIST_FUNCROW
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1013   .rodata.LED_LIST_ARROWS:0000000000000000 LED_LIST_ARROWS
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1036   .rodata.LED_LIST_WASD:0000000000000000 LED_LIST_WASD
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:954    .bss.RGB_TOGGLED:0000000000000000 RGB_TOGGLED
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:955    .bss.RGB_TOGGLED:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:960    .bss.Shift_Pressed:0000000000000000 Shift_Pressed
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:961    .bss.Shift_Pressed:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:967    .bss._isWinKeyDisabled:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:973    .bss.nob_layer_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:975    .data.__compound_literal.0:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:978    .data.__compound_literal.0:0000000000000000 __compound_literal.0
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:982    .data.__compound_literal.1:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:985    .data.__compound_literal.1:0000000000000000 __compound_literal.1
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:989    .data.tap_dance_actions:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1004   .data.timeout_threshold:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1008   .data.timeout_threshold:0000000000000000 timeout_threshold
C:\Users\lhanj\AppData\Local\Temp\ccGTKPF8.s:1049   .rodata.keymaps:0000000000000000 $d

UNDEFINED SYMBOLS
timer_read
send_string_P
process_magic
unregister_code16
tap_code
printf_
rgb_matrix_enable
rgb_matrix_disable_noeeprom
tap_code16
host_keyboard_leds
rgb_matrix_set_color
biton
layer_state
rgb_matrix_set_color_all
qk_tap_dance_pair_on_each_tap
qk_tap_dance_pair_finished
qk_tap_dance_pair_reset
