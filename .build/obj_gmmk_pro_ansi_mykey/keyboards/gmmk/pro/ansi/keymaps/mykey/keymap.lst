   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 2
  13              		.file	"keymap.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.timeout_reset_timer,"ax",%progbits
  18              		.align	1
  19              		.global	timeout_reset_timer
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	timeout_reset_timer:
  27              	.LFB291:
  28              		.file 1 "keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c"
   1:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** /* 20210806 HJLee - macro, mapping, knob layer added. 
   2:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    20210807 HJLee - knob function changed(brightness)
   3:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    20210808 HJLee - RGB works with RGB_TOG
   4:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    20210809 HJLee - Test
   5:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    20210810 HJLee - Added Knod brightness control
   6:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** This program is free software: you can redistribute it and/or modify
   7:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** it under the terms of the GNU General Public License as published by
   8:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** the Free Software Foundation, either version 2 of the License, or
   9:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** (at your option) any later version.
  10:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  11:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** This program is distributed in the hope that it will be useful,
  12:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** GNU General Public License for more details.
  15:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  16:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** You should have received a copy of the GNU General Public License
  17:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** */
  19:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  20:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  21:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** /******If use Via, should reset EEPROM(because enabling via saves your keymap to your EEPROM)*****/
  22:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** // EEPROM RESET : Plug cable with pressing ESC
  23:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #include QMK_KEYBOARD_H
  24:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #include "rgb_matrix_map.h"
  25:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  26:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define ARRAYSIZE(arr)  sizeof(arr)/sizeof(arr[0])
  27:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  28:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum custom_layers {
  29:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _BASE,
  30:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _FN1,
  31:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _MO2,
  32:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _MO3,
  33:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  34:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  35:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum nob_layers {
  36:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _WHEEL,
  37:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _MUSIC,
  38:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     _VOLUME
  39:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  40:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum nob_layers nob_layer_state = _WHEEL;
  41:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  42:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum custom_keycodes {
  43:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     NOB_LAYER_INC = SAFE_RANGE,
  44:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     KC_00,
  45:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     KC_WINLCK,  // Toggles Win key on and off
  46:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     RGB_TOI,    // Timeout idle time up
  47:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     RGB_TOD,    // Timeout idle time down
  48:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     MY_SLEEP,
  49:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  50:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  51:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** // Tap Dance Definitions
  52:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** enum custom_tapdance {
  53:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     TD_LSFT_CAPSLOCK,
  54:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     TD_WIN,
  55:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  56:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  57:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** qk_tap_dance_action_t tap_dance_actions[] = {//NOT SUPPORT USER CUSTOM KEY!!!
  58:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   // Tap once for shift, twice for Caps Lock
  59:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   [TD_LSFT_CAPSLOCK] = ACTION_TAP_DANCE_DOUBLE(KC_LSFT, KC_CAPS),
  60:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   // Tap once for Win, twice for File Explorer
  61:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****   [TD_WIN]           = ACTION_TAP_DANCE_DOUBLE(KC_LGUI, LGUI(KC_E)),
  62:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  63:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  64:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define KC_LSFTCAPS TD(TD_LSFT_CAPSLOCK)
  65:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define KC_LGUI TD(TD_WIN)
  66:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  67:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** bool _isWinKeyDisabled = false;
  68:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  69:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  70:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  71:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  72:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      ESC      F1       F2       F3       F4       F5       F6       F7       F8       F9       F
  73:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      ~        1        2        3        4        5        6        7        8        9        0
  74:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Tab      Q        W        E        R        T        Y        U        I        O        P
  75:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Caps     A        S        D        F        G        H        J        K        L        ;
  76:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Sh_L              Z        X        C        V        B        N        M        ,        .
  77:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** //      Ct_L     Win_L    Alt_L                               SPACE                               A
  78:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  79:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  80:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     [_BASE] = LAYOUT(
  81:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_ESC,  KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_F7,   KC_F8,   KC_F9,   K
  82:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_GRV,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    K
  83:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_TAB,  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    K
  84:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_CAPS, KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    K
  85:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_LSFT,          KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_N,    KC_M,    KC_COMM, K
  86:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         KC_LCTL, KC_LGUI, KC_LALT,                            KC_SPC,                             K
  87:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),//set RGUI to move virtual desktop because LGUI used to doubletap 
  88:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  89:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     [_FN1] = LAYOUT(
  90:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         MY_SLEEP, KC_MYCM, KC_WHOM, KC_CALC, KC_MSEL, KC_MPRV, KC_MNXT, KC_MPLY, KC_MSTP, DM_REC1, 
  91:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, DM_REC1, DM_REC2, DM_PLY1, DM_PLY2, _______, _______, _______, _______, _______, _
  92:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, RGB_VAI, _______, _______, _______, _______, KC_PSCR, KC_SLCK, KC_PAUS, _
  93:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         TT(_MO2), _______, RGB_VAD, _______, _______, _______, _______, _______, _______, _______, 
  94:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______,          _______, RGB_HUI, _______, _______, _______, KC_NLCK, _______, RGB_TOD, R
  95:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, KC_WINLCK, _______,                            _______,                          _
  96:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),
  97:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
  98:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     [_MO2] = LAYOUT(
  99:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 100:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, KC_P7,   KC_P8,   KC_P9,   K
 101:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, KC_HOME, KC_UP,   KC_END,  KC_PGUP, _______, KC_TAB,  KC_P4,   KC_P5,   KC_P6,   K
 102:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, KC_LEFT, KC_DOWN, KC_RGHT, KC_PGDN, _______, _______, KC_P1,   KC_P2,   KC_P3,   K
 103:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______,          KC_NO,   KC_DEL,  KC_INS,  KC_NO,   KC_NO,   KC_NO,   KC_P0, KC_00, KC_PD
 104:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______,                            KC_BSPC,                            _
 105:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),
 106:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 107:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****    [_MO3] = LAYOUT(
 108:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 109:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 110:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 111:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _
 112:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______,          _______, _______, _______, _______, _______, _______, _______, _______, _
 113:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         _______, _______, _______,                            _______,                            _
 114:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     ),
 115:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 116:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 117:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 118:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 119:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** // TIMEOUTS
 120:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define TIMEOUT_THRESHOLD_DEFAULT   5    // default timeout minutes
 121:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #define TIMEOUT_THRESHOLD_MAX       140  // upper limits (2 hours and 10 minutes -- no rgb indicato
 122:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static uint16_t timeout_timer = 0;
 123:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static uint16_t timeout_counter = 0;  //in minute intervals
 124:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static uint16_t timeout_threshold = TIMEOUT_THRESHOLD_DEFAULT;
 125:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static bool     Shift_Pressed = false;  // for knob custom 210807
 126:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** static bool     Caps_Pressed     = false;
 127:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 128:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void timeout_reset_timer(void) {
  29              		.loc 1 128 32 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 129:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     timeout_timer = timer_read();
  34              		.loc 1 129 5 view .LVU1
  35              		.loc 1 129 21 is_stmt 0 view .LVU2
  36 0000 FFF7FEBF 		b	timer_read
  37              	.LVL0:
  38              		.cfi_endproc
  39              	.LFE291:
  41              		.section	.text.timeout_update_threshold,"ax",%progbits
  42              		.align	1
  43              		.global	timeout_update_threshold
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	timeout_update_threshold:
  50              	.LVL1:
  51              	.LFB292:
 130:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     timeout_counter = 0;
 131:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 132:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void timeout_update_threshold(bool increase) {
  52              		.loc 1 133 46 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
 134:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
  57              		.loc 1 134 5 view .LVU4
  58              		.loc 1 134 39 is_stmt 0 view .LVU5
  59 0000 064A     		ldr	r2, .L7
  60 0002 1388     		ldrh	r3, [r2]
  61              		.loc 1 134 8 view .LVU6
  62 0004 30B1     		cbz	r0, .L3
  63              		.loc 1 134 18 discriminator 1 view .LVU7
  64 0006 8B2B     		cmp	r3, #139
  65 0008 06D8     		bhi	.L2
  66              		.loc 1 134 64 is_stmt 1 discriminator 2 view .LVU8
  67              		.loc 1 134 81 is_stmt 0 discriminator 2 view .LVU9
  68 000a 0133     		adds	r3, r3, #1
  69              	.L6:
  70              	.LBB6:
  71              	.LBB7:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  72              		.loc 1 135 62 view .LVU10
  73 000c 1380     		strh	r3, [r2]	@ movhi
  74              	.LBE7:
  75              	.LBE6:
 136:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
  76              		.loc 1 136 1 view .LVU11
  77 000e 7047     		bx	lr
  78              	.LVL2:
  79              	.L5:
  80              	.LBB10:
  81              	.LBB8:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  82              		.loc 1 135 45 is_stmt 1 view .LVU12
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  83              		.loc 1 135 62 is_stmt 0 view .LVU13
  84 0010 013B     		subs	r3, r3, #1
  85 0012 FBE7     		b	.L6
  86              	.LVL3:
  87              	.L3:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  88              		.loc 1 135 62 view .LVU14
  89              	.LBE8:
  90              	.LBE10:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  91              		.loc 1 135 5 is_stmt 1 view .LVU15
  92              	.LBB11:
  93              	.LBI6:
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
  94              		.loc 1 133 6 view .LVU16
  95              	.LBB9:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
  96              		.loc 1 135 19 is_stmt 0 view .LVU17
  97 0014 002B     		cmp	r3, #0
  98 0016 FBD1     		bne	.L5
  99              	.LVL4:
 100              	.L2:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
 101              		.loc 1 135 19 view .LVU18
 102              	.LBE9:
 103              	.LBE11:
 104              		.loc 1 136 1 view .LVU19
 105 0018 7047     		bx	lr
 106              	.L8:
 107 001a 00BF     		.align	2
 108              	.L7:
 109 001c 00000000 		.word	.LANCHOR0
 110              		.cfi_endproc
 111              	.LFE292:
 113              		.section	.rodata.process_record_user.str1.1,"aMS",%progbits,1
 114              	.LC0:
 115 0000 303000   		.ascii	"00\000"
 116              		.section	.text.process_record_user,"ax",%progbits
 117              		.align	1
 118              		.global	process_record_user
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	process_record_user:
 125              	.LVL5:
 126              	.LFB293:
 137:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 138:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 139:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** bool process_record_user(uint16_t keycode, keyrecord_t *record) {
 127              		.loc 1 139 65 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 140:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //keycodes need return true or false (meaning of send origin keycode after action)
 141:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     switch (keycode) {
 131              		.loc 1 141 5 view .LVU21
 139:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //keycodes need return true or false (meaning of send origin keycode after action)
 132              		.loc 1 139 65 is_stmt 0 view .LVU22
 133 0000 38B5     		push	{r3, r4, r5, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 3, -16
 136              		.cfi_offset 4, -12
 137              		.cfi_offset 5, -8
 138              		.cfi_offset 14, -4
 139              		.loc 1 141 5 view .LVU23
 140 0002 45F66753 		movw	r3, #23911
 141 0006 9842     		cmp	r0, r3
 142 0008 09D8     		bhi	.L31
 143 000a 45F66153 		movw	r3, #23905
 144 000e 9842     		cmp	r0, r3
 145 0010 07D8     		bhi	.L11
 146 0012 20F00403 		bic	r3, r0, #4
 147 0016 E12B     		cmp	r3, #225
 148 0018 51D0     		beq	.L12
 149 001a 3928     		cmp	r0, #57
 150 001c 5BD0     		beq	.L13
 151              	.L31:
 152 001e 0124     		movs	r4, #1
 153 0020 21E0     		b	.L10
 154              	.L11:
 155 0022 A0F5BA40 		sub	r0, r0, #23808
 156              	.LVL6:
 157              		.loc 1 141 5 view .LVU24
 158 0026 6338     		subs	r0, r0, #99
 159 0028 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 160 002a 0428     		cmp	r0, #4
 161 002c 35D8     		bhi	.L14
 162 002e DFE800F0 		tbb	[pc, r0]
 163              	.L16:
 164 0032 03       		.byte	(.L20-.L16)/2
 165 0033 0A       		.byte	(.L19-.L16)/2
 166 0034 21       		.byte	(.L18-.L16)/2
 167 0035 29       		.byte	(.L17-.L16)/2
 168 0036 4C       		.byte	(.L15-.L16)/2
 169 0037 00       		.p2align 1
 170              	.L20:
 142:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_00:
 143:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed) {
 171              		.loc 1 143 9 is_stmt 1 view .LVU25
 172              		.loc 1 143 12 is_stmt 0 view .LVU26
 173 0038 0CB9     		cbnz	r4, .L21
 174              	.LVL7:
 175              	.L41:
 144:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             // when keycode KC_00 is pressed
 145:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             SEND_STRING("00");
 146:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 147:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             // when keycode KC_00 is released
 148:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 149:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 150:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_WINLCK:
 151:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed) {
 152:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             _isWinKeyDisabled = !_isWinKeyDisabled; //toggle status
 153:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if(_isWinKeyDisabled) {
 154:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_OFF, record);
 155:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else {
 156:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_ON, record);
 157:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 158:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 159:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 160:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case RGB_TOI:
 161:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if(record->event.pressed) {
 162:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_update_threshold(true);
 163:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 164:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 176              		.loc 1 164 16 view .LVU27
 177 003a 0024     		movs	r4, #0
 178 003c 13E0     		b	.L10
 179              	.LVL8:
 180              	.L21:
 145:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 181              		.loc 1 145 13 is_stmt 1 view .LVU28
 182 003e 2948     		ldr	r0, .L46
 183 0040 FFF7FEFF 		bl	send_string_P
 184              	.LVL9:
 145:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else {
 185              		.loc 1 145 13 is_stmt 0 view .LVU29
 186 0044 F9E7     		b	.L41
 187              	.LVL10:
 188              	.L19:
 151:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             _isWinKeyDisabled = !_isWinKeyDisabled; //toggle status
 189              		.loc 1 151 9 is_stmt 1 view .LVU30
 151:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             _isWinKeyDisabled = !_isWinKeyDisabled; //toggle status
 190              		.loc 1 151 12 is_stmt 0 view .LVU31
 191 0046 84B1     		cbz	r4, .L22
 152:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if(_isWinKeyDisabled) {
 192              		.loc 1 152 13 is_stmt 1 view .LVU32
 193 0048 274B     		ldr	r3, .L46+4
 194 004a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 195 004c 84F00104 		eor	r4, r4, #1
 152:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if(_isWinKeyDisabled) {
 196              		.loc 1 152 31 is_stmt 0 view .LVU33
 197 0050 1C70     		strb	r4, [r3]
 153:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_OFF, record);
 198              		.loc 1 153 13 is_stmt 1 view .LVU34
 153:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 process_magic(GUI_OFF, record);
 199              		.loc 1 153 15 is_stmt 0 view .LVU35
 200 0052 24B1     		cbz	r4, .L23
 154:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else {
 201              		.loc 1 154 17 is_stmt 1 view .LVU36
 202 0054 45F60640 		movw	r0, #23558
 203 0058 FFF7FEFF 		bl	process_magic
 204              	.LVL11:
 154:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else {
 205              		.loc 1 154 17 is_stmt 0 view .LVU37
 206 005c EDE7     		b	.L41
 207              	.LVL12:
 208              	.L23:
 156:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 209              		.loc 1 156 17 is_stmt 1 view .LVU38
 210 005e 45F60F40 		movw	r0, #23567
 211 0062 FFF7FEFF 		bl	process_magic
 212              	.LVL13:
 213              	.L10:
 165:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case RGB_TOD:
 166:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if(record->event.pressed) {
 167:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****              timeout_update_threshold(false);  //decrease timeout
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 169:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 170:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case NOB_LAYER_INC://SHIFT KNOB
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if ((record->event.pressed) && (Shift_Pressed == false)) {
 172:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 173:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if ((record->event.pressed) && (Shift_Pressed == true)) {
 174:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             tap_code(KC_MUTE);
 175:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 176:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         //If want to use Knob Layer 3, change 2 to 3
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (nob_layer_state == 2) nob_layer_state = 0;
 178:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 179:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_RSFT:  // FOR RSFT KNOB VOLUME
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         record->event.pressed ? (Shift_Pressed = true) : (Shift_Pressed = false);
 181:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 182:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_LSFT:  // FOR LSFT KNOB VOLUME
 183:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         record->event.pressed ? (Shift_Pressed = true) : (Shift_Pressed = false);
 184:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 185:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case MY_SLEEP:
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (record->event.pressed) tap_code(KC_SLEP);
 187:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 188:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     case KC_CAPS:
 189:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         record->event.pressed ? (Caps_Pressed = true) : (Caps_Pressed = false);
 190:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 191:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     default:
 192:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 193:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 194:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 214              		.loc 1 194 1 is_stmt 0 view .LVU39
 215 0066 2046     		mov	r0, r4
 216 0068 38BD     		pop	{r3, r4, r5, pc}
 217              	.LVL14:
 218              	.L22:
 158:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 219              		.loc 1 158 17 is_stmt 1 view .LVU40
 220 006a 45F66450 		movw	r0, #23908
 221              	.L42:
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 222              		.loc 1 168 17 is_stmt 0 view .LVU41
 223 006e FFF7FEFF 		bl	unregister_code16
 224              	.LVL15:
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 225              		.loc 1 168 17 view .LVU42
 226 0072 F8E7     		b	.L10
 227              	.LVL16:
 228              	.L18:
 161:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_update_threshold(true);
 229              		.loc 1 161 9 is_stmt 1 view .LVU43
 161:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             timeout_update_threshold(true);
 230              		.loc 1 161 11 is_stmt 0 view .LVU44
 231 0074 1CB1     		cbz	r4, .L24
 162:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 232              		.loc 1 162 13 is_stmt 1 view .LVU45
 233 0076 0120     		movs	r0, #1
 234 0078 FFF7FEFF 		bl	timeout_update_threshold
 235              	.LVL17:
 236 007c DDE7     		b	.L41
 237              	.L24:
 163:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 238              		.loc 1 163 17 view .LVU46
 239 007e 45F66550 		movw	r0, #23909
 240 0082 F4E7     		b	.L42
 241              	.L17:
 166:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****              timeout_update_threshold(false);  //decrease timeout
 242              		.loc 1 166 9 view .LVU47
 166:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****              timeout_update_threshold(false);  //decrease timeout
 243              		.loc 1 166 11 is_stmt 0 view .LVU48
 244 0084 34B1     		cbz	r4, .L25
 167:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else  unregister_code16(keycode);
 245              		.loc 1 167 14 is_stmt 1 view .LVU49
 246              	.LVL18:
 247              	.LBB16:
 248              	.LBI16:
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
 249              		.loc 1 133 6 view .LVU50
 250              	.LBE16:
 134:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!increase && timeout_threshold > 0) timeout_threshold--;
 251              		.loc 1 134 5 view .LVU51
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 252              		.loc 1 135 5 view .LVU52
 253              	.LBB19:
 254              	.LBB17:
 255              	.LBI17:
 133:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (increase && timeout_threshold < TIMEOUT_THRESHOLD_MAX) timeout_threshold++;
 256              		.loc 1 133 6 view .LVU53
 257              	.LBB18:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 258              		.loc 1 135 40 is_stmt 0 view .LVU54
 259 0086 194A     		ldr	r2, .L46+8
 260 0088 1388     		ldrh	r3, [r2]
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 261              		.loc 1 135 19 view .LVU55
 262 008a 002B     		cmp	r3, #0
 263 008c D5D0     		beq	.L41
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 264              		.loc 1 135 45 is_stmt 1 view .LVU56
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 265              		.loc 1 135 62 is_stmt 0 view .LVU57
 266 008e 013B     		subs	r3, r3, #1
 267 0090 1380     		strh	r3, [r2]	@ movhi
 268 0092 D2E7     		b	.L41
 269              	.LVL19:
 270              	.L25:
 135:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 271              		.loc 1 135 62 view .LVU58
 272              	.LBE18:
 273              	.LBE17:
 274              	.LBE19:
 168:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 275              		.loc 1 168 17 is_stmt 1 view .LVU59
 276 0094 45F66650 		movw	r0, #23910
 277 0098 E9E7     		b	.L42
 278              	.L14:
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 279              		.loc 1 171 9 view .LVU60
 280 009a 154D     		ldr	r5, .L46+12
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 281              		.loc 1 171 12 is_stmt 0 view .LVU61
 282 009c 2CB1     		cbz	r4, .L27
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 283              		.loc 1 171 55 discriminator 1 view .LVU62
 284 009e 154B     		ldr	r3, .L46+16
 171:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             nob_layer_state++;
 285              		.loc 1 171 37 discriminator 1 view .LVU63
 286 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00a2 43B9     		cbnz	r3, .L28
 172:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if ((record->event.pressed) && (Shift_Pressed == true)) {
 288              		.loc 1 172 13 is_stmt 1 view .LVU64
 172:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         } else if ((record->event.pressed) && (Shift_Pressed == true)) {
 289              		.loc 1 172 28 is_stmt 0 view .LVU65
 290 00a4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 291 00a6 0133     		adds	r3, r3, #1
 292 00a8 2B70     		strb	r3, [r5]
 293              	.LVL20:
 294              	.L27:
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 295              		.loc 1 177 9 is_stmt 1 view .LVU66
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 296              		.loc 1 177 12 is_stmt 0 view .LVU67
 297 00aa 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 298 00ac 022B     		cmp	r3, #2
 299 00ae C4D1     		bne	.L41
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 300              		.loc 1 177 35 is_stmt 1 discriminator 1 view .LVU68
 177:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 301              		.loc 1 177 51 is_stmt 0 discriminator 1 view .LVU69
 302 00b0 0024     		movs	r4, #0
 303 00b2 2C70     		strb	r4, [r5]
 304 00b4 D7E7     		b	.L10
 305              	.LVL21:
 306              	.L28:
 173:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             tap_code(KC_MUTE);
 307              		.loc 1 173 16 is_stmt 1 discriminator 1 view .LVU70
 174:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 308              		.loc 1 174 13 discriminator 1 view .LVU71
 309 00b6 A820     		movs	r0, #168
 310 00b8 FFF7FEFF 		bl	tap_code
 311              	.LVL22:
 174:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 312              		.loc 1 174 13 is_stmt 0 discriminator 1 view .LVU72
 313 00bc F5E7     		b	.L27
 314              	.LVL23:
 315              	.L12:
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 316              		.loc 1 180 9 is_stmt 1 view .LVU73
 180:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 317              		.loc 1 180 22 is_stmt 0 view .LVU74
 318 00be 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 319 00c0 0C4A     		ldr	r2, .L46+16
 320 00c2 0123     		movs	r3, #1
 321              	.L45:
 189:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 322              		.loc 1 189 55 view .LVU75
 323 00c4 5CB1     		cbz	r4, .L30
 189:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 324              		.loc 1 189 47 discriminator 1 view .LVU76
 325 00c6 1370     		strb	r3, [r2]
 326 00c8 CDE7     		b	.L10
 327              	.LVL24:
 328              	.L15:
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 329              		.loc 1 186 9 is_stmt 1 view .LVU77
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 330              		.loc 1 186 12 is_stmt 0 view .LVU78
 331 00ca 002C     		cmp	r4, #0
 332 00cc B5D0     		beq	.L41
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 333              		.loc 1 186 36 is_stmt 1 discriminator 1 view .LVU79
 334 00ce A620     		movs	r0, #166
 335 00d0 FFF7FEFF 		bl	tap_code
 336              	.LVL25:
 186:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return false;
 337              		.loc 1 186 36 is_stmt 0 discriminator 1 view .LVU80
 338 00d4 B1E7     		b	.L41
 339              	.LVL26:
 340              	.L13:
 189:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 341              		.loc 1 189 9 is_stmt 1 view .LVU81
 189:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 342              		.loc 1 189 22 is_stmt 0 view .LVU82
 343 00d6 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 344 00d8 074A     		ldr	r2, .L46+20
 345 00da 0123     		movs	r3, #1
 346 00dc F2E7     		b	.L45
 347              	.L30:
 189:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         return true;
 348              		.loc 1 189 71 discriminator 2 view .LVU83
 349 00de 1470     		strb	r4, [r2]
 350 00e0 9DE7     		b	.L31
 351              	.L47:
 352 00e2 00BF     		.align	2
 353              	.L46:
 354 00e4 00000000 		.word	.LC0
 355 00e8 00000000 		.word	.LANCHOR1
 356 00ec 00000000 		.word	.LANCHOR0
 357 00f0 00000000 		.word	.LANCHOR3
 358 00f4 00000000 		.word	.LANCHOR2
 359 00f8 00000000 		.word	.LANCHOR4
 360              		.cfi_endproc
 361              	.LFE293:
 363              		.section	.text.matrix_scan_user,"ax",%progbits
 364              		.align	1
 365              		.global	matrix_scan_user
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	matrix_scan_user:
 372              	.LFB294:
 195:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 196:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void matrix_scan_user(void) {
 373              		.loc 1 196 29 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 197:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //if (timeout_threshold > 0) {
 198:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    if (timer_elapsed(timeout_timer) >= 60000) { // 1 minute tick
 199:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        timeout_counter++;
 200:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        timeout_timer = timer_read();
 201:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    }
 202:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    #ifdef RGB_MATRIX_ENABLE
 203:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        if (timeout_threshold > 0 && timeout_counter >= timeout_threshold) {
 204:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //            rgb_matrix_disable_noeeprom();
 205:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //        }
 206:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    #endif
 207:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //} // timeout_threshold = 0 will disable timeout
 208:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** };
 378              		.loc 1 208 1 view .LVU85
 379 0000 7047     		bx	lr
 380              		.cfi_endproc
 381              	.LFE294:
 383              		.section	.text.encoder_update_user,"ax",%progbits
 384              		.align	1
 385              		.global	encoder_update_user
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv4-sp-d16
 391              	encoder_update_user:
 392              	.LVL27:
 393              	.LFB295:
 209:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 210:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 211:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #ifdef ENCODER_ENABLE       // Encoder Function
 212:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     bool encoder_update_user(uint8_t index, bool clockwise) {
 394              		.loc 1 212 61 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 213:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!Shift_Pressed && !Caps_Pressed) {
 398              		.loc 1 213 5 view .LVU87
 212:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (!Shift_Pressed && !Caps_Pressed) {
 399              		.loc 1 212 61 is_stmt 0 view .LVU88
 400 0000 38B5     		push	{r3, r4, r5, lr}
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 3, -16
 403              		.cfi_offset 4, -12
 404              		.cfi_offset 5, -8
 405              		.cfi_offset 14, -4
 406              		.loc 1 213 9 view .LVU89
 407 0002 1E4D     		ldr	r5, .L80
 408              		.loc 1 213 8 view .LVU90
 409 0004 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 410 0006 7BBB     		cbnz	r3, .L50
 411              		.loc 1 213 27 discriminator 1 view .LVU91
 412 0008 1D4C     		ldr	r4, .L80+4
 413              		.loc 1 213 24 discriminator 1 view .LVU92
 414 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 415 000c 7BBB     		cbnz	r3, .L51
 214:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         switch (nob_layer_state) {
 416              		.loc 1 214 9 is_stmt 1 view .LVU93
 417 000e 1D4B     		ldr	r3, .L80+8
 418 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 0012 012B     		cmp	r3, #1
 420 0014 0BD0     		beq	.L52
 421 0016 022B     		cmp	r3, #2
 422 0018 1BD0     		beq	.L53
 423 001a FBB9     		cbnz	r3, .L54
 215:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _WHEEL:
 216:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             clockwise ? tap_code(KC_WH_D) : tap_code(KC_WH_U);
 424              		.loc 1 216 13 view .LVU94
 425              		.loc 1 216 43 is_stmt 0 view .LVU95
 426 001c 19B1     		cbz	r1, .L55
 427              		.loc 1 216 25 discriminator 1 view .LVU96
 428 001e FA20     		movs	r0, #250
 429              	.LVL28:
 430              	.L77:
 217:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 218:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _MUSIC:
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             clockwise ? tap_code16(KC_MNXT) : tap_code16(KC_MPRV);
 220:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 221:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _VOLUME:  // 210807 not use
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             clockwise ? tap_code(KC_VOLU) : tap_code(KC_VOLD);
 431              		.loc 1 222 25 discriminator 1 view .LVU97
 432 0020 FFF7FEFF 		bl	tap_code
 433              	.LVL29:
 434              		.loc 1 222 25 discriminator 1 view .LVU98
 435 0024 07E0     		b	.L56
 436              	.LVL30:
 437              	.L55:
 216:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 438              		.loc 1 216 45 discriminator 2 view .LVU99
 439 0026 F920     		movs	r0, #249
 440              	.LVL31:
 441              	.L78:
 442              		.loc 1 222 45 discriminator 2 view .LVU100
 443 0028 FFF7FEFF 		bl	tap_code
 444              	.LVL32:
 445              		.loc 1 222 45 discriminator 2 view .LVU101
 446 002c 0DE0     		b	.L57
 447              	.LVL33:
 448              	.L52:
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 449              		.loc 1 219 13 is_stmt 1 view .LVU102
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 450              		.loc 1 219 45 is_stmt 0 view .LVU103
 451 002e 49B1     		cbz	r1, .L58
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 452              		.loc 1 219 25 discriminator 1 view .LVU104
 453 0030 AB20     		movs	r0, #171
 454              	.LVL34:
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 455              		.loc 1 219 25 discriminator 1 view .LVU105
 456 0032 FFF7FEFF 		bl	tap_code16
 457              	.LVL35:
 458              	.L56:
 223:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 224:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 225:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (clockwise && Shift_Pressed) tap_code(KC_VOLU);      //210810 Always Volume control with L,R
 459              		.loc 1 226 19 discriminator 1 view .LVU106
 460 0036 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 461 0038 8BB1     		cbz	r3, .L60
 462              	.L65:
 463              		.loc 1 226 37 is_stmt 1 discriminator 2 view .LVU107
 464 003a A920     		movs	r0, #169
 465              	.L79:
 227:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Shift_Pressed) tap_code(KC_VOLD);
 228:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (clockwise && Caps_Pressed) tap_code(KC_BRIU);  //210810 Always Brightness control with
 229:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Caps_Pressed) tap_code(KC_BRID);
 466              		.loc 1 229 42 is_stmt 0 discriminator 2 view .LVU108
 467 003c FFF7FEFF 		bl	tap_code
 468              	.LVL36:
 230:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     return true;
 469              		.loc 1 230 5 is_stmt 1 discriminator 2 view .LVU109
 470              	.L73:
 231:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** }
 471              		.loc 1 231 1 is_stmt 0 view .LVU110
 472 0040 0120     		movs	r0, #1
 473 0042 38BD     		pop	{r3, r4, r5, pc}
 474              	.LVL37:
 475              	.L58:
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 476              		.loc 1 219 47 discriminator 2 view .LVU111
 477 0044 AC20     		movs	r0, #172
 478              	.LVL38:
 219:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 479              		.loc 1 219 47 discriminator 2 view .LVU112
 480 0046 FFF7FEFF 		bl	tap_code16
 481              	.LVL39:
 482              	.L57:
 227:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (clockwise && Caps_Pressed) tap_code(KC_BRIU);  //210810 Always Brightness control with
 483              		.loc 1 227 10 is_stmt 1 view .LVU113
 227:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (clockwise && Caps_Pressed) tap_code(KC_BRIU);  //210810 Always Brightness control with
 484              		.loc 1 227 25 is_stmt 0 view .LVU114
 485 004a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 486 004c 8BB1     		cbz	r3, .L61
 487              	.L66:
 227:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (clockwise && Caps_Pressed) tap_code(KC_BRIU);  //210810 Always Brightness control with
 488              		.loc 1 227 43 is_stmt 1 view .LVU115
 489 004e AA20     		movs	r0, #170
 490 0050 F4E7     		b	.L79
 491              	.LVL40:
 492              	.L53:
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 493              		.loc 1 222 13 view .LVU116
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 494              		.loc 1 222 43 is_stmt 0 view .LVU117
 495 0052 09B1     		cbz	r1, .L59
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 496              		.loc 1 222 25 discriminator 1 view .LVU118
 497 0054 A920     		movs	r0, #169
 498              	.LVL41:
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 499              		.loc 1 222 25 discriminator 1 view .LVU119
 500 0056 E3E7     		b	.L77
 501              	.LVL42:
 502              	.L59:
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 503              		.loc 1 222 45 discriminator 2 view .LVU120
 504 0058 AA20     		movs	r0, #170
 505              	.LVL43:
 222:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 506              		.loc 1 222 45 discriminator 2 view .LVU121
 507 005a E5E7     		b	.L78
 508              	.LVL44:
 509              	.L54:
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Shift_Pressed) tap_code(KC_VOLD);
 510              		.loc 1 226 5 is_stmt 1 view .LVU122
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Shift_Pressed) tap_code(KC_VOLD);
 511              		.loc 1 226 8 is_stmt 0 view .LVU123
 512 005c 49B1     		cbz	r1, .L61
 513              	.LVL45:
 514              	.L60:
 227:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (clockwise && Caps_Pressed) tap_code(KC_BRIU);  //210810 Always Brightness control with
 515              		.loc 1 227 10 is_stmt 1 view .LVU124
 228:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Caps_Pressed) tap_code(KC_BRID);
 516              		.loc 1 228 10 view .LVU125
 228:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Caps_Pressed) tap_code(KC_BRID);
 517              		.loc 1 228 24 is_stmt 0 view .LVU126
 518 005e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 519 0060 002B     		cmp	r3, #0
 520 0062 EDD0     		beq	.L73
 521              	.L63:
 228:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Caps_Pressed) tap_code(KC_BRID);
 522              		.loc 1 228 41 is_stmt 1 discriminator 2 view .LVU127
 523 0064 BD20     		movs	r0, #189
 524 0066 E9E7     		b	.L79
 525              	.LVL46:
 526              	.L50:
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Shift_Pressed) tap_code(KC_VOLD);
 527              		.loc 1 226 5 view .LVU128
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Shift_Pressed) tap_code(KC_VOLD);
 528              		.loc 1 226 8 is_stmt 0 view .LVU129
 529 0068 0029     		cmp	r1, #0
 530 006a E6D1     		bne	.L65
 531 006c EFE7     		b	.L66
 532              	.L51:
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Shift_Pressed) tap_code(KC_VOLD);
 533              		.loc 1 226 5 is_stmt 1 view .LVU130
 226:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Shift_Pressed) tap_code(KC_VOLD);
 534              		.loc 1 226 8 is_stmt 0 view .LVU131
 535 006e 0029     		cmp	r1, #0
 536 0070 F8D1     		bne	.L63
 537              	.LVL47:
 538              	.L61:
 228:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     else if (!clockwise && Caps_Pressed) tap_code(KC_BRID);
 539              		.loc 1 228 10 is_stmt 1 discriminator 1 view .LVU132
 229:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     return true;
 540              		.loc 1 229 10 discriminator 1 view .LVU133
 229:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     return true;
 541              		.loc 1 229 25 is_stmt 0 discriminator 1 view .LVU134
 542 0072 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 543 0074 002B     		cmp	r3, #0
 544 0076 E3D0     		beq	.L73
 229:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     return true;
 545              		.loc 1 229 42 is_stmt 1 discriminator 2 view .LVU135
 546 0078 BE20     		movs	r0, #190
 547 007a DFE7     		b	.L79
 548              	.L81:
 549              		.align	2
 550              	.L80:
 551 007c 00000000 		.word	.LANCHOR2
 552 0080 00000000 		.word	.LANCHOR4
 553 0084 00000000 		.word	.LANCHOR3
 554              		.cfi_endproc
 555              	.LFE295:
 557              		.section	.text.rgb_matrix_indicators_advanced_user,"ax",%progbits
 558              		.align	1
 559              		.global	rgb_matrix_indicators_advanced_user
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu fpv4-sp-d16
 565              	rgb_matrix_indicators_advanced_user:
 566              	.LVL48:
 567              	.LFB296:
 232:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #endif
 233:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 234:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #ifdef RGB_MATRIX_ENABLE
 235:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     // Capslock, Scroll lock and Numlock  indicator on Left side lights.
 236:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     void rgb_matrix_indicators_advanced_user(uint8_t led_min, uint8_t led_max) {
 568              		.loc 1 236 80 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 237:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_SCROLL_LOCK)) {
 572              		.loc 1 237 9 view .LVU137
 236:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_SCROLL_LOCK)) {
 573              		.loc 1 236 80 is_stmt 0 view .LVU138
 574 0000 70B5     		push	{r4, r5, r6, lr}
 575              		.cfi_def_cfa_offset 16
 576              		.cfi_offset 4, -16
 577              		.cfi_offset 5, -12
 578              		.cfi_offset 6, -8
 579              		.cfi_offset 14, -4
 580              		.loc 1 237 13 view .LVU139
 581 0002 FFF7FEFF 		bl	host_keyboard_leds
 582              	.LVL49:
 583              		.loc 1 237 12 view .LVU140
 584 0006 4107     		lsls	r1, r0, #29
 585 0008 0BD5     		bpl	.L83
 238:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L1, RGB_GREEN);
 586              		.loc 1 238 13 is_stmt 1 view .LVU141
 587 000a 0023     		movs	r3, #0
 588 000c 1946     		mov	r1, r3
 589 000e FF22     		movs	r2, #255
 590 0010 4320     		movs	r0, #67
 591 0012 FFF7FEFF 		bl	rgb_matrix_set_color
 592              	.LVL50:
 239:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L2, RGB_GREEN);
 593              		.loc 1 239 13 view .LVU142
 594 0016 0023     		movs	r3, #0
 595 0018 FF22     		movs	r2, #255
 596 001a 1946     		mov	r1, r3
 597 001c 4620     		movs	r0, #70
 598 001e FFF7FEFF 		bl	rgb_matrix_set_color
 599              	.LVL51:
 600              	.L83:
 240:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 241:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_NUM_LOCK)) {   // Num Lock indicator
 601              		.loc 1 241 9 view .LVU143
 602              		.loc 1 241 13 is_stmt 0 view .LVU144
 603 0022 FFF7FEFF 		bl	host_keyboard_leds
 604              	.LVL52:
 605              		.loc 1 241 12 view .LVU145
 606 0026 C207     		lsls	r2, r0, #31
 607 0028 0BD5     		bpl	.L84
 242:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L3, RGB_MAGENTA);
 608              		.loc 1 242 13 is_stmt 1 view .LVU146
 609 002a FF23     		movs	r3, #255
 610 002c 1946     		mov	r1, r3
 611 002e 0022     		movs	r2, #0
 612 0030 4920     		movs	r0, #73
 613 0032 FFF7FEFF 		bl	rgb_matrix_set_color
 614              	.LVL53:
 243:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L4, RGB_MAGENTA);
 615              		.loc 1 243 13 view .LVU147
 616 0036 FF23     		movs	r3, #255
 617 0038 0022     		movs	r2, #0
 618 003a 1946     		mov	r1, r3
 619 003c 4C20     		movs	r0, #76
 620 003e FFF7FEFF 		bl	rgb_matrix_set_color
 621              	.LVL54:
 622              	.L84:
 244:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 245:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (IS_HOST_LED_ON(USB_LED_CAPS_LOCK)) {
 623              		.loc 1 245 9 view .LVU148
 624              		.loc 1 245 13 is_stmt 0 view .LVU149
 625 0042 FFF7FEFF 		bl	host_keyboard_leds
 626              	.LVL55:
 627              		.loc 1 245 12 view .LVU150
 628 0046 8307     		lsls	r3, r0, #30
 629 0048 11D5     		bpl	.L85
 246:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L5, RGB_RED);
 630              		.loc 1 246 13 is_stmt 1 view .LVU151
 631 004a 0023     		movs	r3, #0
 632 004c 1A46     		mov	r2, r3
 633 004e FF21     		movs	r1, #255
 634 0050 5020     		movs	r0, #80
 635 0052 FFF7FEFF 		bl	rgb_matrix_set_color
 636              	.LVL56:
 247:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L6, RGB_RED);
 637              		.loc 1 247 13 view .LVU152
 638 0056 0023     		movs	r3, #0
 639 0058 1A46     		mov	r2, r3
 640 005a FF21     		movs	r1, #255
 641 005c 5320     		movs	r0, #83
 642 005e FFF7FEFF 		bl	rgb_matrix_set_color
 643              	.LVL57:
 248:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_L7, RGB_RED);
 644              		.loc 1 248 13 view .LVU153
 645 0062 0023     		movs	r3, #0
 646 0064 1A46     		mov	r2, r3
 647 0066 FF21     		movs	r1, #255
 648 0068 5720     		movs	r0, #87
 649 006a FFF7FEFF 		bl	rgb_matrix_set_color
 650              	.LVL58:
 651              	.L85:
 249:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 250:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         if (_isWinKeyDisabled) {
 652              		.loc 1 250 9 view .LVU154
 653              		.loc 1 250 13 is_stmt 0 view .LVU155
 654 006e 484B     		ldr	r3, .L108
 655              		.loc 1 250 12 view .LVU156
 656 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657 0072 2BB1     		cbz	r3, .L86
 251:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_LWIN, RGB_RED);  //light up Win key when disabled
 658              		.loc 1 251 13 is_stmt 1 view .LVU157
 659 0074 0023     		movs	r3, #0
 660 0076 1A46     		mov	r2, r3
 661 0078 FF21     		movs	r1, #255
 662 007a 0B20     		movs	r0, #11
 663 007c FFF7FEFF 		bl	rgb_matrix_set_color
 664              	.LVL59:
 665              	.L86:
 252:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 253:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         switch(get_highest_layer(layer_state)){  // special handling per layer
 666              		.loc 1 253 9 view .LVU158
 667              		.loc 1 253 16 is_stmt 0 view .LVU159
 668 0080 444B     		ldr	r3, .L108+4
 669 0082 1868     		ldr	r0, [r3]
 670 0084 FFF7FEFF 		bl	biton32
 671              	.LVL60:
 672              		.loc 1 253 9 view .LVU160
 673 0088 0228     		cmp	r0, #2
 674 008a 50D0     		beq	.L87
 675 008c 0328     		cmp	r0, #3
 676 008e 6CD0     		beq	.L88
 677 0090 0128     		cmp	r0, #1
 678 0092 7BD1     		bne	.L82
 254:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _FN1:  // on Fn layer select what the encoder does when pressed
 255:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R2, RGB_RED);
 679              		.loc 1 255 13 is_stmt 1 view .LVU161
 680 0094 0023     		movs	r3, #0
 681 0096 1A46     		mov	r2, r3
 682 0098 FF21     		movs	r1, #255
 683 009a 4720     		movs	r0, #71
 684 009c FFF7FEFF 		bl	rgb_matrix_set_color
 685              	.LVL61:
 256:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R3, RGB_RED);
 686              		.loc 1 256 13 view .LVU162
 687 00a0 0023     		movs	r3, #0
 688 00a2 1A46     		mov	r2, r3
 689 00a4 FF21     		movs	r1, #255
 690 00a6 4A20     		movs	r0, #74
 691 00a8 FFF7FEFF 		bl	rgb_matrix_set_color
 692              	.LVL62:
 257:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R4, RGB_RED);
 693              		.loc 1 257 13 view .LVU163
 694 00ac 0023     		movs	r3, #0
 695 00ae 1A46     		mov	r2, r3
 696 00b0 FF21     		movs	r1, #255
 697 00b2 4D20     		movs	r0, #77
 698 00b4 FFF7FEFF 		bl	rgb_matrix_set_color
 699              	.LVL63:
 258:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_FN, RGB_RED); //FN key
 700              		.loc 1 258 13 view .LVU164
 259:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 260:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             // Add RGB Timeout Indicator -- shows 0 to 139 using F row and num row;  larger numbers
 261:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             if (timeout_threshold <= 10) rgb_matrix_set_color(LED_LIST_FUNCROW[timeout_threshold], 
 701              		.loc 1 261 35 is_stmt 0 view .LVU165
 702 00b8 374D     		ldr	r5, .L108+8
 258:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_FN, RGB_RED); //FN key
 703              		.loc 1 258 13 view .LVU166
 704 00ba 0023     		movs	r3, #0
 705 00bc 3720     		movs	r0, #55
 706 00be 1A46     		mov	r2, r3
 707 00c0 FF21     		movs	r1, #255
 708 00c2 FFF7FEFF 		bl	rgb_matrix_set_color
 709              	.LVL64:
 710              		.loc 1 261 13 is_stmt 1 view .LVU167
 711              		.loc 1 261 35 is_stmt 0 view .LVU168
 712 00c6 2888     		ldrh	r0, [r5]
 713              		.loc 1 261 16 view .LVU169
 714 00c8 0A28     		cmp	r0, #10
 715 00ca 08D8     		bhi	.L90
 716              		.loc 1 261 42 is_stmt 1 discriminator 1 view .LVU170
 717 00cc 0023     		movs	r3, #0
 718 00ce 334C     		ldr	r4, .L108+12
 719 00d0 1A46     		mov	r2, r3
 720 00d2 FF21     		movs	r1, #255
 721              	.L107:
 262:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (timeout_threshold < 140) {
 263:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_FUNCROW[(timeout_threshold / 10)], RGB_RED);
 264:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 722              		.loc 1 264 17 is_stmt 0 view .LVU171
 723 00d4 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 724              	.L106:
 265:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 266:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[10], RGB_RED);
 267:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[11], RGB_RED);
 268:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[12], RGB_RED);
 269:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 270:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 271:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _MO2:
 272:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             for (uint8_t i=0; i<ARRAYSIZE(LED_LIST_NUMPAD); i++) {
 273:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 274:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 275:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R4, RGB_MAGENTA);
 276:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R5, RGB_MAGENTA);
 277:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R6, RGB_MAGENTA);
 278:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 279:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _MO3:
 280:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R6, RGB_GREEN);
 281:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R7, RGB_GREEN);
 282:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R8, RGB_GREEN);
 283:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 284:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         default:
 285:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 286:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         }
 287:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 725              		.loc 1 287 5 view .LVU172
 726 00d6 BDE87040 		pop	{r4, r5, r6, lr}
 727              		.cfi_remember_state
 728              		.cfi_restore 14
 729              		.cfi_restore 6
 730              		.cfi_restore 5
 731              		.cfi_restore 4
 732              		.cfi_def_cfa_offset 0
 282:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 733              		.loc 1 282 13 view .LVU173
 734 00da FFF7FEBF 		b	rgb_matrix_set_color
 735              	.LVL65:
 736              	.L90:
 737              		.cfi_restore_state
 262:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (timeout_threshold < 140) {
 738              		.loc 1 262 18 is_stmt 1 view .LVU174
 262:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             else if (timeout_threshold < 140) {
 739              		.loc 1 262 21 is_stmt 0 view .LVU175
 740 00de 8B28     		cmp	r0, #139
 741 00e0 14D8     		bhi	.L91
 263:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 742              		.loc 1 263 17 is_stmt 1 view .LVU176
 743 00e2 2E4E     		ldr	r6, .L108+12
 744 00e4 0023     		movs	r3, #0
 263:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 745              		.loc 1 263 74 is_stmt 0 view .LVU177
 746 00e6 0A24     		movs	r4, #10
 263:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 747              		.loc 1 263 17 view .LVU178
 748 00e8 1A46     		mov	r2, r3
 749 00ea FF21     		movs	r1, #255
 263:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 750              		.loc 1 263 74 view .LVU179
 751 00ec B0FBF4F0 		udiv	r0, r0, r4
 263:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[(timeout_threshold % 10)], RGB_RED);
 752              		.loc 1 263 17 view .LVU180
 753 00f0 305C     		ldrb	r0, [r6, r0]	@ zero_extendqisi2
 754 00f2 FFF7FEFF 		bl	rgb_matrix_set_color
 755              	.LVL66:
 264:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 756              		.loc 1 264 17 is_stmt 1 view .LVU181
 264:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 757              		.loc 1 264 73 is_stmt 0 view .LVU182
 758 00f6 2B88     		ldrh	r3, [r5]
 759 00f8 B3FBF4F0 		udiv	r0, r3, r4
 760 00fc 04FB1033 		mls	r3, r4, r0, r3
 761 0100 98B2     		uxth	r0, r3
 264:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             } else { // >= 140 minutes, just show these 3 lights
 762              		.loc 1 264 17 view .LVU183
 763 0102 0023     		movs	r3, #0
 764 0104 264C     		ldr	r4, .L108+16
 765 0106 1A46     		mov	r2, r3
 766 0108 FF21     		movs	r1, #255
 767 010a E3E7     		b	.L107
 768              	.L91:
 266:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[11], RGB_RED);
 769              		.loc 1 266 17 is_stmt 1 view .LVU184
 770 010c 0023     		movs	r3, #0
 771 010e 1A46     		mov	r2, r3
 772 0110 FF21     		movs	r1, #255
 773 0112 3920     		movs	r0, #57
 774 0114 FFF7FEFF 		bl	rgb_matrix_set_color
 775              	.LVL67:
 267:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMROW[12], RGB_RED);
 776              		.loc 1 267 17 view .LVU185
 777 0118 0023     		movs	r3, #0
 778 011a 1A46     		mov	r2, r3
 779 011c FF21     		movs	r1, #255
 780 011e 3E20     		movs	r0, #62
 781 0120 FFF7FEFF 		bl	rgb_matrix_set_color
 782              	.LVL68:
 268:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 783              		.loc 1 268 17 view .LVU186
 784 0124 0023     		movs	r3, #0
 785 0126 1A46     		mov	r2, r3
 786 0128 FF21     		movs	r1, #255
 787 012a 4E20     		movs	r0, #78
 788 012c D3E7     		b	.L106
 789              	.L87:
 790 012e 1D4D     		ldr	r5, .L108+20
 253:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         case _FN1:  // on Fn layer select what the encoder does when pressed
 791              		.loc 1 253 9 is_stmt 0 view .LVU187
 792 0130 0C24     		movs	r4, #12
 793              	.L92:
 794              	.LVL69:
 795              	.LBB20:
 273:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 796              		.loc 1 273 17 is_stmt 1 discriminator 3 view .LVU188
 797 0132 FF23     		movs	r3, #255
 798 0134 15F8010B 		ldrb	r0, [r5], #1	@ zero_extendqisi2
 799              	.LVL70:
 273:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 800              		.loc 1 273 17 is_stmt 0 discriminator 3 view .LVU189
 801 0138 0022     		movs	r2, #0
 802 013a 1946     		mov	r1, r3
 272:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 803              		.loc 1 272 13 discriminator 3 view .LVU190
 804 013c 013C     		subs	r4, r4, #1
 273:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             }
 805              		.loc 1 273 17 discriminator 3 view .LVU191
 806 013e FFF7FEFF 		bl	rgb_matrix_set_color
 807              	.LVL71:
 272:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 808              		.loc 1 272 61 is_stmt 1 discriminator 3 view .LVU192
 272:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 809              		.loc 1 272 31 discriminator 3 view .LVU193
 272:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****                 rgb_matrix_set_color(LED_LIST_NUMPAD[i], RGB_MAGENTA);
 810              		.loc 1 272 13 is_stmt 0 discriminator 3 view .LVU194
 811 0142 14F0FF04 		ands	r4, r4, #255
 812 0146 F4D1     		bne	.L92
 813              	.LBE20:
 275:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R5, RGB_MAGENTA);
 814              		.loc 1 275 13 is_stmt 1 view .LVU195
 815 0148 FF23     		movs	r3, #255
 816 014a 1946     		mov	r1, r3
 817 014c 2246     		mov	r2, r4
 818 014e 4D20     		movs	r0, #77
 819 0150 FFF7FEFF 		bl	rgb_matrix_set_color
 820              	.LVL72:
 276:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R6, RGB_MAGENTA);
 821              		.loc 1 276 13 view .LVU196
 822 0154 FF23     		movs	r3, #255
 823 0156 1946     		mov	r1, r3
 824 0158 2246     		mov	r2, r4
 825 015a 5120     		movs	r0, #81
 826 015c FFF7FEFF 		bl	rgb_matrix_set_color
 827              	.LVL73:
 277:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 828              		.loc 1 277 13 view .LVU197
 829 0160 FF23     		movs	r3, #255
 830 0162 2246     		mov	r2, r4
 831 0164 1946     		mov	r1, r3
 832 0166 5420     		movs	r0, #84
 833 0168 B5E7     		b	.L106
 834              	.LVL74:
 835              	.L88:
 280:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R7, RGB_GREEN);
 836              		.loc 1 280 13 view .LVU198
 837 016a 0023     		movs	r3, #0
 838 016c 1946     		mov	r1, r3
 839 016e FF22     		movs	r2, #255
 840 0170 5420     		movs	r0, #84
 841 0172 FFF7FEFF 		bl	rgb_matrix_set_color
 842              	.LVL75:
 281:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             rgb_matrix_set_color(LED_R8, RGB_GREEN);
 843              		.loc 1 281 13 view .LVU199
 844 0176 0023     		movs	r3, #0
 845 0178 1946     		mov	r1, r3
 846 017a FF22     		movs	r2, #255
 847 017c 5820     		movs	r0, #88
 848 017e FFF7FEFF 		bl	rgb_matrix_set_color
 849              	.LVL76:
 282:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****             break;
 850              		.loc 1 282 13 view .LVU200
 851 0182 0023     		movs	r3, #0
 852 0184 FF22     		movs	r2, #255
 853 0186 1946     		mov	r1, r3
 854 0188 5C20     		movs	r0, #92
 855 018a A4E7     		b	.L106
 856              	.L82:
 857              		.loc 1 287 5 is_stmt 0 view .LVU201
 858 018c 70BD     		pop	{r4, r5, r6, pc}
 859              	.L109:
 860 018e 00BF     		.align	2
 861              	.L108:
 862 0190 00000000 		.word	.LANCHOR1
 863 0194 00000000 		.word	layer_state
 864 0198 00000000 		.word	.LANCHOR0
 865 019c 00000000 		.word	.LANCHOR5
 866 01a0 00000000 		.word	.LANCHOR6
 867 01a4 00000000 		.word	.LANCHOR7
 868              		.cfi_endproc
 869              	.LFE296:
 871              		.section	.text.keyboard_post_init_user,"ax",%progbits
 872              		.align	1
 873              		.global	keyboard_post_init_user
 874              		.syntax unified
 875              		.thumb
 876              		.thumb_func
 877              		.fpu fpv4-sp-d16
 879              	keyboard_post_init_user:
 880              	.LFB297:
 288:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //LED SLEEP 210809 remarked
 289:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //void suspend_power_down_user(void) {
 290:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    rgb_matrix_set_suspend_state(true);
 291:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //}
 292:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 293:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //void suspend_wakeup_init_user(void) {
 294:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //    rgb_matrix_set_suspend_state(false);
 295:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     //}
 296:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** #endif
 297:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 298:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 299:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** void keyboard_post_init_user(void) {
 881              		.loc 1 299 36 is_stmt 1 view -0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 300:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 301:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     if (IS_HOST_LED_ON(USB_LED_NUM_LOCK)) { // turn on Num lock by default so that the numpad layer
 885              		.loc 1 301 5 view .LVU203
 299:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** 
 886              		.loc 1 299 36 is_stmt 0 view .LVU204
 887 0000 08B5     		push	{r3, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 3, -8
 890              		.cfi_offset 14, -4
 891              		.loc 1 301 9 view .LVU205
 892 0002 FFF7FEFF 		bl	host_keyboard_leds
 893              	.LVL77:
 894              		.loc 1 301 8 view .LVU206
 895 0006 C307     		lsls	r3, r0, #31
 896 0008 02D5     		bpl	.L111
 302:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         tap_code(KC_NUMLOCK);
 897              		.loc 1 302 9 is_stmt 1 view .LVU207
 898 000a 5320     		movs	r0, #83
 899 000c FFF7FEFF 		bl	tap_code
 900              	.LVL78:
 901              	.L111:
 303:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     }
 304:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     timeout_timer = timer_read(); // set inital time for ide timeout
 902              		.loc 1 304 5 view .LVU208
 903              		.loc 1 304 21 is_stmt 0 view .LVU209
 904 0010 FFF7FEFF 		bl	timer_read
 905              	.LVL79:
 305:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     #ifdef RGB_MATRIX_ENABLE
 306:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****         rgb_matrix_set_color_all(RGB_NAUTILUS); // Default startup colour
 906              		.loc 1 306 9 is_stmt 1 view .LVU210
 307:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     #endif
 308:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c **** }
 907              		.loc 1 308 1 is_stmt 0 view .LVU211
 908 0014 BDE80840 		pop	{r3, lr}
 909              		.cfi_restore 14
 910              		.cfi_restore 3
 911              		.cfi_def_cfa_offset 0
 306:keyboards/gmmk/pro/ansi/keymaps/mykey/keymap.c ****     #endif
 912              		.loc 1 306 9 view .LVU212
 913 0018 A922     		movs	r2, #169
 914 001a A421     		movs	r1, #164
 915 001c 0020     		movs	r0, #0
 916 001e FFF7FEBF 		b	rgb_matrix_set_color_all
 917              	.LVL80:
 918              		.cfi_endproc
 919              	.LFE297:
 921              		.global	keymaps
 922              		.global	_isWinKeyDisabled
 923              		.global	tap_dance_actions
 924              		.global	nob_layer_state
 925              		.global	LED_SIDE_RIGHT
 926              		.global	LED_SIDE_LEFT
 927              		.global	LED_LIST_NUMPAD
 928              		.global	LED_LIST_NUMROW
 929              		.global	LED_LIST_FUNCROW
 930              		.global	LED_LIST_ARROWS
 931              		.global	LED_LIST_WASD
 932              		.section	.bss.Caps_Pressed,"aw",%nobits
 933              		.set	.LANCHOR4,. + 0
 936              	Caps_Pressed:
 937 0000 00       		.space	1
 938              		.section	.bss.Shift_Pressed,"aw",%nobits
 939              		.set	.LANCHOR2,. + 0
 942              	Shift_Pressed:
 943 0000 00       		.space	1
 944              		.section	.bss._isWinKeyDisabled,"aw",%nobits
 945              		.set	.LANCHOR1,. + 0
 948              	_isWinKeyDisabled:
 949 0000 00       		.space	1
 950              		.section	.bss.nob_layer_state,"aw",%nobits
 951              		.set	.LANCHOR3,. + 0
 954              	nob_layer_state:
 955 0000 00       		.space	1
 956              		.section	.data.__compound_literal.0,"aw"
 957              		.align	1
 960              	__compound_literal.0:
 961 0000 E100     		.short	225
 962 0002 3900     		.short	57
 963              		.section	.data.__compound_literal.1,"aw"
 964              		.align	1
 967              	__compound_literal.1:
 968 0000 E300     		.short	227
 969 0002 0808     		.short	2056
 970              		.section	.data.tap_dance_actions,"aw"
 971              		.align	2
 974              	tap_dance_actions:
 975 0000 00000000 		.word	qk_tap_dance_pair_on_each_tap
 976 0004 00000000 		.word	qk_tap_dance_pair_finished
 977 0008 00000000 		.word	qk_tap_dance_pair_reset
 978 000c 00000000 		.space	16
 978      00000000 
 978      00000000 
 978      00000000 
 979 001c 00000000 		.word	__compound_literal.0
 980 0020 00000000 		.word	qk_tap_dance_pair_on_each_tap
 981 0024 00000000 		.word	qk_tap_dance_pair_finished
 982 0028 00000000 		.word	qk_tap_dance_pair_reset
 983 002c 00000000 		.space	16
 983      00000000 
 983      00000000 
 983      00000000 
 984 003c 00000000 		.word	__compound_literal.1
 985              		.section	.data.timeout_threshold,"aw"
 986              		.align	1
 987              		.set	.LANCHOR0,. + 0
 990              	timeout_threshold:
 991 0000 0500     		.short	5
 992              		.section	.rodata.LED_LIST_ARROWS,"a"
 995              	LED_LIST_ARROWS:
 996 0000 5F4F5E61 		.ascii	"_O^a"
 997              		.section	.rodata.LED_LIST_FUNCROW,"a"
 998              		.set	.LANCHOR5,. + 0
 1001              	LED_LIST_FUNCROW:
 1002 0000 00060C12 		.ascii	"\000\006\014\022\027\034\"',28=BE"
 1002      171C2227 
 1002      2C32383D 
 1002      4245
 1003              		.section	.rodata.LED_LIST_NUMPAD,"a"
 1004              		.set	.LANCHOR7,. + 0
 1007              	LED_LIST_NUMPAD:
 1008 0000 282D3329 		.ascii	"(-3).4*/5+06"
 1008      2E342A2F 
 1008      352B3036 
 1009              		.section	.rodata.LED_LIST_NUMROW,"a"
 1010              		.set	.LANCHOR6,. + 0
 1013              	LED_LIST_NUMROW:
 1014 0000 01070D13 		.ascii	"\001\007\015\023\030\035#(-39>NUH"
 1014      181D2328 
 1014      2D33393E 
 1014      4E5548
 1015              		.section	.rodata.LED_LIST_WASD,"a"
 1018              	LED_LIST_WASD:
 1019 0000 0E090F15 		.ascii	"\016\011\017\025"
 1020              		.section	.rodata.LED_SIDE_LEFT,"a"
 1023              	LED_SIDE_LEFT:
 1024 0000 4346494C 		.ascii	"CFILPSW["
 1024      5053575B 
 1025              		.section	.rodata.LED_SIDE_RIGHT,"a"
 1028              	LED_SIDE_RIGHT:
 1029 0000 44474A4D 		.ascii	"DGJMQTX\\"
 1029      5154585C 
 1030              		.section	.rodata.keymaps,"a"
 1031              		.align	1
 1034              	keymaps:
 1035 0000 E100     		.short	225
 1036 0002 625D     		.short	23906
 1037 0004 0000     		.short	0
 1038 0006 5000     		.short	80
 1039 0008 E701     		.short	487
 1040 000a 4F00     		.short	79
 1041 000c E000     		.short	224
 1042 000e 3E00     		.short	62
 1043 0010 1400     		.short	20
 1044 0012 2B00     		.short	43
 1045 0014 0400     		.short	4
 1046 0016 2900     		.short	41
 1047 0018 1D00     		.short	29
 1048 001a 4B00     		.short	75
 1049 001c 3500     		.short	53
 1050 001e 1E00     		.short	30
 1051 0020 1A00     		.short	26
 1052 0022 3900     		.short	57
 1053 0024 1600     		.short	22
 1054 0026 0000     		.short	0
 1055 0028 1B00     		.short	27
 1056 002a 4E00     		.short	78
 1057 002c 3A00     		.short	58
 1058 002e 1F00     		.short	31
 1059 0030 0800     		.short	8
 1060 0032 3C00     		.short	60
 1061 0034 0700     		.short	7
 1062 0036 3D00     		.short	61
 1063 0038 0600     		.short	6
 1064 003a 5200     		.short	82
 1065 003c 3B00     		.short	59
 1066 003e 2000     		.short	32
 1067 0040 1500     		.short	21
 1068 0042 1700     		.short	23
 1069 0044 0900     		.short	9
 1070 0046 0A00     		.short	10
 1071 0048 1900     		.short	25
 1072 004a 0500     		.short	5
 1073 004c 2200     		.short	34
 1074 004e 2100     		.short	33
 1075 0050 1800     		.short	24
 1076 0052 1C00     		.short	28
 1077 0054 0D00     		.short	13
 1078 0056 0B00     		.short	11
 1079 0058 1000     		.short	16
 1080 005a 1100     		.short	17
 1081 005c 2300     		.short	35
 1082 005e 2400     		.short	36
 1083 0060 0C00     		.short	12
 1084 0062 3000     		.short	48
 1085 0064 0E00     		.short	14
 1086 0066 3F00     		.short	63
 1087 0068 3600     		.short	54
 1088 006a 4600     		.short	70
 1089 006c 2E00     		.short	46
 1090 006e 2500     		.short	37
 1091 0070 1200     		.short	18
 1092 0072 4000     		.short	64
 1093 0074 0F00     		.short	15
 1094 0076 5100     		.short	81
 1095 0078 3700     		.short	55
 1096 007a 4C00     		.short	76
 1097 007c 4100     		.short	65
 1098 007e 2600     		.short	38
 1099 0080 1300     		.short	19
 1100 0082 2F00     		.short	47
 1101 0084 3300     		.short	51
 1102 0086 3400     		.short	52
 1103 0088 0000     		.short	0
 1104 008a 3800     		.short	56
 1105 008c 2D00     		.short	45
 1106 008e 2700     		.short	39
 1107 0090 0157     		.short	22273
 1108 0092 E500     		.short	229
 1109 0094 0151     		.short	20737
 1110 0096 E200     		.short	226
 1111 0098 2C00     		.short	44
 1112 009a E600     		.short	230
 1113 009c 0000     		.short	0
 1114 009e AE00     		.short	174
 1115 00a0 0000     		.short	0
 1116 00a2 2A00     		.short	42
 1117 00a4 3100     		.short	49
 1118 00a6 4400     		.short	68
 1119 00a8 2800     		.short	40
 1120 00aa 4500     		.short	69
 1121 00ac 4200     		.short	66
 1122 00ae 4300     		.short	67
 1123 00b0 0100     		.short	1
 1124 00b2 0100     		.short	1
 1125 00b4 0000     		.short	0
 1126 00b6 CD5C     		.short	23757
 1127 00b8 0100     		.short	1
 1128 00ba CC5C     		.short	23756
 1129 00bc 0100     		.short	1
 1130 00be AC00     		.short	172
 1131 00c0 0100     		.short	1
 1132 00c2 0100     		.short	1
 1133 00c4 0100     		.short	1
 1134 00c6 675D     		.short	23911
 1135 00c8 0100     		.short	1
 1136 00ca 4A00     		.short	74
 1137 00cc 0100     		.short	1
 1138 00ce 045D     		.short	23812
 1139 00d0 CA5C     		.short	23754
 1140 00d2 0258     		.short	22530
 1141 00d4 CB5C     		.short	23755
 1142 00d6 0000     		.short	0
 1143 00d8 C65C     		.short	23750
 1144 00da 4D00     		.short	77
 1145 00dc B300     		.short	179
 1146 00de 055D     		.short	23813
 1147 00e0 0100     		.short	1
 1148 00e2 B200     		.short	178
 1149 00e4 0100     		.short	1
 1150 00e6 AF00     		.short	175
 1151 00e8 0100     		.short	1
 1152 00ea C45C     		.short	23748
 1153 00ec B500     		.short	181
 1154 00ee 075D     		.short	23815
 1155 00f0 0100     		.short	1
 1156 00f2 0100     		.short	1
 1157 00f4 0100     		.short	1
 1158 00f6 0100     		.short	1
 1159 00f8 0100     		.short	1
 1160 00fa 0100     		.short	1
 1161 00fc 0100     		.short	1
 1162 00fe 085D     		.short	23816
 1163 0100 4600     		.short	70
 1164 0102 0100     		.short	1
 1165 0104 0100     		.short	1
 1166 0106 0100     		.short	1
 1167 0108 0100     		.short	1
 1168 010a 5300     		.short	83
 1169 010c 0100     		.short	1
 1170 010e 0100     		.short	1
 1171 0110 4700     		.short	71
 1172 0112 0100     		.short	1
 1173 0114 0100     		.short	1
 1174 0116 AB00     		.short	171
 1175 0118 665D     		.short	23910
 1176 011a C35C     		.short	23747
 1177 011c 0100     		.short	1
 1178 011e 0100     		.short	1
 1179 0120 4800     		.short	72
 1180 0122 AE00     		.short	174
 1181 0124 0100     		.short	1
 1182 0126 C55C     		.short	23749
 1183 0128 655D     		.short	23909
 1184 012a 0100     		.short	1
 1185 012c AD00     		.short	173
 1186 012e 0100     		.short	1
 1187 0130 0100     		.short	1
 1188 0132 0100     		.short	1
 1189 0134 0100     		.short	1
 1190 0136 0100     		.short	1
 1191 0138 0000     		.short	0
 1192 013a 0100     		.short	1
 1193 013c 0100     		.short	1
 1194 013e 0100     		.short	1
 1195 0140 645D     		.short	23908
 1196 0142 0100     		.short	1
 1197 0144 0100     		.short	1
 1198 0146 0100     		.short	1
 1199 0148 0100     		.short	1
 1200 014a 0100     		.short	1
 1201 014c 0000     		.short	0
 1202 014e B200     		.short	178
 1203 0150 0000     		.short	0
 1204 0152 0100     		.short	1
 1205 0154 005C     		.short	23552
 1206 0156 075D     		.short	23815
 1207 0158 0100     		.short	1
 1208 015a 085D     		.short	23816
 1209 015c 045D     		.short	23812
 1210 015e 055D     		.short	23813
 1211 0160 0100     		.short	1
 1212 0162 0100     		.short	1
 1213 0164 0000     		.short	0
 1214 0166 5011     		.short	4432
 1215 0168 0100     		.short	1
 1216 016a 4F11     		.short	4431
 1217 016c 0100     		.short	1
 1218 016e 0100     		.short	1
 1219 0170 4A00     		.short	74
 1220 0172 0100     		.short	1
 1221 0174 5000     		.short	80
 1222 0176 0100     		.short	1
 1223 0178 0000     		.short	0
 1224 017a 4A00     		.short	74
 1225 017c 0100     		.short	1
 1226 017e 0100     		.short	1
 1227 0180 5200     		.short	82
 1228 0182 0100     		.short	1
 1229 0184 5100     		.short	81
 1230 0186 0000     		.short	0
 1231 0188 4C00     		.short	76
 1232 018a 4D00     		.short	77
 1233 018c 0100     		.short	1
 1234 018e 0100     		.short	1
 1235 0190 4D00     		.short	77
 1236 0192 0100     		.short	1
 1237 0194 4F00     		.short	79
 1238 0196 0100     		.short	1
 1239 0198 4900     		.short	73
 1240 019a 4B11     		.short	4427
 1241 019c 0100     		.short	1
 1242 019e 0100     		.short	1
 1243 01a0 4B00     		.short	75
 1244 01a2 0100     		.short	1
 1245 01a4 4E00     		.short	78
 1246 01a6 0100     		.short	1
 1247 01a8 0000     		.short	0
 1248 01aa 0000     		.short	0
 1249 01ac 0100     		.short	1
 1250 01ae 0100     		.short	1
 1251 01b0 5C00     		.short	92
 1252 01b2 2B00     		.short	43
 1253 01b4 5900     		.short	89
 1254 01b6 0100     		.short	1
 1255 01b8 6200     		.short	98
 1256 01ba 0000     		.short	0
 1257 01bc 0100     		.short	1
 1258 01be 5F00     		.short	95
 1259 01c0 5D00     		.short	93
 1260 01c2 0100     		.short	1
 1261 01c4 5A00     		.short	90
 1262 01c6 0100     		.short	1
 1263 01c8 635D     		.short	23907
 1264 01ca 0100     		.short	1
 1265 01cc 5700     		.short	87
 1266 01ce 6000     		.short	96
 1267 01d0 5E00     		.short	94
 1268 01d2 0100     		.short	1
 1269 01d4 5B00     		.short	91
 1270 01d6 4E11     		.short	4430
 1271 01d8 6300     		.short	99
 1272 01da 0100     		.short	1
 1273 01dc 0100     		.short	1
 1274 01de 6100     		.short	97
 1275 01e0 6300     		.short	99
 1276 01e2 0100     		.short	1
 1277 01e4 0000     		.short	0
 1278 01e6 5500     		.short	85
 1279 01e8 0000     		.short	0
 1280 01ea 5400     		.short	84
 1281 01ec 5600     		.short	86
 1282 01ee 6200     		.short	98
 1283 01f0 0100     		.short	1
 1284 01f2 0100     		.short	1
 1285 01f4 0100     		.short	1
 1286 01f6 0100     		.short	1
 1287 01f8 2A00     		.short	42
 1288 01fa 0100     		.short	1
 1289 01fc 0000     		.short	0
 1290 01fe 0100     		.short	1
 1291 0200 0000     		.short	0
 1292 0202 0100     		.short	1
 1293 0204 0100     		.short	1
 1294 0206 0100     		.short	1
 1295 0208 5800     		.short	88
 1296 020a 0100     		.short	1
 1297 020c 0100     		.short	1
 1298 020e 0100     		.short	1
 1299 0210 0100     		.short	1
 1300 0212 0100     		.short	1
 1301 0214 0000     		.short	0
 1302 0216 0100     		.short	1
 1303 0218 0100     		.short	1
 1304 021a 0100     		.short	1
 1305 021c 0100     		.short	1
 1306 021e 0100     		.short	1
 1307 0220 0100     		.short	1
 1308 0222 0100     		.short	1
 1309 0224 0100     		.short	1
 1310 0226 0100     		.short	1
 1311 0228 0100     		.short	1
 1312 022a 0100     		.short	1
 1313 022c 0100     		.short	1
 1314 022e 0100     		.short	1
 1315 0230 0100     		.short	1
 1316 0232 0100     		.short	1
 1317 0234 0100     		.short	1
 1318 0236 0000     		.short	0
 1319 0238 0100     		.short	1
 1320 023a 0100     		.short	1
 1321 023c 0100     		.short	1
 1322 023e 0100     		.short	1
 1323 0240 0100     		.short	1
 1324 0242 0100     		.short	1
 1325 0244 0100     		.short	1
 1326 0246 0100     		.short	1
 1327 0248 0100     		.short	1
 1328 024a 0100     		.short	1
 1329 024c 0100     		.short	1
 1330 024e 0100     		.short	1
 1331 0250 0100     		.short	1
 1332 0252 0100     		.short	1
 1333 0254 0100     		.short	1
 1334 0256 0100     		.short	1
 1335 0258 0100     		.short	1
 1336 025a 0100     		.short	1
 1337 025c 0100     		.short	1
 1338 025e 0100     		.short	1
 1339 0260 0100     		.short	1
 1340 0262 0100     		.short	1
 1341 0264 0100     		.short	1
 1342 0266 0100     		.short	1
 1343 0268 0100     		.short	1
 1344 026a 0100     		.short	1
 1345 026c 0100     		.short	1
 1346 026e 0100     		.short	1
 1347 0270 0100     		.short	1
 1348 0272 0100     		.short	1
 1349 0274 0100     		.short	1
 1350 0276 0100     		.short	1
 1351 0278 0100     		.short	1
 1352 027a 0100     		.short	1
 1353 027c 0100     		.short	1
 1354 027e 0100     		.short	1
 1355 0280 0100     		.short	1
 1356 0282 0100     		.short	1
 1357 0284 0100     		.short	1
 1358 0286 0100     		.short	1
 1359 0288 0100     		.short	1
 1360 028a 0100     		.short	1
 1361 028c 0100     		.short	1
 1362 028e 0100     		.short	1
 1363 0290 0100     		.short	1
 1364 0292 0100     		.short	1
 1365 0294 0100     		.short	1
 1366 0296 0100     		.short	1
 1367 0298 0000     		.short	0
 1368 029a 0100     		.short	1
 1369 029c 0100     		.short	1
 1370 029e 0100     		.short	1
 1371 02a0 0100     		.short	1
 1372 02a2 0100     		.short	1
 1373 02a4 0100     		.short	1
 1374 02a6 0100     		.short	1
 1375 02a8 0100     		.short	1
 1376 02aa 0100     		.short	1
 1377 02ac 0000     		.short	0
 1378 02ae 0100     		.short	1
 1379 02b0 0000     		.short	0
 1380 02b2 0100     		.short	1
 1381 02b4 0100     		.short	1
 1382 02b6 0100     		.short	1
 1383 02b8 0100     		.short	1
 1384 02ba 0100     		.short	1
 1385 02bc 0100     		.short	1
 1386 02be 0100     		.short	1
 1387              		.text
 1388              	.Letext0:
 1389              		.file 2 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\machine\\_default_types.h"
 1390              		.file 3 "c:\\qmk_msys\\mingw64\\arm-none-eabi\\include\\sys\\_stdint.h"
 1391              		.file 4 "tmk_core/common/keyboard.h"
 1392              		.file 5 "tmk_core/common/keycode.h"
 1393              		.file 6 "tmk_core/common/action.h"
 1394              		.file 7 "quantum/quantum_keycodes.h"
 1395              		.file 8 "tmk_core/common/action_layer.h"
 1396              		.file 9 "quantum/keymap.h"
 1397              		.file 10 "quantum/process_keycode/process_tap_dance.h"
 1398              		.file 11 "keyboards/gmmk/pro/ansi/keymaps/mykey/rgb_matrix_map.h"
 1399              		.file 12 "tmk_core/common/host.h"
 1400              		.file 13 "tmk_core/common/timer.h"
 1401              		.file 14 "quantum/rgb_matrix/rgb_matrix.h"
 1402              		.file 15 "quantum/bitwise.h"
 1403              		.file 16 "quantum/quantum.h"
 1404              		.file 17 "quantum/send_string.h"
 1405              		.file 18 "quantum/process_keycode/process_magic.h"
 1406              		.file 19 "quantum/sequencer/sequencer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:18     .text.timeout_reset_timer:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:26     .text.timeout_reset_timer:0000000000000000 timeout_reset_timer
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:42     .text.timeout_update_threshold:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:49     .text.timeout_update_threshold:0000000000000000 timeout_update_threshold
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:109    .text.timeout_update_threshold:000000000000001c $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:117    .text.process_record_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:124    .text.process_record_user:0000000000000000 process_record_user
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:164    .text.process_record_user:0000000000000032 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:354    .text.process_record_user:00000000000000e4 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:364    .text.matrix_scan_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:371    .text.matrix_scan_user:0000000000000000 matrix_scan_user
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:384    .text.encoder_update_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:391    .text.encoder_update_user:0000000000000000 encoder_update_user
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:551    .text.encoder_update_user:000000000000007c $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:558    .text.rgb_matrix_indicators_advanced_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:565    .text.rgb_matrix_indicators_advanced_user:0000000000000000 rgb_matrix_indicators_advanced_user
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:862    .text.rgb_matrix_indicators_advanced_user:0000000000000190 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:872    .text.keyboard_post_init_user:0000000000000000 $t
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:879    .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1034   .rodata.keymaps:0000000000000000 keymaps
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:948    .bss._isWinKeyDisabled:0000000000000000 _isWinKeyDisabled
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:974    .data.tap_dance_actions:0000000000000000 tap_dance_actions
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:954    .bss.nob_layer_state:0000000000000000 nob_layer_state
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1028   .rodata.LED_SIDE_RIGHT:0000000000000000 LED_SIDE_RIGHT
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1023   .rodata.LED_SIDE_LEFT:0000000000000000 LED_SIDE_LEFT
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1007   .rodata.LED_LIST_NUMPAD:0000000000000000 LED_LIST_NUMPAD
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1013   .rodata.LED_LIST_NUMROW:0000000000000000 LED_LIST_NUMROW
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1001   .rodata.LED_LIST_FUNCROW:0000000000000000 LED_LIST_FUNCROW
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:995    .rodata.LED_LIST_ARROWS:0000000000000000 LED_LIST_ARROWS
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1018   .rodata.LED_LIST_WASD:0000000000000000 LED_LIST_WASD
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:936    .bss.Caps_Pressed:0000000000000000 Caps_Pressed
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:937    .bss.Caps_Pressed:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:942    .bss.Shift_Pressed:0000000000000000 Shift_Pressed
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:943    .bss.Shift_Pressed:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:949    .bss._isWinKeyDisabled:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:955    .bss.nob_layer_state:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:957    .data.__compound_literal.0:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:960    .data.__compound_literal.0:0000000000000000 __compound_literal.0
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:964    .data.__compound_literal.1:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:967    .data.__compound_literal.1:0000000000000000 __compound_literal.1
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:971    .data.tap_dance_actions:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:986    .data.timeout_threshold:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:990    .data.timeout_threshold:0000000000000000 timeout_threshold
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:1031   .rodata.keymaps:0000000000000000 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:169    .text.process_record_user:0000000000000037 $d
C:\Users\lhanj\AppData\Local\Temp\ccK8rGni.s:169    .text.process_record_user:0000000000000038 $t

UNDEFINED SYMBOLS
timer_read
send_string_P
process_magic
unregister_code16
tap_code
tap_code16
host_keyboard_leds
rgb_matrix_set_color
biton32
layer_state
rgb_matrix_set_color_all
qk_tap_dance_pair_on_each_tap
qk_tap_dance_pair_finished
qk_tap_dance_pair_reset
